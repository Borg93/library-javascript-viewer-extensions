{"version":3,"sources":["webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.Transform/index.js","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.Transform/Viewing.Extension.Transform.js","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.Transform/Viewing.Tool.Translate.js","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.Transform/TransformGizmos.js","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.Transform/Viewing.Tool.Rotate.js","webpack:///./src/client/components/Viewer/Extensions/Viewer.ExtensionBase/index.js","webpack:///./src/client/components/Viewer/Extensions/Viewer.ExtensionBase/Viewer.ExtensionBase.js"],"names":["__webpack_require__","r","__webpack_exports__","TransformExtension","viewer","_this","options","arguments","length","undefined","_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_3___default","this","_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5___default","_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6___default","call","translateTool","TranslateTool","rotateTool","RotateTool","transformedFragIdMap","on","selection","translateSelection","Object","assign","type","emit","data","fragIds","forEach","fragId","transform","translation","model","dbIds","_txControl","container","classList","remove","_comboCtrl","rotateSelection","rotation","_rxControl","console","log","_this2","ViewerToolkit","createButton","active","deactivate","translate","rotate","parentControl","_options","viewerToolbar","_viewer","getToolbar","getControl","hideControls","Autodesk","Viewing","UI","ControlGroup","addControl","ComboButton","setToolTip","icon","style","fontSize","className","openCombo","onClick","e","contains","removeControl","activate","add","fullTransform","setFullTransform","onPick","clearSelection","viewerState","currentExplodeScale","getExplodeScale","explodeScale","transforms","fragProxy","impl","getFragmentProxy","getAnimTransform","quaternion","position","immediate","_this3","animateTransform","t","easing","easeInOutExpo","period","then","sceneUpdated","targetState","_this4","currentFragIds","keys","targetFragIds","concat","_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_2___default","_x","_y","_z","_w","x","y","z","updateAnimTransform","_this5","Promise","_ref","_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default","_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","resolve","reject","fullFragIds","fragProxyTasks","fragProxies","animationTasks","scale","targetScale","scaleStep","animationId","elapsed","stopwatch","animateTransformStep","wrap","_context","prev","next","map","targetTransform","step","dx","dy","dz","dQx","dQy","dQz","dQw","initialTransform","all","sent","dt","ease","eased","_targetQuat","_initQuat","initQuat","THREE","Quaternion","targetQuat","slerp","w","targetPos","initPos","finalStep","copy","parseFloat","push","selectiveExplode","easedScale","explodeSlider","value","Stopwatch","getElapsedMs","task","requestAnimationFrame","cancelAnimationFrame","autocam","shotParams","duration","stop","_x2","apply","ExtensionBase","theExtensionManager","registerExtension","ExtensionId","_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2___default","_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default","_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default","_dbIds","_isDragging","_transformMesh","_selectedFragProxyMap","_transformControlTx","_hitPoint","Vector3","onTxChange","bind","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6___default","onAggregateSelectionChanged","onCameraChanged","_selectionMode","toolController","registerTool","material","MeshPhongMaterial","color","matman","addMaterial","sphere","Mesh","SphereGeometry","set","visible","_selection","offset","update","event","pointerDown","selector","setSelection","selections","setPosition","setTimeout","dbIdArray","fragIdsArray","fragCount","getFragmentList","fragments","fragId2dbId","rootId","getData","instanceTree","getRootId","initializeSelection","hitPoint","modelTransform","addEventListener","CAMERA_CHANGE_EVENT","Toolkit","getFragIds","removeEventListener","fragPosition","screenPoint","viewport","navigation","getScreenViewport","left","width","top","height","clientX","clientY","n","normalize","utilities","getHitPoint","activateTool","getName","bbox","getBoundingBox","createOverlayScene","TransformControls","camera","canvas","setSize","getBoundingSphere","radius","addOverlay","createTransformMesh","attach","AGGREGATE_SELECTION_CHANGED_EVENT","deactivateTool","removeOverlay","removeOverlayScene","button","onPointerDown","onPointerUp","onPointerMove","onPointerHover","keyCode","EventsEmitter","GizmoMaterial","parameters","MeshBasicMaterial","depthTest","depthWrite","side","FrontSide","transparent","setValues","oldColor","clone","oldOpacity","opacity","highlight","highlighted","setRGB","prototype","create","GizmoLineMaterial","LineBasicMaterial","linewidth","PolyhedronGeometry","vertices","indices","detail","Geometry","that","i","l","prepare","p","faces","j","v1","v2","v3","Face3","index","centroid","subdivide","faceVertexUvs","uvs","x0","x1","x2","max","Math","min","multiplyScalar","vector","vertex","u","azimuth","PI","v","atan2","sqrt","inclination","uv","Vector2","make","face","divideScalar","azi","correctUV","cols","pow","b","c","aj","lerp","bj","rows","k","floor","mergeVertices","computeFaceNormals","boundingSphere","Sphere","OctahedronGeometry","TorusGeometry","tube","radialSegments","tubularSegments","arc","center","normals","cos","sin","sub","d","createCircleGeometry","facing","geometry","createArrowGeometry","radiusTop","radiusBottom","heightSegments","openEnded","arrowGeometry","mesh","CylinderGeometry","updateMatrix","merge","matrix","createLineGeometry","axis","lineGeometry","TransformGizmo","scope","init","Object3D","handles","pickers","planes","highlights","hemiPicker","subPickers","planeGeometry","PlaneBufferGeometry","planeMaterial","wireframe","DoubleSide","XY","YZ","XZ","XYZE","activePlane","name","setupGizmos","activeMode","traverse","child","tempGeometry","BufferGeometry","fromBufferGeometry","hide","show","parent","addGizmos","gizmoMap","object","visble","setHandlePickerGizmos","handleGizmos","pickerGizmos","highlightGizmos","hemiPickerGizmos","subPickerGizmos","eye","vec1","vec2","lookAtMatrix","Matrix4","search","setFromRotationMatrix","lookAt","setFromEuler","TransformGizmoTranslate","lineXGeometry","lineYGeometry","lineZGeometry","X","Line","Y","Z","XYZ","BoxGeometry","setActivePlane","tempMatrix","applyMatrix4","getInverse","extractRotation","matrixWorld","abs","TransformGizmoRotate","RX","RY","RZ","RE","RXYZE","eye2","worldRotation","Euler","tempQuaternion","unitX","unitY","unitZ","quaternionX","quaternionY","quaternionZ","makeRotationFromQuaternion","setFromAxisAngle","multiplyQuaternions","TransformGizmoTranslateRotate","theta","useAllPickers","TransformGizmoScale","domElement","mode","document","gizmo","snap","snapDelta","space","size","normal","startLine","endLine","LineDashedMaterial","centerLine","ImageUtils","loadTexture","Private","getResourceUrl","magFilter","minFilter","NearestFilter","CircleGeometry","centerMark","ticks","h","_dragging","_mode","changeEvent","mouseDownEvent","mouseUpEvent","objectChangeEvent","ray","Raycaster","pointerVector","pointerDir","point","offsetRotation","tempVector","projX","projY","projZ","quaternionXYZ","quaternionE","oldPosition","oldScale","oldRotationMatrix","parentRotationMatrix","parentScale","worldPosition","worldRotationMatrix","camPosition","intersectObjects","pointer","objects","rect","getBoundingClientRect","isPerspective","unproject","transformDirection","intersections","updateUnitVectors","detach","setMode","dispatchEvent","getPicker","children","setNormal","setFromUnitVectors","applyQuaternion","multiply","setSnap","delta","setSpace","updateMatrixWorld","setFromMatrixPosition","applyEuler","dist","distanceTo","tan","fov","showRotationGizmos","intersect","pointers","pointerType","planeIntersect","setFromMatrixScale","verticesNeedUpdate","pos","getAttribute","pt1","fromAttribute","pt2","pt3","pt4","dashSize","gapSize","computeLineDistances","dot","rotz","rotsnap","round","tempAxis","cross","rot","angleTo","projx","projy","projz","tempx","tempy","tempz","rotx","roty","matrixAutoUpdate","_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default","_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default","_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default","onAggregateSelectionChangedHandler","rotateControl","engaged","select","drawControl","fitToView","bBox","getWorldBoundingBox","RotateControl","rotateFragments","angle","Control","isDragging","mousePos","sidewaysDirection","moveDirection","eyeDirection","upDirection","getCamera","target","up","crossVectors","setLength","key","idx","euler","setFromQuaternion","fragList","fragbBox","Box3","nodebBox","getWorldBounds","union","overlayScene","gizmos","createAxis","worldup","createGizmo","picker","createSphere","angleLine","createLine","start","end","line","dir","orientation","cone","applyMatrix","createCone","range","subMaterial","torusGizmo","subTorus","q","s","compose","plane","createBox","subGizmo","box","intersectResults","pointerToRaycaster","selectedGizmo","lastDir","sign","pickerPoint","worldPoint","_this6","colorInit","opacityInit","_Viewer_ExtensionBase__WEBPACK_IMPORTED_MODULE_0__","ViewerExtensionBase","serviceContext","eventId","eventTasks","Array","isArray","id","handler","args","format","Date","getTime","guid","replace","random","toString","Composer","Extension"],"mappings":"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","file":"87.js","sourcesContent":["import './Viewing.Extension.Transform'\n\nexport default 'Viewing.Extension.Transform'\n","/////////////////////////////////////////////////////////////////////\n// Viewing.Extension.CSSTVExtension\n// by Philippe Leefsma, April 2016\n//\n/////////////////////////////////////////////////////////////////////\nimport TranslateTool from './Viewing.Tool.Translate'\nimport ExtensionBase from 'Viewer.ExtensionBase'\nimport RotateTool from './Viewing.Tool.Rotate'\nimport ViewerToolkit from 'Viewer.Toolkit'\nimport Stopwatch from 'Stopwatch'\nimport easing from 'easing-js'\n\nclass TransformExtension extends ExtensionBase {\n\n  /////////////////////////////////////////////////////////////////\n  // Class constructor\n  //\n  /////////////////////////////////////////////////////////////////\n  constructor (viewer, options = {}) {\n\n    super (viewer, options)\n\n    this.translateTool = new TranslateTool(viewer)\n\n    this.rotateTool = new RotateTool(viewer)\n\n    this.transformedFragIdMap = {}\n\n    this.translateTool.on('selection', (selection) => {\n\n      const translateSelection = selection\n        ? Object.assign({}, selection, {\n            type: 'translate'\n          })\n        : null\n\n      this.emit('selection', translateSelection)\n    })\n\n    this.translateTool.on('translate', (data) => {\n\n      data.fragIds.forEach((fragId) => {\n\n        this.transformedFragIdMap[fragId] = true\n      })\n\n      this.emit('transform', {\n        transform: {\n          translation: data.translation\n        },\n        fragIds: data.fragIds,\n        model: data.model,\n        dbIds: data.dbIds\n      })\n    })\n\n    this.translateTool.on('deactivate', () => {\n\n      this._txControl.container.classList.remove('active')\n      this._comboCtrl.container.classList.remove('active')\n\n      this.emit('deactivate')\n    })\n\n    this.rotateTool.on('selection', (selection) => {\n\n      const rotateSelection = selection\n        ? Object.assign({}, selection, {\n            type: 'rotate'\n          })\n        : null\n\n      this.emit('selection', rotateSelection)\n    })\n\n    this.rotateTool.on('rotate', (data) => {\n\n      data.fragIds.forEach((fragId) => {\n\n        this.transformedFragIdMap[fragId] = true\n      })\n\n      this.emit('transform', {\n        transform: {\n          rotation: data.rotation\n        },\n        fragIds: data.fragIds,\n        model: data.model,\n        dbIds: data.dbIds\n      })\n    })\n\n    this.rotateTool.on('deactivate', () => {\n\n      this._rxControl.container.classList.remove('active')\n      this._comboCtrl.container.classList.remove('active')\n\n      this.emit('deactivate')\n    })\n  }\n\n  /////////////////////////////////////////////////////////////////\n  // Extension Id\n  //\n  /////////////////////////////////////////////////////////////////\n  static get ExtensionId () {\n\n    return 'Viewing.Extension.Transform'\n  }\n\n  /////////////////////////////////////////////////////////////////\n  // Load callback\n  //\n  /////////////////////////////////////////////////////////////////\n  load () {\n\n\n\n    console.log('Viewing.Extension.Transform loaded')\n\n    return true\n  }\n\n  onToolbarCreated(){\n    this._txControl = ViewerToolkit.createButton(\n      'toolbar-translate',\n      'fa fa-arrows-alt',\n      'Translate Tool', () => {\n\n        if (this.translateTool.active) {\n\n          this.translateTool.deactivate()\n          this._txControl.container.classList.remove('active')\n          this._comboCtrl.container.classList.remove('active')\n\n        } else {\n\n          this.translate()\n        }\n      })\n\n    this._rxControl = ViewerToolkit.createButton(\n      'toolbar-rotate',\n      'fa fa-refresh',\n      'Rotate Tool', () => {\n\n        if (this.rotateTool.active) {\n\n          this.rotateTool.deactivate()\n          this._rxControl.container.classList.remove('active')\n          this._comboCtrl.container.classList.remove('active')\n\n        } else {\n\n          this.rotate()\n        }\n      })\n\n    this.parentControl = this._options.parentControl\n\n    if (typeof this.parentControl === 'string') {\n\n      var viewerToolbar = this._viewer.getToolbar(true)\n\n      this.parentControl = viewerToolbar.getControl(\n        this.parentControl)\n    }\n\n    if (!this.parentControl && !this._options.hideControls) {\n\n      var viewerToolbar = this._viewer.getToolbar(true)\n\n      this.parentControl = new Autodesk.Viewing.UI.ControlGroup(\n        'transform')\n\n      viewerToolbar.addControl(this.parentControl)\n    }\n\n    this._comboCtrl = new Autodesk.Viewing.UI.ComboButton(\n      'toolbar-transform')\n\n    this._comboCtrl.setToolTip('Transform Tools')\n\n    this._comboCtrl.icon.style.fontSize = '24px'\n    this._comboCtrl.icon.style.transform = 'rotateY(180Deg)'\n\n    this._comboCtrl.icon.className =\n      'glyphicon glyphicon-wrench'\n\n    this._comboCtrl.addControl(this._txControl)\n    this._comboCtrl.addControl(this._rxControl)\n\n    var openCombo = this._comboCtrl.onClick\n\n    this._comboCtrl.onClick = (e) => {\n\n      if(this._comboCtrl.container.classList.contains('active')) {\n\n        this.deactivate ()\n\n      } else {\n\n        openCombo()\n      }\n    }\n\n    if(!this._options.hideControls) {\n\n      this.parentControl.addControl(this._comboCtrl)\n    }\n  }\n\n  /////////////////////////////////////////////////////////////////\n  // Unload callback\n  //\n  /////////////////////////////////////////////////////////////////\n  unload () {\n\n    this.parentControl.removeControl(\n      this._comboCtrl)\n\n    this.translateTool.deactivate()\n\n    this.rotateTool.deactivate()\n\n    console.log('Viewing.Extension.Transform unloaded')\n  }\n\n  /////////////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////////////\n  translate () {\n\n    this.translateTool.activate()\n    this._txControl.container.classList.add('active')\n\n    this.rotateTool.deactivate()\n    this._rxControl.container.classList.remove('active')\n\n    this._comboCtrl.container.classList.add('active')\n  }\n\n  /////////////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////////////\n  rotate () {\n\n    this.rotateTool.activate()\n    this._rxControl.container.classList.add('active')\n\n    this.translateTool.deactivate()\n    this._txControl.container.classList.remove('active')\n\n    this._comboCtrl.container.classList.add('active')\n  }\n\n  /////////////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////////////\n  deactivate () {\n\n    this._txControl.container.classList.remove('active')\n    this._rxControl.container.classList.remove('active')\n\n    this._comboCtrl.container.classList.remove('active')\n\n    this.translateTool.deactivate()\n    this.rotateTool.deactivate()\n  }\n\n  /////////////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////////////\n  setFullTransform (fullTransform) {\n\n    this.translateTool.setFullTransform(fullTransform)\n\n    this.rotateTool.setFullTransform(fullTransform)\n  }\n\n  /////////////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////////////\n  pickPosition () {\n\n    this.translateTool.onPick()\n  }\n\n  /////////////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////////////\n  clearSelection () {\n\n    this.translateTool.clearSelection()\n\n    this.rotateTool.clearSelection()\n  }\n\n  /////////////////////////////////////////////////////////////////\n  //\n  //  From viewer.getState:\n  //  Allow extensions to inject their state data\n  //\n  //  for (var extensionName in viewer.loadedExtensions) {\n  //    viewer.loadedExtensions[extensionName].getState(\n  //      viewerState);\n  //  }\n  /////////////////////////////////////////////////////////////////\n  getState (viewerState) {\n\n    this.currentExplodeScale =\n      this.currentExplodeScale ||\n      this._viewer.getExplodeScale()\n\n    viewerState.explodeScale = this.currentExplodeScale\n\n    viewerState.transforms = {}\n\n    for (let fragId in this.transformedFragIdMap) {\n\n      const fragProxy = this._viewer.impl.getFragmentProxy(\n        this._viewer.model,\n        fragId)\n\n      fragProxy.getAnimTransform()\n\n      viewerState.transforms[fragId] = {\n        quaternion: fragProxy.quaternion,\n        position: fragProxy.position\n      }\n    }\n  }\n\n  /////////////////////////////////////////////////////////////////\n  //\n  //    From viewer.restoreState:\n  //    Allow extensions to restore their data\n  //\n  //    for (var extensionName in viewer.loadedExtensions) {\n  //      viewer.loadedExtensions[extensionName].restoreState(\n  //        viewerState, immediate);\n  //    }\n  /////////////////////////////////////////////////////////////////\n  restoreState (viewerState, immediate) {\n\n    this.translateTool.clearSelection()\n\n    this.rotateTool.clearSelection()\n\n    if (viewerState.transforms) {\n\n      //this.restoreTransform(viewerState)\n\n      const period = 1.8\n\n      const easingFunc = (t) => {\n        //b: begging value, c: change in value, d: duration\n        return easing.easeInOutExpo(t, 0, 1, period * 0.7)\n      }\n\n      this.animateTransform(\n        viewerState, easingFunc, period).then(() => {\n\n          this.currentExplodeScale =\n            viewerState.explodeScale\n        })\n\n      this.transformedFragIdMap = Object.assign({},\n        viewerState.transforms)\n\n      this.viewer.impl.sceneUpdated(true)\n    }\n  }\n\n  /////////////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////////////\n  restoreTransform (targetState) {\n\n    const currentFragIds = Object.keys(\n      this.transformedFragIdMap)\n\n    const targetFragIds = Object.keys(\n      targetState.transforms)\n\n    const fullFragIds = [\n      ...currentFragIds,\n      ...targetFragIds\n    ]\n\n    fullFragIds.forEach((fragId) => {\n\n      const transform = targetState.transforms[ fragId ] || {\n          quaternion: { _x: 0, _y: 0, _z: 0, _w: 1 },\n          position: { x: 0, y: 0, z: 0 }\n        }\n\n      const fragProxy = viewer.impl.getFragmentProxy(\n        this._viewer.model,\n        fragId)\n\n      fragProxy.getAnimTransform()\n\n      fragProxy.position.x = transform.position.x\n      fragProxy.position.y = transform.position.y\n      fragProxy.position.z = transform.position.z\n\n      fragProxy.quaternion._x = transform.quaternion._x\n      fragProxy.quaternion._y = transform.quaternion._y\n      fragProxy.quaternion._z = transform.quaternion._z\n      fragProxy.quaternion._w = transform.quaternion._w\n\n      fragProxy.updateAnimTransform()\n    })\n  }\n\n  /////////////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////////////\n  animateTransform (targetState, easing, period = 2.0) {\n\n    return new Promise (async(resolve, reject) => {\n\n      const viewer = this._viewer\n\n      const currentFragIds = Object.keys(\n        this.transformedFragIdMap)\n\n      const targetFragIds = Object.keys(\n        targetState.transforms)\n\n      const fullFragIds = [\n        ...currentFragIds,\n        ...targetFragIds\n      ]\n\n      const fragProxyTasks = fullFragIds.map((fragId) => {\n\n        const fragProxy = viewer.impl.getFragmentProxy(\n          viewer.model,\n          fragId)\n\n        fragProxy.getAnimTransform()\n\n        const targetTransform = targetState.transforms[fragId] || {\n            quaternion: { _x: 0, _y:0, _z:0, _w:1 },\n            position: { x: 0, y: 0, z: 0 }\n          }\n\n        fragProxy.step = {\n\n          dx: (targetTransform.position.x - fragProxy.position.x) / period,\n          dy: (targetTransform.position.y - fragProxy.position.y) / period,\n          dz: (targetTransform.position.z - fragProxy.position.z) / period,\n\n          dQx: (targetTransform.quaternion._x - fragProxy.quaternion._x) / period,\n          dQy: (targetTransform.quaternion._y - fragProxy.quaternion._y) / period,\n          dQz: (targetTransform.quaternion._z - fragProxy.quaternion._z) / period,\n          dQw: (targetTransform.quaternion._w - fragProxy.quaternion._w) / period\n        }\n\n        fragProxy.initialTransform = {\n          quaternion: {\n            _x: fragProxy.quaternion._x,\n            _y: fragProxy.quaternion._y,\n            _z: fragProxy.quaternion._z,\n            _w: fragProxy.quaternion._w\n          },\n          position: {\n            x: fragProxy.position.x,\n            y: fragProxy.position.y,\n            z: fragProxy.position.z\n          }\n        }\n\n        fragProxy.targetTransform = targetTransform\n\n        return fragProxy\n      });\n\n      const fragProxies = await Promise.all(fragProxyTasks)\n\n      // Create all fragment animation tasks\n      const animationTasks = fragProxies.map((fragProxy) => {\n\n        return {\n\n          step: (dt) => {\n\n            //fragProxy.quaternion.slerp(\n            //  fragProxy.transform.quaternion,\n            //  dt/tStep)\n\n            fragProxy.quaternion._x += fragProxy.step.dQx * dt\n            fragProxy.quaternion._y += fragProxy.step.dQy * dt\n            fragProxy.quaternion._z += fragProxy.step.dQz * dt\n            fragProxy.quaternion._w += fragProxy.step.dQw * dt\n\n            fragProxy.position.x += fragProxy.step.dx * dt\n            fragProxy.position.y += fragProxy.step.dy * dt\n            fragProxy.position.z += fragProxy.step.dz * dt\n\n            fragProxy.updateAnimTransform()\n          },\n\n          ease: (t) => {\n\n            //fragProxy.quaternion.slerp(\n            //  fragProxy.transform.quaternion,\n            //  dt/tStep)\n\n            const eased = easing(t/period)\n\n            const _targetQuat = fragProxy.targetTransform.quaternion\n            const _initQuat = fragProxy.initialTransform.quaternion\n\n            const initQuat = new THREE.Quaternion(\n              _initQuat._x,\n              _initQuat._y,\n              _initQuat._z,\n              _initQuat._w)\n\n            const targetQuat = new THREE.Quaternion(\n              _targetQuat._x,\n              _targetQuat._y,\n              _targetQuat._z,\n              _targetQuat._w)\n\n            initQuat.slerp(targetQuat, eased)\n\n            fragProxy.quaternion._x = initQuat.x\n            fragProxy.quaternion._y = initQuat.y\n            fragProxy.quaternion._z = initQuat.z\n            fragProxy.quaternion._w = initQuat.w\n\n            //fragProxy.quaternion._x = eased * targetQuat._x + (1 - eased) * initQuat._x\n            //fragProxy.quaternion._y = eased * targetQuat._y + (1 - eased) * initQuat._y\n            //fragProxy.quaternion._z = eased * targetQuat._z + (1 - eased) * initQuat._z\n            //fragProxy.quaternion._w = eased * targetQuat._z + (1 - eased) * initQuat._z\n\n            const targetPos = fragProxy.targetTransform.position\n            const initPos = fragProxy.initialTransform.position\n\n            fragProxy.position.x = eased * targetPos.x + (1 - eased) * initPos.x\n            fragProxy.position.y = eased * targetPos.y + (1 - eased) * initPos.y\n            fragProxy.position.z = eased * targetPos.z + (1 - eased) * initPos.z\n\n            fragProxy.updateAnimTransform()\n          },\n\n          finalStep: () => {\n\n            fragProxy.quaternion._x = fragProxy.targetTransform.quaternion._x\n            fragProxy.quaternion._y = fragProxy.targetTransform.quaternion._y\n            fragProxy.quaternion._z = fragProxy.targetTransform.quaternion._z\n            fragProxy.quaternion._w = fragProxy.targetTransform.quaternion._w\n\n            fragProxy.position.copy(fragProxy.targetTransform.position)\n\n            fragProxy.updateAnimTransform()\n          }\n        }\n      })\n\n      // create explode animation task\n\n      let scale = parseFloat(this.currentExplodeScale)\n\n      const targetScale = parseFloat(\n        targetState.explodeScale)\n\n      if (targetScale != scale) {\n\n        var scaleStep = (targetScale - scale) / period\n\n        animationTasks.push({\n\n          step: (dt) => {\n\n            scale += scaleStep * dt\n\n            ViewerToolkit.selectiveExplode(\n              viewer,\n              scale,\n              fullFragIds)\n          },\n\n          ease: (t) => {\n\n            const eased = easing(t/period)\n\n            const easedScale = scale +\n              eased * (targetScale - scale)\n\n            ViewerToolkit.selectiveExplode(\n              viewer,\n              easedScale,\n              fullFragIds)\n          },\n\n          finalStep: () => {\n\n            ViewerToolkit.selectiveExplode(\n              viewer,\n              targetScale,\n              fullFragIds)\n\n            viewer.explodeSlider.value = targetScale\n          }\n        })\n      }\n\n\n      let animationId = 0\n      let elapsed = 0\n\n      const stopwatch = new Stopwatch()\n\n      const animateTransformStep = () => {\n\n        const dt = stopwatch.getElapsedMs() * 0.001\n\n        elapsed += dt\n\n        if (elapsed < period) {\n\n          animationTasks.forEach((task) => {\n\n            task.ease(elapsed)\n          })\n\n          animationId = requestAnimationFrame(\n            animateTransformStep)\n\n        } else {\n\n          //end of animation\n          animationTasks.forEach((task) => {\n\n            task.finalStep()\n          })\n\n          cancelAnimationFrame(animationId)\n\n          viewer.autocam.shotParams.duration = 1.0\n        }\n\n        viewer.impl.sceneUpdated(true)\n\n        resolve()\n      }\n\n      viewer.autocam.shotParams.duration = period\n\n      animationId = requestAnimationFrame(\n        animateTransformStep)\n    })\n  }\n}\n\nAutodesk.Viewing.theExtensionManager.registerExtension(\n  TransformExtension.ExtensionId,\n  TransformExtension)\n","import EventsEmitter from 'EventsEmitter'\nimport Toolkit from 'Viewer.Toolkit'\nimport './TransformGizmos'\n\nexport default class TranslateTool extends EventsEmitter {\n\n  /////////////////////////////////////////////////////////////////\n  // Class constructor\n  //\n  /////////////////////////////////////////////////////////////////\n  constructor (viewer) {\n\n    super()\n\n    this._dbIds = []\n\n    this.active = false\n\n    this._viewer = viewer\n\n    this._isDragging = false\n\n    this.fullTransform = false\n\n    this._transformMesh = null\n\n    this._selectedFragProxyMap = {}\n\n    this._transformControlTx = null\n\n    this._hitPoint = new THREE.Vector3()\n\n    this.onTxChange =\n      this.onTxChange.bind(this)\n\n    this.onAggregateSelectionChanged =\n      this.onAggregateSelectionChanged.bind(this)\n\n    this.onCameraChanged =\n      this.onCameraChanged.bind(this)\n\n    this._selectionMode = 'SELECTION_MODE_TRANSFORM'\n\n    viewer.toolController.registerTool(this)\n  }\n\n  /////////////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////////////\n  getNames () {\n\n    return ['Viewing.Tool.Translate']\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  getName () {\n\n    return 'Viewing.Tool.Translate'\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  setFullTransform (fullTransform) {\n\n    this.fullTransform = fullTransform\n\n    this.clearSelection()\n  }\n\n  /////////////////////////////////////////////////////////\n  // Creates a dummy mesh to attach control to\n  //\n  /////////////////////////////////////////////////////////\n  createTransformMesh() {\n\n    var material = new THREE.MeshPhongMaterial(\n      { color: 0xff0000 })\n\n    this._viewer.impl.matman().addMaterial(\n      'transform-tool-material',\n      material,\n      true)\n\n    var sphere = new THREE.Mesh(\n      new THREE.SphereGeometry(0.0001, 5),\n      material)\n\n    sphere.position.set(0, 0, 0)\n\n    return sphere\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  // on translation change\n  //\n  ///////////////////////////////////////////////////////////////////////////\n  onTxChange() {\n\n    if(this._isDragging && this._transformControlTx.visible) {\n\n      var translation = new THREE.Vector3(\n        this._transformMesh.position.x - this._selection.model.offset.x,\n        this._transformMesh.position.y - this._selection.model.offset.y,\n        this._transformMesh.position.z - this._selection.model.offset.z)\n\n      for(var fragId in this._selectedFragProxyMap) {\n\n        var fragProxy = this._selectedFragProxyMap[fragId]\n\n        var position = new THREE.Vector3(\n          this._transformMesh.position.x - fragProxy.offset.x,\n          this._transformMesh.position.y - fragProxy.offset.y,\n          this._transformMesh.position.z - fragProxy.offset.z)\n\n        fragProxy.position = position\n\n        fragProxy.updateAnimTransform()\n      }\n\n      this.emit('translate', {\n        fragIds: Object.keys(this._selectedFragProxyMap),\n        model: this._selection.model,\n        translation: translation\n      })\n    }\n\n    this._viewer.impl.sceneUpdated(true)\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  // on camera changed\n  //\n  ///////////////////////////////////////////////////////////////////////////\n  onCameraChanged() {\n\n    if(this._transformControlTx) {\n\n      this._transformControlTx.update()\n    }\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  // item selected callback\n  //\n  ///////////////////////////////////////////////////////////////////////////\n  onAggregateSelectionChanged (event) {\n\n    switch (this._selectionMode) {\n\n      case 'SELECTION_MODE_TRANSFORM':\n\n        if (this._selection && this.pointerDown) {\n\n          this._selectionMode = 'SELECTION_MODE_RESUME_TRANSFORM'\n\n          this._viewer.clearSelection()\n\n          if (this._selection.model.selector) {\n\n            this._selection.model.selector.setSelection(\n              this._dbIds)\n          }\n\n          return\n        }\n\n        if (event.selections.length) {\n\n          var selection = event.selections[0]\n\n          this.setSelection(selection)\n\n        } else {\n\n          this.clearSelection()\n        }\n\n        break;\n\n      case 'SELECTION_MODE_PICK':\n\n        if(event.selections && event.selections.length) {\n\n          this._selectionMode = 'SELECTION_MODE_RESUME_TRANSFORM'\n\n          this._viewer.clearSelection()\n\n          if (this._selection.model.selector) {\n\n            this._selection.model.selector.setSelection(\n              this._dbIds)\n          }\n\n          this.setPosition(this._hitPoint)\n        }\n\n      case 'SELECTION_MODE_RESUME_TRANSFORM':\n\n        setTimeout(() => {\n\n          this._selectionMode = 'SELECTION_MODE_TRANSFORM'\n        }, 300)\n\n        break;\n    }\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  //\n  //\n  ///////////////////////////////////////////////////////////////////////////\n  setSelection (selection) {\n\n    this._selection = selection\n\n    this._dbIds = this._selection.dbIdArray\n\n    if (this.fullTransform) {\n\n      this._selection.fragIdsArray = []\n\n      var fragCount = this._selection.model.getFragmentList().\n        fragments.fragId2dbId.length\n\n      for (var fragId = 0; fragId < fragCount; ++fragId) {\n\n        this._selection.fragIdsArray.push(fragId)\n      }\n\n      this._selection.dbIdArray = []\n\n      var instanceTree =\n        this._selection.model.getData().instanceTree\n\n      var rootId = instanceTree.getRootId()\n\n      this._selection.dbIdArray.push(rootId)\n    }\n\n    this.initializeSelection(\n      this._hitPoint)\n\n    this.emit('selection', selection)\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  //\n  //\n  ///////////////////////////////////////////////////////////////////////////\n  async initializeSelection (hitPoint) {\n\n    this._selectedFragProxyMap = {}\n\n    var modelTransform = this._selection.model.transform ||\n      { translation: { x:0, y:0, z:0 } }\n\n    this._selection.model.offset = {\n      x: hitPoint.x - modelTransform.translation.x,\n      y: hitPoint.y - modelTransform.translation.y,\n      z: hitPoint.z - modelTransform.translation.z\n    }\n\n    this._transformControlTx.visible = true\n\n    this._transformControlTx.setPosition(\n      hitPoint)\n\n    this._transformControlTx.addEventListener(\n      'change', this.onTxChange)\n\n    this._viewer.addEventListener(\n      Autodesk.Viewing.CAMERA_CHANGE_EVENT,\n      this.onCameraChanged)\n\n    const dbIds = this._selection.dbIdArray\n\n    const model = this._selection.model\n\n    const fragIds = !this._selection.fragIdsArray.length\n      ? await Toolkit.getFragIds(model, dbIds)\n      : this._selection.fragIdsArray\n\n    fragIds.forEach((fragId) => {\n\n      var fragProxy = this._viewer.impl.getFragmentProxy(\n        this._selection.model,\n        fragId)\n\n      fragProxy.getAnimTransform()\n\n      fragProxy.offset = {\n\n        x: hitPoint.x - fragProxy.position.x,\n        y: hitPoint.y - fragProxy.position.y,\n        z: hitPoint.z - fragProxy.position.z\n      }\n\n      this._selectedFragProxyMap[fragId] = fragProxy\n    })\n\n    this._viewer.impl.sceneUpdated(true)\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  //\n  //\n  ///////////////////////////////////////////////////////////////////////////\n  clearSelection () {\n\n    if (this.active) {\n\n      this._transformControlTx.visible = false\n\n      this._selectedFragProxyMap = {}\n\n      this._selection = null\n\n      this._dbIds = []\n\n      this._transformControlTx.removeEventListener(\n        'change', this.onTxChange)\n\n      this._viewer.removeEventListener(\n        Autodesk.Viewing.CAMERA_CHANGE_EVENT,\n        this.onCameraChanged)\n\n      this._viewer.impl.sceneUpdated(true)\n\n      this.emit('selection', null)\n    }\n  }\n\n  //////////////////////////////////////////////////////////////////////////\n  //\n  //\n  ///////////////////////////////////////////////////////////////////////////\n  setPosition (position) {\n\n    this._transformControlTx.setPosition(position)\n\n    for (var fragId in this._selectedFragProxyMap) {\n\n      var fragProxy = this._selectedFragProxyMap[fragId]\n\n      var fragPosition = new THREE.Vector3(\n        position.x - fragProxy.offset.x,\n        position.y - fragProxy.offset.y,\n        position.z - fragProxy.offset.z)\n\n      fragProxy.position = fragPosition\n\n      fragProxy.updateAnimTransform()\n    }\n\n    var translation = new THREE.Vector3(\n      this._transformMesh.position.x - this._selection.model.offset.x,\n      this._transformMesh.position.y - this._selection.model.offset.y,\n      this._transformMesh.position.z - this._selection.model.offset.z)\n\n    this.emit('translate', {\n      fragIds: Object.keys(this._selectedFragProxyMap),\n      model: this._selection.model,\n      translation: translation,\n      dbIds: this._dbIds\n    })\n\n    this._viewer.impl.sceneUpdated(true)\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  // normalize screen coordinates\n  //\n  ///////////////////////////////////////////////////////////////////////////\n  normalize (screenPoint) {\n\n    var viewport = this._viewer.navigation.getScreenViewport()\n\n    var n = {\n      x: (screenPoint.x - viewport.left) / viewport.width,\n      y: (screenPoint.y - viewport.top) / viewport.height\n    }\n\n    return n\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  // get 3d hit point on mesh\n  //\n  ///////////////////////////////////////////////////////////////////////////\n  getHitPoint (event) {\n\n    var screenPoint = {\n      x: event.clientX,\n      y: event.clientY\n    }\n\n    var n = this.normalize(screenPoint)\n\n    var hitPoint = this._viewer.utilities.getHitPoint(n.x, n.y)\n\n    return hitPoint\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  //\n  //\n  ///////////////////////////////////////////////////////////////////////////\n  hitPoint () {\n\n    return this._transformControlTx.position\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  //\n  //\n  ///////////////////////////////////////////////////////////////////////////\n  setHitPoint (hitPoint) {\n\n    this._hitPoint.x = hitPoint.x\n    this._hitPoint.y = hitPoint.y\n    this._hitPoint.z = hitPoint.z\n  }\n\n  ///////////////////////////////////////////////////////////////////\n  //\n  //\n  ///////////////////////////////////////////////////////////////////\n  activate () {\n\n    if(!this.active) {\n\n      this.active = true\n\n      this._viewer.toolController.activateTool(this.getName())\n\n      var bbox = this._viewer.model.getBoundingBox()\n\n      this._viewer.impl.createOverlayScene(\n        'TranslateToolOverlay')\n\n      this._transformControlTx = new THREE.TransformControls(\n        this._viewer.impl.camera,\n        this._viewer.impl.canvas,\n        \"translate\")\n\n      this._transformControlTx.setSize(\n        bbox.getBoundingSphere().radius * 5)\n\n      this._transformControlTx.visible = false\n\n      this._viewer.impl.addOverlay(\n        'TranslateToolOverlay',\n        this._transformControlTx)\n\n      this._transformMesh = this.createTransformMesh()\n\n      this._transformControlTx.attach(\n        this._transformMesh)\n\n      this._viewer.addEventListener(\n        Autodesk.Viewing.AGGREGATE_SELECTION_CHANGED_EVENT,\n        this.onAggregateSelectionChanged)\n\n      this.emit('activate')\n    }\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  // deactivate tool\n  //\n  ///////////////////////////////////////////////////////////////////////////\n  deactivate () {\n\n    if (this.active) {\n\n      this.active = false\n\n      this._viewer.toolController.deactivateTool(this.getName())\n\n      this._viewer.impl.removeOverlay(\n        'TranslateToolOverlay',\n        this._transformControlTx)\n\n      this._transformControlTx.removeEventListener(\n        'change', this.onTxChange)\n\n      this._viewer.impl.removeOverlayScene(\n        'TranslateToolOverlay')\n\n      this._viewer.removeEventListener(\n        Autodesk.Viewing.CAMERA_CHANGE_EVENT,\n        this.onCameraChanged)\n\n      this._viewer.removeEventListener(\n        Autodesk.Viewing.AGGREGATE_SELECTION_CHANGED_EVENT,\n        this.onAggregateSelectionChanged)\n\n      this.emit('deactivate')\n    }\n  }\n\n  /////////////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////////////\n  onPick () {\n\n    if (this.active) {\n\n      this._selectionMode = 'SELECTION_MODE_PICK'\n    }\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  //\n  //\n  ///////////////////////////////////////////////////////////////////////////\n  handleButtonDown(event, button) {\n\n    this._isDragging = true\n\n    this.pointerDown = this._transformControlTx.onPointerDown(event)\n\n    if (this.pointerDown && this._selection)\n      return true\n\n    var hitPoint = this.getHitPoint(event)\n\n    if (hitPoint) {\n\n      this._hitPoint.copy(hitPoint)\n    }\n\n    return false\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  //\n  //\n  ///////////////////////////////////////////////////////////////////////////\n  handleButtonUp (event) {\n\n    this._isDragging = false\n\n    if (this._transformControlTx.onPointerUp(event))\n      return true\n\n    return false\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  //\n  //\n  ///////////////////////////////////////////////////////////////////////////\n  handleMouseMove(event) {\n\n    if (this._isDragging) {\n\n      if (this._transformControlTx.onPointerMove(event) ) {\n\n        return true\n      }\n\n      return false\n    }\n\n    if (this._transformControlTx.onPointerHover(event))\n      return true\n\n    return false\n  }\n\n  /////////////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////////////\n  handleKeyDown (event, keyCode) {\n\n    if (keyCode === 27) { //ESC\n\n      this._viewer.clearSelection()\n      this.deactivate()\n    }\n\n    return false\n  }\n}\n","(function init_TransformGizmos() {\n\n  'use strict';\n\n  var GizmoMaterial = function ( parameters ) {\n\n    THREE.MeshBasicMaterial.call( this );\n\n    this.depthTest = false;\n    this.depthWrite = false;\n    this.side = THREE.FrontSide;\n    this.transparent = true;\n\n    this.setValues( parameters );\n\n    this.oldColor = this.color.clone();\n    this.oldOpacity = this.opacity;\n\n    this.highlight = function( highlighted ) {\n\n      if ( highlighted ) {\n\n        this.color.setRGB( 1, 230/255, 3/255 );\n        this.opacity = 1;\n\n      } else {\n\n        this.color.copy( this.oldColor );\n        this.opacity = this.oldOpacity;\n\n      }\n\n    };\n\n  };\n\n  GizmoMaterial.prototype = Object.create( THREE.MeshBasicMaterial.prototype );\n\n  var GizmoLineMaterial = function ( parameters ) {\n\n    THREE.LineBasicMaterial.call( this );\n\n    this.depthTest = false;\n    this.depthWrite = false;\n    this.transparent = true;\n    this.linewidth = 3;\n\n    this.setValues( parameters );\n\n    this.oldColor = this.color.clone();\n    this.oldOpacity = this.opacity;\n\n    this.highlight = function( highlighted ) {\n\n      if ( highlighted ) {\n\n        this.color.setRGB( 1, 230/255, 3/255 );\n        this.opacity = 1;\n\n      } else {\n\n        this.color.copy( this.oldColor );\n        this.opacity = this.oldOpacity;\n\n      }\n\n    };\n\n  };\n\n  GizmoLineMaterial.prototype = Object.create( THREE.LineBasicMaterial.prototype );\n\n  // polyfill\n  if (THREE.PolyhedronGeometry === undefined) {\n    THREE.PolyhedronGeometry = function ( vertices, indices, radius, detail ) {\n\n      THREE.Geometry.call( this );\n\n      this.type = 'PolyhedronGeometry';\n\n      this.parameters = {\n        vertices: vertices,\n        indices: indices,\n        radius: radius,\n        detail: detail\n      };\n\n      radius = radius || 1;\n      detail = detail || 0;\n\n      var that = this;\n\n      for ( var i = 0, l = vertices.length; i < l; i += 3 ) {\n\n        prepare( new THREE.Vector3( vertices[ i ], vertices[ i + 1 ], vertices[ i + 2 ] ) );\n\n      }\n\n      var midpoints = [], p = this.vertices;\n\n      var faces = [];\n\n      for ( var i = 0, j = 0, l = indices.length; i < l; i += 3, j ++ ) {\n\n        var v1 = p[ indices[ i     ] ];\n        var v2 = p[ indices[ i + 1 ] ];\n        var v3 = p[ indices[ i + 2 ] ];\n\n        faces[ j ] = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ] );\n\n      }\n\n      var centroid = new THREE.Vector3();\n\n      for ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n        subdivide( faces[ i ], detail );\n\n      }\n\n\n      // Handle case when face straddles the seam\n\n      for ( var i = 0, l = this.faceVertexUvs[ 0 ].length; i < l; i ++ ) {\n\n        var uvs = this.faceVertexUvs[ 0 ][ i ];\n\n        var x0 = uvs[ 0 ].x;\n        var x1 = uvs[ 1 ].x;\n        var x2 = uvs[ 2 ].x;\n\n        var max = Math.max( x0, Math.max( x1, x2 ) );\n        var min = Math.min( x0, Math.min( x1, x2 ) );\n\n        if ( max > 0.9 && min < 0.1 ) { // 0.9 is somewhat arbitrary\n\n          if ( x0 < 0.2 ) uvs[ 0 ].x += 1;\n          if ( x1 < 0.2 ) uvs[ 1 ].x += 1;\n          if ( x2 < 0.2 ) uvs[ 2 ].x += 1;\n\n        }\n\n      }\n\n\n      // Apply radius\n\n      for ( var i = 0, l = this.vertices.length; i < l; i ++ ) {\n\n        this.vertices[ i ].multiplyScalar( radius );\n\n      }\n\n\n      // Merge vertices\n\n      this.mergeVertices();\n\n      this.computeFaceNormals();\n\n      this.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\n\n\n      // Project vector onto sphere's surface\n\n      function prepare( vector ) {\n\n        var vertex = vector.normalize().clone();\n        vertex.index = that.vertices.push( vertex ) - 1;\n\n        // Texture coords are equivalent to map coords, calculate angle and convert to fraction of a circle.\n\n        var u = azimuth( vector ) / 2 / Math.PI + 0.5;\n        var v = inclination( vector ) / Math.PI + 0.5;\n        vertex.uv = new THREE.Vector2( u, 1 - v );\n\n        return vertex;\n\n      }\n\n\n      // Approximate a curved face with recursively sub-divided triangles.\n\n      function make( v1, v2, v3 ) {\n\n        var face = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ] );\n        that.faces.push( face );\n\n        centroid.copy( v1 ).add( v2 ).add( v3 ).divideScalar( 3 );\n\n        var azi = azimuth( centroid );\n\n        that.faceVertexUvs[ 0 ].push( [\n          correctUV( v1.uv, v1, azi ),\n          correctUV( v2.uv, v2, azi ),\n          correctUV( v3.uv, v3, azi )\n        ] );\n\n      }\n\n\n      // Analytically subdivide a face to the required detail level.\n\n      function subdivide( face, detail ) {\n\n        var cols = Math.pow(2, detail);\n        var cells = Math.pow(4, detail);\n        var a = prepare( that.vertices[ face.a ] );\n        var b = prepare( that.vertices[ face.b ] );\n        var c = prepare( that.vertices[ face.c ] );\n        var v = [];\n\n        // Construct all of the vertices for this subdivision.\n\n        for ( var i = 0 ; i <= cols; i ++ ) {\n\n          v[ i ] = [];\n\n          var aj = prepare( a.clone().lerp( c, i / cols ) );\n          var bj = prepare( b.clone().lerp( c, i / cols ) );\n          var rows = cols - i;\n\n          for ( var j = 0; j <= rows; j ++) {\n\n            if ( j == 0 && i == cols ) {\n\n              v[ i ][ j ] = aj;\n\n            } else {\n\n              v[ i ][ j ] = prepare( aj.clone().lerp( bj, j / rows ) );\n\n            }\n\n          }\n\n        }\n\n        // Construct all of the faces.\n\n        for ( var i = 0; i < cols ; i ++ ) {\n\n          for ( var j = 0; j < 2 * (cols - i) - 1; j ++ ) {\n\n            var k = Math.floor( j / 2 );\n\n            if ( j % 2 == 0 ) {\n\n              make(\n                v[ i ][ k + 1],\n                v[ i + 1 ][ k ],\n                v[ i ][ k ]\n              );\n\n            } else {\n\n              make(\n                v[ i ][ k + 1 ],\n                v[ i + 1][ k + 1],\n                v[ i + 1 ][ k ]\n              );\n\n            }\n\n          }\n\n        }\n\n      }\n\n\n      // Angle around the Y axis, counter-clockwise when looking from above.\n\n      function azimuth( vector ) {\n\n        return Math.atan2( vector.z, - vector.x );\n\n      }\n\n\n      // Angle above the XZ plane.\n\n      function inclination( vector ) {\n\n        return Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n      }\n\n\n      // Texture fixing helper. Spheres have some odd behaviours.\n\n      function correctUV( uv, vector, azimuth ) {\n\n        if ( ( azimuth < 0 ) && ( uv.x === 1 ) ) uv = new THREE.Vector2( uv.x - 1, uv.y );\n        if ( ( vector.x === 0 ) && ( vector.z === 0 ) ) uv = new THREE.Vector2( azimuth / 2 / Math.PI + 0.5, uv.y );\n        return uv.clone();\n\n      }\n\n    };\n\n    THREE.PolyhedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\n  }\n\n  // polyfill\n  if (THREE.OctahedronGeometry === undefined) {\n    THREE.OctahedronGeometry = function ( radius, detail ) {\n\n      this.parameters = {\n        radius: radius,\n        detail: detail\n      };\n\n      var vertices = [\n        1, 0, 0,   - 1, 0, 0,    0, 1, 0,    0,- 1, 0,    0, 0, 1,    0, 0,- 1\n      ];\n\n      var indices = [\n        0, 2, 4,    0, 4, 3,    0, 3, 5,    0, 5, 2,    1, 2, 5,    1, 5, 3,    1, 3, 4,    1, 4, 2\n      ];\n\n      THREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\n\n      this.type = 'OctahedronGeometry';\n\n      this.parameters = {\n        radius: radius,\n        detail: detail\n      };\n    };\n\n    THREE.OctahedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\n  }\n\n  // polyfill\n  if (THREE.TorusGeometry === undefined) {\n    THREE.TorusGeometry = function ( radius, tube, radialSegments, tubularSegments, arc ) {\n\n      THREE.Geometry.call( this );\n\n      this.type = 'TorusGeometry';\n\n      this.parameters = {\n        radius: radius,\n        tube: tube,\n        radialSegments: radialSegments,\n        tubularSegments: tubularSegments,\n        arc: arc\n      };\n\n      radius = radius || 100;\n      tube = tube || 40;\n      radialSegments = radialSegments || 8;\n      tubularSegments = tubularSegments || 6;\n      arc = arc || Math.PI * 2;\n\n      var center = new THREE.Vector3(), uvs = [], normals = [];\n\n      for ( var j = 0; j <= radialSegments; j ++ ) {\n\n        for ( var i = 0; i <= tubularSegments; i ++ ) {\n\n          var u = i / tubularSegments * arc;\n          var v = j / radialSegments * Math.PI * 2;\n\n          center.x = radius * Math.cos( u );\n          center.y = radius * Math.sin( u );\n\n          var vertex = new THREE.Vector3();\n          vertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n          vertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n          vertex.z = tube * Math.sin( v );\n\n          this.vertices.push( vertex );\n\n          uvs.push( new THREE.Vector2( i / tubularSegments, j / radialSegments ) );\n          normals.push( vertex.clone().sub( center ).normalize() );\n\n        }\n\n      }\n\n      for ( var j = 1; j <= radialSegments; j ++ ) {\n\n        for ( var i = 1; i <= tubularSegments; i ++ ) {\n\n          var a = ( tubularSegments + 1 ) * j + i - 1;\n          var b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n          var c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n          var d = ( tubularSegments + 1 ) * j + i;\n\n          var face = new THREE.Face3( a, b, d, [ normals[ a ].clone(), normals[ b ].clone(), normals[ d ].clone() ] );\n          this.faces.push( face );\n          this.faceVertexUvs[ 0 ].push( [ uvs[ a ].clone(), uvs[ b ].clone(), uvs[ d ].clone() ] );\n\n          face = new THREE.Face3( b, c, d, [ normals[ b ].clone(), normals[ c ].clone(), normals[ d ].clone() ] );\n          this.faces.push( face );\n          this.faceVertexUvs[ 0 ].push( [ uvs[ b ].clone(), uvs[ c ].clone(), uvs[ d ].clone() ] );\n\n        }\n\n      }\n\n      this.computeFaceNormals();\n\n    };\n\n    THREE.TorusGeometry.prototype = Object.create( THREE.Geometry.prototype );\n  }\n\n  var createCircleGeometry = function ( radius, facing, arc ) {\n\n    var geometry = new THREE.Geometry();\n    arc = arc ? arc : 1;\n    for ( var i = 0; i <= 64 * arc; ++i ) {\n      if ( facing == 'x' ) geometry.vertices.push( new THREE.Vector3( 0, Math.cos( i / 32 * Math.PI ), Math.sin( i / 32 * Math.PI ) ).multiplyScalar(radius) );\n      if ( facing == 'y' ) geometry.vertices.push( new THREE.Vector3( Math.cos( i / 32 * Math.PI ), 0, Math.sin( i / 32 * Math.PI ) ).multiplyScalar(radius) );\n      if ( facing == 'z' ) geometry.vertices.push( new THREE.Vector3( Math.sin( i / 32 * Math.PI ), Math.cos( i / 32 * Math.PI ), 0 ).multiplyScalar(radius) );\n    }\n\n    return geometry;\n  };\n\n  var createArrowGeometry = function ( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded ) {\n\n    var arrowGeometry = new THREE.Geometry();\n    var mesh = new THREE.Mesh( new THREE.CylinderGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded ) );\n    mesh.position.y = 0.5;\n    mesh.updateMatrix();\n\n    arrowGeometry.merge( mesh.geometry, mesh.matrix );\n\n    return arrowGeometry;\n  };\n\n  var createLineGeometry = function ( axis ) {\n\n    var lineGeometry = new THREE.Geometry();\n    if ( axis === 'X')\n      lineGeometry.vertices.push( new THREE.Vector3( 0, 0, 0 ), new THREE.Vector3( 1, 0, 0 ) );\n    else if ( axis === 'Y' )\n      lineGeometry.vertices.push( new THREE.Vector3( 0, 0, 0 ), new THREE.Vector3( 0, 1, 0 ) );\n    else if ( axis === 'Z' )\n      lineGeometry.vertices.push( new THREE.Vector3( 0, 0, 0 ), new THREE.Vector3( 0, 0, 1 ) );\n\n    return lineGeometry;\n  };\n\n  THREE.TransformGizmo = function () {\n\n    var scope = this;\n    var showPickers = false; //debug\n    var showActivePlane = false; //debug\n\n    this.init = function () {\n\n      THREE.Object3D.call( this );\n\n      this.handles = new THREE.Object3D();\n      this.pickers = new THREE.Object3D();\n      this.planes = new THREE.Object3D();\n      this.highlights = new THREE.Object3D();\n      this.hemiPicker = new THREE.Object3D();\n      this.subPickers = new THREE.Object3D();\n\n      this.add(this.handles);\n      this.add(this.pickers);\n      this.add(this.planes);\n      this.add(this.highlights);\n      this.add(this.hemiPicker);\n      this.add(this.subPickers);\n\n      //// PLANES\n\n      var planeGeometry = new THREE.PlaneBufferGeometry( 50, 50, 2, 2 );\n      var planeMaterial = new THREE.MeshBasicMaterial( { wireframe: true } );\n      planeMaterial.side = THREE.DoubleSide;\n\n      var planes = {\n        \"XY\":   new THREE.Mesh( planeGeometry, planeMaterial ),\n        \"YZ\":   new THREE.Mesh( planeGeometry, planeMaterial ),\n        \"XZ\":   new THREE.Mesh( planeGeometry, planeMaterial ),\n        \"XYZE\": new THREE.Mesh( planeGeometry, planeMaterial )\n      };\n\n      this.activePlane = planes[\"XYZE\"];\n\n      planes[\"YZ\"].rotation.set( 0, Math.PI/2, 0 );\n      planes[\"XZ\"].rotation.set( -Math.PI/2, 0, 0 );\n\n      for (var i in planes) {\n        planes[i].name = i;\n        this.planes.add(planes[i]);\n        this.planes[i] = planes[i];\n        planes[i].visible = false;\n      }\n\n      this.setupGizmos();\n      this.activeMode = \"\";\n\n      // reset Transformations\n\n      this.traverse(function ( child ) {\n        if (child instanceof THREE.Mesh) {\n          child.updateMatrix();\n\n          var tempGeometry = new THREE.Geometry();\n          if (child.geometry instanceof THREE.BufferGeometry) {\n            child.geometry = new THREE.Geometry().fromBufferGeometry( child.geometry );\n          }\n          tempGeometry.merge( child.geometry, child.matrix );\n\n          child.geometry = tempGeometry;\n          child.position.set( 0, 0, 0 );\n          child.rotation.set( 0, 0, 0 );\n          child.scale.set( 1, 1, 1 );\n        }\n      });\n\n    };\n\n    this.hide = function () {\n      this.traverse(function( child ) {\n        child.visible = false;\n      });\n    };\n\n    this.show = function () {\n      this.traverse(function( child ) {\n        child.visible = true;\n        if (child.parent == scope.pickers || child.parent == scope.hemiPicker ) child.visible = showPickers;\n        if (child.parent == scope.planes ) child.visible = false;\n      });\n      this.activePlane.visible = showActivePlane;\n    };\n\n    this.highlight = function ( axis ) {\n      this.traverse(function( child ) {\n        if ( child.material && child.material.highlight ) {\n          if ( child.name == axis ) {\n            child.material.highlight( true );\n          } else {\n            child.material.highlight( false );\n          }\n        }\n      });\n    };\n\n    this.setupGizmos = function () {\n\n      var addGizmos = function( gizmoMap, parent ) {\n\n        for ( var name in gizmoMap ) {\n\n          for ( var i = gizmoMap[name].length; i--;) {\n\n            var object = gizmoMap[name][i][0];\n            var position = gizmoMap[name][i][1];\n            var rotation = gizmoMap[name][i][2];\n            var visble = gizmoMap[name][i][3];\n\n            object.name = name;\n\n            if ( position ) object.position.set( position[0], position[1], position[2] );\n            if ( rotation ) object.rotation.set( rotation[0], rotation[1], rotation[2] );\n            if ( visble ) object.visble = visble;\n\n            parent.add( object );\n\n          }\n\n        }\n\n      };\n\n      this.setHandlePickerGizmos();\n\n      addGizmos(this.handleGizmos, this.handles);\n      addGizmos(this.pickerGizmos, this.pickers);\n      addGizmos(this.highlightGizmos, this.highlights);\n      addGizmos(this.hemiPickerGizmos, this.hemiPicker);\n      addGizmos(this.subPickerGizmos, this.subPickers);\n\n      this.hide();\n      this.show();\n\n    };\n\n  };\n\n  THREE.TransformGizmo.prototype = Object.create( THREE.Object3D.prototype );\n\n  THREE.TransformGizmo.prototype.update = function ( rotation, eye ) {\n\n    var vec1 = new THREE.Vector3( 0, 0, 0 );\n    var vec2 = new THREE.Vector3( 0, 1, 0 );\n    var lookAtMatrix = new THREE.Matrix4();\n\n    this.traverse(function(child) {\n      if ( child.name ) {\n        if ( child.name.search(\"E\") != -1 ) {\n          child.quaternion.setFromRotationMatrix( lookAtMatrix.lookAt( eye, vec1, vec2 ) );\n        } else if ( child.name.search(\"X\") != -1 || child.name.search(\"Y\") != -1 || child.name.search(\"Z\") != -1 ) {\n          child.quaternion.setFromEuler( rotation );\n        }\n      }\n    });\n\n  };\n\n  THREE.TransformGizmoTranslate = function () {\n\n    THREE.TransformGizmo.call( this );\n\n    this.setHandlePickerGizmos = function () {\n\n      var arrowGeometry = createArrowGeometry( 0, 0.05, 0.2, 12, 1, false );\n      var lineXGeometry = createLineGeometry( 'X' );\n      var lineYGeometry = createLineGeometry( 'Y' );\n      var lineZGeometry = createLineGeometry( 'Z' );\n\n      this.handleGizmos = {\n        X: [\n          [ new THREE.Mesh( arrowGeometry, new GizmoMaterial( { color: 0xf12c2c } ) ), [ 0.5, 0, 0 ], [ 0, 0, -Math.PI/2 ] ],\n          [ new THREE.Line( lineXGeometry, new GizmoLineMaterial( { color: 0xf12c2c } ) ) ]\n        ],\n        Y: [\n          [ new THREE.Mesh( arrowGeometry, new GizmoMaterial( { color: 0x0bb80b } ) ), [ 0, 0.5, 0 ] ],\n          [   new THREE.Line( lineYGeometry, new GizmoLineMaterial( { color: 0x0bb80b } ) ) ]\n        ],\n        Z: [\n          [ new THREE.Mesh( arrowGeometry, new GizmoMaterial( { color: 0x2c2cf1 } ) ), [ 0, 0, 0.5 ], [ Math.PI/2, 0, 0 ] ],\n          [ new THREE.Line( lineZGeometry, new GizmoLineMaterial( { color: 0x2c2cf1 } ) ) ]\n        ],\n        XYZ: [\n          [ new THREE.Mesh( new THREE.OctahedronGeometry( 0.1, 0 ), new GizmoMaterial( { color: 0xffffff, opacity: 0.25 } ) ), [ 0, 0, 0 ], [ 0, 0, 0 ] ]\n        ],\n        XY: [\n          [ new THREE.Mesh( new THREE.PlaneBufferGeometry( 0.29, 0.29 ), new GizmoMaterial( { color: 0xffff00, opacity: 0.25 } ) ), [ 0.15, 0.15, 0 ] ]\n        ],\n        YZ: [\n          [ new THREE.Mesh( new THREE.PlaneBufferGeometry( 0.29, 0.29 ), new GizmoMaterial( { color: 0x00ffff, opacity: 0.25 } ) ), [ 0, 0.15, 0.15 ], [ 0, Math.PI/2, 0 ] ]\n        ],\n        XZ: [\n          [ new THREE.Mesh( new THREE.PlaneBufferGeometry( 0.29, 0.29 ), new GizmoMaterial( { color: 0xff00ff, opacity: 0.25 } ) ), [ 0.15, 0, 0.15 ], [ -Math.PI/2, 0, 0 ] ]\n        ]\n      };\n\n      this.pickerGizmos = {\n        X: [\n          [ new THREE.Mesh( new THREE.CylinderGeometry( 0.2, 0, 1, 4, 1, false ), new GizmoMaterial( { color: 0xff0000, opacity: 0.25 } ) ), [ 0.6, 0, 0 ], [ 0, 0, -Math.PI/2 ] ]\n        ],\n        Y: [\n          [ new THREE.Mesh( new THREE.CylinderGeometry( 0.2, 0, 1, 4, 1, false ), new GizmoMaterial( { color: 0x00ff00, opacity: 0.25 } ) ), [ 0, 0.6, 0 ] ]\n        ],\n        Z: [\n          [ new THREE.Mesh( new THREE.CylinderGeometry( 0.2, 0, 1, 4, 1, false ), new GizmoMaterial( { color: 0x0000ff, opacity: 0.25 } ) ), [ 0, 0, 0.6 ], [ Math.PI/2, 0, 0 ] ]\n        ],\n        XYZ: [\n          [ new THREE.Mesh( new THREE.OctahedronGeometry( 0.2, 0 ), new GizmoMaterial( { color: 0xffffff, opacity: 0.25 } ) ) ]\n        ],\n        XY: [\n          [ new THREE.Mesh( new THREE.PlaneBufferGeometry( 0.4, 0.4 ), new GizmoMaterial( { color: 0xffff00, opacity: 0.25 } ) ), [ 0.2, 0.2, 0 ] ]\n        ],\n        YZ: [\n          [ new THREE.Mesh( new THREE.PlaneBufferGeometry( 0.4, 0.4 ), new GizmoMaterial( { color: 0x00ffff, opacity: 0.25 } ) ), [ 0, 0.2, 0.2 ], [ 0, Math.PI/2, 0 ] ]\n        ],\n        XZ: [\n          [ new THREE.Mesh( new THREE.PlaneBufferGeometry( 0.4, 0.4 ), new GizmoMaterial( { color: 0xff00ff, opacity: 0.25 } ) ), [ 0.2, 0, 0.2 ], [ -Math.PI/2, 0, 0 ] ]\n        ]\n      };\n\n      this.hemiPickerGizmos = {\n        XYZ: [\n          [ new THREE.Mesh( new THREE.BoxGeometry( 1.2, 1.2, 1.2 ), new GizmoMaterial( { color: 0x0000ff } ) ), [ 0.5, 0.5, 0.5 ], null, false ]\n        ]\n      };\n\n    };\n\n    this.setActivePlane = function ( axis, eye ) {\n\n      var tempMatrix = new THREE.Matrix4();\n      eye.applyMatrix4( tempMatrix.getInverse( tempMatrix.extractRotation( this.planes[ \"XY\" ].matrixWorld ) ) );\n\n      if ( axis == \"X\" ) {\n        this.activePlane = this.planes[ \"XY\" ];\n        if ( Math.abs(eye.y) > Math.abs(eye.z) ) this.activePlane = this.planes[ \"XZ\" ];\n      }\n\n      if ( axis == \"Y\" ){\n        this.activePlane = this.planes[ \"XY\" ];\n        if ( Math.abs(eye.x) > Math.abs(eye.z) ) this.activePlane = this.planes[ \"YZ\" ];\n      }\n\n      if ( axis == \"Z\" ){\n        this.activePlane = this.planes[ \"XZ\" ];\n        if ( Math.abs(eye.x) > Math.abs(eye.y) ) this.activePlane = this.planes[ \"YZ\" ];\n      }\n\n      if ( axis == \"XYZ\" ) this.activePlane = this.planes[ \"XYZE\" ];\n\n      if ( axis == \"XY\" ) this.activePlane = this.planes[ \"XY\" ];\n\n      if ( axis == \"YZ\" ) this.activePlane = this.planes[ \"YZ\" ];\n\n      if ( axis == \"XZ\" ) this.activePlane = this.planes[ \"XZ\" ];\n\n      this.hide();\n      this.show();\n\n    };\n\n    this.init();\n\n  };\n\n  THREE.TransformGizmoTranslate.prototype = Object.create( THREE.TransformGizmo.prototype );\n\n  THREE.TransformGizmoRotate = function () {\n\n    THREE.TransformGizmo.call( this );\n\n    this.setHandlePickerGizmos = function () {\n\n      this.handleGizmos = {\n        RX: [\n          [ new THREE.Line( createCircleGeometry(1,'x',0.5), new GizmoLineMaterial( { color: 0xff0000 } ) ) ]\n        ],\n        RY: [\n          [ new THREE.Line( createCircleGeometry(1,'y',0.5), new GizmoLineMaterial( { color: 0x00ff00 } ) ) ]\n        ],\n        RZ: [\n          [ new THREE.Line( createCircleGeometry(1,'z',0.5), new GizmoLineMaterial( { color: 0x0000ff } ) ) ]\n        ],\n        RE: [\n          [ new THREE.Line( createCircleGeometry(1.25,'z',1), new GizmoLineMaterial( { color: 0x00ffff } ) ) ]\n        ],\n        RXYZE: [\n          [ new THREE.Line( createCircleGeometry(1,'z',1), new GizmoLineMaterial( { color: 0xff00ff } ) ) ]\n        ]\n      };\n\n      this.pickerGizmos = {\n        RX: [\n          [ new THREE.Mesh( new THREE.TorusGeometry( 1, 0.12, 4, 12, Math.PI ), new GizmoMaterial( { color: 0xff0000, opacity: 0.25 } ) ), [ 0, 0, 0 ], [ 0, -Math.PI/2, -Math.PI/2 ] ]\n        ],\n        RY: [\n          [ new THREE.Mesh( new THREE.TorusGeometry( 1, 0.12, 4, 12, Math.PI ), new GizmoMaterial( { color: 0x00ff00, opacity: 0.25 } ) ), [ 0, 0, 0 ], [ Math.PI/2, 0, 0 ] ]\n        ],\n        RZ: [\n          [ new THREE.Mesh( new THREE.TorusGeometry( 1, 0.12, 4, 12, Math.PI ), new GizmoMaterial( { color: 0x0000ff, opacity: 0.25 } ) ), [ 0, 0, 0 ], [ 0, 0, -Math.PI/2 ] ]\n        ],\n        RE: [\n          [ new THREE.Mesh( new THREE.TorusGeometry( 1.25, 0.12, 2, 24 ), new GizmoMaterial( { color: 0x00ffff, opacity: 0.25 } ) ) ]\n        ],\n        RXYZE: [\n          [ new THREE.Mesh( new THREE.TorusGeometry( 1, 0.12, 2, 24 ), new GizmoMaterial( { color: 0xff00ff, opacity: 0.25 } ) ) ]\n        ]\n      };\n\n    };\n\n    this.setActivePlane = function ( axis ) {\n\n      if ( axis == \"RE\" ) this.activePlane = this.planes[ \"XYZE\" ];\n\n      if ( axis == \"RX\" ) this.activePlane = this.planes[ \"YZ\" ];\n\n      if ( axis == \"RY\" ) this.activePlane = this.planes[ \"XZ\" ];\n\n      if ( axis == \"RZ\" ) this.activePlane = this.planes[ \"XY\" ];\n\n      this.hide();\n      this.show();\n\n    };\n\n    this.update = function ( rotation, eye2 ) {\n\n      THREE.TransformGizmo.prototype.update.apply( this, arguments );\n\n      var tempMatrix = new THREE.Matrix4();\n      var worldRotation = new THREE.Euler( 0, 0, 1 );\n      var tempQuaternion = new THREE.Quaternion();\n      var unitX = new THREE.Vector3( 1, 0, 0 );\n      var unitY = new THREE.Vector3( 0, 1, 0 );\n      var unitZ = new THREE.Vector3( 0, 0, 1 );\n      var quaternionX = new THREE.Quaternion();\n      var quaternionY = new THREE.Quaternion();\n      var quaternionZ = new THREE.Quaternion();\n      var eye = eye2.clone();\n\n      worldRotation.copy( this.planes[\"XY\"].rotation );\n      tempQuaternion.setFromEuler( worldRotation );\n\n      tempMatrix.makeRotationFromQuaternion( tempQuaternion ).getInverse( tempMatrix );\n      eye.applyMatrix4( tempMatrix );\n\n      this.traverse(function(child) {\n\n        tempQuaternion.setFromEuler( worldRotation );\n\n        if ( child.name == \"RX\" ) {\n          quaternionX.setFromAxisAngle( unitX, Math.atan2( -eye.y, eye.z ) );\n          tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionX );\n          child.quaternion.copy( tempQuaternion );\n        }\n\n        if ( child.name == \"RY\" ) {\n          quaternionY.setFromAxisAngle( unitY, Math.atan2( eye.x, eye.z ) );\n          tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionY );\n          child.quaternion.copy( tempQuaternion );\n        }\n\n        if ( child.name == \"RZ\" ) {\n          quaternionZ.setFromAxisAngle( unitZ, Math.atan2( eye.y, eye.x ) );\n          tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionZ );\n          child.quaternion.copy( tempQuaternion );\n        }\n\n      });\n\n    };\n\n    this.init();\n\n  };\n\n  THREE.TransformGizmoRotate.prototype = Object.create( THREE.TransformGizmo.prototype );\n\n  THREE.TransformGizmoTranslateRotate = function () {\n\n    THREE.TransformGizmo.call( this );\n\n    var scope = this;\n\n    this.setHandlePickerGizmos = function () {\n\n      var arrowGeometry = createArrowGeometry( 0, 0.05, 0.2, 12, 1, false );\n      var lineGeometry = new THREE.Geometry();\n      lineGeometry.vertices.push( new THREE.Vector3( 0, 0, -0.1 ), new THREE.Vector3( 0, 0, 0.1 ), new THREE.Vector3( -0.1, 0, 0 ), new THREE.Vector3( 0.1, 0, 0 ) );\n      var theta = 0.15;\n\n      this.handleGizmos = {\n        Z: [\n          [ new THREE.Mesh( arrowGeometry, new GizmoMaterial( { color: 0xffffff } ) ), [ 0, 0, 0.25 ], [ Math.PI/2, 0, 0 ] ],\n          [ new THREE.Mesh( new THREE.CylinderGeometry( 0.015, 0.015, 0.6, 4, 1, false ), new GizmoMaterial( { color: 0xffffff } ) ), [ 0, 0, 0.5 ],[ Math.PI/2, 0, 0 ] ]\n        ],\n        RX: [\n          [ new THREE.Mesh( new THREE.TorusGeometry( 1, 0.015, 12, 60, theta * 2 * Math.PI ), new GizmoMaterial( { color: 0xff0000 } ) ), [ 0, 0, 0 ], [ theta * Math.PI, -Math.PI/2, 0 ] ],\n          [ new THREE.Mesh( new THREE.CylinderGeometry( 0.05, 0.05, 0.015, 60, 1, false ), new GizmoMaterial( { color: 0xff0000 } ) ), [ 0, 0, 1 ], [ Math.PI/2, 0, 0 ] ]\n        ],\n        RY: [\n          [ new THREE.Mesh( new THREE.TorusGeometry( 1, 0.015, 12, 60, theta * 2 * Math.PI ), new GizmoMaterial( { color: 0x0000ff } ) ), [ 0, 0, 0 ], [ Math.PI/2, 0, (0.5-theta)*Math.PI ] ],\n          [ new THREE.Mesh( new THREE.CylinderGeometry( 0.05, 0.05, 0.01, 60, 1, false ), new GizmoMaterial( { color: 0x0000ff } ) ), [ 0, 0, 1 ] ]\n        ]\n      };\n\n      this.pickerGizmos = {\n        Z: [\n          [ new THREE.Mesh( new THREE.CylinderGeometry( 0.12, 0.12, 0.65, 4, 1, false ), new GizmoMaterial( { color: 0x0000ff, opacity: 0.25 } ) ), [ 0, 0, 0.5 ], [ Math.PI/2, 0, 0 ] ]\n        ],\n        RX: [\n          [ new THREE.Mesh( new THREE.TorusGeometry( 1, 0.12, 4, 12, theta * 2 * Math.PI ), new GizmoMaterial( { color: 0xff0000, opacity: 0.25 } ) ), [ 0, 0, 0 ], [ theta * Math.PI, -Math.PI/2, 0 ] ]\n        ],\n        RY: [\n          [ new THREE.Mesh( new THREE.TorusGeometry( 1, 0.12, 4, 12, theta * 2 * Math.PI ), new GizmoMaterial( { color: 0x0000ff, opacity: 0.25 } ) ), [ 0, 0, 0 ], [ Math.PI/2, 0, (0.5-theta)*Math.PI ] ]\n        ]\n      };\n\n      this.subPickerGizmos = {\n        Z: [\n          [ new THREE.Mesh( new THREE.CylinderGeometry( 0.12, 0.12, 0.65, 4, 1, false ), new GizmoMaterial( { color: 0x0000ff, opacity: 0.25 } ) ), [ 0, 0, 0.5 ], [ Math.PI/2, 0, 0 ] ]\n        ]\n      };\n\n      this.highlightGizmos = {\n        Z: [\n        ],\n        RX: [\n          [ new THREE.Mesh( new THREE.TorusGeometry( 1, 0.02, 12, 60, 2 * Math.PI ), new GizmoMaterial( { color: 0xff0000, opacity: 1 } ) ), [ 0, 0, 0 ], [ 0, -Math.PI/2, -Math.PI/2 ], false ]\n        ],\n        RY: [\n          [ new THREE.Mesh( new THREE.TorusGeometry( 1, 0.02, 12, 60, 2 * Math.PI ), new GizmoMaterial( { color: 0x0000ff, opacity: 1 } ) ), [ 0, 0, 0 ], [ Math.PI/2, 0, 0 ], false ]\n        ]\n      };\n\n      this.hemiPickerGizmos = {\n        XYZ: [\n          [ new THREE.Mesh( new THREE.SphereGeometry( 1.2, 8, 8, 0, Math.PI ), new GizmoMaterial( { color: 0x0000ff } ) ), null, null, false ]\n        ]\n      };\n\n    };\n\n    this.setActivePlane = function ( axis, eye ) {\n\n      if ( this.activeMode == \"translate\" ) {\n\n        var tempMatrix = new THREE.Matrix4();\n        eye.applyMatrix4( tempMatrix.getInverse( tempMatrix.extractRotation( this.planes[ \"XY\" ].matrixWorld ) ) );\n\n        if ( axis == \"X\" ) {\n          this.activePlane = this.planes[ \"XY\" ];\n          if ( Math.abs(eye.y) > Math.abs(eye.z) ) this.activePlane = this.planes[ \"XZ\" ];\n        }\n\n        if ( axis == \"Y\" ){\n          this.activePlane = this.planes[ \"XY\" ];\n          if ( Math.abs(eye.x) > Math.abs(eye.z) ) this.activePlane = this.planes[ \"YZ\" ];\n        }\n\n        if ( axis == \"Z\" ){\n          this.activePlane = this.planes[ \"XZ\" ];\n          if ( Math.abs(eye.x) > Math.abs(eye.y) ) this.activePlane = this.planes[ \"YZ\" ];\n        }\n\n      } else if ( this.activeMode == \"rotate\" ){\n\n        if ( axis == \"RX\" ) this.activePlane = this.planes[ \"YZ\" ];\n\n        if ( axis == \"RY\" ) this.activePlane = this.planes[ \"XZ\" ];\n\n        if ( axis == \"RZ\" ) this.activePlane = this.planes[ \"XY\" ];\n\n      }\n\n      this.hide();\n      this.show();\n\n    };\n\n    this.update = function ( rotation, eye2 ) {\n\n      if ( this.activeMode == \"translate\" ) {\n\n        THREE.TransformGizmo.prototype.update.apply( this, arguments );\n\n      } else if ( this.activeMode == \"rotate\" ) {\n\n        THREE.TransformGizmo.prototype.update.apply( this, arguments );\n\n        var tempMatrix = new THREE.Matrix4();\n        var worldRotation = new THREE.Euler( 0, 0, 1 );\n        var tempQuaternion = new THREE.Quaternion();\n        var unitX = new THREE.Vector3( 1, 0, 0 );\n        var unitY = new THREE.Vector3( 0, 1, 0 );\n        var unitZ = new THREE.Vector3( 0, 0, 1 );\n        var quaternionX = new THREE.Quaternion();\n        var quaternionY = new THREE.Quaternion();\n        var quaternionZ = new THREE.Quaternion();\n        var eye = eye2.clone();\n\n        worldRotation.copy( this.planes[\"XY\"].rotation );\n        tempQuaternion.setFromEuler( worldRotation );\n\n        tempMatrix.makeRotationFromQuaternion( tempQuaternion ).getInverse( tempMatrix );\n        eye.applyMatrix4( tempMatrix );\n\n        this.traverse(function(child) {\n\n          tempQuaternion.setFromEuler( worldRotation );\n\n          if ( child.name == \"RX\" ) {\n            quaternionX.setFromAxisAngle( unitX, Math.atan2( -eye.y, eye.z ) );\n            tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionX );\n            child.quaternion.copy( tempQuaternion );\n          }\n\n          if ( child.name == \"RY\" ) {\n            quaternionY.setFromAxisAngle( unitY, Math.atan2( eye.x, eye.z ) );\n            tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionY );\n            child.quaternion.copy( tempQuaternion );\n          }\n\n          if ( child.name == \"RZ\" ) {\n            quaternionZ.setFromAxisAngle( unitZ, Math.atan2( eye.y, eye.x ) );\n            tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionZ );\n            child.quaternion.copy( tempQuaternion );\n          }\n\n        });\n\n      }\n\n    };\n\n    this.show = function () {\n      this.traverse(function( child ) {\n        if ( scope.parent == null || (scope.parent.useAllPickers || child.parent != scope.handles) ) child.visible = true;\n        if ( child.material ) child.material.opacity = child.material.oldOpacity;\n        if ( child.parent == scope.pickers || child.parent == scope.hemiPicker || child.parent == scope.subPickers) child.visible = false;\n        if ( child.parent == scope.planes || child.parent == scope.highlights ) child.visible = false;\n      });\n      this.activePlane.visible = false;\n    };\n\n    this.highlight = function ( axis ) {\n      this.traverse(function( child ) {\n        if ( child.material && child.material.highlight ) {\n          if ( child.name == axis ) {\n            if ( child.parent == scope.highlights || child.parent == scope.handles ) child.visible = true;\n            child.material.highlight( true );\n          } else {\n            child.material.highlight( false );\n            child.material.opacity = 0.1;\n          }\n        }\n      });\n    };\n\n    this.init();\n\n  };\n\n  THREE.TransformGizmoTranslateRotate.prototype = Object.create( THREE.TransformGizmo.prototype );\n\n  THREE.TransformGizmoScale = function () {\n\n    THREE.TransformGizmo.call( this );\n\n    this.setHandlePickerGizmos = function () {\n\n      var arrowGeometry = createArrowGeometry( 0.125, 0.125, 0.125 );\n      var lineXGeometry = createLineGeometry( 'X' );\n      var lineYGeometry = createLineGeometry( 'Y' );\n      var lineZGeometry = createLineGeometry( 'Z' );\n\n      this.handleGizmos = {\n        X: [\n          [ new THREE.Mesh( arrowGeometry, new GizmoMaterial( { color: 0xff0000 } ) ), [ 0.5, 0, 0 ], [ 0, 0, -Math.PI/2 ] ],\n          [ new THREE.Line( lineXGeometry, new GizmoLineMaterial( { color: 0xff0000 } ) ) ]\n        ],\n        Y: [\n          [ new THREE.Mesh( arrowGeometry, new GizmoMaterial( { color: 0x00ff00 } ) ), [ 0, 0.5, 0 ] ],\n          [ new THREE.Line( lineYGeometry, new GizmoLineMaterial( { color: 0x00ff00 } ) ) ]\n        ],\n        Z: [\n          [ new THREE.Mesh( arrowGeometry, new GizmoMaterial( { color: 0x0000ff } ) ), [ 0, 0, 0.5 ], [ Math.PI/2, 0, 0 ] ],\n          [ new THREE.Line( lineZGeometry, new GizmoLineMaterial( { color: 0x0000ff } ) ) ]\n        ],\n        XYZ: [\n          [ new THREE.Mesh( new THREE.BoxGeometry( 0.125, 0.125, 0.125 ), new GizmoMaterial( { color: 0xffffff, opacity: 0.25 } ) ) ]\n        ]\n      };\n\n      this.pickerGizmos = {\n        X: [\n          [ new THREE.Mesh( new THREE.CylinderGeometry( 0.2, 0, 1, 4, 1, false ), new GizmoMaterial( { color: 0xff0000, opacity: 0.25 } ) ), [ 0.6, 0, 0 ], [ 0, 0, -Math.PI/2 ] ]\n        ],\n        Y: [\n          [ new THREE.Mesh( new THREE.CylinderGeometry( 0.2, 0, 1, 4, 1, false ), new GizmoMaterial( { color: 0x00ff00, opacity: 0.25 } ) ), [ 0, 0.6, 0 ] ]\n        ],\n        Z: [\n          [ new THREE.Mesh( new THREE.CylinderGeometry( 0.2, 0, 1, 4, 1, false ), new GizmoMaterial( { color: 0x0000ff, opacity: 0.25 } ) ), [ 0, 0, 0.6 ], [ Math.PI/2, 0, 0 ] ]\n        ],\n        XYZ: [\n          [ new THREE.Mesh( new THREE.BoxGeometry( 0.4, 0.4, 0.4 ), new GizmoMaterial( { color: 0xffffff, opacity: 0.25 } ) ) ]\n        ]\n      };\n\n    };\n\n    this.setActivePlane = function ( axis, eye ) {\n\n      var tempMatrix = new THREE.Matrix4();\n      eye.applyMatrix4( tempMatrix.getInverse( tempMatrix.extractRotation( this.planes[ \"XY\" ].matrixWorld ) ) );\n\n      if ( axis == \"X\" ) {\n        this.activePlane = this.planes[ \"XY\" ];\n        if ( Math.abs(eye.y) > Math.abs(eye.z) ) this.activePlane = this.planes[ \"XZ\" ];\n      }\n\n      if ( axis == \"Y\" ){\n        this.activePlane = this.planes[ \"XY\" ];\n        if ( Math.abs(eye.x) > Math.abs(eye.z) ) this.activePlane = this.planes[ \"YZ\" ];\n      }\n\n      if ( axis == \"Z\" ){\n        this.activePlane = this.planes[ \"XZ\" ];\n        if ( Math.abs(eye.x) > Math.abs(eye.y) ) this.activePlane = this.planes[ \"YZ\" ];\n      }\n\n      if ( axis == \"XYZ\" ) this.activePlane = this.planes[ \"XYZE\" ];\n\n      this.hide();\n      this.show();\n\n    };\n\n    this.init();\n\n  };\n\n  THREE.TransformGizmoScale.prototype = Object.create( THREE.TransformGizmo.prototype );\n\n  THREE.TransformControls = function ( camera, domElement, mode ) {\n\n    // TODO: Make non-uniform scale and rotate play nice in hierarchies\n    // TODO: ADD RXYZ contol\n\n    THREE.Object3D.call( this );\n\n    domElement = ( domElement !== undefined ) ? domElement : document;\n\n    this.gizmo = {};\n    switch ( mode ) {\n      case \"translate\":\n        this.gizmo[mode] = new THREE.TransformGizmoTranslate();\n        break;\n      case \"rotate\":\n        this.gizmo[mode] = new THREE.TransformGizmoRotate();\n        break;\n      case \"transrotate\":\n        this.gizmo[mode] = new THREE.TransformGizmoTranslateRotate();\n        break;\n      case \"scale\":\n        this.gizmo[mode] = new THREE.TransformGizmoScale();\n        break;\n    }\n\n    this.add(this.gizmo[mode]);\n    this.gizmo[mode].hide();\n\n    this.object = undefined;\n    this.snap = null;\n    this.snapDelta = 0;\n    this.space = \"world\";\n    this.size = 1;\n    this.axis = null;\n    this.useAllPickers = true;\n\n    this.unitX = new THREE.Vector3( 1, 0, 0 );\n    this.unitY = new THREE.Vector3( 0, 1, 0 );\n    this.unitZ = new THREE.Vector3( 0, 0, 1 );\n    this.normal = new THREE.Vector3(0, 0, 1);\n\n    if ( mode === \"transrotate\" ) {\n      var geometry = new THREE.Geometry();\n      geometry.vertices.push( new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, 0, 1) );\n      var material = new THREE.LineBasicMaterial( {color: 0x000000, linewidth:2, depthTest: false} );\n      this.startLine = new THREE.Line( geometry, material );\n      var geometry = new THREE.Geometry();\n      var material = new THREE.LineBasicMaterial( {color: 0xffe603, linewidth:2, depthTest: false} );\n      geometry.vertices.push( new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, 0, 1) );\n      this.endLine = new THREE.Line( geometry, material );\n      var geometry = new THREE.Geometry();\n      var material = new THREE.LineDashedMaterial({color: 0x000000, linewidth:1, depthTest: false});\n      geometry.vertices.push( new THREE.Vector3(0, -1, 0), new THREE.Vector3(0, 1, 0) );\n      this.centerLine = new THREE.Line( geometry, material );\n\n      var map = THREE.ImageUtils.loadTexture(Autodesk.Viewing.Private.getResourceUrl(\"res/textures/centerMarker_X.png\"));\n      map.magFilter = map.minFilter = THREE.NearestFilter;\n      var geometry = new THREE.CircleGeometry( 0.1, 32 );\n      var material = new THREE.MeshBasicMaterial({opacity: 1, side: THREE.DoubleSide, transparent:true, map:map});\n      this.centerMark = new THREE.Mesh( geometry, material );\n      this.centerMark.rotation.set(Math.PI/2, 0, 0);\n\n      this.ticks = {};\n      var map = THREE.ImageUtils.loadTexture(Autodesk.Viewing.Private.getResourceUrl(\"res/textures/cardinalPoint.png\"));\n      map.magFilter = map.minFilter = THREE.NearestFilter;\n      var material = new THREE.MeshBasicMaterial({depthTest: false, opacity: 1, transparent:true, side: THREE.DoubleSide, map:map});\n      var w = 0.12, h = 0.25, d = 1.15;\n\n      this.ticks[\"RX\"] = new THREE.Object3D();\n      var geometry = new THREE.PlaneBufferGeometry(w, h);\n      var mesh = new THREE.Mesh(geometry, material);\n      mesh.position.set(0, 0, -d-h/2);\n      mesh.rotation.set(Math.PI/2, Math.PI/2, 0);\n      this.ticks[\"RX\"].add(mesh);\n\n      mesh = mesh.clone();\n      mesh.position.set(0, d+h/2, 0);\n      mesh.rotation.set(0, Math.PI/2, 0);\n      this.ticks[\"RX\"].add(mesh);\n\n      mesh = mesh.clone();\n      mesh.position.set(0, 0, d+h/2);\n      mesh.rotation.set(0, Math.PI/2, Math.PI/2);\n      this.ticks[\"RX\"].add(mesh);\n\n      mesh = mesh.clone();\n      mesh.position.set(0, -d-h/2, 0);\n      mesh.rotation.set(0, Math.PI/2, 0);\n      this.ticks[\"RX\"].add(mesh);\n\n      this.ticks[\"RY\"] = new THREE.Object3D();\n      mesh = mesh.clone();\n      mesh.position.set(0, 0, -d-h/2);\n      mesh.rotation.set(Math.PI/2, 0, 0);\n      this.ticks[\"RY\"].add(mesh);\n\n      mesh = mesh.clone();\n      mesh.position.set(-d-h/2, 0, 0);\n      mesh.rotation.set(Math.PI/2, 0, Math.PI/2);\n      this.ticks[\"RY\"].add(mesh);\n\n      mesh = mesh.clone();\n      mesh.position.set(0, 0, d+h/2);\n      mesh.rotation.set(Math.PI/2, 0, 0);\n      this.ticks[\"RY\"].add(mesh);\n\n      mesh = mesh.clone();\n      mesh.position.set(d+h/2, 0, 0);\n      mesh.rotation.set(Math.PI/2, 0, Math.PI/2);\n      this.ticks[\"RY\"].add(mesh);\n    }\n\n    var scope = this;\n\n    var _dragging = false;\n    var _mode = mode;\n    var _plane = \"XY\";\n\n    var changeEvent = { type: \"change\" };\n    var mouseDownEvent = { type: \"mouseDown\" };\n    var mouseUpEvent = { type: \"mouseUp\", mode: _mode };\n    var objectChangeEvent = { type: \"objectChange\" };\n\n    var ray = new THREE.Raycaster();\n    var pointerVector = new THREE.Vector3();\n    var pointerDir = new THREE.Vector3();\n\n    var point = new THREE.Vector3();\n    var offset = new THREE.Vector3();\n\n    var rotation = new THREE.Vector3();\n    var offsetRotation = new THREE.Vector3();\n    var scale = 1;\n\n    var lookAtMatrix = new THREE.Matrix4();\n    var eye = new THREE.Vector3();\n\n    var tempMatrix = new THREE.Matrix4();\n    var tempVector = new THREE.Vector3();\n    var tempQuaternion = new THREE.Quaternion();\n    var projX = new THREE.Vector3();\n    var projY = new THREE.Vector3();\n    var projZ = new THREE.Vector3();\n\n    var quaternionXYZ = new THREE.Quaternion();\n    var quaternionX = new THREE.Quaternion();\n    var quaternionY = new THREE.Quaternion();\n    var quaternionZ = new THREE.Quaternion();\n    var quaternionE = new THREE.Quaternion();\n\n    var oldPosition = new THREE.Vector3();\n    var oldScale = new THREE.Vector3();\n    var oldRotationMatrix = new THREE.Matrix4();\n\n    var parentRotationMatrix  = new THREE.Matrix4();\n    var parentScale = new THREE.Vector3();\n\n    var worldPosition = new THREE.Vector3();\n    var worldRotation = new THREE.Euler();\n    var worldRotationMatrix  = new THREE.Matrix4();\n    var camPosition = new THREE.Vector3();\n    var camRotation = new THREE.Euler();\n\n    this.attach = function ( object ) {\n\n      scope.object = object;\n\n      this.gizmo[_mode].show();\n\n      scope.update();\n\n      scope.updateUnitVectors();\n\n    };\n\n    this.detach = function ( object ) {\n\n      scope.object = undefined;\n      this.axis = null;\n\n      this.gizmo[_mode].hide();\n\n    };\n\n    this.setMode = function ( mode ) {\n\n      _mode = mode ? mode : _mode;\n\n      if ( _mode == \"scale\" ) scope.space = \"local\";\n\n      this.gizmo[_mode].show();\n\n      this.update();\n      scope.dispatchEvent( changeEvent );\n\n    };\n\n    this.getPicker = function () {\n\n      return scope.gizmo[_mode].hemiPicker.children;\n\n    };\n\n    this.setPosition = function ( position ) {\n\n      this.object.position.copy ( position );\n      this.update();\n\n    };\n\n    this.setNormal = function ( normal ) {\n\n      tempQuaternion.setFromUnitVectors( this.normal, normal );\n      this.unitX.applyQuaternion( tempQuaternion );\n      this.unitY.applyQuaternion( tempQuaternion );\n      this.unitZ.applyQuaternion( tempQuaternion );\n      this.normal.copy( normal );\n      if (this.object) {\n        this.object.quaternion.multiply ( tempQuaternion );\n      }\n      this.update();\n    };\n\n    this.setSnap = function ( snap, delta ) {\n\n      scope.snap = snap;\n      scope.snapDelta = delta;\n\n    };\n\n    this.setSize = function ( size ) {\n\n      scope.size = size;\n      this.update();\n      scope.dispatchEvent( changeEvent );\n\n    };\n\n    this.setSpace = function ( space ) {\n\n      scope.space = space;\n      this.update();\n      scope.dispatchEvent( changeEvent );\n\n    };\n\n    this.update = function (highlight) {\n\n      if ( scope.object === undefined ) return;\n\n      scope.object.updateMatrixWorld();\n      worldPosition.setFromMatrixPosition( scope.object.matrixWorld );\n      worldRotation.setFromRotationMatrix( tempMatrix.extractRotation( scope.object.matrixWorld ) );\n\n      camera.updateMatrixWorld();\n      camPosition.setFromMatrixPosition( camera.matrixWorld );\n      //camRotation.setFromRotationMatrix( tempMatrix.extractRotation( camera.matrixWorld ) );\n\n      this.position.copy( worldPosition );\n\n      this.quaternion.setFromEuler( worldRotation );\n\n      this.normal.set( 0, 0, 1 );\n      this.normal.applyEuler( worldRotation );\n\n      // keep same screen height (100px)\n      var dist = worldPosition.distanceTo( camPosition );\n      var height = camera.isPerspective? 2 * Math.tan( camera.fov * Math.PI / 360 ) * dist : dist;\n      var rect = domElement.getBoundingClientRect();\n      scale = 100 * height / rect.height;\n      this.scale.set( scale, scale, scale );\n\n      //eye.copy( camPosition ).sub( worldPosition ).normalize();\n\n      //if ( scope.space == \"local\" )\n      //    this.gizmo[_mode].update( worldRotation, eye );\n      //else if ( scope.space == \"world\" )\n      //    this.gizmo[_mode].update( new THREE.Euler(), eye );\n\n      if (highlight)\n        this.gizmo[_mode].highlight( scope.axis );\n\n    };\n\n    this.updateUnitVectors = function () {\n\n      this.unitX.set( 1, 0, 0 );\n      this.unitY.set( 0, 1, 0 );\n      this.unitZ.set( 0, 0, 1 );\n      this.unitX.applyEuler( worldRotation );\n      this.unitY.applyEuler( worldRotation );\n      this.unitZ.applyEuler( worldRotation );\n\n    };\n\n    this.showRotationGizmos = function (set) {\n\n      var handles = this.gizmo[_mode].handles.children;\n      for ( var i = 0; i < handles.length; i++ ) {\n        var child = handles[i];\n        child.visible = true;\n        if ( child.name.search(\"R\") !== -1 ) child.visible = set;\n      }\n      this.useAllPickers = set;\n\n    };\n\n    this.highlight = function () {\n\n      this.gizmo[_mode].highlight( this.axis || \"Z\" );\n\n    };\n\n    this.onPointerHover = function( event ) {\n\n      if ( scope.object === undefined || _dragging === true ) return false;\n\n      var pointer = event.pointers ? event.pointers[ 0 ] : event;\n\n      var intersect = intersectObjects( pointer, scope.useAllPickers? scope.gizmo[_mode].pickers.children: scope.gizmo[_mode].subPickers.children );\n\n      var axis = null;\n      var mode = \"\";\n\n      if ( intersect ) {\n\n        axis = intersect.object.name;\n        mode = axis.search(\"R\") != -1 ? \"rotate\" : \"translate\";\n\n      }\n\n      if ( scope.axis !== axis ) {\n\n        scope.axis = axis;\n        scope.gizmo[_mode].activeMode = mode;\n        scope.update(true);\n        scope.dispatchEvent( changeEvent );\n\n      }\n\n      if (scope.axis === null) {\n\n        scope.gizmo[_mode].show();\n\n      }\n\n      return intersect? true : false;\n\n    }\n\n    this.onPointerDown = function( event ) {\n\n      if ( scope.object === undefined || _dragging === true ) return false;\n\n      var pointer = event.pointers ? event.pointers[ 0 ] : event;\n\n      if ( event.pointerType === 'touch' ) {\n\n        var intersect = intersectObjects( pointer, scope.useAllPickers? scope.gizmo[_mode].pickers.children: scope.gizmo[_mode].subPickers.children );\n\n        var axis = null;\n        var mode = \"\";\n\n        if ( intersect ) {\n\n          axis = intersect.object.name;\n          mode = axis.search(\"R\") != -1 ? \"rotate\" : \"translate\";\n\n        }\n\n        if ( scope.axis !== axis ) {\n\n          scope.axis = axis;\n          scope.gizmo[_mode].activeMode = mode;\n        }\n      }\n\n      var intersect = null;\n\n      if ( pointer.button === 0 || pointer.button === undefined ) {\n\n        intersect = intersectObjects( pointer, scope.useAllPickers? scope.gizmo[_mode].pickers.children: scope.gizmo[_mode].subPickers.children );\n\n        if ( intersect ) {\n\n          scope.dispatchEvent( mouseDownEvent );\n\n          scope.axis = intersect.object.name;\n\n          scope.update();\n\n          eye.copy( camera.position ).sub( worldPosition ).normalize();\n\n          scope.gizmo[_mode].setActivePlane( scope.axis, eye );\n\n          var planeIntersect = intersectObjects( pointer, [scope.gizmo[_mode].activePlane] );\n\n          if ( planeIntersect )\n            offset.copy( planeIntersect.point );\n\n          oldPosition.copy( scope.object.position );\n          oldScale.copy( scope.object.scale );\n\n          oldRotationMatrix.extractRotation( scope.object.matrix );\n          worldRotationMatrix.extractRotation( scope.object.matrixWorld );\n\n          if ( scope.object.parent ) {\n            parentRotationMatrix.extractRotation( scope.object.parent.matrixWorld );\n            parentScale.setFromMatrixScale( tempMatrix.getInverse( scope.object.parent.matrixWorld ) );\n          } else {\n            parentRotationMatrix.extractRotation( scope.object.matrixWorld );\n            parentScale.setFromMatrixScale( tempMatrix.getInverse( scope.object.matrixWorld ) );\n          }\n\n          // show rotation start line and ticks\n          if ( _mode === \"transrotate\" && scope.gizmo[_mode].activeMode === \"rotate\" ) {\n            scope.startLine.geometry.vertices[0].set(0, 0, 0).applyMatrix4( scope.matrixWorld );\n            scope.startLine.geometry.vertices[1].set(0, 0, 1).applyMatrix4( scope.matrixWorld );\n            scope.startLine.geometry.verticesNeedUpdate = true;\n            scope.parent.add( scope.startLine );\n\n            var pos = scope.object.geometry.getAttribute('position');\n            var pt1 = new THREE.Vector3().fromAttribute(pos, 0).applyMatrix4( scope.object.matrixWorld );\n            var pt2 = new THREE.Vector3().fromAttribute(pos, 1).applyMatrix4( scope.object.matrixWorld );\n            var pt3 = new THREE.Vector3().fromAttribute(pos, 2).applyMatrix4( scope.object.matrixWorld );\n            var pt4 = new THREE.Vector3().fromAttribute(pos, 3).applyMatrix4( scope.object.matrixWorld );\n            if (scope.axis === \"RX\") {\n              pt1.lerp(pt3, 0.5);\n              pt2.lerp(pt4, 0.5);\n              var dist = pt1.distanceTo(pt2);\n              scope.centerLine.material.dashSize = dist / 15;\n              scope.centerLine.material.gapSize = dist / 30;\n              scope.centerLine.geometry.vertices[0].copy(pt1);\n              scope.centerLine.geometry.vertices[1].copy(pt2);\n            } else {\n              pt1.lerp(pt2, 0.5);\n              pt3.lerp(pt4, 0.5);\n              var dist = pt1.distanceTo(pt3);\n              scope.centerLine.material.dashSize = dist / 15;\n              scope.centerLine.material.gapSize = dist / 30;\n              scope.centerLine.geometry.vertices[0].copy(pt1);\n              scope.centerLine.geometry.vertices[1].copy(pt3);\n            }\n            scope.centerLine.geometry.computeLineDistances();\n            scope.centerLine.geometry.verticesNeedUpdate = true;\n            scope.parent.add( scope.centerLine );\n\n            scope.ticks[scope.axis].position.copy( scope.position );\n            scope.ticks[scope.axis].quaternion.copy( scope.quaternion );\n            scope.ticks[scope.axis].scale.copy( scope.scale );\n            scope.parent.add( scope.ticks[scope.axis] );\n          }\n\n        }\n\n      }\n\n      _dragging = true;\n\n      return intersect? true: false;\n\n    }\n\n    this.onPointerMove = function( event ) {\n\n      if ( scope.object === undefined || scope.axis === null || _dragging === false ) return false;\n\n      var pointer = event.pointers ? event.pointers[ 0 ] : event;\n\n      var planeIntersect = intersectObjects( pointer, [scope.gizmo[_mode].activePlane] );\n\n      if ( planeIntersect )\n        point.copy( planeIntersect.point );\n\n      var mode = scope.gizmo[_mode].activeMode;\n      if ( mode == \"translate\" ) {\n\n        point.sub( offset );\n        point.multiply(parentScale);\n\n        if ( scope.space == \"local\" ) {\n\n          point.applyMatrix4( tempMatrix.getInverse( worldRotationMatrix ) );\n\n          projX.copy( this.unitX );\n          projY.copy( this.unitY );\n          projZ.copy( this.unitZ );\n          tempVector.set( 0, 0, 0 );\n          if ( scope.axis.search(\"X\") != -1 ) {\n            projX.multiplyScalar( point.dot( this.unitX ) );\n            tempVector.add( projX );\n          }\n          if ( scope.axis.search(\"Y\") != -1 ) {\n            projY.multiplyScalar( point.dot( this.unitY ) );\n            tempVector.add(projY);\n          }\n          if ( scope.axis.search(\"Z\") != -1 ) {\n            projZ.multiplyScalar( point.dot( this.unitZ ) );\n            tempVector.add( projZ );\n          }\n          point.copy( tempVector );\n\n          point.applyMatrix4( oldRotationMatrix );\n\n          scope.object.position.copy( oldPosition );\n          scope.object.position.add( point );\n\n        }\n\n        if ( scope.space == \"world\" || scope.axis.search(\"XYZ\") != -1 ) {\n\n          projX.copy( this.unitX );\n          projY.copy( this.unitY );\n          projZ.copy( this.unitZ );\n          tempVector.set( 0, 0, 0 );\n          if ( scope.axis.search(\"X\") != -1 ) {\n            projX.multiplyScalar( point.dot( this.unitX ) );\n            tempVector.add( projX );\n          }\n          if ( scope.axis.search(\"Y\") != -1 ) {\n            projY.multiplyScalar( point.dot( this.unitY ) );\n            tempVector.add(projY);\n          }\n          if ( scope.axis.search(\"Z\") != -1 ) {\n            projZ.multiplyScalar( point.dot( this.unitZ ) );\n            tempVector.add( projZ );\n          }\n          point.copy( tempVector );\n\n          point.applyMatrix4( tempMatrix.getInverse( parentRotationMatrix ) );\n\n          scope.object.position.copy( oldPosition );\n          scope.object.position.add( point );\n\n        }\n\n      } else if ( mode == \"scale\" ) {\n\n        point.sub( offset );\n        point.multiply(parentScale);\n\n        if ( scope.space == \"local\" ) {\n\n          if ( scope.axis == \"XYZ\") {\n\n            scale = 1 + ( ( point.y ) / 50 );\n\n            scope.object.scale.x = oldScale.x * scale;\n            scope.object.scale.y = oldScale.y * scale;\n            scope.object.scale.z = oldScale.z * scale;\n\n          } else {\n\n            point.applyMatrix4( tempMatrix.getInverse( worldRotationMatrix ) );\n\n            if ( scope.axis == \"X\" ) scope.object.scale.x = oldScale.x * ( 1 + point.x / 50 );\n            if ( scope.axis == \"Y\" ) scope.object.scale.y = oldScale.y * ( 1 + point.y / 50 );\n            if ( scope.axis == \"Z\" ) scope.object.scale.z = oldScale.z * ( 1 + point.z / 50 );\n\n          }\n\n        }\n\n      } else if ( mode == \"rotate\") {\n\n        point.sub( worldPosition );\n        point.multiply(parentScale);\n        tempVector.copy(offset).sub( worldPosition );\n        tempVector.multiply(parentScale);\n\n        if ( scope.axis == \"RE\" ) {\n\n          point.applyMatrix4( tempMatrix.getInverse( lookAtMatrix ) );\n          tempVector.applyMatrix4( tempMatrix.getInverse( lookAtMatrix ) );\n\n          rotation.set( Math.atan2( point.z, point.y ), Math.atan2( point.x, point.z ), Math.atan2( point.y, point.x ) );\n          offsetRotation.set( Math.atan2( tempVector.z, tempVector.y ), Math.atan2( tempVector.x, tempVector.z ), Math.atan2( tempVector.y, tempVector.x ) );\n\n          tempQuaternion.setFromRotationMatrix( tempMatrix.getInverse( parentRotationMatrix ) );\n\n          var rotz = rotation.z - offsetRotation.z;\n          if ( scope.snap !== null ) {\n            var rotsnap = Math.round( rotz / scope.snap ) * scope.snap;\n            if ( Math.abs(rotsnap-rotz) < scope.snapDelta ) {\n              rotz = rotsnap;\n            }\n          }\n          quaternionE.setFromAxisAngle( eye, rotz );\n          quaternionXYZ.setFromRotationMatrix( worldRotationMatrix );\n\n          tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionE );\n          tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionXYZ );\n\n          scope.object.quaternion.copy( tempQuaternion );\n\n        } else if ( scope.axis == \"RXYZE\" ) {\n\n          var tempAxis = point.clone().cross(tempVector).normalize(); // rotation axis\n\n          tempQuaternion.setFromRotationMatrix( tempMatrix.getInverse( parentRotationMatrix ) );\n\n          var rot = - point.clone().angleTo(tempVector);\n          if ( scope.snap !== null ) {\n            var rotsnap = Math.round( rot / scope.snap ) * scope.snap;\n            if ( Math.abs(rotsnap-rot) < scope.snapDelta ) {\n              rot = rotsnap;\n            }\n          }\n          quaternionX.setFromAxisAngle( tempAxis, rot );\n          quaternionXYZ.setFromRotationMatrix( worldRotationMatrix );\n\n          tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionX );\n          tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionXYZ );\n\n          scope.object.quaternion.copy( tempQuaternion );\n\n        } else if ( scope.space == \"local\" ) {\n\n          point.applyMatrix4( tempMatrix.getInverse( worldRotationMatrix ) );\n\n          tempVector.applyMatrix4( tempMatrix.getInverse( worldRotationMatrix ) );\n\n          var projx = point.dot(this.unitX), projy = point.dot(this.unitY), projz = point.dot(this.unitZ);\n          var tempx = tempVector.dot(this.unitX), tempy = tempVector.dot(this.unitY), tempz = tempVector.dot(this.unitZ);\n          rotation.set( Math.atan2( projz, projy ), Math.atan2( projx, projz ), Math.atan2( projy, projx ) );\n          offsetRotation.set( Math.atan2( tempz, tempy ), Math.atan2( tempx, tempz ), Math.atan2( tempy, tempx ) );\n\n          var rotx = rotation.x - offsetRotation.x;\n          var roty = rotation.y - offsetRotation.y;\n          var rotz = rotation.z - offsetRotation.z;\n          if ( scope.snap !== null ) {\n            if ( scope.axis.search(\"X\") != -1 ) {\n              var rotsnap = Math.round( rotx / scope.snap ) * scope.snap;\n              if ( Math.abs(rotsnap-rotx) < scope.snapDelta ) {\n                rotx = rotsnap;\n              }\n            }\n            if ( scope.axis.search(\"Y\") != -1 ) {\n              var rotsnap = Math.round( roty / scope.snap ) * scope.snap;\n              if ( Math.abs(rotsnap-roty) < scope.snapDelta ) {\n                roty = rotsnap;\n              }\n            }\n            if ( scope.axis.search(\"Z\") != -1 ) {\n              var rotsnap = Math.round( rotz / scope.snap ) * scope.snap;\n              if ( Math.abs(rotsnap-rotz) < scope.snapDelta ) {\n                rotz = rotsnap;\n              }\n            }\n          }\n          quaternionX.setFromAxisAngle( this.unitX, rotx );\n          quaternionY.setFromAxisAngle( this.unitY, roty );\n          quaternionZ.setFromAxisAngle( this.unitZ, rotz );\n          quaternionXYZ.setFromRotationMatrix( oldRotationMatrix );\n\n          if ( scope.axis == \"RX\" ) quaternionXYZ.multiplyQuaternions( quaternionXYZ, quaternionX );\n          if ( scope.axis == \"RY\" ) quaternionXYZ.multiplyQuaternions( quaternionXYZ, quaternionY );\n          if ( scope.axis == \"RZ\" ) quaternionXYZ.multiplyQuaternions( quaternionXYZ, quaternionZ );\n\n          scope.object.quaternion.copy( quaternionXYZ );\n\n        } else if ( scope.space == \"world\" ) {\n\n          var projx = point.dot(this.unitX), projy = point.dot(this.unitY), projz = point.dot(this.unitZ);\n          var tempx = tempVector.dot(this.unitX), tempy = tempVector.dot(this.unitY), tempz = tempVector.dot(this.unitZ);\n          rotation.set( Math.atan2( projz, projy ), Math.atan2( projx, projz ), Math.atan2( projy, projx ) );\n          offsetRotation.set( Math.atan2( tempz, tempy ), Math.atan2( tempx, tempz ), Math.atan2( tempy, tempx ) );\n\n          tempQuaternion.setFromRotationMatrix( tempMatrix.getInverse( parentRotationMatrix ) );\n\n          var rotx = rotation.x - offsetRotation.x;\n          var roty = rotation.y - offsetRotation.y;\n          var rotz = rotation.z - offsetRotation.z;\n          if ( scope.snap !== null ) {\n            if ( scope.axis.search(\"X\") != -1 ) {\n              var rotsnap = Math.round( rotx / scope.snap ) * scope.snap;\n              if ( Math.abs(rotsnap-rotx) < scope.snapDelta ) {\n                rotx = rotsnap;\n              }\n            }\n            if ( scope.axis.search(\"Y\") != -1 ) {\n              var rotsnap = Math.round( roty / scope.snap ) * scope.snap;\n              if ( Math.abs(rotsnap-roty) < scope.snapDelta ) {\n                roty = rotsnap;\n              }\n            }\n            if ( scope.axis.search(\"Z\") != -1 ) {\n              var rotsnap = Math.round( rotz / scope.snap ) * scope.snap;\n              if ( Math.abs(rotsnap-rotz) < scope.snapDelta ) {\n                rotz = rotsnap;\n              }\n            }\n          }\n          quaternionX.setFromAxisAngle( this.unitX, rotx );\n          quaternionY.setFromAxisAngle( this.unitY, roty );\n          quaternionZ.setFromAxisAngle( this.unitZ, rotz );\n          quaternionXYZ.setFromRotationMatrix( worldRotationMatrix );\n\n          if ( scope.axis == \"RX\" ) tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionX );\n          if ( scope.axis == \"RY\" ) tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionY );\n          if ( scope.axis == \"RZ\" ) tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionZ );\n\n          tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionXYZ );\n\n          scope.object.quaternion.copy( tempQuaternion );\n\n        }\n\n        // show rotation end line\n        if (_mode === \"transrotate\" ) {\n          scope.add( scope.endLine );\n          scope.add( scope.centerMark );\n        }\n\n      }\n\n      // update matrix\n      scope.object.matrixAutoUpdate = true;\n\n      scope.update(true);\n      scope.dispatchEvent( changeEvent );\n      scope.dispatchEvent( objectChangeEvent );\n\n      return planeIntersect? true : false;\n\n    }\n\n    this.onPointerUp = function( event ) {\n\n      if ( _dragging && ( scope.axis !== null ) ) {\n        mouseUpEvent.mode = _mode;\n        scope.dispatchEvent( mouseUpEvent )\n      }\n      _dragging = false;\n\n      this.gizmo[_mode].show();\n\n      this.updateUnitVectors();\n\n      // remove rotation start/end lines\n      if ( _mode === \"transrotate\" && this.gizmo[_mode].activeMode === \"rotate\" ) {\n        this.remove( this.endLine );\n        this.remove( this.centerMark );\n        this.parent.remove( this.centerLine );\n        this.parent.remove( this.startLine );\n        this.parent.remove( this.ticks[this.axis] );\n      }\n\n      return false;\n\n    }\n\n    function intersectObjects( pointer, objects ) {\n\n      var rect = domElement.getBoundingClientRect();\n      var x = ( ( pointer.clientX - rect.left ) / rect.width ) * 2 - 1;\n      var y = - ( ( pointer.clientY - rect.top ) / rect.height ) * 2 + 1;\n\n      if ( camera.isPerspective ) {\n        pointerVector.set( x, y, 0.5 );\n        pointerVector.unproject( camera );\n        ray.set( camera.position, pointerVector.sub( camera.position ).normalize() );\n      } else {\n        pointerVector.set( x, y, -1 );\n        pointerVector.unproject( camera );\n        pointerDir.set( 0, 0, -1 );\n        ray.set( pointerVector, pointerDir.transformDirection( camera.matrixWorld ) );\n      }\n\n      var intersections = ray.intersectObjects( objects, true );\n      return intersections[0] ? intersections[0] : false;\n\n    }\n\n  };\n\n  THREE.TransformControls.prototype = Object.create( THREE.Object3D.prototype );\n})()","import EventsEmitter from 'EventsEmitter'\n\nexport default class RotateTool extends EventsEmitter {\n\n  /////////////////////////////////////////////////////////////////\n  // Class constructor\n  //\n  /////////////////////////////////////////////////////////////////\n  constructor (viewer) {\n\n    super()\n\n    this.keys = {}\n\n    this.active = false\n\n    this.viewer = viewer\n\n    this.fullTransform = false\n\n    this.viewer.toolController.registerTool(this)\n\n    this.onAggregateSelectionChangedHandler = (e) => {\n\n      this.onAggregateSelectionChanged(e)\n    }\n  }\n\n  /////////////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////////////\n  getNames () {\n\n    return ['Viewing.Tool.Rotate']\n  }\n\n  /////////////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////////////\n  getName () {\n\n    return 'Viewing.Tool.Rotate'\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  setFullTransform (fullTransform) {\n\n    this.fullTransform = fullTransform\n\n    this.clearSelection()\n  }\n\n  ///////////////////////////////////////////////////////////////////\n  // activate tool\n  //\n  ///////////////////////////////////////////////////////////////////\n  activate () {\n\n    if (!this.active) {\n\n      this.active = true\n\n      this.viewer.toolController.activateTool(\n        this.getName())\n\n      this.viewer.addEventListener(\n        Autodesk.Viewing.AGGREGATE_SELECTION_CHANGED_EVENT,\n        this.onAggregateSelectionChangedHandler)\n\n      this.emit('activate')\n    }\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  // deactivate tool\n  //\n  ///////////////////////////////////////////////////////////////////////////\n  deactivate () {\n\n    if (this.active) {\n\n      this.active = false\n\n      this.viewer.toolController.deactivateTool(\n        this.getName())\n\n      if (this.rotateControl) {\n\n        this.rotateControl.remove()\n        this.rotateControl = null\n      }\n\n      this.viewer.removeEventListener(\n        Autodesk.Viewing.AGGREGATE_SELECTION_CHANGED_EVENT,\n        this.onAggregateSelectionChangedHandler)\n\n      this.emit('deactivate')\n    }\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  // Component Selection Handler\n  // (use Autodesk.Viewing.AGGREGATE_SELECTION_CHANGED_EVENT instead of\n  //  Autodesk.Viewing.SELECTION_CHANGED_EVENT - deprecated )\n  //\n  ///////////////////////////////////////////////////////////////////////////\n  onAggregateSelectionChanged (event) {\n\n    if (this.rotateControl && this.rotateControl.engaged) {\n\n      this.rotateControl.engaged = false\n\n      this.viewer.select(this.selection.dbIdArray)\n\n      return\n    }\n\n    if (event.selections.length) {\n\n      var selection = event.selections[0]\n\n      this.selection = selection\n\n      if (this.fullTransform) {\n\n        this.selection.fragIdsArray = []\n\n        var fragCount = selection.model.getFragmentList().\n          fragments.fragId2dbId.length\n\n        for (var fragId = 0; fragId < fragCount; ++fragId) {\n\n          this.selection.fragIdsArray.push(fragId)\n        }\n\n        this.selection.dbIdArray = []\n\n        var instanceTree = selection.model.getData().instanceTree\n\n        var rootId = instanceTree.getRootId()\n\n        this.selection.dbIdArray.push(rootId)\n      }\n\n      this.drawControl()\n\n      this.viewer.fitToView(this.selection.dbIdArray)\n\n      this.emit('selection', selection)\n\n    } else {\n\n      this.clearSelection()\n    }\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  // Selection cleared\n  //\n  ///////////////////////////////////////////////////////////////////////////\n  clearSelection () {\n\n    this.selection = null\n\n    if (this.rotateControl) {\n\n      this.rotateControl.remove()\n\n      this.rotateControl = null\n\n      this.viewer.impl.sceneUpdated(true)\n    }\n\n    this.emit('selection', null)\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  // Draw rotate control\n  //\n  ///////////////////////////////////////////////////////////////////////////\n  drawControl () {\n\n    var bBox = this.getWorldBoundingBox(\n      this.selection.fragIdsArray,\n      this.selection.model.getFragmentList())\n\n    this.center = new THREE.Vector3(\n      (bBox.min.x + bBox.max.x) / 2,\n      (bBox.min.y + bBox.max.y) / 2,\n      (bBox.min.z + bBox.max.z) / 2)\n\n    var size = Math.max(\n        bBox.max.x - bBox.min.x,\n        bBox.max.y - bBox.min.y,\n        bBox.max.z - bBox.min.z) * 0.8\n\n    if (this.rotateControl) {\n\n      this.rotateControl.remove()\n    }\n\n    this.rotateControl = new RotateControl(\n      this.viewer, this.center, size)\n\n    this.rotateControl.on('rotate', (data) => {\n\n      this.rotateFragments(\n        this.selection.model,\n        this.selection.fragIdsArray,\n        data.axis,\n        data.angle,\n        this.center)\n\n      this.viewer.impl.sceneUpdated(true)\n    })\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  //\n  //\n  ///////////////////////////////////////////////////////////////////////////\n  handleButtonDown (event, button) {\n\n    if (this.rotateControl) {\n\n      if (this.rotateControl.onPointerDown(event)) {\n\n        return true\n      }\n    }\n\n    if (button === 0 && this.keys.Control) {\n\n      this.isDragging = true\n\n      this.mousePos = {\n        x: event.clientX,\n        y: event.clientY\n      }\n\n      return true\n    }\n\n    return false\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  //\n  //\n  ///////////////////////////////////////////////////////////////////////////\n  handleButtonUp (event, button) {\n\n    if (this.rotateControl) {\n\n      this.rotateControl.onPointerUp(event)\n    }\n\n    if (button === 0) {\n\n      this.isDragging = false\n    }\n\n    return false\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  //\n  //\n  ///////////////////////////////////////////////////////////////////////////\n  handleMouseMove (event) {\n\n    if (this.rotateControl) {\n\n      this.rotateControl.onPointerHover(event)\n    }\n\n    if (this.isDragging) {\n\n      if (this.selection) {\n\n        var offset = {\n          x: this.mousePos.x - event.clientX,\n          y: event.clientY - this.mousePos.y\n        }\n\n        this.mousePos = {\n          x: event.clientX,\n          y: event.clientY\n        }\n\n        var angle = Math.sqrt(\n          offset.x * offset.x +\n          offset.y * offset.y)\n\n        var sidewaysDirection = new THREE.Vector3()\n        var moveDirection = new THREE.Vector3()\n        var eyeDirection = new THREE.Vector3()\n        var upDirection = new THREE.Vector3()\n        var camera = this.viewer.getCamera()\n        var axis = new THREE.Vector3()\n        var eye = new THREE.Vector3()\n\n        eye.copy(camera.position).sub(camera.target)\n\n        eyeDirection.copy(eye).normalize()\n\n        upDirection.copy(camera.up).normalize()\n\n        sidewaysDirection.crossVectors(\n          upDirection, eyeDirection).normalize()\n\n        upDirection.setLength(offset.y)\n\n        sidewaysDirection.setLength(offset.x)\n\n        moveDirection.copy(\n          upDirection.add(\n            sidewaysDirection))\n\n        axis.crossVectors(moveDirection, eye).normalize()\n\n        this.rotateFragments(\n          this.selection.model,\n          this.selection.fragIdsArray,\n          axis, angle * Math.PI / 180,\n          this.center)\n\n        this.viewer.impl.sceneUpdated(true)\n      }\n\n      return true\n    }\n\n    return false\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  //\n  //\n  ///////////////////////////////////////////////////////////////////////////\n  handleKeyDown (event, keyCode) {\n\n    this.keys[event.key] = true\n\n    if (keyCode === 27) { //ESC\n\n      this.deactivate()\n    }\n\n    return false\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  //\n  //\n  ///////////////////////////////////////////////////////////////////////////\n  handleKeyUp (event, keyCode) {\n\n    this.keys[event.key] = false\n\n    return false\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  // Rotate selected fragments\n  //\n  ///////////////////////////////////////////////////////////////////////////\n    rotateFragments (model, fragIdsArray, axis, angle, center) {\n\n      var quaternion = new THREE.Quaternion()\n\n      quaternion.setFromAxisAngle(axis, angle)\n\n      fragIdsArray.forEach((fragId, idx) => {\n\n        var fragProxy = this.viewer.impl.getFragmentProxy(\n          model, fragId)\n\n        fragProxy.getAnimTransform()\n\n        var position = new THREE.Vector3(\n          fragProxy.position.x - center.x,\n          fragProxy.position.y - center.y,\n          fragProxy.position.z - center.z)\n\n        position.applyQuaternion(quaternion)\n\n        position.add(center)\n\n        fragProxy.position = position\n\n        fragProxy.quaternion.multiplyQuaternions(\n          quaternion, fragProxy.quaternion)\n\n        if (idx === 0) {\n\n          var euler = new THREE.Euler()\n\n          euler.setFromQuaternion(\n            fragProxy.quaternion, 0)\n\n          this.emit('rotate', {\n            dbIds: this.selection.dbIdArray,\n            fragIds: fragIdsArray,\n            rotation: euler,\n            model\n          })\n        }\n\n        fragProxy.updateAnimTransform()\n      })\n    }\n\n  ///////////////////////////////////////////////////////////////////////////\n  // returns bounding box as it appears in the viewer\n  // (transformations could be applied)\n  //\n  ///////////////////////////////////////////////////////////////////////////\n  getWorldBoundingBox (fragIds, fragList) {\n\n    var fragbBox = new THREE.Box3()\n    var nodebBox = new THREE.Box3()\n\n    fragIds.forEach((fragId) => {\n\n      fragList.getWorldBounds(fragId, fragbBox)\n      nodebBox.union(fragbBox)\n    })\n\n    return nodebBox\n  }\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// RotateControl Class\n//\n///////////////////////////////////////////////////////////////////////////////\nclass RotateControl extends EventsEmitter {\n\n  constructor (viewer, center, size) {\n\n    super()\n\n    this.engaged = false\n\n    this.overlayScene = 'rotateControlScene'\n    this.domElement = viewer.impl.canvas\n    this.camera = viewer.impl.camera\n    this.viewer = viewer\n    this.center = center\n    this.size = size\n    this.gizmos = []\n\n    this.viewer.impl.createOverlayScene(\n      this.overlayScene)\n\n    this.createAxis(\n      center, new THREE.Vector3(1, 0, 0),\n      size * 0.85, 0xFF0000)\n\n    this.createAxis(\n      center, new THREE.Vector3(0, 1, 0),\n      size * 0.85, 0x00FF00)\n\n    this.createAxis(\n      center, new THREE.Vector3(0, 0, 1),\n      size * 0.85, 0x0000FF)\n\n    // World UP = Y\n\n    if (this.camera.worldup.y) {\n\n      this.gizmos.push(this.createGizmo(\n        center,\n        new THREE.Euler(0, Math.PI / 2, 0),\n        size * 0.0045,\n        size * 0.8, 0xFF0000,\n        Math.PI,\n        new THREE.Vector3(1, 0, 0)))\n\n      this.gizmos.push(this.createGizmo(\n        center,\n        new THREE.Euler(Math.PI / 2, 0, 0),\n        size * 0.0045,\n        size * 0.8, 0x00FF00,\n        2 * Math.PI,\n        new THREE.Vector3(0, 1, 0)))\n\n      this.gizmos.push(this.createGizmo(\n        center,\n        new THREE.Euler(0, 0, 0),\n        size * 0.0045,\n        size * 0.8, 0x0000FF,\n        Math.PI,\n        new THREE.Vector3(0, 0, 1)))\n\n    } else {\n\n      // World UP = Z\n\n      this.gizmos.push(this.createGizmo(\n        center,\n        new THREE.Euler(Math.PI / 2, Math.PI / 2, 0),\n        size * 0.0045,\n        size * 0.8, 0xFF0000,\n        Math.PI,\n        new THREE.Vector3(1, 0, 0)))\n\n      this.gizmos.push(this.createGizmo(\n        center,\n        new THREE.Euler(Math.PI / 2, 0, 0),\n        size * 0.0045,\n        size * 0.8, 0x00FF00,\n        Math.PI,\n        new THREE.Vector3(0, 1, 0)))\n\n      this.gizmos.push(this.createGizmo(\n        center,\n        new THREE.Euler(0, 0, 0),\n        size * 0.0045,\n        size * 0.8, 0x0000FF,\n        2 * Math.PI,\n        new THREE.Vector3(0, 0, 1)))\n    }\n\n    this.picker = this.createSphere(\n      size * 0.02)\n\n    var material = new THREE.LineBasicMaterial({\n      color: 0xFFFF00,\n      linewidth: 1,\n      depthTest: false,\n      depthWrite: false,\n      transparent: true\n    })\n\n    this.angleLine =\n      this.createLine(\n        this.center,\n        this.center,\n        material)\n\n    viewer.impl.sceneUpdated(true)\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  // Draw a line\n  //\n  ///////////////////////////////////////////////////////////////////////////\n  createLine (start, end, material) {\n\n    var geometry = new THREE.Geometry()\n\n    geometry.vertices.push(new THREE.Vector3(\n      start.x, start.y, start.z))\n\n    geometry.vertices.push(new THREE.Vector3(\n      end.x, end.y, end.z))\n\n    var line = new THREE.Line(geometry, material)\n\n    this.viewer.impl.addOverlay(\n      this.overlayScene, line)\n\n    return line\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  // Draw a cone\n  //\n  ///////////////////////////////////////////////////////////////////////////\n  createCone (start, dir, length, material) {\n\n    dir.normalize()\n\n    var end = {\n      x: start.x + dir.x * length,\n      y: start.y + dir.y * length,\n      z: start.z + dir.z * length\n    }\n\n    var orientation = new THREE.Matrix4()\n\n    orientation.lookAt(\n      start,\n      end,\n      new THREE.Object3D().up)\n\n    var matrix = new THREE.Matrix4()\n\n    matrix.set(\n      1, 0, 0, 0,\n      0, 0, 1, 0,\n      0, -1, 0, 0,\n      0, 0, 0, 1)\n\n    orientation.multiply(matrix)\n\n    var geometry = new THREE.CylinderGeometry(\n      0, length * 0.2, length, 128, 1)\n\n    var cone = new THREE.Mesh(geometry, material)\n\n    cone.applyMatrix(orientation)\n\n    cone.position.x = start.x + dir.x * length / 2\n    cone.position.y = start.y + dir.y * length / 2\n    cone.position.z = start.z + dir.z * length / 2\n\n    this.viewer.impl.addOverlay(\n      this.overlayScene, cone)\n\n    return cone\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  // Draw one axis\n  //\n  ///////////////////////////////////////////////////////////////////////////\n  createAxis (start, dir, size, color) {\n\n    var end = {\n      x: start.x + dir.x * size,\n      y: start.y + dir.y * size,\n      z: start.z + dir.z * size\n    }\n\n    var material = new THREE.LineBasicMaterial({\n      color: color,\n      linewidth: 3,\n      depthTest: false,\n      depthWrite: false,\n      transparent: true\n    })\n\n    this.createLine(\n      start, end, material)\n\n    this.createCone(\n      end, dir, size * 0.1, material)\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  // Draw a rotate gizmo\n  //\n  ///////////////////////////////////////////////////////////////////////////\n  createGizmo (center, euler, size, radius, color, range, axis) {\n\n    var material = new GizmoMaterial({\n      color: color\n    })\n\n    var subMaterial = new GizmoMaterial({\n      color: color\n    })\n\n    var torusGizmo = new THREE.Mesh(\n      new THREE.TorusGeometry(\n        radius, size, 64, 64, range),\n      material)\n\n    var subTorus = new THREE.Mesh(\n      new THREE.TorusGeometry(\n        radius, size, 64, 64, 2 * Math.PI),\n      subMaterial)\n\n    subTorus.material.highlight(true)\n\n    var transform = new THREE.Matrix4()\n\n    var q = new THREE.Quaternion()\n\n    q.setFromEuler(euler)\n\n    var s = new THREE.Vector3(1, 1, 1)\n\n    transform.compose(center, q, s)\n\n    torusGizmo.applyMatrix(transform)\n\n    subTorus.applyMatrix(transform)\n\n    var plane = this.createBox(\n      this.size * 100,\n      this.size * 100,\n      0.01)\n\n    plane.applyMatrix(transform)\n\n    subTorus.visible = false\n\n    this.viewer.impl.addOverlay(\n      this.overlayScene, torusGizmo)\n\n    this.viewer.impl.addOverlay(\n      this.overlayScene, subTorus)\n\n    torusGizmo.subGizmo = subTorus\n    torusGizmo.plane = plane\n    torusGizmo.axis = axis\n\n    return torusGizmo\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  // Draw a box\n  //\n  ///////////////////////////////////////////////////////////////////////////\n  createBox (w, h, d) {\n\n    var material = new GizmoMaterial({\n      color: 0x000000\n    })\n\n    var geometry = new THREE.BoxGeometry(w, h, d)\n\n    var box = new THREE.Mesh(\n      geometry, material)\n\n    box.visible = false\n\n    this.viewer.impl.addOverlay(\n      this.overlayScene, box)\n\n    return box\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  // Draw a sphere\n  //\n  ///////////////////////////////////////////////////////////////////////////\n  createSphere (radius) {\n\n    var material = new GizmoMaterial({\n      color: 0xFFFF00\n    })\n\n    var geometry = new THREE.SphereGeometry(\n      radius, 32, 32)\n\n    var sphere = new THREE.Mesh(\n      geometry, material)\n\n    sphere.visible = false\n\n    this.viewer.impl.addOverlay(\n      this.overlayScene, sphere)\n\n    return sphere\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  // Creates Raycatser object from the pointer\n  //\n  ///////////////////////////////////////////////////////////////////////////\n  pointerToRaycaster (pointer) {\n\n    var pointerVector = new THREE.Vector3()\n    var pointerDir = new THREE.Vector3()\n    var ray = new THREE.Raycaster()\n\n    var rect = this.domElement.getBoundingClientRect()\n\n    var x = ((pointer.clientX - rect.left) / rect.width) * 2 - 1\n    var y = -((pointer.clientY - rect.top) / rect.height) * 2 + 1\n\n    if (this.camera.isPerspective) {\n\n      pointerVector.set(x, y, 0.5)\n\n      pointerVector.unproject(this.camera)\n\n      ray.set(this.camera.position,\n        pointerVector.sub(\n          this.camera.position).normalize())\n\n    } else {\n\n      pointerVector.set(x, y, -1)\n\n      pointerVector.unproject(this.camera)\n\n      pointerDir.set(0, 0, -1)\n\n      ray.set(pointerVector,\n        pointerDir.transformDirection(\n          this.camera.matrixWorld))\n    }\n\n    return ray\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  //\n  //\n  ///////////////////////////////////////////////////////////////////////////\n  onPointerDown (event) {\n\n    var pointer = event.pointers ? event.pointers[ 0 ] : event\n\n    if (pointer.button === 0) {\n\n      var ray = this.pointerToRaycaster(pointer)\n\n      var intersectResults = ray.intersectObjects(\n        this.gizmos, true)\n\n      if (intersectResults.length) {\n\n        this.gizmos.forEach((gizmo) => {\n\n          gizmo.visible = false\n        })\n\n        this.selectedGizmo = intersectResults[0].object\n\n        this.selectedGizmo.subGizmo.visible = true\n\n        this.picker.position.copy(\n          intersectResults[0].point)\n\n        this.angleLine.geometry.vertices[1].copy(\n          intersectResults[0].point)\n\n        this.lastDir = intersectResults[0].point.sub(\n          this.center).normalize()\n\n        this.angleLine.geometry.verticesNeedUpdate = true\n\n        this.angleLine.visible = true\n\n        this.picker.visible = true\n\n      } else {\n\n        this.picker.visible = false\n      }\n\n      this.engaged = this.picker.visible\n\n      this.viewer.impl.sceneUpdated(true)\n    }\n\n    return this.picker.visible\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  //\n  //\n  ///////////////////////////////////////////////////////////////////////////\n  onPointerHover (event) {\n\n    var pointer = event.pointers ? event.pointers[ 0 ] : event\n\n    if (this.engaged) {\n\n      var ray = this.pointerToRaycaster(pointer)\n\n      var intersectResults = ray.intersectObjects(\n        [this.selectedGizmo.plane], true)\n\n      if (intersectResults.length) {\n\n        var intersectPoint = intersectResults[0].point\n\n        var dir = intersectPoint.sub(\n          this.center).normalize()\n\n        var cross = new THREE.Vector3()\n\n        cross.crossVectors(this.lastDir, dir)\n\n        var sign = Math.sign(\n          cross.dot(this.selectedGizmo.axis))\n\n        this.emit('rotate', {\n          angle: sign * dir.angleTo(this.lastDir),\n          axis: this.selectedGizmo.axis\n        })\n\n        this.lastDir = dir\n\n        var pickerPoint = new THREE.Vector3(\n          this.center.x + dir.x * this.size * 0.8,\n          this.center.y + dir.y * this.size * 0.8,\n          this.center.z + dir.z * this.size * 0.8)\n\n        this.picker.position.copy(\n          pickerPoint)\n\n        this.angleLine.geometry.vertices[1].copy(\n          pickerPoint)\n      }\n\n      this.angleLine.visible = true\n\n      this.angleLine.geometry.verticesNeedUpdate = true\n\n    } else {\n\n      this.angleLine.visible = false\n\n      var ray = this.pointerToRaycaster(pointer)\n\n      var intersectResults = ray.intersectObjects(\n        this.gizmos, true)\n\n      if (intersectResults.length) {\n\n        this.picker.position.set(\n          intersectResults[ 0 ].point.x,\n          intersectResults[ 0 ].point.y,\n          intersectResults[ 0 ].point.z)\n\n        this.picker.visible = true\n\n      } else {\n\n        this.picker.visible = false\n      }\n    }\n\n    this.viewer.impl.sceneUpdated(true)\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  //\n  //\n  ///////////////////////////////////////////////////////////////////////////\n  onPointerUp (event) {\n\n    this.angleLine.visible = false\n\n    this.picker.visible = false\n\n    this.gizmos.forEach((gizmo) => {\n\n      gizmo.visible = true\n      gizmo.subGizmo.visible = false\n    })\n\n    this.viewer.impl.sceneUpdated(true)\n\n    setTimeout(() => {\n      this.engaged = false\n    }, 100)\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  //\n  //\n  ///////////////////////////////////////////////////////////////////////////\n  normalize(screenPoint) {\n\n    var viewport = this.viewer.navigation.getScreenViewport()\n\n    var n = {\n      x: (screenPoint.x - viewport.left) / viewport.width,\n      y: (screenPoint.y - viewport.top) / viewport.height\n    }\n\n    return n\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  //\n  //\n  ///////////////////////////////////////////////////////////////////////////\n  projectOntoPlane (worldPoint, normal) {\n\n    var dist = normal.dot(worldPoint)\n\n    return new THREE.Vector3(\n      worldPoint.x - dist * normal.x,\n      worldPoint.y - dist * normal.y,\n      worldPoint.z - dist * normal.z)\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  //\n  //\n  ///////////////////////////////////////////////////////////////////////////\n  remove () {\n\n    this.viewer.impl.removeOverlayScene(\n      this.overlayScene)\n  }\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// Highlightable Gizmo Material\n//\n///////////////////////////////////////////////////////////////////////////////\nclass GizmoMaterial extends THREE.MeshBasicMaterial {\n\n  constructor (parameters) {\n\n    super()\n\n    this.setValues(parameters)\n\n    this.colorInit = this.color.clone()\n    this.opacityInit = this.opacity\n    this.side = THREE.FrontSide\n    this.depthWrite = false\n    this.transparent = true\n    this.depthTest = false\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  //\n  //\n  ///////////////////////////////////////////////////////////////////////////\n  highlight (highlighted) {\n\n    if (highlighted) {\n\n      this.color.setRGB(1, 230 / 255, 3 / 255)\n      this.opacity = 1\n\n    } else {\n\n      this.color.copy(this.colorInit)\n      this.opacity = this.opacityInit\n    }\n  }\n}\n","import ViewerExtensionBase from './Viewer.ExtensionBase'\n\nexport default ViewerExtensionBase\n","import EventsEmitter from 'EventsEmitter'\n\nexport default class ExtensionBase extends\n  EventsEmitter.Composer (Autodesk.Viewing.Extension) {\n\n  /////////////////////////////////////////////////////////\n  // Class constructor\n  //\n  /////////////////////////////////////////////////////////\n  constructor (viewer, options = {}) {\n\n    super(viewer, options)\n\n    this._viewer = viewer\n    this.viewer = viewer\n\n    this._options = options\n    this.options = options\n    Object.assign(this, options.serviceContext)\n  }\n\n  /////////////////////////////////////////////////////////\n  // Extension Id\n  //\n  /////////////////////////////////////////////////////////\n  static get ExtensionId() {\n\n    return 'Viewing.Extension.Base'\n  }\n\n  ///////////////////////////////////////////////////////////\n  //\n  //\n  ///////////////////////////////////////////////////////////\n  static guid(format = 'xxxxxxxxxx') {\n\n    var d = new Date().getTime()\n\n    var guid = format.replace(\n      /[xy]/g,\n      function (c) {\n        var r = (d + Math.random() * 16) % 16 | 0\n        d = Math.floor(d / 16)\n        return (c == 'x' ? r : (r & 0x7 | 0x8)).toString(16)\n      })\n\n    return guid\n  }\n\n  /////////////////////////////////////////////////////////\n  // Load callback\n  //\n  /////////////////////////////////////////////////////////\n  load() {\n\n    return true\n  }\n\n  /////////////////////////////////////////////////////////\n  // Unload callback\n  //\n  /////////////////////////////////////////////////////////\n  unload() {\n\n    return true\n  }\n\n  /////////////////////////////////////////////////////////\n  // Reload callback\n  //\n  /////////////////////////////////////////////////////////\n  reload (options) {\n\n    return true\n  }\n\n  /////////////////////////////////////////////////////////\n  // Async viewer event\n  //\n  /////////////////////////////////////////////////////////\n  viewerEvent (eventId) {\n\n    const eventIdArray = Array.isArray(eventId)\n      ? eventId : [eventId]\n\n    const eventTasks = eventIdArray.map((id) => {\n      return new Promise ((resolve) => {\n        const handler = (args) => {\n          this.viewer.removeEventListener (\n            id, handler)\n          resolve (args)\n        }\n        this.viewer.addEventListener (\n          id, handler)\n      })\n    })\n\n    return Promise.all(eventTasks)\n  }\n}\n"],"sourceRoot":""}