{"version":3,"sources":["webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.WebHooks/Systems.js","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.WebHooks/CreateView/CreateView.scss?0571","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.WebHooks/CreateView/CreateView.scss","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.WebHooks/CreateView/CreateView.js","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.WebHooks/CreateView/index.js"],"names":["Systems","name","id","events","desc","content","__webpack_require__","module","i","locals","exports","push","CreateView","props","_this","classCallCheck_default","this","possibleConstructorReturn_default","getPrototypeOf_default","call","onSelect","bind","assertThisInitialized_default","onEdit","state","event","system","scope","folder","updated_src","_ref","assignState","_this2","_this$state","systemItems","map","react_default","a","createElement","MenuItem","eventKey","key","onClick","eventItems","className","DropdownButton","title","concat","onCreateHook","main_default","enableClipboard","onDelete","onAdd","src","BaseComponent"],"mappings":"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","file":"102.js","sourcesContent":["const Systems = [\n  {\n    name: 'Data Management',\n    id: 'data',\n    events: [\n      // {\n      //   desc: 'All Data Management events.',\n      //   name: 'Full System Events',\n      //   id: null\n      // },\n      {\n        desc: 'When a new version of an item (file) is added to a project or folder.',\n        name: 'File Version Added',\n        id: 'dm.version.added'\n      },\n      {\n        desc: 'When a version of an item is modified.',\n        name: 'File Version Modified',\n        id: 'dm.version.modified'\n      },\n      {\n        desc: 'When a version of an item is deleted from a project or folder.',\n        name: 'File Version Deleted',\n        id: 'dm.version.deleted'\n      },\n      {\n        desc: 'When a version of an item is moved from a project or folder to another project or folder.',\n        name: 'File Version Moved',\n        id: 'dm.version.moved'\n      },\n      {\n        desc: 'When a version of an item is copied to a folder or project.',\n        name: 'File Version Copied',\n        id: 'dm.version.copied\t'\n      },\n      {\n        desc: 'When a new folder is added to a project or folder.',\n        name: 'Folder Added',\n        id: 'dm.folder.added\t'\n      },\n      {\n        desc: 'When a folder is modified.',\n        name: 'Folder Modified',\n        id: 'dm.folder.modified'\n      },\n      {\n        desc: 'When a folder is deleted.',\n        name: 'Folder Deleted',\n        id: 'dm.folder.deleted'\n      },\n      {\n        desc: 'When a folder is moved to another project or folder.',\n        name: 'Folder Moved',\n        id: 'dm.folder.moved'\n      },\n      {\n        desc: 'When a folder is copied to another project or folder.',\n        name: 'Folder Copied',\n        id: 'dm.folder.copied'\n      }\n    ]\n  }\n]\n\nexport default Systems\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../../../../node_modules/sass-loader/lib/loader.js!./CreateView.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../../../../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../../../../node_modules/sass-loader/lib/loader.js!./CreateView.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../../../../node_modules/sass-loader/lib/loader.js!./CreateView.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".web-hooks .create {\\n  background: #fafafa;\\n  position: relative;\\n  overflow-y: scroll;\\n  overflow-x: hidden;\\n  text-align: left;\\n  padding: 10px;\\n  height: 100%;\\n  width: 100%; }\\n  .web-hooks .create .controls {\\n    width: 290px;\\n    float: left; }\\n    .web-hooks .create .controls hr {\\n      margin: 10px 0; }\\n    .web-hooks .create .controls .dropdown button {\\n      border-radius: 0;\\n      width: 290px; }\\n    .web-hooks .create .controls .create-btn {\\n      background: #fdfdfd;\\n      border-radius: 0px;\\n      outline: none;\\n      width: 290px;\\n      height: 34px; }\\n  .web-hooks .create .scope {\\n    border: 1px solid #e9e9e9;\\n    width: calc(100% - 298px);\\n    margin: 0 0 0 8px;\\n    height: 100%;\\n    float: left; }\\n\", \"\"]);\n","import { DropdownButton, MenuItem } from 'react-bootstrap'\nimport BaseComponent from 'BaseComponent'\nimport ReactJson from 'react-json-view'\nimport { ReactLoader } from 'Loader'\nimport Systems from '../Systems'\nimport React from 'react'\n\nexport default class CreateView extends BaseComponent {\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  constructor (props) {\n    super(props)\n\n    this.onSelect = this.onSelect.bind(this)\n    this.onEdit = this.onEdit.bind(this)\n\n    this.state = {\n      event: Systems[0].events[0],\n      system: Systems[0],\n      scope: {\n        folder: 'DM folderId ...'\n      }\n    }\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  onSelect () {\n\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  onEdit ({ updated_src }) {\n    this.assignState({\n      scope: updated_src\n    })\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  render () {\n    const { system, event, scope } = this.state\n\n    const systemItems = Systems.map((system) => {\n      return (\n        <MenuItem\n          eventKey={system.id} key={system.id}\n          onClick={() => {\n            this.assignState({\n              system\n            })\n          }}\n        >\n          {system.name}\n        </MenuItem>\n      )\n    })\n\n    const eventItems = system.events.map((event) => {\n      return (\n        <MenuItem\n          eventKey={event.id} key={event.id}\n          onClick={() => {\n            this.assignState({\n              event\n            })\n          }}\n        >\n          {event.name}\n        </MenuItem>\n      )\n    })\n\n    return (\n      <div className='create'>\n        <div className='controls'>\n          <DropdownButton\n            title={`Select system: ${system ? system.name : ''}`}\n            key='dropdown-systems'\n            id='dropdown-systems'\n          >\n            {systemItems}\n          </DropdownButton>\n          <hr />\n          <DropdownButton\n            title={`Select event: ${event ? event.name : ''}`}\n            key='dropdown-events'\n            id='dropdown-events'\n          >\n            {eventItems}\n          </DropdownButton>\n          <hr />\n          <button\n            onClick={() => this.props.onCreateHook(system, event, scope)}\n            className='create-btn'\n          >\n            Create Hook\n          </button>\n        </div>\n        <div className='scope'>\n          <ReactJson\n            onSelect={this.onSelect}\n            enableClipboard={false}\n            onDelete={this.onEdit}\n            onEdit={this.onEdit}\n            onAdd={this.onEdit}\n            src={scope}\n            name={false}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n","import CreateView from './CreateView'\nimport './CreateView.scss'\n\nexport default CreateView\n"],"sourceRoot":""}