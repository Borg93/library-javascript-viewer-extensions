{"version":3,"sources":["webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.Particle/ParticleSystem/Vector.js","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.Particle/ParticleSystem/BaseObject.js","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.Particle/ParticleSystem/ParticleEmitter.js","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.Particle/ParticleSystem/MagneticField.js","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.Particle/ParticleSystem/Field.js","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.Particle/ParticleSystem/EventsEmitter.js","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.Particle/ParticleSystem/Particle.js","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.Particle/ParticleSystem/ParticleSystem.js","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.Particle/ParticleSystem/index.js"],"names":["Vector","x","arguments","length","undefined","y","z","classCallCheck_default","this","_x","_y","_z","Math","sqrt","m","magnitude","scaleFactor","vector","center","radius","size","data","BaseObject","id","type","_offset","_position","_selectable","_transformable","_type","_id","transformable","selectable","ParticleEmitter","_this","possibleConstructorReturn_default","getPrototypeOf_default","call","_spread","PI","_emissionRate","_velocity","_charge","dt","floor","particle","angle1","random","angle2","cos","sin","emissionRate","velocity","spread","charge","MagneticField","_force","particlePos","fieldPos","dX","dY","dZ","force","pow","abs","particleAcc","_acceleration","Field","EventsEmitter","_events","event","fct","push","splice","indexOf","tmpArray","slice","i","result","apply","Array","prototype","format","d","Date","getTime","guid","replace","c","r","toString","Particle","dof","_recycled","_radius","_dof","_lifeTime","ptr","fields","forEach","field","applyForce","lifeTime","ParticleSystem","maxParticles","_maxParticles","_emittedParticles","_particleIdx","_recycleBin","_particles","_emitters","_fields","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","emitter","value","getId","err","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","addNewParticles","filterParticles","_this2","emitNumber","popRecycle","emitParticle","pop","reset","pushRecycle","_this3","filterParticle","submitToFields","step","__webpack_exports__","Instance"],"mappings":"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","file":"112.js","sourcesContent":["\nexport default class Vector {\n\n  constructor (x = 0, y = 0, z = 0) {\n    this._x = x\n    this._y = y\n    this._z = z\n  }\n\n  getX () { return this._x }\n  getY () { return this._y }\n  getZ () { return this._z }\n\n  magnitude () {\n\n    return Math.sqrt(\n      this._x * this._x +\n      this._y * this._y +\n      this._z * this._z)\n  }\n\n  asUnitVector () {\n\n    var m = this.magnitude()\n\n    return new Vector(\n      this._x / m,\n      this._y / m,\n      this._z / m)\n  }\n\n  scaled (scaleFactor) {\n\n    var m = this.magnitude()\n\n    return new Vector(\n      this._x * scaleFactor / m,\n      this._y * scaleFactor / m,\n      this._z * scaleFactor / m)\n  }\n\n  multiply (scaleFactor) {\n\n    this._x *= scaleFactor\n    this._y *= scaleFactor\n    this._z *= scaleFactor\n\n    return this\n  }\n\n  add (vector) {\n\n    this._x += vector._x\n    this._y += vector._y\n    this._z += vector._z\n\n    return this\n  }\n\n  vectorTo (vector) {\n\n    return new Vector(\n      vector._x - this._x,\n      vector._y - this._y,\n      vector._z - this._z\n    )\n  }\n\n  withinSphere (center, radius) {\n\n    var magnitudeSqr =\n      (this._x - center._x) * (this._x - center._x) +\n      (this._y - center._y) * (this._y - center._y) +\n      (this._z - center._z) * (this._z - center._z)\n\n    return magnitudeSqr < radius * radius\n  }\n\n  withinBox (center, size) {\n\n    //TODO\n\n    return true\n  }\n\n  copy () {\n\n    return new Vector(this._x, this._y, this._z)\n  }\n\n  static fromArray (data) {\n\n    return new Vector(data[0], data[1], data[2])\n  }\n}\n","import Vector from './Vector'\n\nexport default class BaseObject {\n\n  constructor (id, type) {\n    \n    this._offset        = new Vector()\n    this._position      = new Vector()\n    this._selectable    = true\n    this._transformable = true\n    this._type          = type\n    this._id            = id\n  }\n\n  setPosition (x, y, z) {\n\n    this._position = new Vector(\n      x + this._offset._x,\n      y + this._offset._y,\n      z + this._offset._z)\n  }\n\n  getPosition () {\n\n    return this._position\n  }\n\n  setOffset (x, y, z) {\n\n    this._offset = new Vector(x, y, z)\n  }\n\n  getOffset () {\n\n    return this._offset\n  }\n\n  setTransformable (transformable) {\n\n    this._transformable = transformable\n  }\n\n  getTransformable () {\n\n    return this._transformable\n  }\n\n  setSelectable (selectable) {\n\n    this._selectable = selectable\n  }\n\n  getSelectable () {\n\n    return this._selectable\n  }\n\n  getType() {\n\n    return this._type\n  }\n\n  getId() {\n\n    return this._id\n  }\n}\n","import BaseObject from './BaseObject'\nimport Vector from './Vector'\n\nexport default class ParticleEmitter extends BaseObject {\n\n  constructor (id) {\n\n    super(id, 0)\n\n    this._spread       = 2 * Math.PI / 180\n    this._emissionRate = 500\n    this._velocity     = 10\n    this._charge       = 1\n  }\n\n  emitNumber (dt) {\n\n    return Math.floor(this._emissionRate * dt)\n  }\n\n  emitParticle (particle) {\n\n    var angle1 = this._spread * (2 * Math.random() - 1)\n    var angle2 = this._spread * (2 * Math.random() - 1)\n\n    particle._velocity._x = this._velocity *\n      Math.cos(angle1) * Math.cos(angle2)\n\n    particle._velocity._y = this._velocity *\n      Math.sin(angle1) * Math.cos(angle2)\n\n    particle._velocity._z = this._velocity *\n      Math.sin(angle2)\n\n    particle._position._x = this._position._x\n    particle._position._y = this._position._y\n    particle._position._z = this._position._z\n\n    particle._charge = this._charge\n  }\n\n  setEmissionRate (emissionRate) {\n\n    this._emissionRate = emissionRate\n  }\n\n  getEmissionRate () {\n\n    return this._emissionRate\n  }\n\n  setVelocity (velocity) {\n\n    this._velocity = velocity\n  }\n\n  getVelocity () {\n\n    return this._velocity\n  }\n\n  setSpread (spread) {\n\n    this._spread = spread\n  }\n\n  getSpread () {\n\n    return this._spread\n  }\n\n  setCharge (charge) {\n\n    this._charge = charge\n  }\n\n  getCharge () {\n\n    return this._charge\n  }\n}\n","\nimport Field from './Field'\n\nexport default class MagneticField extends Field {\n\n  constructor (id) {\n\n    super(id, 1)\n\n    this._force = 0\n  }\n\n  applyForce (particle) {\n\n    let particlePos = particle._position\n\n    let fieldPos = this._position\n\n    let dX = fieldPos._x - particlePos._x\n    let dY = fieldPos._y - particlePos._y\n    let dZ = fieldPos._z - particlePos._z\n\n    let force = particle._charge * this._force / Math.pow((\n      dX * dX +\n      dY * dY +\n      dZ * dZ), 1.5)\n\n    if (Math.abs(force) > 0.001) {\n\n      let particleAcc = particle._acceleration\n\n      particleAcc._x += dX * force\n      particleAcc._y += dY * force\n      particleAcc._z += dZ * force\n    }\n  }\n\n  setForce (force) {\n\n    this._force = force\n  }\n\n  getForce () {\n\n    return this._force\n  }\n}","import BaseObject from './BaseObject'\nimport Vector from './Vector'\n\nexport default class Field extends BaseObject {\n\n  constructor (id, type) {\n\n    super(id, type)\n  }\n\n  computeAcceleration (particle) {\n\n    return new Vector()\n  }\n}\n\n","\nexport default class EventsEmitter {\n\n  ///////////////////////////////////////////////////////////////////\n  //\n  //\n  ///////////////////////////////////////////////////////////////////\n  constructor() {\n\n    this._events = {};\n  }\n\n  ///////////////////////////////////////////////////////////////////\n  //\n  //\n  ///////////////////////////////////////////////////////////////////\n  on(event, fct) {\n\n    this._events[event] = this._events[event]\t|| [];\n    this._events[event].push(fct);\n\n    return this;\n  }\n\n  ///////////////////////////////////////////////////////////////////\n  //\n  //\n  ///////////////////////////////////////////////////////////////////\n  off(event, fct) {\n\n    if(event == undefined){\n      this._events = {};\n      return;\n    }\n\n    if(event in this._events === false)\n      return;\n\n    if(fct){\n      this._events[event].splice(\n        this._events[event].indexOf(fct), 1);\n    }\n    else {\n      this._events[event] = [];\n    }\n\n    return this;\n  }\n\n  ///////////////////////////////////////////////////////////////////\n  //\n  //\n  ///////////////////////////////////////////////////////////////////\n  emit(event /* , args... */) {\n\n    if(this._events[event] === undefined)\n      return;\n\n    var tmpArray = this._events[event].slice();\n\n    for(var i = 0; i < tmpArray.length; ++i) {\n\n      var result\t= tmpArray[i].apply(this,\n        Array.prototype.slice.call(arguments, 1));\n\n      if(result !== undefined )\n        return result;\n    }\n\n    return undefined;\n  }\n\n  ///////////////////////////////////////////////////////////////////\n  //\n  //\n  ///////////////////////////////////////////////////////////////////\n  guid(format='xxxxxxxxxxxx') {\n\n    var d = new Date().getTime();\n\n    var guid = format.replace(\n      /[xy]/g,\n      function (c) {\n        var r = (d + Math.random() * 16) % 16 | 0;\n        d = Math.floor(d / 16);\n        return (c == 'x' ? r : (r & 0x7 | 0x8)).toString(16);\n      });\n\n    return guid;\n  }\n}\n","import Vector from './Vector'\n\nexport default class Particle {\n\n  constructor (dof) {\n\n    this._velocity     = new Vector()\n    this._position     = new Vector()\n    this._acceleration = new Vector()\n    this._recycled     = false\n    this._radius       = 0.03\n    this._dof          = dof\n    this._lifeTime     = 30\n    this._charge       = 1\n    this.ptr           = 1  //compat with wasm\n  }\n\n  reset () {\n    this._recycled = false\n    this._lifeTime = 30\n  }\n\n  submitToFields (fields) {\n\n    this._acceleration._x = 0\n    this._acceleration._y = 0\n    this._acceleration._z = 0\n\n    fields.forEach((field) => {\n\n      field.applyForce(this)\n    })\n  }\n\n  step (dt) {\n\n    this._lifeTime -= dt\n\n    this._velocity._x += this._acceleration._x * dt\n    this._velocity._y += this._acceleration._y * dt\n    this._velocity._z += this._acceleration._z * dt\n\n    this._position._x += this._velocity._x * this._dof._x * dt\n    this._position._y += this._velocity._y * this._dof._y * dt\n    this._position._z += this._velocity._z * this._dof._z * dt\n  }\n\n  getRecycled () {\n\n    return this._recycled\n  }\n\n  getLifeTime () {\n\n    return this._lifeTime\n  }\n\n  setLifeTime (lifeTime) {\n\n    this._lifeTime = lifeTime\n  }\n\n  getAcceleration () {\n\n    return this._acceleration\n  }\n\n  getPosition () {\n\n    return this._position\n  }\n\n  getCharge () {\n\n    return this._charge\n  }\n\n  getRadius () {\n\n    return this._radius\n  }\n}\n\n","import ParticleEmitter from './ParticleEmitter'\nimport MagneticField from './MagneticField'\nimport EventsEmitter from './EventsEmitter'\nimport Particle from './Particle'\nimport Vector from './Vector'\n\nexport default class ParticleSystem extends EventsEmitter {\n\n  ///////////////////////////////////////////////////////////////////\n  //\n  //\n  ///////////////////////////////////////////////////////////////////\n  constructor (maxParticles) {\n\n    super()\n\n    this._maxParticles = maxParticles\n    this._dof = new Vector(1, 1, 1)\n    this._emittedParticles = 0\n    this._particleIdx = 0\n    this._recycleBin = []\n    this._particles = []\n    this._emitters = []\n    this._fields = []\n  }\n\n  ///////////////////////////////////////////////////////////////////\n  //\n  //\n  ///////////////////////////////////////////////////////////////////\n  setMaxParticles (maxParticles) {\n\n    this._maxParticles = maxParticles\n  }\n\n  getMaxParticles () {\n\n    return this._maxParticles\n  }\n\n  ///////////////////////////////////////////////////////////////////\n  // Returns object by id\n  //\n  ///////////////////////////////////////////////////////////////////\n  getObjectById (id) {\n\n    for (var emitter of this._emitters) {\n      if (emitter.getId() === id) {\n        return emitter\n      }\n    }\n\n    for (var field of this._fields) {\n      if (field.getId() === id) {\n        return field\n      }\n    }\n\n    return null\n  }\n\n  ///////////////////////////////////////////////////////////////////\n  // Returns emitter by id\n  //\n  ///////////////////////////////////////////////////////////////////\n  getEmitter (id) {\n\n    for (var emitter of this._emitters) {\n      if (emitter.getId() === id) {\n        return emitter\n      }\n    }\n\n    return null\n  }\n\n  ///////////////////////////////////////////////////////////////////\n  // Returns magnetic field by id\n  //\n  ///////////////////////////////////////////////////////////////////\n  getMagneticField (id) {\n\n    for (var field of this._fields) {\n      if (field.getId() === id) {\n        return field\n      }\n    }\n\n    return null\n  }\n\n  ///////////////////////////////////////////////////////////////////\n  //\n  //\n  ///////////////////////////////////////////////////////////////////\n  setDof (x, y, z) {\n\n    this._dof = new Vector(x, y, z)\n  }\n\n  ///////////////////////////////////////////////////////////////////\n  // clean up all objects\n  //\n  ///////////////////////////////////////////////////////////////////\n  destroy () {\n\n    this._recycleBin = []\n\n    this._particles = []\n  }\n\n  ///////////////////////////////////////////////////////////////////\n  // Adds emitter object\n  //\n  ///////////////////////////////////////////////////////////////////\n  addEmitter (id) {\n\n    var emitter = new ParticleEmitter(id)\n\n    this._emitters.push(emitter)\n\n    return emitter\n  }\n\n  ///////////////////////////////////////////////////////////////////\n  // Adds magnetic field object\n  //\n  ///////////////////////////////////////////////////////////////////\n  addMagneticField (id) {\n\n    var field = new MagneticField(id)\n\n    this._fields.push(field)\n\n    return field\n  }\n\n  ///////////////////////////////////////////////////////////////////\n  // updates simulation\n  //\n  ///////////////////////////////////////////////////////////////////\n  step (dt) {\n\n    this.addNewParticles(dt)\n    this.filterParticles(dt)\n  }\n\n  ///////////////////////////////////////////////////////////////////\n  // add new particles step\n  //\n  ///////////////////////////////////////////////////////////////////\n  addNewParticles (dt) {\n\n    this._emitters.forEach((emitter) => {\n\n      for (var i = 0; i < emitter.emitNumber(dt); ++i) {\n\n        var particle = this.popRecycle()\n\n        if (particle) {\n\n          emitter.emitParticle(particle)\n        }\n      }\n    })\n  }\n\n  ///////////////////////////////////////////////////////////////////\n  // push a particle to recycle bin\n  //\n  ///////////////////////////////////////////////////////////////////\n  pushRecycle (particle) {\n\n    --this._emittedParticles\n\n    particle._recycled = true\n\n    this._recycleBin.push(particle)\n  }\n\n  ///////////////////////////////////////////////////////////////////\n  // pop a particle from recycle bin\n  //\n  ///////////////////////////////////////////////////////////////////\n  popRecycle () {\n\n    if (this._emittedParticles > this._maxParticles - 1) {\n      return null\n    }\n\n    ++this._emittedParticles\n\n    var particle = this._recycleBin.pop()\n\n    if (particle) {\n\n      particle.reset()\n\n      return particle\n    }\n\n    particle = new Particle(this._dof)\n\n    this._particles.push(particle)\n\n    return particle\n  }\n\n  ///////////////////////////////////////////////////////////////////\n  // filter particles using lifeTime\n  //\n  ///////////////////////////////////////////////////////////////////\n  filterParticle (particle) {\n\n    if (particle._recycled) {\n\n      return true\n    }\n\n    if (particle._lifeTime < 0) {\n\n      this.pushRecycle(particle)\n\n      return true\n    }\n\n    return false\n  }\n\n  ///////////////////////////////////////////////////////////////////\n  // filter particles step\n  //\n  ///////////////////////////////////////////////////////////////////\n  filterParticles (dt) {\n\n    this._particles.forEach((particle) => {\n\n      if (!this.filterParticle(particle)) {\n\n        particle.submitToFields(this._fields)\n\n        particle.step(dt)\n      }\n    })\n  }\n\n  ///////////////////////////////////////////////////////////////////\n  // initialize particle index\n  //\n  ///////////////////////////////////////////////////////////////////\n  initParticleLoop () {\n\n    this._particleIdx = 0\n  }\n\n  ///////////////////////////////////////////////////////////////////\n  // initialize particule index\n  //\n  ///////////////////////////////////////////////////////////////////\n  nextParticle () {\n\n    if(this._particleIdx < this._particles.length) {\n\n      return this._particles[this._particleIdx++]\n    }\n\n    return { ptr:0 } //compatibility with asm.js/wasm\n  }\n}\n","import ParticleSystem from './ParticleSystem'\nimport Vector from './Vector'\n\nexport default {\n  Instance: ParticleSystem,\n  Vector\n}\n"],"sourceRoot":""}