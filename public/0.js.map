{"version":3,"sources":["webpack:///./node_modules/dompurify/src/purify.js"],"names":["__WEBPACK_AMD_DEFINE_RESULT__","factory","root","window","undefined","DOMPurify","version","removed","document","nodeType","isSupported","originalDocument","DocumentFragment","HTMLTemplateElement","Node","NodeFilter","NamedNodeMap","MozNamedAttrMap","Text","Comment","DOMParser","useDOMParser","template","createElement","content","ownerDocument","implementation","createNodeIterator","getElementsByTagName","createDocumentFragment","importNode","hooks","createHTMLDocument","documentMode","_addToSet","set","array","l","length","toLowerCase","_cloneObj","object","property","newObject","hasOwnProperty","ALLOWED_TAGS","DEFAULT_ALLOWED_TAGS","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","SAFE_FOR_JQUERY","SAFE_FOR_TEMPLATES","MUSTACHE_EXPR","ERB_EXPR","WHOLE_DOCUMENT","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_DOM_IMPORT","SANITIZE_DOM","KEEP_CONTENT","FORBID_CONTENTS","DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","CONFIG","formElement","_forceRemove","node","push","element","parentNode","removeChild","e","outerHTML","_removeAttribute","name","attribute","getAttributeNode","from","removeAttribute","_initDocument","dirty","doc","body","parseFromString","documentElement","firstElementChild","call","querySelector","_createIterator","SHOW_ELEMENT","SHOW_COMMENT","SHOW_TEXT","FILTER_ACCEPT","_isNode","obj","nodeName","_sanitizeElements","currentNode","tagName","_executeHook","elm","textContent","attributes","setAttribute","_isClobbered","allowedTags","insertAdjacentHTML","innerHTML","test","cloneNode","replace","DATA_ATTR","ARIA_ATTR","IS_ALLOWED_URI","IS_SCRIPT_OR_DATA","ATTR_WHITESPACE","_sanitizeAttributes","attr","value","lcName","idAttr","hookEvent","attrName","attrValue","keepAttr","allowedAttributes","trim","id","Array","prototype","slice","apply","indexOf","pop","_sanitizeShadowDOM","fragment","shadowNode","shadowIterator","nextNode","entryPoint","data","forEach","hook","sanitize","cfg","importedNode","oldNode","nodeIterator","returnNode","toString","TypeError","toStaticHTML","ADD_TAGS","ADD_ATTR","ADD_URI_SAFE_ATTR","Object","freeze","_parseConfig","appendChild","firstChild","addHook","hookFunction","removeHook","removeHooks","removeAllHooks","exports","__webpack_require__","module"],"mappings":"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","file":"0.js","sourcesContent":[";(function(factory) {\n    'use strict';\n    /* global window: false, define: false, module: false */\n    var root = typeof window === 'undefined' ? null : window;\n\n    if (typeof define === 'function' && define.amd) {\n        define(function(){ return factory(root); });\n    } else if (typeof module !== 'undefined') {\n        module.exports = factory(root);\n    } else {\n        root.DOMPurify = factory(root);\n    }\n}(function factory(window) {\n    'use strict';\n\n    var DOMPurify = function(window) {\n        return factory(window);\n    };\n\n    /**\n     * Version label, exposed for easier checks\n     * if DOMPurify is up to date or not\n     */\n    DOMPurify.version = '0.8.9';\n\n    /**\n     * Array of elements that DOMPurify removed during sanitation.\n     * Empty if nothing was removed.\n     */\n    DOMPurify.removed = [];\n\n    if (!window || !window.document || window.document.nodeType !== 9) {\n        // not running in a browser, provide a factory function\n        // so that you can pass your own Window\n        DOMPurify.isSupported = false;\n        return DOMPurify;\n    }\n\n    var document = window.document;\n    var originalDocument = document;\n    var DocumentFragment = window.DocumentFragment;\n    var HTMLTemplateElement = window.HTMLTemplateElement;\n    var Node = window.Node;\n    var NodeFilter = window.NodeFilter;\n    var NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap;\n    var Text = window.Text;\n    var Comment = window.Comment;\n    var DOMParser = window.DOMParser;\n    var useDOMParser = false; // See comment below\n\n    // As per issue #47, the web-components registry is inherited by a\n    // new document created via createHTMLDocument. As per the spec\n    // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n    // a new empty registry is used when creating a template contents owner\n    // document, so we use that as our parent document to ensure nothing\n    // is inherited.\n    if (typeof HTMLTemplateElement === 'function') {\n        var template = document.createElement('template');\n        if (template.content && template.content.ownerDocument) {\n            document = template.content.ownerDocument;\n        }\n    }\n    var implementation = document.implementation;\n    var createNodeIterator = document.createNodeIterator;\n    var getElementsByTagName = document.getElementsByTagName;\n    var createDocumentFragment = document.createDocumentFragment;\n    var importNode = originalDocument.importNode;\n\n    var hooks = {};\n\n    /**\n     * Expose whether this browser supports running the full DOMPurify.\n     */\n    DOMPurify.isSupported =\n        typeof implementation.createHTMLDocument !== 'undefined' &&\n        document.documentMode !== 9;\n\n    /* Add properties to a lookup table */\n    var _addToSet = function(set, array) {\n        var l = array.length;\n        while (l--) {\n            if (typeof array[l] === 'string') {\n                array[l] = array[l].toLowerCase();\n            }\n            set[array[l]] = true;\n        }\n        return set;\n    };\n\n    /* Shallow clone an object */\n    var _cloneObj = function(object) {\n        var newObject = {};\n        var property;\n        for (property in object) {\n            if (object.hasOwnProperty(property)) {\n                newObject[property] = object[property];\n            }\n        }\n        return newObject;\n    };\n\n    /**\n     * We consider the elements and attributes below to be safe. Ideally\n     * don't add any new ones but feel free to remove unwanted ones.\n     */\n\n    /* allowed element names */\n    var ALLOWED_TAGS = null;\n    var DEFAULT_ALLOWED_TAGS = _addToSet({}, [\n\n        // HTML\n        'a','abbr','acronym','address','area','article','aside','audio','b',\n        'bdi','bdo','big','blink','blockquote','body','br','button','canvas',\n        'caption','center','cite','code','col','colgroup','content','data',\n        'datalist','dd','decorator','del','details','dfn','dir','div','dl','dt',\n        'element','em','fieldset','figcaption','figure','font','footer','form',\n        'h1','h2','h3','h4','h5','h6','head','header','hgroup','hr','html','i',\n        'img','input','ins','kbd','label','legend','li','main','map','mark',\n        'marquee','menu','menuitem','meter','nav','nobr','ol','optgroup',\n        'option','output','p','pre','progress','q','rp','rt','ruby','s','samp',\n        'section','select','shadow','small','source','spacer','span','strike',\n        'strong','style','sub','summary','sup','table','tbody','td','template',\n        'textarea','tfoot','th','thead','time','tr','track','tt','u','ul','var',\n        'video','wbr',\n\n        // SVG\n        'svg','altglyph','altglyphdef','altglyphitem','animatecolor',\n        'animatemotion','animatetransform','circle','clippath','defs','desc',\n        'ellipse','filter','font','g','glyph','glyphref','hkern','image','line',\n        'lineargradient','marker','mask','metadata','mpath','path','pattern',\n        'polygon','polyline','radialgradient','rect','stop','switch','symbol',\n        'text','textpath','title','tref','tspan','view','vkern',\n\n        // SVG Filters\n        'feBlend','feColorMatrix','feComponentTransfer','feComposite',\n        'feConvolveMatrix','feDiffuseLighting','feDisplacementMap',\n        'feFlood','feFuncA','feFuncB','feFuncG','feFuncR','feGaussianBlur',\n        'feMerge','feMergeNode','feMorphology','feOffset',\n        'feSpecularLighting','feTile','feTurbulence',\n\n        //MathML\n        'math','menclose','merror','mfenced','mfrac','mglyph','mi','mlabeledtr',\n        'mmuliscripts','mn','mo','mover','mpadded','mphantom','mroot','mrow',\n        'ms','mpspace','msqrt','mystyle','msub','msup','msubsup','mtable','mtd',\n        'mtext','mtr','munder','munderover',\n\n        //Text\n        '#text'\n    ]);\n\n    /* Allowed attribute names */\n    var ALLOWED_ATTR = null;\n    var DEFAULT_ALLOWED_ATTR = _addToSet({}, [\n\n        // HTML\n        'accept','action','align','alt','autocomplete','background','bgcolor',\n        'border','cellpadding','cellspacing','checked','cite','class','clear','color',\n        'cols','colspan','coords','datetime','default','dir','disabled',\n        'download','enctype','face','for','headers','height','hidden','high','href',\n        'hreflang','id','ismap','label','lang','list','loop', 'low','max',\n        'maxlength','media','method','min','multiple','name','noshade','novalidate',\n        'nowrap','open','optimum','pattern','placeholder','poster','preload','pubdate',\n        'radiogroup','readonly','rel','required','rev','reversed','role','rows',\n        'rowspan','spellcheck','scope','selected','shape','size','span',\n        'srclang','start','src','step','style','summary','tabindex','title',\n        'type','usemap','valign','value','width','xmlns',\n\n        // SVG\n        'accent-height','accumulate','additivive','alignment-baseline',\n        'ascent','attributename','attributetype','azimuth','basefrequency',\n        'baseline-shift','begin','bias','by','clip','clip-path','clip-rule',\n        'color','color-interpolation','color-interpolation-filters','color-profile',\n        'color-rendering','cx','cy','d','dx','dy','diffuseconstant','direction',\n        'display','divisor','dur','edgemode','elevation','end','fill','fill-opacity',\n        'fill-rule','filter','flood-color','flood-opacity','font-family','font-size',\n        'font-size-adjust','font-stretch','font-style','font-variant','font-weight',\n        'fx', 'fy','g1','g2','glyph-name','glyphref','gradientunits','gradienttransform',\n        'image-rendering','in','in2','k','k1','k2','k3','k4','kerning','keypoints',\n        'keysplines','keytimes','lengthadjust','letter-spacing','kernelmatrix',\n        'kernelunitlength','lighting-color','local','marker-end','marker-mid',\n        'marker-start','markerheight','markerunits','markerwidth','maskcontentunits',\n        'maskunits','max','mask','mode','min','numoctaves','offset','operator',\n        'opacity','order','orient','orientation','origin','overflow','paint-order',\n        'path','pathlength','patterncontentunits','patterntransform','patternunits',\n        'points','preservealpha','r','rx','ry','radius','refx','refy','repeatcount',\n        'repeatdur','restart','result','rotate','scale','seed','shape-rendering',\n        'specularconstant','specularexponent','spreadmethod','stddeviation','stitchtiles',\n        'stop-color','stop-opacity','stroke-dasharray','stroke-dashoffset','stroke-linecap',\n        'stroke-linejoin','stroke-miterlimit','stroke-opacity','stroke','stroke-width',\n        'surfacescale','targetx','targety','transform','text-anchor','text-decoration',\n        'text-rendering','textlength','u1','u2','unicode','values','viewbox',\n        'visibility','vert-adv-y','vert-origin-x','vert-origin-y','word-spacing',\n        'wrap','writing-mode','xchannelselector','ychannelselector','x','x1','x2',\n        'y','y1','y2','z','zoomandpan',\n\n        // MathML\n        'accent','accentunder','bevelled','close','columnsalign','columnlines',\n        'columnspan','denomalign','depth','display','displaystyle','fence',\n        'frame','largeop','length','linethickness','lspace','lquote',\n        'mathbackground','mathcolor','mathsize','mathvariant','maxsize',\n        'minsize','movablelimits','notation','numalign','open','rowalign',\n        'rowlines','rowspacing','rowspan','rspace','rquote','scriptlevel',\n        'scriptminsize','scriptsizemultiplier','selection','separator',\n        'separators','stretchy','subscriptshift','supscriptshift','symmetric',\n        'voffset',\n\n        // XML\n        'xlink:href','xml:id','xlink:title','xml:space','xmlns:xlink'\n    ]);\n\n    /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n    var FORBID_TAGS = null;\n\n    /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n    var FORBID_ATTR = null;\n\n    /* Decide if ARIA attributes are okay */\n    var ALLOW_ARIA_ATTR = true;\n\n    /* Decide if custom data attributes are okay */\n    var ALLOW_DATA_ATTR = true;\n\n    /* Decide if unknown protocols are okay */\n    var ALLOW_UNKNOWN_PROTOCOLS = false;\n\n    /* Output should be safe for jQuery's $() factory? */\n    var SAFE_FOR_JQUERY = false;\n\n    /* Output should be safe for common template engines.\n     * This means, DOMPurify removes data attributes, mustaches and ERB\n     */\n    var SAFE_FOR_TEMPLATES = false;\n\n    /* Specify template detection regex for SAFE_FOR_TEMPLATES mode */\n    var MUSTACHE_EXPR = /\\{\\{[\\s\\S]*|[\\s\\S]*\\}\\}/gm;\n    var ERB_EXPR = /<%[\\s\\S]*|[\\s\\S]*%>/gm;\n\n    /* Decide if document with <html>... should be returned */\n    var WHOLE_DOCUMENT = false;\n\n    /* Decide if all elements (e.g. style, script) must be children of\n     * document.body. By default, browsers might move them to document.head */\n    var FORCE_BODY = false;\n\n    /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html string.\n     * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n     */\n    var RETURN_DOM = false;\n\n    /* Decide if a DOM `DocumentFragment` should be returned, instead of a html string */\n    var RETURN_DOM_FRAGMENT = false;\n\n    /* If `RETURN_DOM` or `RETURN_DOM_FRAGMENT` is enabled, decide if the returned DOM\n     * `Node` is imported into the current `Document`. If this flag is not enabled the\n     * `Node` will belong (its ownerDocument) to a fresh `HTMLDocument`, created by\n     * DOMPurify. */\n    var RETURN_DOM_IMPORT = false;\n\n    /* Output should be free from DOM clobbering attacks? */\n    var SANITIZE_DOM = true;\n\n    /* Keep element content when removing element? */\n    var KEEP_CONTENT = true;\n\n    /* Tags to ignore content of when KEEP_CONTENT is true */\n    var FORBID_CONTENTS = _addToSet({}, [\n        'audio', 'head', 'math', 'script', 'style', 'template', 'svg', 'video'\n    ]);\n\n    /* Tags that are safe for data: URIs */\n    var DATA_URI_TAGS = _addToSet({}, [\n        'audio', 'video', 'img', 'source', 'image'\n    ]);\n\n    /* Attributes safe for values like \"javascript:\" */\n    var URI_SAFE_ATTRIBUTES = _addToSet({}, [\n        'alt','class','for','id','label','name','pattern','placeholder',\n        'summary','title','value','style','xmlns'\n    ]);\n\n    /* Keep a reference to config to pass to hooks */\n    var CONFIG = null;\n\n    /* Ideally, do not touch anything below this line */\n    /* ______________________________________________ */\n\n    var formElement = document.createElement('form');\n\n    /**\n     * _parseConfig\n     *\n     * @param  optional config literal\n     */\n    var _parseConfig = function(cfg) {\n        /* Shield configuration object from tampering */\n        if (typeof cfg !== 'object') {\n            cfg = {};\n        }\n\n        /* Set configuration parameters */\n        ALLOWED_TAGS = 'ALLOWED_TAGS' in cfg ?\n            _addToSet({}, cfg.ALLOWED_TAGS) : DEFAULT_ALLOWED_TAGS;\n        ALLOWED_ATTR = 'ALLOWED_ATTR' in cfg ?\n            _addToSet({}, cfg.ALLOWED_ATTR) : DEFAULT_ALLOWED_ATTR;\n        FORBID_TAGS = 'FORBID_TAGS' in cfg ?\n            _addToSet({}, cfg.FORBID_TAGS) : {};\n        FORBID_ATTR = 'FORBID_ATTR' in cfg ?\n            _addToSet({}, cfg.FORBID_ATTR) : {};\n        ALLOW_ARIA_ATTR     = cfg.ALLOW_ARIA_ATTR     !== false; // Default true\n        ALLOW_DATA_ATTR     = cfg.ALLOW_DATA_ATTR     !== false; // Default true\n        ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n        SAFE_FOR_JQUERY     = cfg.SAFE_FOR_JQUERY     ||  false; // Default false\n        SAFE_FOR_TEMPLATES  = cfg.SAFE_FOR_TEMPLATES  ||  false; // Default false\n        WHOLE_DOCUMENT      = cfg.WHOLE_DOCUMENT      ||  false; // Default false\n        RETURN_DOM          = cfg.RETURN_DOM          ||  false; // Default false\n        RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT ||  false; // Default false\n        RETURN_DOM_IMPORT   = cfg.RETURN_DOM_IMPORT   ||  false; // Default false\n        FORCE_BODY          = cfg.FORCE_BODY          ||  false; // Default false\n        SANITIZE_DOM        = cfg.SANITIZE_DOM        !== false; // Default true\n        KEEP_CONTENT        = cfg.KEEP_CONTENT        !== false; // Default true\n\n        if (SAFE_FOR_TEMPLATES) {\n            ALLOW_DATA_ATTR = false;\n        }\n\n        if (RETURN_DOM_FRAGMENT) {\n            RETURN_DOM = true;\n        }\n\n        /* Merge configuration parameters */\n        if (cfg.ADD_TAGS) {\n            if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n                ALLOWED_TAGS = _cloneObj(ALLOWED_TAGS);\n            }\n            _addToSet(ALLOWED_TAGS, cfg.ADD_TAGS);\n        }\n        if (cfg.ADD_ATTR) {\n            if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n                ALLOWED_ATTR = _cloneObj(ALLOWED_ATTR);\n            }\n            _addToSet(ALLOWED_ATTR, cfg.ADD_ATTR);\n        }\n        if (cfg.ADD_URI_SAFE_ATTR) {\n            _addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR);\n        }\n\n        /* Add #text in case KEEP_CONTENT is set to true */\n        if (KEEP_CONTENT) { ALLOWED_TAGS['#text'] = true; }\n\n        // Prevent further manipulation of configuration.\n        // Not available in IE8, Safari 5, etc.\n        if (Object && 'freeze' in Object) { Object.freeze(cfg); }\n\n        CONFIG = cfg;\n    };\n\n   /**\n     * _forceRemove\n     *\n     * @param  a DOM node\n     */\n    var _forceRemove = function(node) {\n        DOMPurify.removed.push({element: node});\n        try {\n            node.parentNode.removeChild(node);\n        } catch (e) {\n            node.outerHTML = '';\n        }\n    };\n\n   /**\n     * _removeAttribute\n     *\n     * @param  an Attribute name\n     * @param  a DOM node\n     */\n    var _removeAttribute = function(name, node) {\n        DOMPurify.removed.push({\n            attribute: node.getAttributeNode(name),\n            from: node\n        });\n        node.removeAttribute(name);\n    };\n\n   /**\n     * _initDocument\n     *\n     * @param  a string of dirty markup\n     * @return a DOM, filled with the dirty markup\n     */\n    var _initDocument = function(dirty) {\n        /* Create a HTML document */\n        var doc, body;\n\n        /* Fill body with bogus element */\n        if (FORCE_BODY) {\n            dirty = '<remove></remove>' + dirty;\n        }\n\n        /* Use DOMParser to workaround Firefox bug (see comment below) */\n        if (useDOMParser) {\n            try {\n                doc = new DOMParser().parseFromString(dirty, 'text/html');\n            } catch (e) {}\n        }\n\n        /* Otherwise use createHTMLDocument, because DOMParser is unsafe in\n           Safari (see comment below) */\n        if (!doc || !doc.documentElement) {\n            doc = implementation.createHTMLDocument('');\n            body = doc.body;\n            body.parentNode.removeChild(body.parentNode.firstElementChild);\n            body.outerHTML = dirty;\n        }\n\n        /* Work on whole document or just its body */\n        return getElementsByTagName.call(doc,\n            WHOLE_DOCUMENT ? 'html' : 'body')[0];\n    };\n\n    // Safari 10.1+ (unfixed as of time of writing) has a catastrophic bug in\n    // its implementation of DOMParser such that the following executes the\n    // JavaScript:\n    //\n    // new DOMParser()\n    //   .parseFromString('<svg onload=alert(document.domain)>', 'text/html');\n    //\n    // However, Firefox uses a different parser for innerHTML rather than\n    // DOMParser (see https://bugzilla.mozilla.org/show_bug.cgi?id=1205631)\n    // which means that you *must* use DOMParser, otherwise the output may\n    // not be safe if used in a document.write context later.\n    //\n    // So we feature detect the Firefox bug and use the DOMParser if necessary.\n    if (DOMPurify.isSupported) {\n        (function () {\n            var doc = _initDocument('<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">');\n            if (doc.querySelector('svg img')) {\n                useDOMParser = true;\n            }\n        }());\n    }\n\n    /**\n     * _createIterator\n     *\n     * @param  document/fragment to create iterator for\n     * @return iterator instance\n     */\n    var _createIterator = function(root) {\n        return createNodeIterator.call(root.ownerDocument || root,\n            root,\n            NodeFilter.SHOW_ELEMENT\n            | NodeFilter.SHOW_COMMENT\n            | NodeFilter.SHOW_TEXT,\n            function() { return NodeFilter.FILTER_ACCEPT; },\n            false\n        );\n    };\n\n    /**\n     * _isClobbered\n     *\n     * @param  element to check for clobbering attacks\n     * @return true if clobbered, false if safe\n     */\n    var _isClobbered = function(elm) {\n        if (elm instanceof Text || elm instanceof Comment) {\n            return false;\n        }\n        if (  typeof elm.nodeName !== 'string'\n           || typeof elm.textContent !== 'string'\n           || typeof elm.removeChild !== 'function'\n           || !(elm.attributes instanceof NamedNodeMap)\n           || typeof elm.removeAttribute !== 'function'\n           || typeof elm.setAttribute !== 'function'\n        ) {\n            return true;\n        }\n        return false;\n    };\n\n    /**\n     * _isNode\n     *\n     * @param object to check whether it's a DOM node\n     * @return true is object is a DOM node\n     */\n    var _isNode = function(obj) {\n        return (\n            typeof Node === \"object\" ? obj instanceof Node : obj\n                && typeof obj === \"object\" && typeof obj.nodeType === \"number\"\n                && typeof obj.nodeName===\"string\"\n        );\n    };\n\n    /**\n     * _sanitizeElements\n     *\n     * @protect nodeName\n     * @protect textContent\n     * @protect removeChild\n     *\n     * @param   node to check for permission to exist\n     * @return  true if node was killed, false if left alive\n     */\n    var _sanitizeElements = function(currentNode) {\n        var tagName, content;\n\n        /* Execute a hook if present */\n        _executeHook('beforeSanitizeElements', currentNode, null);\n\n        /* Check if element is clobbered or can clobber */\n        if (_isClobbered(currentNode)) {\n            _forceRemove(currentNode);\n            return true;\n        }\n\n        /* Now let's check the element's type and name */\n        tagName = currentNode.nodeName.toLowerCase();\n\n        /* Execute a hook if present */\n        _executeHook('uponSanitizeElement', currentNode, {\n            tagName: tagName,\n            allowedTags: ALLOWED_TAGS\n        });\n\n        /* Remove element if anything forbids its presence */\n        if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n            /* Keep content except for black-listed elements */\n            if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]\n                    && typeof currentNode.insertAdjacentHTML === 'function') {\n                try {\n                    currentNode.insertAdjacentHTML('AfterEnd', currentNode.innerHTML);\n                } catch (e) {}\n            }\n            _forceRemove(currentNode);\n            return true;\n        }\n\n        /* Convert markup to cover jQuery behavior */\n        if (SAFE_FOR_JQUERY && !currentNode.firstElementChild &&\n                (!currentNode.content || !currentNode.content.firstElementChild) &&\n                /</g.test(currentNode.textContent)) {\n            DOMPurify.removed.push({element: currentNode.cloneNode()});\n            currentNode.innerHTML = currentNode.textContent.replace(/</g, '&lt;');\n        }\n\n        /* Sanitize element content to be template-safe */\n        if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {\n            /* Get the element's text content */\n            content = currentNode.textContent;\n            content = content.replace(MUSTACHE_EXPR, ' ');\n            content = content.replace(ERB_EXPR, ' ');\n            if (currentNode.textContent !== content) {\n                DOMPurify.removed.push({element: currentNode.cloneNode()});\n                currentNode.textContent = content;\n            }\n        }\n\n        /* Execute a hook if present */\n        _executeHook('afterSanitizeElements', currentNode, null);\n\n        return false;\n    };\n\n    var DATA_ATTR = /^data-[\\-\\w.\\u00B7-\\uFFFF]/;\n    var ARIA_ATTR = /^aria-[\\-\\w]+$/;\n    var IS_ALLOWED_URI = /^(?:(?:(?:f|ht)tps?|mailto|tel):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i;\n    var IS_SCRIPT_OR_DATA = /^(?:\\w+script|data):/i;\n    /* This needs to be extensive thanks to Webkit/Blink's behavior */\n    var ATTR_WHITESPACE = /[\\x00-\\x20\\xA0\\u1680\\u180E\\u2000-\\u2029\\u205f\\u3000]/g;\n\n    /**\n     * _sanitizeAttributes\n     *\n     * @protect attributes\n     * @protect nodeName\n     * @protect removeAttribute\n     * @protect setAttribute\n     *\n     * @param   node to sanitize\n     * @return  void\n     */\n    var _sanitizeAttributes = function(currentNode) {\n        var attr, name, value, lcName, idAttr, attributes, hookEvent, l;\n        /* Execute a hook if present */\n        _executeHook('beforeSanitizeAttributes', currentNode, null);\n\n        attributes = currentNode.attributes;\n\n        /* Check if we have attributes; if not we might have a text node */\n        if (!attributes) { return; }\n\n        hookEvent = {\n            attrName: '',\n            attrValue: '',\n            keepAttr: true,\n            allowedAttributes: ALLOWED_ATTR\n        };\n        l = attributes.length;\n\n        /* Go backwards over all attributes; safely remove bad ones */\n        while (l--) {\n            attr = attributes[l];\n            name = attr.name;\n            value = attr.value.trim();\n            lcName = name.toLowerCase();\n\n            /* Execute a hook if present */\n            hookEvent.attrName = lcName;\n            hookEvent.attrValue = value;\n            hookEvent.keepAttr = true;\n            _executeHook('uponSanitizeAttribute', currentNode, hookEvent );\n            value = hookEvent.attrValue;\n\n            /* Remove attribute */\n            // Safari (iOS + Mac), last tested v8.0.5, crashes if you try to\n            // remove a \"name\" attribute from an <img> tag that has an \"id\"\n            // attribute at the time.\n            if (lcName === 'name'  &&\n                    currentNode.nodeName === 'IMG' && attributes.id) {\n                idAttr = attributes.id;\n                attributes = Array.prototype.slice.apply(attributes);\n                _removeAttribute('id', currentNode);\n                _removeAttribute(name, currentNode);\n                if (attributes.indexOf(idAttr) > l) {\n                    currentNode.setAttribute('id', idAttr.value);\n                }\n            } else if (\n                  // This works around a bug in Safari, where input[type=file]\n                  // cannot be dynamically set after type has been removed\n                  currentNode.nodeName === 'INPUT' && lcName === 'type' &&\n                  value === 'file' && (ALLOWED_ATTR[lcName] || !FORBID_ATTR[lcName])) {\n                  continue;\n            } else {\n                // This avoids a crash in Safari v9.0 with double-ids.\n                // The trick is to first set the id to be empty and then to\n                // remove the attribute\n                if (name === 'id') {\n                    currentNode.setAttribute(name, '');\n                }\n                _removeAttribute(name, currentNode);\n            }\n\n            /* Did the hooks approve of the attribute? */\n            if (!hookEvent.keepAttr) {\n                continue;\n            }\n\n            /* Make sure attribute cannot clobber */\n            if (SANITIZE_DOM &&\n                    (lcName === 'id' || lcName === 'name') &&\n                    (value in window || value in document || value in formElement)) {\n                continue;\n            }\n\n            /* Sanitize attribute content to be template-safe */\n            if (SAFE_FOR_TEMPLATES) {\n                value = value.replace(MUSTACHE_EXPR, ' ');\n                value = value.replace(ERB_EXPR, ' ');\n            }\n\n            /* Allow valid data-* attributes: At least one character after \"-\"\n               (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n               XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n               We don't need to check the value; it's always URI safe. */\n            if (ALLOW_DATA_ATTR && DATA_ATTR.test(lcName)) {\n                // This attribute is safe\n            }\n            else if (ALLOW_ARIA_ATTR && ARIA_ATTR.test(lcName)) {\n                // This attribute is safe\n            }\n            /* Otherwise, check the name is permitted */\n            else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n                continue;\n            }\n            /* Check value is safe. First, is attr inert? If so, is safe */\n            else if (URI_SAFE_ATTRIBUTES[lcName]) {\n                // This attribute is safe\n            }\n            /* Check no script, data or unknown possibly unsafe URI\n               unless we know URI values are safe for that attribute */\n            else if (IS_ALLOWED_URI.test(value.replace(ATTR_WHITESPACE,''))) {\n                // This attribute is safe\n            }\n            /* Keep image data URIs alive if src/xlink:href is allowed */\n            else if (\n                (lcName === 'src' || lcName === 'xlink:href') &&\n                value.indexOf('data:') === 0 &&\n                DATA_URI_TAGS[currentNode.nodeName.toLowerCase()]) {\n                // This attribute is safe\n            }\n            /* Allow unknown protocols: This provides support for links that\n               are handled by protocol handlers which may be unknown ahead of\n               time, e.g. fb:, spotify: */\n            else if (\n                ALLOW_UNKNOWN_PROTOCOLS &&\n                !IS_SCRIPT_OR_DATA.test(value.replace(ATTR_WHITESPACE,''))) {\n                // This attribute is safe\n            }\n            /* Check for binary attributes */\n            else if (!value) {\n                // binary attributes are safe at this point\n            }\n            /* Anything else, presume unsafe, do not add it back */\n            else {\n                continue;\n            }\n\n            /* Handle invalid data-* attribute set by try-catching it */\n            try {\n                currentNode.setAttribute(name, value);\n                DOMPurify.removed.pop();\n            } catch (e) {}\n        }\n\n        /* Execute a hook if present */\n        _executeHook('afterSanitizeAttributes', currentNode, null);\n    };\n\n    /**\n     * _sanitizeShadowDOM\n     *\n     * @param  fragment to iterate over recursively\n     * @return void\n     */\n    var _sanitizeShadowDOM = function(fragment) {\n        var shadowNode;\n        var shadowIterator = _createIterator(fragment);\n\n        /* Execute a hook if present */\n        _executeHook('beforeSanitizeShadowDOM', fragment, null);\n\n        while ( (shadowNode = shadowIterator.nextNode()) ) {\n            /* Execute a hook if present */\n            _executeHook('uponSanitizeShadowNode', shadowNode, null);\n\n            /* Sanitize tags and elements */\n            if (_sanitizeElements(shadowNode)) {\n                continue;\n            }\n\n            /* Deep shadow DOM detected */\n            if (shadowNode.content instanceof DocumentFragment) {\n                _sanitizeShadowDOM(shadowNode.content);\n            }\n\n            /* Check attributes, sanitize if necessary */\n            _sanitizeAttributes(shadowNode);\n        }\n\n        /* Execute a hook if present */\n        _executeHook('afterSanitizeShadowDOM', fragment, null);\n    };\n\n    /**\n     * _executeHook\n     * Execute user configurable hooks\n     *\n     * @param  {String} entryPoint  Name of the hook's entry point\n     * @param  {Node} currentNode\n     */\n    var _executeHook = function(entryPoint, currentNode, data) {\n        if (!hooks[entryPoint]) { return; }\n\n        hooks[entryPoint].forEach(function(hook) {\n            hook.call(DOMPurify, currentNode, data, CONFIG);\n        });\n    };\n\n    /**\n     * sanitize\n     * Public method providing core sanitation functionality\n     *\n     * @param {String|Node} dirty string or DOM node\n     * @param {Object} configuration object\n     */\n    DOMPurify.sanitize = function(dirty, cfg) {\n        var body, importedNode, currentNode, oldNode, nodeIterator, returnNode;\n        /* Make sure we have a string to sanitize.\n           DO NOT return early, as this will return the wrong type if\n           the user has requested a DOM object rather than a string */\n        if (!dirty) {\n            dirty = '<!-->';\n        }\n\n        /* Stringify, in case dirty is an object */\n        if (typeof dirty !== 'string' && !_isNode(dirty)) {\n            if (typeof dirty.toString !== 'function') {\n                throw new TypeError('toString is not a function');\n            } else {\n                dirty = dirty.toString();\n            }\n        }\n\n        /* Check we can run. Otherwise fall back or ignore */\n        if (!DOMPurify.isSupported) {\n            if (typeof window.toStaticHTML === 'object'\n                || typeof window.toStaticHTML === 'function') {\n                if (typeof dirty === 'string') {\n                    return window.toStaticHTML(dirty);\n                } else if (_isNode(dirty)) {\n                    return window.toStaticHTML(dirty.outerHTML);\n                }\n            }\n            return dirty;\n        }\n\n        /* Assign config vars */\n        _parseConfig(cfg);\n\n        /* Clean up removed elements */\n        DOMPurify.removed = [];\n\n        if (dirty instanceof Node) {\n            /* If dirty is a DOM element, append to an empty document to avoid\n               elements being stripped by the parser */\n            body = _initDocument('<!-->');\n            importedNode = body.ownerDocument.importNode(dirty, true);\n            if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {\n                /* Node is already a body, use as is */\n                body = importedNode;\n            } else {\n                body.appendChild(importedNode);\n            }\n        } else {\n            /* Exit directly if we have nothing to do */\n            if (!RETURN_DOM && !WHOLE_DOCUMENT && dirty.indexOf('<') === -1) {\n                return dirty;\n            }\n\n            /* Initialize the document to work on */\n            body = _initDocument(dirty);\n\n            /* Check we have a DOM node from the data */\n            if (!body) {\n                return RETURN_DOM ? null : '';\n            }\n        }\n\n        /* Remove first element node (ours) if FORCE_BODY is set */\n        if (FORCE_BODY) {\n            _forceRemove(body.firstChild);\n        }\n\n        /* Get node iterator */\n        nodeIterator = _createIterator(body);\n\n        /* Now start iterating over the created document */\n        while ( (currentNode = nodeIterator.nextNode()) ) {\n\n            /* Fix IE's strange behavior with manipulated textNodes #89 */\n            if (currentNode.nodeType === 3 && currentNode === oldNode) {\n                continue;\n            }\n\n            /* Sanitize tags and elements */\n            if (_sanitizeElements(currentNode)) {\n                continue;\n            }\n\n            /* Shadow DOM detected, sanitize it */\n            if (currentNode.content instanceof DocumentFragment) {\n                _sanitizeShadowDOM(currentNode.content);\n            }\n\n            /* Check attributes, sanitize if necessary */\n            _sanitizeAttributes(currentNode);\n\n            oldNode = currentNode;\n        }\n\n        /* Return sanitized string or DOM */\n        if (RETURN_DOM) {\n\n            if (RETURN_DOM_FRAGMENT) {\n                returnNode = createDocumentFragment.call(body.ownerDocument);\n\n                while (body.firstChild) {\n                    returnNode.appendChild(body.firstChild);\n                }\n            } else {\n                returnNode = body;\n            }\n\n            if (RETURN_DOM_IMPORT) {\n                /* adoptNode() is not used because internal state is not reset\n                   (e.g. the past names map of a HTMLFormElement), this is safe\n                   in theory but we would rather not risk another attack vector.\n                   The state that is cloned by importNode() is explicitly defined\n                   by the specs. */\n                returnNode = importNode.call(originalDocument, returnNode, true);\n            }\n\n            return returnNode;\n        }\n\n        return WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n    };\n\n    /**\n     * addHook\n     * Public method to add DOMPurify hooks\n     *\n     * @param {String} entryPoint\n     * @param {Function} hookFunction\n     */\n    DOMPurify.addHook = function(entryPoint, hookFunction) {\n        if (typeof hookFunction !== 'function') { return; }\n        hooks[entryPoint] = hooks[entryPoint] || [];\n        hooks[entryPoint].push(hookFunction);\n    };\n\n    /**\n     * removeHook\n     * Public method to remove a DOMPurify hook at a given entryPoint\n     * (pops it from the stack of hooks if more are present)\n     *\n     * @param {String} entryPoint\n     * @return void\n     */\n    DOMPurify.removeHook = function(entryPoint) {\n        if (hooks[entryPoint]) {\n            hooks[entryPoint].pop();\n        }\n    };\n\n    /**\n     * removeHooks\n     * Public method to remove all DOMPurify hooks at a given entryPoint\n     *\n     * @param  {String} entryPoint\n     * @return void\n     */\n    DOMPurify.removeHooks = function(entryPoint) {\n        if (hooks[entryPoint]) {\n            hooks[entryPoint] = [];\n        }\n    };\n\n    /**\n     * removeAllHooks\n     * Public method to remove all DOMPurify hooks\n     *\n     * @return void\n     */\n    DOMPurify.removeAllHooks = function() {\n        hooks = {};\n    };\n\n    return DOMPurify;\n}));\n"],"sourceRoot":""}