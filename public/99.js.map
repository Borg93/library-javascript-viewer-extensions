{"version":3,"sources":["webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.MarqueeSelect/index.js","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.MarqueeSelect/MarqueeSelect.js","webpack:///./src/client/components/Viewer/Extensions/Viewer.MultiModelExtensionBase/index.js","webpack:///./src/client/components/Viewer/Extensions/Viewer.MultiModelExtensionBase/Viewer.MultiModelExtensionBase.js"],"names":["__webpack_require__","r","__webpack_exports__","window","Autodesk","THREE","MarqueeSelect","viewer","options","_this","_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2___default","this","_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default","_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default","call","_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_8___default","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6___default","setNavigationLock","Promise","resolve","model","getExternalIdMapping","mapping","dbId","instanceTree","getData","fragList","getFragmentList","bounds","Box3","box","enumNodeFragments","fragId","getWorldBounds","union","event","pos","x","clientX","mousedowncoords","y","clientY","_control","isActivated","mousedown","Math","abs","marquee","css","left","concat","offset","width","top","height","findCubesByVertices","location","findBounds","pos1","pos2","origin","delta","ox","dx","oy","dy","onMouseUp","bind","onMouseDown","init","_this2","dbIdPP","document","getElementById","$","append","display","background-color","border","z-index","position","ViewerToolkit","createButton","toggleActiveButton","buzzParentControl","Viewing","UI","ControlGroup","addControl","getToolbar","container","classList","remove","add","mappings","Object","values","dbIds","isExclude","ids","rootId","getRootId","length","clone","forEach","id","extId","findKey","forOwn","eId","startsWith","omit","push","lockViewport","show","canvas","cRect","getBoundingClientRect","defaultShownDbIds","_ref","_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default","_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee3","max","min","pivotPoint","pivotPointMin","pivotPointMax","wrap","_context3","prev","next","_this3","sent","z","impl","worldToClient","pivot","stop","_x3","apply","arguments","fadeOut","setTimeout","_this4","unlockViewport","hiddenDbIds","getHiddenNodes","getShowIds","showDbIds","calcDbidPP","keys","dbInBounds","modelRootId","_this4$dbIdPP$dbId","isMaxInBounds","withinBounds","isMinInBounds","difference","select","ttt","on","onMouseMove","console","log","off","MultiModelExtensionBase","theExtensionManager","registerExtension","ExtensionId","_Viewer_MultiModelExtensionBase__WEBPACK_IMPORTED_MODULE_0__","undefined","defaultOptions","_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default","_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default","_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default","assign","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5___default","serviceContext","onModelCompletedLoad","onObjectTreeCreated","onModelRootLoaded","onExtensionLoaded","onModelActivated","onGeometryLoaded","onToolbarCreated","onModelBeginLoad","onModelUnloaded","onSelection","__onModelRootLoaded","__onModelActivated","__onModelUnloaded","__onModelLoaded","models","modelQueue","getModels","map","guid","initializeEvents","viewerEvents","removeEventListener","handler","eventSink","viewerEvent","OBJECT_TREE_CREATED_EVENT","GEOMETRY_LOADED_EVENT","then","args","_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default","filter","EXTENSION_LOADED_EVENT","MODEL_ROOT_LOADED_EVENT","TOOLBAR_CREATED_EVENT","AGGREGATE_SELECTION_CHANGED_EVENT","eventId","_this5","eventTasks","Array","isArray","addEventListener","__handler","all","EventsEmitter","Composer","Extension"],"mappings":"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","file":"99.js","sourcesContent":["import './MarqueeSelect'\nexport default 'Viewing.Extension.MarqueeSelect'\n","import { difference, keys, forOwn, findKey, clone, omit, sortBy } from 'lodash'\nimport $ from 'jquery'\n\nimport MultiModelExtensionBase from 'Viewer.MultiModelExtensionBase'\n\nimport ViewerToolkit from 'Viewer.Toolkit'\n\nconst { Autodesk, THREE } = window\n\nexport default class MarqueeSelect extends MultiModelExtensionBase {\n  constructor(viewer, options) {\n    super(viewer, options)\n    this.viewer = viewer\n    this.options = options || {}\n    this.onMouseUp = this.onMouseUp.bind(this)\n    this.onMouseDown = this.onMouseDown.bind(this)\n    this.init()\n  }\n\n  static get ExtensionId() {\n    return 'Viewing.Extension.MarqueeSelect'\n  }\n\n  init() {\n    this.mousedown = false\n    this.mousedowncoords = {}\n    this.dbIdPP = {}\n    this.offset = { x: 0, y: 0 }\n    this.bounds = {\n      origin: { x: 0, y: 0 },\n      delta: { x: 0, y: 0 },\n    }\n    if (!document.getElementById('select-marquee')) {\n      $('.canvas-wrap').append('<div id=\"select-marquee\"></div>')\n    }\n    this.marquee = $('#select-marquee').css({ width: 0, height: 0, display: 'none', 'background-color': 'rgba(208, 255, 242, 0.5)', border: 'dotted 1px #9a9a9a', 'z-index': 100, position: 'absolute' })\n\n    this._control = ViewerToolkit.createButton(\n      'marquee-select-icon',\n      'glyphicon glyphicon-unchecked',\n      'Marquee Select',\n      () => {\n        this.toggleActiveButton()\n      }\n    )\n\n    this.buzzParentControl = new Autodesk.Viewing.UI.ControlGroup('marquee-select')\n    this.buzzParentControl.addControl(this._control)\n\n    const viewerToolbar = this.viewer.getToolbar(true)\n\n    viewerToolbar.addControl(this.buzzParentControl)\n  }\n\n  toggleActiveButton() {\n    if (this._control.isActivated) {\n      this._control.isActivated = false\n      this._control.container.classList.remove('active')\n    } else {\n      this._control.isActivated = true\n      this._control.container.classList.add('active')\n    }\n  }\n\n  lockViewport = () => {\n    this.viewer.setNavigationLock(true);\n  }\n\n  unlockViewport = () => {\n    this.viewer.setNavigationLock(false);\n  }\n\n  getExternalIdMapping = () => {\n    const { viewer } = this\n    return new Promise((resolve) => {\n      viewer.model.getExternalIdMapping((mapping) => {\n        resolve(mapping)\n      })\n    })\n  }\n\n  enumNodeFragments = (dbId) => {\n    const { viewer } = this\n    const instanceTree = viewer.model.getData().instanceTree\n    const fragList = viewer.model.getFragmentList()\n    const bounds = new THREE.Box3()\n    const box = new THREE.Box3()\n    return new Promise((resolve) => {\n      instanceTree.enumNodeFragments(dbId, (fragId) => {\n        fragList.getWorldBounds(fragId, box);\n        bounds.union(box)\n        resolve(bounds)\n      }, true)\n    })\n  }\n\n  async getShowIds() {\n    const mappings = await this.getExternalIdMapping()\n    return Object.values(mappings)\n\n    // let ids = []\n    // const isolateDbIds = this.viewer.getIsolatedNodes()\n    // const hiddenDbIds = this.viewer.getHiddenNodes()\n    // if (!isolateDbIds.length && !hiddenDbIds.length) {\n    //   return Object.values(mappings)\n    // }\n    // // TODO: caculate the shown dbIds\n    // if (isolateDbIds.length > 0) {\n    //   const isolatedToShowDbIds = this.getIdsByExternalId(mappings, isolateDbIds, true)\n    //   ids = isolatedToShowDbIds\n    // } else {\n    //   const toShowIds = this.getIdsByExternalId(mappings, hiddenDbIds, false)\n    //   ids = toShowIds\n    // }\n    // return ids\n  }\n\n  getIdsByExternalId(mappings, dbIds, isExclude) {\n    const ids = []\n    const rootId = this.viewer.model.getRootId()\n    if (!dbIds.length) {\n      return ids\n    }\n    if (dbIds[0] === rootId && isExclude === false) {\n      return ids\n    }\n\n    if (dbIds[0] === rootId && isExclude) {\n      return Object.values(mappings)\n    }\n\n    let mapping = clone(mappings)\n    dbIds.forEach((id) => {\n      const extId = findKey(mapping, (dbId) => id === dbId)\n      forOwn(mapping, (dbId, eId) => {\n        if (eId.startsWith(extId) === isExclude) {\n          mapping = omit(mapping, extId)\n          ids.push(dbId)\n        }\n      })\n    })\n    return ids\n  }\n\n  async onMouseDown(event) {\n    if (!this._control.isActivated) {\n      return\n    }\n\n    this.lockViewport()\n    this.marquee.show()\n\n    this.mousedown = true\n    this.mousedowncoords.x = event.clientX\n    this.mousedowncoords.y = event.clientY\n\n    const { viewer } = this\n    const { canvas } = viewer\n    const cRect = canvas.getBoundingClientRect()\n    this.offset = { x: cRect.left, y: cRect.top }\n  }\n\n  async calcDbidPP(defaultShownDbIds) {\n    const dbIdPP = {}\n    const { viewer } = this\n    defaultShownDbIds.forEach(async (dbId) => {\n      const bounds = await this.enumNodeFragments(dbId)\n      const { max, min } = bounds\n      const pivotPoint = { x: (max.x + min.x) / 2, y: (max.y + min.y) / 2, z: (max.z + min.z) / 2 }\n      const pivotPointMin = { x: (min.x), y: (min.y), z: (min.z) }\n      const pivotPointMax = { x: (max.x), y: (max.y), z: (max.z) }\n      dbIdPP[dbId] = {}\n      dbIdPP[dbId].max = viewer.impl.worldToClient(pivotPointMax)\n      dbIdPP[dbId].min = viewer.impl.worldToClient(pivotPointMin)\n      dbIdPP[dbId].pivot = viewer.impl.worldToClient(pivotPoint)\n    })\n    this.dbIdPP = dbIdPP\n  }\n\n  async onMouseUp(event) {\n    this.marquee.fadeOut()\n    setTimeout(() => {\n      this.unlockViewport()\n      this.marquee.css({ width: 0, height: 0 })\n    }, 100)\n\n    if (!this.mousedown) {\n      return\n    }\n\n    const { viewer } = this\n    const hiddenDbIds = this.viewer.getHiddenNodes()\n    const showDbIds = await this.getShowIds()\n    await this.calcDbidPP(showDbIds)\n\n    const dbIds = keys(this.dbIdPP)\n    const dbInBounds = []\n\n    const modelRootId = this.viewer.model.getRootId()\n    dbIds.forEach((dbId) => {\n      if (+dbId === modelRootId) {\n        return\n      }\n      const { min, max } = this.dbIdPP[dbId]\n      const isMaxInBounds = this.withinBounds({ x: max.x + this.offset.x, y: max.y + this.offset.y }, this.bounds)\n      const isMinInBounds = this.withinBounds({ x: min.x + this.offset.x, y: min.y + this.offset.y }, this.bounds)\n      if (isMaxInBounds && isMinInBounds) {\n        dbInBounds.push(+dbId)\n      }\n    })\n\n    const defaultShownDbIds = difference(dbInBounds, hiddenDbIds)\n    this.viewer.select(defaultShownDbIds)\n    this.mousedown = false\n\n    window.ttt = this\n  }\n\n  onMouseMove = (event) => {\n    const pos = {}\n    pos.x = event.clientX - this.mousedowncoords.x;\n    pos.y = event.clientY - this.mousedowncoords.y;\n\n    if (!this._control.isActivated || !this.mousedown || Math.abs(pos.y) < 50 || Math.abs(pos.x) < 50) {\n      return\n    }\n\n    if (pos.x < 0 && pos.y < 0) {// rb -> lt\n      this.marquee.css({ left: `${event.clientX - this.offset.x}px`, width: `${-pos.x}px`, top: `${event.clientY - this.offset.y}px`, height: `${-pos.y}` })\n    } else if (pos.x >= 0 && pos.y <= 0) {// lb -> rt\n      this.marquee.css({ left: `${this.mousedowncoords.x - this.offset.x}px`, width: `${pos.x}px`, top: `${event.clientY - this.offset.y}px`, height: `${-pos.y}px` })\n    } else if (pos.x >= 0 && pos.y >= 0) {// lt -> rb\n      this.marquee.css({ left: `${this.mousedowncoords.x - this.offset.x}px`, width: `${pos.x}px`, height: `${pos.y}px`, top: `${this.mousedowncoords.y - this.offset.y}px` })\n    } else if (pos.x < 0 && pos.y >= 0) {// rt -> lb\n      this.marquee.css({ left: `${event.clientX - this.offset.x}px`, width: `${-pos.x}px`, height: `${pos.y}px`, top: `${this.mousedowncoords.y - this.offset.y}px` })\n    }\n    this.findCubesByVertices({ x: event.clientX, y: event.clientY })\n  }\n\n  findCubesByVertices = (location) => {\n    this.findBounds(location, this.mousedowncoords)\n  }\n\n  findBounds = (pos1, pos2) => {\n    const origin = {}\n    const delta = {}\n\n    if (pos1.y < pos2.y) {\n      origin.y = pos1.y\n      delta.y = pos2.y - pos1.y\n    } else {\n      origin.y = pos2.y\n      delta.y = pos1.y - pos2.y\n    }\n\n    if (pos1.x < pos2.x) {\n      origin.x = pos1.x\n      delta.x = pos2.x - pos1.x\n    } else {\n      origin.x = pos2.x\n      delta.x = pos1.x - pos2.x\n    }\n    const bounds = { origin, delta }\n    this.bounds = bounds\n    return bounds\n  }\n\n  withinBounds = (pos, bounds) => {\n    const ox = bounds.origin.x\n    const dx = (bounds.origin.x + bounds.delta.x)\n    const oy = bounds.origin.y\n    const dy = (bounds.origin.y + bounds.delta.y)\n\n    if ((pos.x >= ox) && (pos.x <= dx) && (pos.y >= oy) && (pos.y <= dy)) {\n      return true\n    }\n    return false\n  }\n\n  load() {\n    $('.canvas-wrap').on('mousedown', this.onMouseDown)\n    $('.canvas-wrap').on('mouseup', this.onMouseUp)\n    $('.canvas-wrap').on('mousemove', this.onMouseMove)\n    console.log('Viewing.Extension.MarqueeSelect loaded') \n    return true\n  }\n\n  unload() {\n    $('.canvas-wrap').off('mousedown', this.onMouseDown)\n    $('.canvas-wrap').off('mouseup', this.onMouseUp)\n    $('.canvas-wrap').off('mousemove', this.onMouseMove)\n    this.init()\n    return true\n  }\n}\n\nAutodesk.Viewing.theExtensionManager.registerExtension(MarqueeSelect.ExtensionId, MarqueeSelect)\n","import MultiModelExtensionBase from './Viewer.MultiModelExtensionBase'\n\nexport default MultiModelExtensionBase\n","import EventsEmitter from 'EventsEmitter'\n\nexport default class MultiModelExtensionBase extends\n  EventsEmitter.Composer (Autodesk.Viewing.Extension) {\n\n  /////////////////////////////////////////////////////////\n  // Class constructor\n  //\n  /////////////////////////////////////////////////////////\n  constructor (viewer, options = {}, defaultOptions = {}) {\n\n    super (viewer)\n    // bindings\n    Object.assign(this, options.serviceContext)\n\n    this.onModelCompletedLoad = this.onModelCompletedLoad.bind(this)\n    this.onObjectTreeCreated  = this.onObjectTreeCreated.bind(this)\n    this.onModelRootLoaded    = this.onModelRootLoaded.bind(this)\n    this.onExtensionLoaded    = this.onExtensionLoaded.bind(this)\n    this.onModelActivated     = this.onModelActivated.bind(this)\n    this.onGeometryLoaded     = this.onGeometryLoaded.bind(this)\n    this.onToolbarCreated     = this.onToolbarCreated.bind(this)\n    this.onModelBeginLoad     = this.onModelBeginLoad.bind(this)\n    this.onModelUnloaded      = this.onModelUnloaded.bind(this)\n    this.onSelection          = this.onSelection.bind(this)\n\n    this.__onModelRootLoaded  = this.__onModelRootLoaded.bind(this)\n    this.__onModelActivated   = this.__onModelActivated.bind(this)\n    this.__onModelUnloaded    = this.__onModelUnloaded.bind(this)\n    this.__onModelLoaded      = this.__onModelLoaded.bind(this)\n\n    this.defaultOptions = defaultOptions\n\n    this.options = Object.assign({},\n      defaultOptions,\n      options)\n\n    this.viewer = viewer\n\n    // read the modelQueue to detect currently loaded models\n    // when the extension gets loaded\n    const models = viewer.impl.modelQueue().getModels()\n\n    this.models = models.map((model) => {\n\n      model.guid = model.guid || this.guid()\n\n      return model\n    })\n\n    this.initializeEvents ()\n  }\n\n  /////////////////////////////////////////////////////////\n  // Extension Id\n  //\n  /////////////////////////////////////////////////////////\n  static get ExtensionId() {\n\n    return 'Viewing.Extension.MultiModelExtensionBase'\n  }\n\n  /////////////////////////////////////////////////////////\n  // Load callback\n  //\n  /////////////////////////////////////////////////////////\n  load () {\n\n    return true\n  }\n\n  /////////////////////////////////////////////////////////\n  // Unload callback\n  //\n  /////////////////////////////////////////////////////////\n  unload () {\n\n    this.viewerEvents.forEach((event) => {\n\n      this.viewer.removeEventListener(\n        event.id, this[event.handler])\n    })\n\n    if (this.eventSink) {\n\n      this.eventSink.off('model.activated',\n        this.__onModelActivated)\n\n      this.eventSink.off('model.unloaded',\n        this.__onModelUnloaded)\n\n      this.eventSink.off('model.loaded',\n        this.__onModelLoaded)\n    }\n\n    this.off()\n\n    return true\n  }\n\n  /////////////////////////////////////////////////////////\n  // Reload callback, in case the extension is re-loaded\n  // more than once\n  //\n  /////////////////////////////////////////////////////////\n  reload (options = {}) {\n\n    this.options = Object.assign({},\n      this.defaultOptions,\n      this.options,\n      options)\n\n    return true\n  }\n\n  /////////////////////////////////////////////////////////\n  // Invoked when extension gets loaded\n  //\n  /////////////////////////////////////////////////////////\n  onExtensionLoaded (event) {\n\n    //console.log('MultiModelExtensionBase.onExtensionLoaded')\n  }\n\n  /////////////////////////////////////////////////////////\n  // Invoked when the model starts to load\n  // The geometry and instanceTree may not be available\n  // at this time\n  //\n  /////////////////////////////////////////////////////////\n  onModelBeginLoad (event) {\n\n    //console.log('MultiModelExtensionBase.onModelBeginLoad')\n  }\n\n  /////////////////////////////////////////////////////////\n  // Triggered by ModelLoader extension when a model is\n  // selected in a multi-model environment\n  //\n  /////////////////////////////////////////////////////////\n  onModelActivated (event) {\n\n    //console.log('MultiModelExtensionBase.onModelActivated')\n  }\n\n  /////////////////////////////////////////////////////////\n  // Invoked when model root node has been loaded\n  // Extensions that do require access to full\n  // model geometry or component tree may use that\n  // event to know a new model has been loaded\n  //\n  /////////////////////////////////////////////////////////\n  __onModelRootLoaded (event) {\n\n    this.viewerEvent([\n\n      Autodesk.Viewing.OBJECT_TREE_CREATED_EVENT,\n      Autodesk.Viewing.GEOMETRY_LOADED_EVENT\n\n    ]).then((args) => {\n\n      this.onModelCompletedLoad (args[0])\n    })\n  }\n\n  onModelRootLoaded (event) {\n\n    //console.log('MultiModelExtensionBase.onModelRootLoaded')\n  }\n\n  /////////////////////////////////////////////////////////\n  // Invoked when object tree is fully loaded.\n  // Extensions that are interested in using the\n  // instanceTree need to use that event to make sure\n  // it is available\n  //\n  ////////////////////////////////////////////////////////\n  onObjectTreeCreated (event) {\n\n    //console.log('MultiModelExtensionBase.onObjectTreeCreated')\n  }\n\n  /////////////////////////////////////////////////////////\n  // Invoked when geometry is fully loaded\n  //\n  /////////////////////////////////////////////////////////\n  onGeometryLoaded (event) {\n\n    //console.log('MultiModelExtensionBase.onGeometryLoaded')\n  }\n\n  /////////////////////////////////////////////////////////\n  // Invoked after onObjectTreeCreated and onGeometryLoaded\n  // have both been fired\n  //\n  /////////////////////////////////////////////////////////\n  onModelCompletedLoad (event) {\n\n    //console.log('MultiModelExtensionBase.onModelCompletedLoad')\n  }\n\n  /////////////////////////////////////////////////////////\n  // Invoked once the viewer toolbar has been created\n  //\n  /////////////////////////////////////////////////////////\n  onToolbarCreated (event) {\n\n    //console.log('MultiModelExtensionBase.onToolbarCreated')\n  }\n\n  /////////////////////////////////////////////////////////\n  // Triggered by ModelLoader extension when a model has\n  // been unloaded as per user request\n  //\n  /////////////////////////////////////////////////////////\n  onModelUnloaded (event) {\n\n    //console.log('MultiModelExtensionBase.onModelUnloaded')\n  }\n\n  /////////////////////////////////////////////////////////\n  // Invoked when a model is being selected\n  //\n  /////////////////////////////////////////////////////////\n  onSelection (event) {\n\n    //console.log('MultiModelExtensionBase.onSelection')\n  }\n\n  /////////////////////////////////////////////////////////\n  //Sink Events\n  //\n  /////////////////////////////////////////////////////////\n  __onModelLoaded (event) {\n\n    this.models = [...this.models, event.model]\n\n    this.onModelBeginLoad (event)\n  }\n\n  __onModelActivated (event) {\n\n    this.onModelActivated (event)\n  }\n\n  __onModelUnloaded (event) {\n\n    this.models = this.models.filter((model) => {\n\n      return model.guid !== event.model.guid\n    })\n\n    this.onModelUnloaded(event)\n  }\n\n  /////////////////////////////////////////////////////////\n  // Initialize all events for the extension\n  // Each event will invoke a predefined handler\n  // implemented or not by the derived extension\n  //\n  /////////////////////////////////////////////////////////\n  initializeEvents () {\n\n    if (this.options.eventSink) {\n\n      // event object passed in options\n      this.eventSink = this.options.eventSink\n\n      this.eventSink.on('model.loaded',\n        this.__onModelLoaded)\n\n      this.eventSink.on('model.activated',\n        this.__onModelActivated)\n\n      this.eventSink.on('model.unloaded',\n        this.__onModelUnloaded)\n    }\n\n    this.viewerEvents = [\n      {\n        id: Autodesk.Viewing.EXTENSION_LOADED_EVENT,\n        handler: 'onExtensionLoaded'\n      },\n      {\n        id: Autodesk.Viewing.OBJECT_TREE_CREATED_EVENT,\n        handler: 'onObjectTreeCreated'\n      },\n      {\n        id: Autodesk.Viewing.MODEL_ROOT_LOADED_EVENT,\n        handler: '__onModelRootLoaded'\n      },\n      {\n        id: Autodesk.Viewing.MODEL_ROOT_LOADED_EVENT,\n        handler: 'onModelRootLoaded'\n      },\n      {\n        id: Autodesk.Viewing.GEOMETRY_LOADED_EVENT,\n        handler: 'onGeometryLoaded'\n      },\n      {\n        id: Autodesk.Viewing.TOOLBAR_CREATED_EVENT,\n        handler: 'onToolbarCreated'\n      },\n      {\n        id: Autodesk.Viewing.AGGREGATE_SELECTION_CHANGED_EVENT,\n        handler: 'onSelection'\n      }\n    ]\n\n    this.viewerEvents.forEach((event) => {\n\n      this.viewerEvent(event.id, this[event.handler])\n    })\n  }\n\n  /////////////////////////////////////////////////////////\n  // Async viewer event\n  //\n  /////////////////////////////////////////////////////////\n  viewerEvent (eventId, handler) {\n\n    if (handler) {\n\n      this.viewer.addEventListener (eventId, handler)\n      return\n    }\n\n    const eventIdArray = Array.isArray(eventId)\n      ? eventId : [eventId]\n\n    const eventTasks = eventIdArray.map((id) => {\n      return new Promise ((resolve) => {\n        const __handler = (args) => {\n          this.viewer.removeEventListener (id, __handler)\n          resolve (args)\n        }\n        this.viewer.addEventListener (id, __handler)\n      })\n    })\n\n    return Promise.all (eventTasks)\n  }\n}\n"],"sourceRoot":""}