{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/lodash/_root.js","webpack:///./node_modules/lodash/isArray.js","webpack:///./node_modules/lodash/_getNative.js","webpack:///./node_modules/three-js/index.js","webpack:///./node_modules/lodash/_Symbol.js","webpack:///./node_modules/lodash/_baseGetTag.js","webpack:///./node_modules/lodash/isObjectLike.js","webpack:///./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack:///./node_modules/@babel/runtime/helpers/createClass.js","webpack:///./node_modules/bluebird/js/browser/bluebird.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/lodash/_ListCache.js","webpack:///./node_modules/lodash/_assocIndexOf.js","webpack:///./node_modules/lodash/isObject.js","webpack:///./node_modules/lodash/_nativeCreate.js","webpack:///./node_modules/lodash/_getMapData.js","webpack:///./node_modules/lodash/isArrayLike.js","webpack:///./node_modules/lodash/isSymbol.js","webpack:///./node_modules/lodash/_toKey.js","webpack:///./node_modules/lodash/identity.js","webpack:///./node_modules/lodash/isArguments.js","webpack:///./node_modules/lodash/eq.js","webpack:///./node_modules/lodash/_Map.js","webpack:///./node_modules/lodash/_MapCache.js","webpack:///./node_modules/lodash/keys.js","webpack:///./node_modules/lodash/_isIndex.js","webpack:///./node_modules/lodash/isLength.js","webpack:///./node_modules/lodash/_isKey.js","webpack:///./node_modules/@babel/runtime/regenerator/index.js","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.WallAnalyzer/threeCSG.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/lodash/_arrayPush.js","webpack:///./node_modules/lodash/_freeGlobal.js","webpack:///./node_modules/lodash/_arrayMap.js","webpack:///./node_modules/lodash/_Stack.js","webpack:///./node_modules/lodash/isFunction.js","webpack:///./node_modules/lodash/_toSource.js","webpack:///./node_modules/lodash/_baseIsEqual.js","webpack:///./node_modules/lodash/_equalArrays.js","webpack:///./node_modules/lodash/isBuffer.js","webpack:///(webpack)/buildin/module.js","webpack:///./node_modules/lodash/isTypedArray.js","webpack:///./node_modules/lodash/_baseUnary.js","webpack:///./node_modules/lodash/_isStrictComparable.js","webpack:///./node_modules/lodash/_matchesStrictComparable.js","webpack:///./node_modules/lodash/_baseGet.js","webpack:///./node_modules/lodash/_castPath.js","webpack:///./node_modules/@babel/runtime/helpers/asyncToGenerator.js","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.WallAnalyzer/EdgesGeometry.js","webpack:///./node_modules/lodash/sortBy.js","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.WallAnalyzer/worker.js","webpack:///./node_modules/timers-browserify/main.js","webpack:///./node_modules/setimmediate/setImmediate.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./node_modules/three-js/three.js","webpack:///(webpack)/buildin/amd-define.js","webpack:///(webpack)/buildin/amd-options.js","webpack:///./node_modules/three-js/addons sync ^\\.\\/.*\\.js$","webpack:///./node_modules/three-js/addons/AdaptiveToneMappingPass.js","webpack:///./node_modules/three-js/addons/BasicShader.js","webpack:///./node_modules/three-js/addons/BleachBypassShader.js","webpack:///./node_modules/three-js/addons/BlendShader.js","webpack:///./node_modules/three-js/addons/BloomPass.js","webpack:///./node_modules/three-js/addons/BokehPass.js","webpack:///./node_modules/three-js/addons/BokehShader.js","webpack:///./node_modules/three-js/addons/BokehShader2.js","webpack:///./node_modules/three-js/addons/BrightnessContrastShader.js","webpack:///./node_modules/three-js/addons/CanvasRenderer.js","webpack:///./node_modules/three-js/addons/ColorCorrectionShader.js","webpack:///./node_modules/three-js/addons/ColorifyShader.js","webpack:///./node_modules/three-js/addons/ConvolutionShader.js","webpack:///./node_modules/three-js/addons/CopyShader.js","webpack:///./node_modules/three-js/addons/DDSLoader.js","webpack:///./node_modules/three-js/addons/DOFMipMapShader.js","webpack:///./node_modules/three-js/addons/DigitalGlitch.js","webpack:///./node_modules/three-js/addons/DotScreenPass.js","webpack:///./node_modules/three-js/addons/DotScreenShader.js","webpack:///./node_modules/three-js/addons/EdgeShader.js","webpack:///./node_modules/three-js/addons/EdgeShader2.js","webpack:///./node_modules/three-js/addons/EffectComposer.js","webpack:///./node_modules/three-js/addons/FXAAShader.js","webpack:///./node_modules/three-js/addons/FilmPass.js","webpack:///./node_modules/three-js/addons/FilmShader.js","webpack:///./node_modules/three-js/addons/FocusShader.js","webpack:///./node_modules/three-js/addons/FresnelShader.js","webpack:///./node_modules/three-js/addons/GammaCorrectionShader.js","webpack:///./node_modules/three-js/addons/GlitchPass.js","webpack:///./node_modules/three-js/addons/HorizontalBlurShader.js","webpack:///./node_modules/three-js/addons/HorizontalTiltShiftShader.js","webpack:///./node_modules/three-js/addons/HueSaturationShader.js","webpack:///./node_modules/three-js/addons/JSONLoader.js","webpack:///./node_modules/three-js/addons/KaleidoShader.js","webpack:///./node_modules/three-js/addons/LuminosityShader.js","webpack:///./node_modules/three-js/addons/MTLLoader.js","webpack:///./node_modules/three-js/addons/MarchingCubes.js","webpack:///./node_modules/three-js/addons/MaskPass.js","webpack:///./node_modules/three-js/addons/MirrorShader.js","webpack:///./node_modules/three-js/addons/NormalMapShader.js","webpack:///./node_modules/three-js/addons/OBJLoader.js","webpack:///./node_modules/three-js/addons/OceanShaders.js","webpack:///./node_modules/three-js/addons/OrbitControls.js","webpack:///./node_modules/three-js/addons/ParallaxShader.js","webpack:///./node_modules/three-js/addons/Projector.js","webpack:///./node_modules/three-js/addons/RGBShiftShader.js","webpack:///./node_modules/three-js/addons/RenderPass.js","webpack:///./node_modules/three-js/addons/SSAOShader.js","webpack:///./node_modules/three-js/addons/SVGLoader.js","webpack:///./node_modules/three-js/addons/SavePass.js","webpack:///./node_modules/three-js/addons/SepiaShader.js","webpack:///./node_modules/three-js/addons/ShaderPass.js","webpack:///./node_modules/three-js/addons/TechnicolorShader.js","webpack:///./node_modules/three-js/addons/TexturePass.js","webpack:///./node_modules/three-js/addons/ToneMapShader.js","webpack:///./node_modules/three-js/addons/TriangleBlurShader.js","webpack:///./node_modules/three-js/addons/UnpackDepthRGBAShader.js","webpack:///./node_modules/three-js/addons/VerticalBlurShader.js","webpack:///./node_modules/three-js/addons/VerticalTiltShiftShader.js","webpack:///./node_modules/three-js/addons/VignetteShader.js","webpack:///./node_modules/lodash/_baseFlatten.js","webpack:///./node_modules/lodash/_isFlattenable.js","webpack:///./node_modules/lodash/_baseIsArguments.js","webpack:///./node_modules/lodash/_getRawTag.js","webpack:///./node_modules/lodash/_objectToString.js","webpack:///./node_modules/lodash/_baseOrderBy.js","webpack:///./node_modules/lodash/_baseIteratee.js","webpack:///./node_modules/lodash/_baseMatches.js","webpack:///./node_modules/lodash/_baseIsMatch.js","webpack:///./node_modules/lodash/_listCacheClear.js","webpack:///./node_modules/lodash/_listCacheDelete.js","webpack:///./node_modules/lodash/_listCacheGet.js","webpack:///./node_modules/lodash/_listCacheHas.js","webpack:///./node_modules/lodash/_listCacheSet.js","webpack:///./node_modules/lodash/_stackClear.js","webpack:///./node_modules/lodash/_stackDelete.js","webpack:///./node_modules/lodash/_stackGet.js","webpack:///./node_modules/lodash/_stackHas.js","webpack:///./node_modules/lodash/_stackSet.js","webpack:///./node_modules/lodash/_baseIsNative.js","webpack:///./node_modules/lodash/_isMasked.js","webpack:///./node_modules/lodash/_coreJsData.js","webpack:///./node_modules/lodash/_getValue.js","webpack:///./node_modules/lodash/_mapCacheClear.js","webpack:///./node_modules/lodash/_Hash.js","webpack:///./node_modules/lodash/_hashClear.js","webpack:///./node_modules/lodash/_hashDelete.js","webpack:///./node_modules/lodash/_hashGet.js","webpack:///./node_modules/lodash/_hashHas.js","webpack:///./node_modules/lodash/_hashSet.js","webpack:///./node_modules/lodash/_mapCacheDelete.js","webpack:///./node_modules/lodash/_isKeyable.js","webpack:///./node_modules/lodash/_mapCacheGet.js","webpack:///./node_modules/lodash/_mapCacheHas.js","webpack:///./node_modules/lodash/_mapCacheSet.js","webpack:///./node_modules/lodash/_baseIsEqualDeep.js","webpack:///./node_modules/lodash/_SetCache.js","webpack:///./node_modules/lodash/_setCacheAdd.js","webpack:///./node_modules/lodash/_setCacheHas.js","webpack:///./node_modules/lodash/_arraySome.js","webpack:///./node_modules/lodash/_cacheHas.js","webpack:///./node_modules/lodash/_equalByTag.js","webpack:///./node_modules/lodash/_Uint8Array.js","webpack:///./node_modules/lodash/_mapToArray.js","webpack:///./node_modules/lodash/_setToArray.js","webpack:///./node_modules/lodash/_equalObjects.js","webpack:///./node_modules/lodash/_getAllKeys.js","webpack:///./node_modules/lodash/_baseGetAllKeys.js","webpack:///./node_modules/lodash/_getSymbols.js","webpack:///./node_modules/lodash/_arrayFilter.js","webpack:///./node_modules/lodash/stubArray.js","webpack:///./node_modules/lodash/_arrayLikeKeys.js","webpack:///./node_modules/lodash/_baseTimes.js","webpack:///./node_modules/lodash/stubFalse.js","webpack:///./node_modules/lodash/_baseIsTypedArray.js","webpack:///./node_modules/lodash/_nodeUtil.js","webpack:///./node_modules/lodash/_baseKeys.js","webpack:///./node_modules/lodash/_isPrototype.js","webpack:///./node_modules/lodash/_nativeKeys.js","webpack:///./node_modules/lodash/_overArg.js","webpack:///./node_modules/lodash/_getTag.js","webpack:///./node_modules/lodash/_DataView.js","webpack:///./node_modules/lodash/_Promise.js","webpack:///./node_modules/lodash/_Set.js","webpack:///./node_modules/lodash/_WeakMap.js","webpack:///./node_modules/lodash/_getMatchData.js","webpack:///./node_modules/lodash/_baseMatchesProperty.js","webpack:///./node_modules/lodash/get.js","webpack:///./node_modules/lodash/_stringToPath.js","webpack:///./node_modules/lodash/_memoizeCapped.js","webpack:///./node_modules/lodash/memoize.js","webpack:///./node_modules/lodash/toString.js","webpack:///./node_modules/lodash/_baseToString.js","webpack:///./node_modules/lodash/hasIn.js","webpack:///./node_modules/lodash/_baseHasIn.js","webpack:///./node_modules/lodash/_hasPath.js","webpack:///./node_modules/lodash/property.js","webpack:///./node_modules/lodash/_baseProperty.js","webpack:///./node_modules/lodash/_basePropertyDeep.js","webpack:///./node_modules/lodash/_baseMap.js","webpack:///./node_modules/lodash/_baseEach.js","webpack:///./node_modules/lodash/_baseForOwn.js","webpack:///./node_modules/lodash/_baseFor.js","webpack:///./node_modules/lodash/_createBaseFor.js","webpack:///./node_modules/lodash/_createBaseEach.js","webpack:///./node_modules/lodash/_baseSortBy.js","webpack:///./node_modules/lodash/_compareMultiple.js","webpack:///./node_modules/lodash/_compareAscending.js","webpack:///./node_modules/lodash/_baseRest.js","webpack:///./node_modules/lodash/_overRest.js","webpack:///./node_modules/lodash/_apply.js","webpack:///./node_modules/lodash/_setToString.js","webpack:///./node_modules/lodash/_baseSetToString.js","webpack:///./node_modules/lodash/constant.js","webpack:///./node_modules/lodash/_defineProperty.js","webpack:///./node_modules/lodash/_shortOut.js","webpack:///./node_modules/lodash/_isIterateeCall.js"],"names":["parentHotUpdateCallback","window","chunkId","moreModules","hotAvailableFilesMap","hotRequestedFilesMap","moduleId","Object","prototype","hasOwnProperty","call","hotUpdate","hotWaitingFiles","hotChunksLoading","hotUpdateDownloaded","hotAddUpdateChunk","hotCurrentChildModule","hotApplyOnUpdate","hotCurrentHash","hotRequestTimeout","hotCurrentModuleData","hotCurrentParents","hotCurrentParentsTemp","hotCreateRequire","me","installedModules","__webpack_require__","fn","request","hot","active","parents","indexOf","push","children","console","warn","ObjectFactory","name","configurable","enumerable","get","set","value","defineProperty","e","hotStatus","hotSetStatus","then","finishChunkLoading","err","hotWaitingFilesMap","hotEnsureUpdateChunk","t","mode","hotCreateModule","_acceptedDependencies","_declinedDependencies","_selfAccepted","_selfDeclined","_disposeHandlers","_main","accept","dep","callback","undefined","i","length","decline","dispose","addDisposeHandler","removeDisposeHandler","idx","splice","check","hotCheck","apply","hotApply","status","l","hotStatusHandlers","addStatusHandler","removeStatusHandler","data","newStatus","hotDeferred","hotUpdateNewHash","toModuleId","id","Error","requestTimeout","Promise","resolve","reject","XMLHttpRequest","requestPath","p","open","timeout","send","onreadystatechange","readyState","update","JSON","parse","responseText","c","h","promise","importScripts","hotDownloadUpdateChunk","deferred","result","outdatedModules","options","cb","j","module","getAffectedStuff","updateModuleId","outdatedDependencies","queue","map","chain","queueItem","pop","type","parentId","parent","concat","addAllToSet","a","b","item","appliedUpdate","warnUnexpectedRequire","abortError","doApply","doDispose","chainInfo","join","onDeclined","ignoreDeclined","onUnaccepted","ignoreUnaccepted","onAccepted","onDisposed","outdatedSelfAcceptedModules","errorHandler","keys","forEach","installedChunks","hotDisposeChunk","dependency","moduleOutdatedDependencies","slice","disposeHandlers","child","modules","error","callbacks","onErrored","dependencyId","ignoreErrored","err2","originalError","exports","m","d","getter","o","r","Symbol","toStringTag","__esModule","ns","create","key","bind","n","object","property","s","freeGlobal","freeSelf","self","root","Function","isArray","Array","baseIsNative","getValue","THREE","addons","addonIndex","addon","getRawTag","objectToString","nullTag","undefinedTag","symToStringTag","instance","Constructor","TypeError","_defineProperties","target","props","descriptor","writable","protoProps","staticProps","process","global","setImmediate","define","u","_dereq_","f","code","1","SomePromiseArray","_SomePromiseArray","any","promises","ret","setHowMany","setUnwrap","init","this","2","firstLineError","schedule","Queue","util","Async","_customScheduler","_isTickUsed","_lateQueue","_normalQueue","_haveDrainedQueues","_trampolineEnabled","drainQueues","_drainQueues","_schedule","AsyncInvokeLater","receiver","arg","_queueTick","AsyncInvoke","AsyncSettlePromises","_pushOne","setScheduler","prev","hasCustomScheduler","enableTrampoline","disableTrampolineIfNecessary","hasDevTools","haveItemsQueued","fatalError","isNode","stderr","write","stack","exit","throwLater","arguments","setTimeout","invokeLater","invoke","settlePromises","_settlePromises","_drainQueue","shift","_reset","./queue","./schedule","./util","3","INTERNAL","tryConvertToPromise","debug","calledBind","rejectThis","_","_reject","targetRejected","context","promiseRejectionQueued","bindingPromise","_then","bindingResolved","thisArg","_bitField","_resolveCallback","bindingRejected","_propagateFrom","propagateFromFunction","_boundValue","boundValueFunction","maybePromise","_target","_setBoundTo","_setOnCancel","obj","_boundTo","_isBound","4","old","bluebird","noConflict","./promise","5","cr","callerCache","getterCache","canEvaluate","isIdentifier","caller","methodName","message","classString","toString","ensureMethod","namedGetter","indexedGetter","index","Math","max","args","propertyName","maybeGetter","getGetter","6","PromiseArray","apiRejection","tryCatch","errorObj","async","_async","cancel","cancellation","_warn","_isCancellable","_cancelBy","_isFollowing","_followee","_cancelBranched","_cancellationParent","_setWillBeCancelled","_branchHasCancelled","_branchesRemainingToCancel","_enoughBranchesHaveCancelled","canceller","_invokeOnCancel","_cancel","_setCancelled","_cancelPromises","_length","_unsetOnCancel","_onCancelField","isPending","_isCancelled","isCancellable","isCancelled","_doInvokeOnCancel","onCancelCallback","internalOnly","_attachExtraTrace","_resultCancelled","_onCancel","_invokeInternalOnCancel","7","NEXT_FILTER","getKeys","instances","boundTo","predicateLoop","matchesPredicate","isObject","./es5","8","longStackTraces","contextStack","Context","_trace","CapturedTrace","peekContext","lastIndex","_promiseCreated","_pushContext","_popContext","_peekContext","trace","deactivateLongStackTraces","activateLongStackTraces","Promise_pushContext","Promise_popContext","Promise_PeekContext","Promise_peekContext","Promise_promiseCreated","ctx","9","unhandledRejectionHandled","possiblyUnhandledRejection","printWarning","getDomain","_getDomain","Warning","canAttachTrace","bluebirdFramePattern","nodeFramePattern","parseLinePattern","stackFramePattern","formatStack","indentStackFrames","debugging","env","warnings","wForgottenReturn","suppressUnhandledRejections","_ensurePossibleRejectionHandled","_setRejectionIsUnhandled","_notifyUnhandledRejection","_notifyUnhandledRejectionIsHandled","fireRejectionEvent","_setReturnedNonUndefined","_returnedNonUndefined","_isRejectionUnhandled","reason","_settledValue","_setUnhandledRejectionIsNotified","_unsetUnhandledRejectionIsNotified","_isUnhandledRejectionNotified","_unsetRejectionIsUnhandled","shouldUseOwnTrace","onPossiblyUnhandledRejection","domain","domainBind","onUnhandledRejectionHandled","disableLongStackTraces","config","longStackTracesIsSupported","Promise_captureStackTrace","_captureStackTrace","Promise_attachExtraTrace","longStackTracesCaptureStackTrace","longStackTracesAttachExtraTrace","hasLongStackTraces","fireDomEvent","CustomEvent","event","dispatchEvent","domEvent","toLowerCase","detail","cancelable","Event","document","createEvent","initCustomEvent","fireGlobalEvent","emit","method","generatePromiseLifecycleEventObject","eventToObjectGenerator","promiseCreated","promiseFulfilled","promiseRejected","promiseResolved","promiseCancelled","promiseChained","warning","unhandledRejection","rejectionHandled","activeFireEvent","globalEventFired","domEventFired","defaultFireEvent","cancellationExecute","executor","onCancel","_attachCancellationCallback","cancellationAttachCancellationCallback","previousOnCancel","cancellationOnCancel","cancellationSetOnCancel","cancellationClearCancellationData","cancellationPropagateFrom","flags","branchesRemainingToCancel","opts","warningsOption","_clearCancellationData","_execute","monitoring","_fireEvent","handler","isFulfilled","ignoreSelf","_parent","attachExtraTrace","__stackCleaned__","parsed","parseStackAndMessage","notEnumerableProp","formatAndLogError","cleanStack","line","isTraceLine","test","isInternalFrame","shouldIgnore","charAt","replace","split","stackFramesAsArray","title","isSoft","String","log","localHandler","localEventFired","formatNonError","str","stringify","substr","maxChars","snip","captureStackTrace","parseLineInfoRegex","parseLineInfo","matches","match","fileName","parseInt","_promisesCreated","uncycle","inherits","nodes","stackToIndex","node","cycleEdgeNode","currentChildLength","stacks","current","currentLastIndex","currentLastLine","commonRootMeetPoint","removeCommonRoots","removeDuplicateOrEmptyJumps","reconstructStack","v8stackFramePattern","v8stackFormatter","stackTraceLimit","ignoreUntil","hasStackAfterThrow","isTTY","color","checkForgottenReturns","returnValue","handlerLine","creatorLine","traceLines","lineMatches","firstUserLine","msg","setBounds","lastLineError","firstFileName","lastFileName","firstStackLines","lastStackLines","firstIndex","info","deprecated","replacement","./errors","10","returner","thrower","thenReturn","thenThrow","catchThrow","_reason","caught","catchReturn","_value","11","PromiseReduce","reduce","PromiseAll","all","promiseAllThis","each","mapSeries","12","_TypeError","_RangeError","es5","Objectfreeze","freeze","subError","nameProperty","defaultMessage","SubError","constructor","CancellationError","TimeoutError","AggregateError","RangeError","methods","level","OperationalError","cause","indent","lines","errorTypes","RejectionError","13","isES5","getDescriptor","getOwnPropertyDescriptor","names","getOwnPropertyNames","getPrototypeOf","propertyIsWritable","prop","has","proto","ObjectKeys","desc","14","PromiseMap","filter","15","catchFilter","PassThroughHandlerContext","called","cancelPromise","FinallyHandlerCancelReaction","finallyHandler","checkCancel","succeed","fail","reasonOrValue","isFinallyHandler","isRejected","_passThrough","success","lastly","tap","tapCatch","handlerOrPredicate","len","catchInstances","./catch_filter","16","Proxyable","yieldHandlers","PromiseSpawn","generatorFunction","yieldHandler","internal","_finallyPromise","_promise","_stack","_generatorFunction","_receiver","_generator","_yieldHandlers","_yieldedPromise","_cancellationPhase","_isResolved","_cleanup","_fulfill","_promiseCancelled","coroutine","returnSentinel","_continue","_promiseFulfilled","next","_promiseRejected","_run","_rejectCallback","done","traceParent","promiseFromYieldHandler","bitField","_proxy","PromiseSpawn$","generator","spawn","addYieldHandler","17","last","spread","18","MappingPromiseArray","limit","_filter","constructor$","_callback","_preservedValues","_limit","_inFlight","_queue","_asyncInit","concurrency","isFinite","_init$","_init","values","_values","preservedValues","_totalResolved","_resolve","booleans","19","_resolveFromSyncValue","attempt","20","maybeWrapAsError","rErrorKey","wrapAsOperationalError","isUntypedError","markAsOriginatingFromRejection","multiArgs","wrapped","21","spreadAdapter","val","nodeback","successAdapter","errorAdapter","newReason","asCallback","nodeify","adapter","22","makeSelfResolutionError","reflectHandler","PromiseInspection","UNDEFINED_BINDING","errors","APPLY","createContext","nodebackForPromise","_fulfillmentHandler0","_rejectionHandler0","_promise0","_receiver0","_resolveFromExecutor","deferResolve","v","deferReject","fillTypes","reflect","didFulfill","didReject","_setIsFinal","toJSON","fulfillmentValue","rejectionReason","originatesFromRejection","getNewLibraryCopy","is","fromNode","fromCallback","_isFateSealed","_setAsyncGuaranteed","cast","_setFulfilled","fulfilled","rejected","internalData","haveInternalData","settler","_settlePromiseCtx","_settlePromiseLateCancellationObserver","_addCallbacks","_setLength","_setRejected","_setFollowing","_isFinal","_unsetCancelled","_receiverAt","_promiseAt","_fulfillmentHandlerAt","_rejectionHandlerAt","_migrateCallback0","follower","fulfill","_migrateCallbackAt","base","proxyable","shouldBind","_setFollowee","synchronous","ignoreNonErrorWarnings","ensureErrorObject","hasStack","_settlePromiseFromHandler","x","_settlePromise","isPromise","asyncGuaranteed","_settlePromise0","_clearCallbackDataAtIndex","_fulfillPromises","_rejectPromises","defer","pending","version","toFastProperties","./any.js","./async","./bind","./call_get.js","./cancel","./context","./debuggability","./direct_resolve","./each.js","./filter.js","./finally","./generators.js","./join","./map.js","./method","./nodeback","./nodeify.js","./promise_array","./promisify.js","./props.js","./race.js","./reduce.js","./settle.js","./some.js","./synchronous_inspection","./thenables","./timers.js","./using.js","23","resolveValueIfEmpty","asArray","_iterate","_resolveEmptyArray","Map","toResolutionValue","getActualLength","shouldCopyValues","isResolved","24","THIS","withAppended","defaultPromisified","__isPromisified__","noCopyPropsPattern","RegExp","defaultFilter","propsFilter","isPromisified","hasPromisified","suffix","getDataPropertyOrDefault","promisifiableMethods","suffixRegexp","inheritedDataKeys","passesDefaultFilter","keyWithoutAsyncSuffix","checkValid","escapeIdentRegex","makeNodePromisified","makeNodePromisifiedEval","__","defaultThis","promisified","promisifyAll","promisifier","promisifiedKey","promisify","copyDescriptors","isClass","25","Es6Map","mapToEntries","size","extractEntry","PropertiesPromiseArray","entries","isMap","_isMap","castValue","entriesToMap","keyOffset","26","capacity","_capacity","_front","_willBeOverCapacity","_checkCapacity","wrapMask","front","_resizeTo","oldCapacity","src","srcIndex","dst","dstIndex","arrayMove","27","raceLater","array","race","28","ReductionPromiseArray","initialValue","_each","_fn","_initialValue","_currentCancellable","_eachValues","completed","valueOrReason","gotAccum","accum","_gotAccum","gotValue","_eachComplete","sender","_resultCancelled$","29","NativePromise","getNativePromise","MutationObserver","GlobalSetImmediate","ProcessNextTick","nextTick","isRecentNode","nativePromise","navigator","standalone","cordova","div","createElement","attributes","toggleScheduled","div2","classList","toggle","observe","disconnect","30","SettledPromiseArray","_promiseResolved","inspection","_settledValueField","settle","31","CANCELLATION","_howMany","_unwrap","_initialized","some","howMany","isArrayResolved","_canPossiblyFulfill","_getRangeError","count","_addFulfilled","_fulfilled","_addRejected","_checkOutcome","_rejected","32","__isCancelled","33","hasProp","doGetThen","getThen","isAnyBluebirdPromise","doThenable","34","HandleWrapper","handle","clearTimeout","afterValue","delay","ms","successClear","failureClear","handleWrapper","afterTimeout","35","NULL","resources","iterator","thenable","_isDisposable","_getDisposer","_setDisposable","castPreservingDisposable","tryDispose","Disposer","_data","_context","FunctionDisposer","maybeUnwrapDisposer","isDisposer","ResourceList","resource","_unsetDisposable","using","input","spreadArgs","disposer","reflectedResources","resultPromise","inspections","_disposer","36","tryCatchTarget","globalObject","tryCatcher","Child","Parent","T","isPrimitive","maybeError","safeToString","appendee","defaultValue","excludedPrototypes","isExcludedProto","visitedKeys","enumeration","thisAssignmentPattern","hasMethods","hasMethodsOtherThanConstructor","hasThisAssignmentAndStaticMethods","FakeConstructor","rident","filledRange","prefix","isError","ignore","from","to","ArrayFrom","itResult","it","hasEnvVariables","NODE_ENV","WEBPACK","chrome","loadTimes","versions","Number","P","g","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","ListCache","clear","entry","eq","nativeCreate","getNative","isKeyable","__data__","isFunction","isLength","baseGetTag","isObjectLike","symbolTag","isSymbol","INFINITY","baseIsArguments","objectProto","propertyIsEnumerable","isArguments","other","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","MapCache","arrayLikeKeys","baseKeys","isArrayLike","MAX_SAFE_INTEGER","reIsUint","reIsDeepProp","reIsPlainProp","THREELib","ThreeBSP","geometry","_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default","_length_i","face","vertex","faceVertexUvs","uvs","polygon","polygons","Geometry","matrix","Matrix4","Mesh","Node","tree","updateMatrix","clone","faces","Polygon","Face3","vertices","Vector2","y","Vertex","z","vertexNormals","applyMatrix4","calculateProperties","other_tree","invert","clipTo","build","allPolygons","polygon_vertice_count","vertex_idx_a","vertex_idx_b","vertex_idx_c","verticeUvs","getInverse","polygon_count","vertice_dict","uv","Vector3","normal","material","toGeometry","mesh","applyMatrix","matrixWorld","w","subtract","cross","normalize","dot","vertice_count","multiplyScalar","side_value","classification","num_positive","num_negative","classifyVertex","coplanar_front","coplanar_back","back","classifySide","ti","tj","vi","vj","interpolate","scalar","sqrt","add","sub","lerp","elements","divider","splitPolygon","temp","flip","clipPolygons","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","currentQueue","draining","queueIndex","cleanUpNextTick","drainQueue","run","marker","runClearTimeout","Item","noop","browser","argv","on","addListener","once","off","removeListener","removeAllListeners","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","offset","iteratee","stackClear","stackDelete","stackGet","stackHas","stackSet","Stack","asyncTag","funcTag","genTag","proxyTag","tag","funcToString","func","baseIsEqualDeep","baseIsEqual","bitmask","customizer","SetCache","arraySome","cacheHas","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","equalFunc","isPartial","arrLength","othLength","stacked","seen","arrValue","othValue","compared","othIndex","stubFalse","freeExports","nodeType","freeModule","Buffer","isBuffer","webpackPolyfill","deprecate","paths","baseIsTypedArray","baseUnary","nodeUtil","nodeIsTypedArray","isTypedArray","srcValue","castPath","toKey","path","isKey","stringToPath","asyncGeneratorStep","gen","_next","_throw","__webpack_exports__","EdgesGeometry","three_js__WEBPACK_IMPORTED_MODULE_0__","Float32BufferAttribute","itemSize","BufferAttribute","Float32Array","thresholdAngle","BufferGeometry","parameters","edge1","edge2","geometry2","thresholdDot","cos","PI","edge","edges","isBufferGeometry","fromBufferGeometry","mergeVertices","computeFaceNormals","sourceVertices","min","index1","index2","face1","face2","addAttribute","baseFlatten","baseOrderBy","baseRest","isIterateeCall","sortBy","collection","iteratees","getComponents","category","meshes","addEventListener","msgHandler","msgId","vertexArray","nbMeshes","meshData","positions","indices","stride","getMeshGeometry","fromArray","boundingBox","bsp","dbId","buildComponentMesh","removeEventListener","offsets","start","oi","ol","il","vA","vB","vC","postWallMesh","assign","floorDbIds","pathEdges","postMessage","getHardEdges","position","end","mergeBoxes","boxes","mergedBoxes","height","MAX_VALUE","box","lastBox","dbIds","_callee","res","floorMeshes","wallMeshes","modelInfo","modelBox","extBoxes","orderedExtBoxes","_loop","_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","wrap","sent","bbox","transform","levelBox","levelBoundingMesh","BoxGeometry","makeTranslation","levelBSP","wallMesh","intersect","toMesh","filteredEdges","levelCount","wallCount","close","stop","workerMain","scope","Timeout","clearFn","_id","_clearFn","setInterval","clearInterval","unref","ref","enroll","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","_onTimeout","clearImmediate","registerImmediate","html","channel","messagePrefix","onGlobalMessage","nextHandle","tasksByHandle","currentlyRunningATask","doc","attachTo","runIfPresent","postMessageIsAsynchronous","oldOnMessage","onmessage","canUsePostMessage","MessageChannel","port1","port2","documentElement","script","removeChild","appendChild","random","source","attachEvent","task","runtime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","innerFn","outerFn","tryLocsList","protoGenerator","Generator","_invoke","state","GenStateSuspendedStart","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","_sent","dispatchException","abrupt","record","GenStateSuspendedYield","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","defineIteratorMethods","AsyncIterator","previousPromise","callInvokeWithMethodAndArg","__await","unwrapped","resultName","nextLoc","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","iter","reverse","skipTempReset","rootRecord","rval","exception","loc","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","__WEBPACK_AMD_DEFINE_RESULT__","v1","quaternion","q","startP","startEnd","points","closestPoint","segCenter","segDir","diff","p1","p2","sphere","v0","scale","m1","q1","focus","fov","aspect","near","far","eyeRight","eyeLeft","textureLoader","materialLoader","offsetMatrix","matrixPosition","radians","axis","vector","REVISION","EPSILON","pow","sign","output","nextKey","MOUSE","LEFT","MIDDLE","RIGHT","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","FrontFaceDirectionCW","FrontFaceDirectionCCW","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","FrontSide","BackSide","DoubleSide","FlatShading","SmoothShading","NoColors","FaceColors","VertexColors","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","Uncharted2ToneMapping","CineonToneMapping","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","SphericalReflectionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipMapNearestFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipMapNearestFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","RGBEFormat","DepthFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","GammaEncoding","RGBEEncoding","LogLuvEncoding","RGBM7Encoding","RGBM16Encoding","RGBDEncoding","BasicDepthPacking","RGBADepthPacking","Color","setRGB","copy","setHex","setStyle","setScalar","hex","floor","setHSL","hue2rgb","euclideanModulo","clamp","style","handleAlpha","string","parseFloat","exec","components","ColorKeywords","copyGammaToLinear","gammaFactor","copyLinearToGamma","safeInverse","convertGammaToLinear","convertLinearToGamma","getHex","getHexString","getHSL","optionalTarget","hue","saturation","hsl","lightness","delta","getStyle","offsetHSL","addColors","color1","color2","addScalar","multiply","alpha","equals","toArray","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","Quaternion","_x","_y","_z","_w","onChangeCallback","setFromEuler","euler","Euler","c1","c2","c3","s1","sin","s2","s3","order","setFromAxisAngle","angle","halfAngle","setFromRotationMatrix","te","m11","m12","m13","m21","m22","m23","m31","m32","m33","setFromUnitVectors","vFrom","vTo","abs","crossVectors","inverse","conjugate","lengthSq","multiplyQuaternions","premultiply","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","slerp","qb","cosHalfTheta","sinHalfTheta","halfTheta","atan2","ratioA","ratioB","onChange","qa","qm","slerpFlat","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","sqrSin","tDir","width","setX","setY","setComponent","getComponent","addVectors","addScaledVector","subVectors","subScalar","divide","divideScalar","clampScalar","minVal","maxVal","clampLength","ceil","round","roundToZero","negate","lengthManhattan","distanceTo","distanceToSquared","dx","dy","distanceToManhattan","setLength","lerpVectors","v2","fromAttribute","attribute","rotateAround","center","setZ","multiplyVectors","applyEuler","applyQuaternion","applyAxisAngle","applyMatrix3","applyProjection","qx","qy","qz","qw","ix","iy","iz","iw","project","camera","multiplyMatrices","projectionMatrix","unproject","transformDirection","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","angleTo","theta","acos","dz","setFromSpherical","sinPhiRadius","phi","radius","setFromMatrixPosition","setFromMatrixColumn","setFromMatrixScale","sx","sy","sz","Vector4","setW","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","xx","yy","zz","xy","xz","yz","_order","DefaultOrder","RotationOrders","asin","setFromQuaternion","makeRotationFromQuaternion","setFromVector3","reorder","newOrder","toVector3","optionalResult","Line3","distanceSq","distance","at","closestPointToPointParameter","point","clampToLine","startEnd2","closestPointToPoint","Box2","Infinity","setFromPoints","makeEmpty","expandByPoint","setFromCenterAndSize","halfSize","isEmpty","expandByVector","expandByScalar","containsPoint","containsBox","getParameter","intersectsBox","clampPoint","distanceToPoint","union","translate","Box3","setFromArray","minX","minY","minZ","maxX","maxY","maxZ","setFromObject","updateMatrixWorld","traverse","InterleavedBufferAttribute","intersectsSphere","intersectsPlane","plane","constant","getBoundingSphere","Sphere","Matrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","identity","setFromMatrix4","applyToVector3Array","applyToBuffer","buffer","getX","getY","getZ","setXYZ","determinant","throwOnDegenerate","t11","t12","t13","det","detInv","transpose","tmp","flattenToArrayOffset","getNormalMatrix","matrix4","transposeIntoArray","n14","n24","n34","n41","n42","n43","n44","copyPosition","extractBasis","xAxis","yAxis","zAxis","makeBasis","extractRotation","scaleX","scaleY","scaleZ","makeRotationFromEuler","ae","af","be","bf","ce","cf","de","df","ac","ad","bc","bd","x2","y2","z2","wx","wy","wz","lookAt","eye","up","a11","a12","a13","a14","a21","a22","a23","a24","a31","a32","a33","a34","a41","a42","a43","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","multiplyToArray","getPosition","setPosition","t14","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","tx","ty","makeScale","compose","decompose","invSX","invSY","invSZ","makeFrustum","left","right","bottom","top","makePerspective","ymax","DEG2RAD","ymin","xmin","xmax","makeOrthographic","Ray","origin","direction","ray","recast","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","s0","sqrDist","extDet","segExtent","a01","b0","b1","invDet","intersectSphere","tca","d2","radius2","thc","t0","t1","distanceToPlane","denominator","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","backfaceCulling","DdN","DdQxE2","DdE1xQ","QdN","optionalCenter","maxRadiusSq","empty","radiusSum","deltaLengthSq","getBoundingBox","Frustum","p0","p3","p4","p5","planes","Plane","frustum","setFromMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","setComponents","intersectsObject","boundingSphere","computeBoundingSphere","intersectsSprite","sprite","negRadius","d1","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","inverseNormalLength","distanceToSphere","projectPoint","orthoPoint","perpendicularMagnitude","intersectLine","intersectsLine","startSign","endSign","coplanarPoint","optionalNormalMatrix","referencePoint","normalMatrix","Spherical","makeSafe","vec3","RAD2DEG","generateUUID","chars","uuid","rnd","mapLinear","a1","a2","b2","smoothstep","smootherstep","random16","randInt","low","high","randFloat","randFloatSpread","range","degToRad","degrees","radToDeg","isPowerOfTwo","nearestPowerOfTwo","LN2","nextPowerOfTwo","Spline","intPoint","weight","w2","w3","pa","pb","pc","pd","v3","t2","t3","initFromArray","getPoint","k","getControlPointsArray","coords","getLength","nSubDivisions","nSamples","oldIntPoint","oldPosition","tmpVec","chunkLengths","totalLength","chunks","total","reparametrizeByArcLength","samplingCoef","indexCurrent","indexNext","realDistance","sampling","newpoints","sl","Triangle","resultLengthSq","barycoordFromPoint","dot00","dot01","dot02","dot11","dot12","denom","invDenom","setFromPointsAndIndices","i0","i1","i2","triangle","area","midpoint","edgeList","projectedPoint","minDistance","Interpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","_cachedIndex","valueSize","evaluate","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","beforeStart_","mid","intervalChanged_","interpolate_","settings","DefaultSettings_","getSettings_","copySampleValue_","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o1","o0","oP","oN","wP","wN","ppp","sP","sN","DiscreteInterpolant","LinearInterpolant","offset1","offset0","weight1","weight0","QuaternionLinearInterpolant","Clock","autoStart","startTime","oldTime","elapsedTime","running","performance","Date","now","getElapsedTime","getDelta","newTime","EventDispatcher","listener","_listeners","hasEventListener","listenerArray","Layers","mask","enable","disable","layers","ascSort","intersectObject","raycaster","intersects","recursive","visible","raycast","Raycaster","params","Line","LOD","Points","threshold","Sprite","defineProperties","PointCloud","linePrecision","setFromCamera","PerspectiveCamera","OrthographicCamera","sort","intersectObjects","objects","Object3D","Object3DIdCount","DefaultUp","rotation","modelViewMatrix","matrixAutoUpdate","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","castShadow","receiveShadow","frustumCulled","renderOrder","userData","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateX","rotateY","rotateZ","translateOnAxis","translateX","translateY","translateZ","localToWorld","worldToLocal","remove","getObjectById","getObjectByProperty","getObjectByName","getWorldPosition","getWorldQuaternion","getWorldRotation","getWorldScale","getWorldDirection","traverseVisible","traverseAncestors","force","meta","isRootObject","geometries","materials","textures","images","metadata","extractFromCache","cache","materialIndex","vertexColors","normalized","dynamic","updateRange","needsUpdate","setDynamic","copyAt","copyArray","copyColorsArray","colors","copyIndicesArray","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","getW","setXY","setXYZW","Int8Attribute","Int8Array","Uint8Attribute","Uint8Array","Uint8ClampedAttribute","Uint8ClampedArray","Int16Attribute","Int16Array","Uint16Attribute","Uint16Array","Int32Attribute","Int32Array","Uint32Attribute","Uint32Array","Float32Attribute","Float64Attribute","Float64Array","DynamicBufferAttribute","InstancedBufferAttribute","meshPerAttribute","InterleavedBuffer","InstancedInterleavedBuffer","interleavedBuffer","GeometryIdCount","morphTargets","morphNormals","skinWeights","skinIndices","lineDistances","elementsNeedUpdate","verticesNeedUpdate","uvsNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","lineDistancesNeedUpdate","groupsNeedUpdate","jl","computeBoundingBox","normals","uvs2","uv2","tempNormals","tempUVs","tempUVs2","addFace","groups","group","ab","fl","computeVertexNormals","areaWeighted","vl","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","tmpGeo","faceNormals","dstNormalsFace","dstNormalsVertex","faceNormal","computeTangents","computeLineDistances","merge","materialIndexOffset","vertexOffset","vertices1","vertices2","faces1","faces2","uvs1","vertexCopy","faceCopy","faceVertexNormals","faceVertexColors","uvCopy","mergeMesh","verticesMap","unique","changes","precision","faceIndicesToRemove","sortFacesByMaterialIndex","newUvs1","newUvs2","normalsHash","colorsHash","uvsHash","hasFaceVertexUv","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","hasFaceVertexColor","faceType","setBit","getUvIndex","getNormalIndex","getColorIndex","enabled","hash","uvsCopy","kl","DirectGeometry","computeGroups","fromGeometry","morphTargetsPosition","hasFaceVertexUv2","morphTargetsLength","morphTargetsNormal","morphNormalsLength","hasSkinIndices","hasSkinWeights","vertexUvs","morphTarget","morphNormal","morphAttributes","drawRange","getIndex","setIndex","getAttribute","removeAttribute","addGroup","clearGroups","setDrawRange","updateFromObject","direct","__directGeometry","lineDistance","fromDirectGeometry","pA","pB","pC","normalizeNormals","attributeArray1","attribute2","attributeArray2","toNonIndexed","array2","MaxIndex","InstancedBufferGeometry","maxInstancedCount","Uniform","onUpdate","onUpdateCallback","AnimationAction","_new","mixer","clip","localRoot","_mixer","_clip","_localRoot","tracks","nTracks","interpolants","interpolantSettings","interpolant","createInterpolant","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","loop","_loopCount","_startTime","time","timeScale","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","play","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setLoop","setEffectiveWeight","getEffectiveWeight","fadeIn","duration","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","times","timeScaleInterpolant","getMixer","getClip","getRoot","_root","_update","deltaTime","timeDirection","accuIndex","timeRunning","_updateTimeScale","clipTime","_updateTime","_updateWeight","propertyMixers","accumulate","interpolantValue","loopCount","_setEndings","handle_stop","pingPong","loopDelta","atStart","atEnd","weightNow","weightThen","AnimationClip","resetDuration","trim","optimize","track","json","jsonTracks","frameTime","fps","KeyframeTrack","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","AnimationUtils","getKeyframeOrder","sortedArray","NumberKeyframeTrack","findByName","objectOrClipArray","clipArray","animations","CreateClipsFromMorphTargetSequences","animationToMorphTargets","pattern","parts","animationMorphTargets","clips","parseAnimation","animation","bones","nodeName","addNonemptyTrack","trackType","trackName","animationKeys","destTracks","flattenJSON","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","VectorKeyframeTrack","QuaternionKeyframeTrack","AnimationMixer","_initMemoryManager","_accuIndex","clipAction","optionalRoot","rootUuid","clipObject","clipUuid","actionsForClip","_actionsByClip","prototypeAction","existingAction","actionByRoot","knownActions","newAction","_Action","_bindAction","_addInactiveAction","stopAllAction","actions","_actions","nActions","_nActiveActions","bindings","_bindings","nBindings","_nActiveBindings","useCount","uncacheClip","actionsByClip","actionsToRemove","cacheIndex","lastInactiveAction","_removeInactiveBindingsForAction","uncacheRoot","_removeInactiveAction","bindingByName","_bindingsByRootAndName","restoreOriginalState","_removeInactiveBinding","uncacheAction","bindingsByRoot","bindingsByName","referenceCount","_addInactiveBinding","parsedPath","PropertyMixer","PropertyBinding","ValueTypeName","getValueSize","_lendBinding","saveOriginalState","_lendAction","_takeBackBinding","_takeBackAction","_controlInterpolants","_nActiveControlInterpolants","stats","inUse","controlInterpolants","knownActionsForClip","lastKnownAction","byClipCacheIndex","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","propBinding","rootNode","lastInactiveBinding","remove_empty_map","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","AnimationObjectGroup","var_args","_objects","nCachedObjects_","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","bindingsPerObject","nObjects","nCachedObjects","indicesByUUID","parsedPaths","knownObject","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","subscribe_","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","arraySlice","subarray","convertArray","forceClone","BYTES_PER_ELEMENT","ArrayBuffer","isView","DataView","nValues","srcOffset","jsonKeys","valuePropertyName","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","validate","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","getInterpolation","timeOffset","endTime","nKeys","valid","prevTime","currTime","writeIndex","keep","offsetP","offsetN","readOffset","writeOffset","_getTrackTypeForValueTypeName","typeName","ColorKeyframeTrack","BooleanKeyframeTrack","StringKeyframeTrack","parseTrackName","findNode","targetArray","setValue","sourceArray","targetObject","objectName","propertyIndex","_getValue_unavailable","_setValue_unavailable","objectIndex","skeleton","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","resolvedProperty","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","unbind","_getValue_unbound","_setValue_unbound","dest","Composite","targetGroup","optionalParsedPath","_targetGroup","firstValidIndex","re","results","bone","searchSkeleton","searchNodeSubtree","childNode","subTreeNode","mixFunction","bufferType","_slerp","_select","_lerp","_mixBufferRegion","cumulativeWeight","currentWeight","mix","originalValueOffset","Audio","createBufferSource","onended","onEnded","gain","createGain","connect","getInput","autoplay","playbackRate","isPlaying","hasPlaybackControl","sourceType","filters","getOutput","setNodeSource","audioNode","setBuffer","audioBuffer","pause","currentTime","getFilters","setFilters","getFilter","setFilter","setPlaybackRate","getPlaybackRate","getLoop","getVolume","setVolume","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getFrequencyData","getByteFrequencyData","getAverageFrequency","AudioContext","webkitAudioContext","PositionalAudio","panner","createPanner","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","AudioListener","destination","removeFilter","getMasterVolume","setMasterVolume","orientation","setOrientation","Camera","matrixWorldInverse","CubeCamera","cubeResolution","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","format","magFilter","minFilter","renderTarget","WebGLRenderTargetCube","updateCubeMap","renderer","scene","generateMipmaps","texture","activeCubeFace","render","setRenderTarget","zoom","view","updateProjectionMatrix","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","cx","cy","zoomW","zoomH","scaleW","scaleH","filmGauge","filmOffset","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","getEffectiveFOV","getFilmWidth","skew","StereoCamera","cameraL","cameraR","eyeSepOnProjection","Light","intensity","groundColor","decay","penumbra","LightShadow","bias","mapSize","AmbientLight","DirectionalLight","shadow","DirectionalLightShadow","light","HemisphereLight","skyColor","PointLight","power","SpotLight","SpotLightShadow","AudioLoader","manager","DefaultLoadingManager","load","url","onLoad","onProgress","onError","loader","XHRLoader","setResponseType","decodeAudioData","Cache","files","file","Loader","onLoadStart","onLoadProgress","onLoadComplete","crossOrigin","extractUrlBase","initMaterials","texturePath","createMaterial","TextureLoader","MaterialLoader","loadTexture","repeat","anisotropy","fullPath","Handlers","setCrossOrigin","wrapS","wrapT","blending","specular","emissive","shininess","mapDiffuseRepeat","mapDiffuseOffset","mapDiffuseWrap","mapDiffuseAnisotropy","emissiveMap","mapEmissiveRepeat","mapEmissiveOffset","mapEmissiveWrap","mapEmissiveAnisotropy","lightMap","mapLightRepeat","mapLightOffset","mapLightWrap","mapLightAnisotropy","aoMap","mapAORepeat","mapAOOffset","mapAOWrap","mapAOAnisotropy","bumpMap","mapBumpRepeat","mapBumpOffset","mapBumpWrap","mapBumpAnisotropy","bumpScale","normalMap","mapNormalRepeat","mapNormalOffset","mapNormalWrap","mapNormalAnisotropy","normalScale","specularMap","mapSpecularRepeat","mapSpecularOffset","mapSpecularWrap","mapSpecularAnisotropy","metalnessMap","mapMetalnessRepeat","mapMetalnessOffset","mapMetalnessWrap","mapMetalnessAnisotropy","roughnessMap","mapRoughnessRepeat","mapRoughnessOffset","mapRoughnessWrap","mapRoughnessAnisotropy","alphaMap","mapAlphaRepeat","mapAlphaOffset","mapAlphaWrap","mapAlphaAnisotropy","side","opacity","transparent","setTextures","handlers","regex","cached","itemStart","itemEnd","overrideMimeType","response","itemError","responseType","withCredentials","setPath","setWithCredentials","FontLoader","text","substring","font","Font","ImageLoader","image","createElementNS","onload","URL","revokeObjectURL","blob","createObjectURL","JSONLoader","setTexturePath","isBitSet","fi","zLength","colorIndex","normalIndex","uvIndex","isQuad","hasMaterial","faceA","faceB","uvLayer","nUvLayers","parseModel","influencesPerVertex","parseSkin","dstVertices","srcVertices","morphColors","parseMorphing","outputAnimations","morphAnimationClips","parseAnimations","LoadingManager","isLoading","itemsLoaded","itemsTotal","onStart","BufferGeometryLoader","TYPED_ARRAYS","typedArray","drawcalls","getTexture","roughness","metalness","uniforms","vertexShader","fragmentShader","shading","alphaTest","depthTest","depthWrite","colorWrite","wireframe","wireframeLinewidth","sizeAttenuation","displacementMap","displacementScale","displacementBias","emissiveIntensity","envMap","combine","reflectivity","lightMapIntensity","aoMapIntensity","ObjectLoader","lastIndexOf","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","geometryLoader","bufferGeometryLoader","widthSegments","heightSegments","depth","depthSegments","segments","thetaStart","thetaLength","radiusTop","radiusBottom","radialSegments","openEnded","phiStart","phiLength","innerRadius","outerRadius","thetaSegments","phiSegments","tube","tubularSegments","arc","loadImage","parseConstant","Texture","mapping","flipY","getGeometry","getMaterial","Scene","SkinnedMesh","Group","levels","addLevel","isJPEG","search","CubeTextureLoader","urls","CubeTexture","loaded","DataTextureLoader","BinaryTextureLoader","_parser","DataTexture","texData","mipmaps","mipmapCount","CompressedTextureLoader","CompressedTexture","texDatas","isCubemap","Material","MaterialIdCount","fog","lights","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","clippingPlanes","clipShadows","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","premultipliedAlpha","overdraw","_needsUpdate","setValues","newValue","currentValue","isRoot","srcPlanes","dstPlanes","LineBasicMaterial","linewidth","linecap","linejoin","LineDashedMaterial","dashSize","gapSize","MeshBasicMaterial","refractionRatio","wireframeLinecap","wireframeLinejoin","skinning","MeshDepthMaterial","depthPacking","MeshLambertMaterial","MeshNormalMaterial","MeshPhongMaterial","MeshStandardMaterial","defines","STANDARD","envMapIntensity","MeshPhysicalMaterial","PHYSICAL","clearCoat","clearCoatRoughness","MultiMaterial","PointsMaterial","ShaderMaterial","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","UniformsUtils","RawShaderMaterial","SpriteMaterial","ShadowMaterial","UniformsLib","ShaderChunk","encoding","TextureIdCount","sourceFile","DEFAULT_IMAGE","DEFAULT_MAPPING","premultiplyAlpha","unpackAlignment","canvas","toDataURL","getContext","drawImage","getDataURL","transformUv","DepthTexture","CanvasTexture","VideoTexture","video","requestAnimationFrame","HAVE_CURRENT_DATA","inverseMatrix","localThreshold","localThresholdSq","testPoint","rayPointDistanceSq","intersectPoint","distanceToRay","LineSegments","precisionSq","vStart","vEnd","interSegment","interRay","step","faceIndex","nbVertices","drawMode","updateMorphTargets","setDrawMode","morphTargetBase","morphTargetInfluences","morphTargetDictionary","ml","getMorphTargetIndexByName","tempA","tempB","tempC","uvA","uvB","uvC","barycoord","intersectionPoint","intersectionPointWorld","uvIntersection","uv1","uv3","checkIntersection","checkBufferGeometryIntersection","intersection","fvA","fvB","fvC","isFaceMaterial","faceMaterial","morphInfluences","tl","influence","targets","uvs_f","Bone","skin","Skeleton","boneInverses","useVertexTexture","identityMatrix","boneTextureWidth","boneTextureHeight","boneMatrices","boneTexture","calculateInverses","bl","pose","bindMode","bindMatrix","bindMatrixInverse","gbone","pos","rotq","scl","normalizeSkinWeights","sw","vec","skinWeight","getObjectForDistance","LensFlare","lensFlares","positionScreen","customUpdateCallback","updateLensFlares","flare","vecX","vecY","wantedRotation","background","overrideMaterial","autoUpdate","Fog","FogExp2","density","merged","uniforms_src","uniforms_dst","parameter_src","common","diffuse","offsetRepeat","flipEnvMap","aomap","lightmap","emissivemap","bumpmap","normalmap","displacementmap","roughnessmap","metalnessmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","directionalLights","properties","shadowBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","spotShadowMap","spotShadowMatrix","pointLights","pointShadowMap","pointShadowMatrix","hemisphereLights","ShaderLib","basic","lambert","phong","standard","dashed","totalSize","cube","tCube","tFlip","equirect","tEquirect","distanceRGBA","lightPos","WebGLRenderer","_canvas","_alpha","_depth","_stencil","stencil","_antialias","antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","opaqueObjects","opaqueObjectsLastIndex","transparentObjects","transparentObjectsLastIndex","sprites","domElement","autoClear","autoClearColor","autoClearDepth","autoClearStencil","sortObjects","localClippingEnabled","gammaInput","gammaOutput","physicallyCorrectLights","toneMapping","toneMappingExposure","toneMappingWhitePoint","maxMorphTargets","maxMorphNormals","_gl","_this","_currentProgram","_currentRenderTarget","_currentFramebuffer","_currentMaterialId","_currentGeometryProgram","_currentCamera","_currentScissor","_currentScissorTest","_currentViewport","_usedTextureUnits","_clearColor","_clearAlpha","_width","_height","_pixelRatio","_scissor","_scissorTest","_viewport","_frustum","_clipping","WebGLClipping","_clippingEnabled","_localClippingEnabled","_sphere","_projScreenMatrix","_vector3","_lights","ambient","directional","spot","hemi","shadows","_infoRender","calls","memory","programs","getShaderPrecisionFormat","rangeMin","rangeMax","onContextLost","WebGLExtensions","capabilities","WebGLCapabilities","WebGLState","paramThreeToGL","WebGLProperties","WebGLTextures","WebGLObjects","programCache","WebGLPrograms","lightCache","WebGLLights","bufferRenderer","WebGLBufferRenderer","indexedBufferRenderer","WebGLIndexedBufferRenderer","backgroundCamera","backgroundCamera2","backgroundPlaneMesh","PlaneBufferGeometry","backgroundBoxShader","backgroundBoxMesh","BoxBufferGeometry","getTargetPixelRatio","glClearColor","clearColor","setDefaultGLState","scissor","viewport","resetGLState","shadowMap","WebGLShadowMap","warned","spritePlugin","SpritePlugin","lensFlarePlugin","LensFlarePlugin","preventDefault","onMaterialDispose","releaseMaterialProgramReference","delete","deallocateMaterial","programInfo","program","releaseProgram","absNumericalSort","painterSortStable","reversePainterSortStable","pushRenderItem","renderItem","isSphereViewable","numPlanes","negRad","renderObjects","renderList","ImmediateRenderObject","setMaterial","setProgram","renderBufferImmediate","renderBufferDirect","CULL_FACE","setFlipSided","setBlending","setDepthFunc","setDepthTest","setDepthWrite","setColorWrite","setPolygonOffset","materialProperties","useCache","setState","numClippingPlanes","lightsHash","getParameters","getProgramCode","programChange","shaderID","shader","__webglShader","acquireProgram","getAttributes","numSupportedMorphTargets","numSupportedMorphNormals","uniform","progUniforms","getUniforms","uniformsList","WebGLUniforms","seqWithValue","seq","dynamicUniforms","splitDynamic","initMaterial","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","useProgram","logarithmicDepthBuffer","uCamPos","cameraPosition","setOptional","floatVertexTextures","refreshUniformsFog","uvScaleMap","WebGLRenderTarget","refreshUniformsCommon","refreshUniformsLine","refreshUniformsDash","clientHeight","refreshUniformsPoints","refreshUniformsLambert","refreshUniformsPhong","refreshUniformsStandard","refreshUniformsPhysical","upload","dynUniforms","evalDynamic","extension","REPEAT","CLAMP_TO_EDGE","MIRRORED_REPEAT","NEAREST","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","UNSIGNED_BYTE","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","BYTE","SHORT","UNSIGNED_SHORT","INT","UNSIGNED_INT","FLOAT","HALF_FLOAT_OES","ALPHA","RGB","RGBA","LUMINANCE","LUMINANCE_ALPHA","DEPTH_COMPONENT","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","ZERO","ONE","SRC_COLOR","ONE_MINUS_SRC_COLOR","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","DST_ALPHA","ONE_MINUS_DST_ALPHA","DST_COLOR","ONE_MINUS_DST_COLOR","SRC_ALPHA_SATURATE","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","MIN_EXT","MAX_EXT","getContextAttributes","forceContextLoss","loseContext","getMaxAnisotropy","getPrecision","getPixelRatio","setPixelRatio","setSize","getSize","updateStyle","setViewport","setScissor","setScissorTest","boolean","getClearColor","setClearColor","getClearAlpha","setClearAlpha","bits","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","clearDepth","clearStencil","clearTarget","initAttributes","buffers","hasPositions","createBuffer","hasNormals","hasUvs","hasColors","bindBuffer","ARRAY_BUFFER","bufferData","positionArray","DYNAMIC_DRAW","enableAttribute","vertexAttribPointer","normalArray","nx","ny","nz","uvArray","colorArray","disableUnusedAttributes","drawArrays","TRIANGLES","updateBuffers","geometryProgram","activeInfluences","getWireframeAttribute","startIndex","geometryAttributes","programAttributes","materialDefaultAttributeValues","programAttribute","geometryAttribute","getAttributeBuffer","enableAttributeAndDivisor","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","setupVertexAttributes","ELEMENT_ARRAY_BUFFER","dataCount","rangeStart","rangeCount","groupStart","groupCount","drawStart","drawEnd","drawCount","setLineWidth","setMode","LINES","TRIANGLE_STRIP","TRIANGLE_FAN","lineWidth","LINE_STRIP","POINTS","renderInstances","forceClear","projectObject","isObjectViewable","groupMaterial","beginShadows","lightShadowsLength","setupShadows","ll","viewMatrix","directionalLength","pointLength","spotLength","hemiLength","setupLights","endShadows","updateRenderTargetMipmap","setFaceCulling","cullFace","frontFaceDirection","setCullFace","allocTextureUnit","textureUnit","maxTextures","setTexture2D","slot","setTexture","setTextureCube","setTextureCubeDynamic","getCurrentRenderTarget","__webglFramebuffer","setupRenderTarget","framebuffer","isCube","renderTargetProperties","scissorTest","bindFramebuffer","FRAMEBUFFER","textureProperties","framebufferTexture2D","COLOR_ATTACHMENT0","TEXTURE_CUBE_MAP_POSITIVE_X","__webglTexture","activeMipMapLevel","readRenderTargetPixels","restore","IMPLEMENTATION_COLOR_READ_FORMAT","IMPLEMENTATION_COLOR_READ_TYPE","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","readPixels","depthBuffer","stencilBuffer","depthTexture","drawArraysInstancedANGLE","globalState","numGlobalPlanes","renderingShadows","viewNormalMatrix","resetGlobalState","projectPlanes","skipTransform","nPlanes","dstArray","flatSize","i4","enableLocalClipping","fromCache","nGlobal","lGlobal","clippingState","drawElements","drawElementsInstancedANGLE","gl","getExtension","maxAnisotropy","getMaxPrecision","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","MAX_TEXTURE_MAX_ANISOTROPY_EXT","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","maxTextureSize","MAX_TEXTURE_SIZE","maxCubemapSize","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","MAX_VERTEX_ATTRIBS","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","vertexTextures","floatFragmentTextures","_maxPrecision","WebGLGeometries","onGeometryDispose","buffergeometry","deleteAttribute","deleteAttributes","bufferproperty","__webglBuffer","deleteBuffer","removeAttributeBuffer","_bufferGeometry","updateAttribute","attributeProperties","usage","STATIC_DRAW","bufferSubData","updateBuffer","checkEdge","list","TypeArray","WebGLProgram","programIdCount","getEncodingComponents","getTexelDecodingFunction","functionName","getToneMappingFunction","toneMappingName","filterEmptyLine","replaceLightNums","numDirLights","numSpotLights","numPointLights","numHemiLights","parseIncludes","include","unrollLoops","snippet","unroll","shadowMapTypeDefine","shadowMapType","envMapTypeDefine","envMapModeDefine","envMapBlendingDefine","prefixVertex","prefixFragment","gammaFactorDefine","customExtensions","rendererExtensions","envMapCubeUV","flatShading","generateExtensions","customDefines","generateDefines","createProgram","supportsVertexTextures","maxBones","doubleSided","flipSided","shadowMapEnabled","useFog","fogExp","outputEncoding","mapEncoding","envMapEncoding","emissiveMapEncoding","vertexGlsl","fragmentGlsl","glVertexShader","WebGLShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","cachedUniforms","cachedAttributes","programLog","getProgramInfoLog","vertexLog","getShaderInfoLog","fragmentLog","runnable","haveDiagnostics","getProgramParameter","LINK_STATUS","getError","VALIDATE_STATUS","diagnostics","deleteShader","identifiers","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","fetchAttributeLocations","destroy","deleteProgram","usedTimes","shaderIDs","parameterNames","getTextureEncodingFromMap","gammaOverrideLinear","nClipPlanes","nVertexUniforms","allocateBones","currentRenderTarget","envMapMode","pl","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","addLineNumbers","_renderer","_state","_lightShadows","_shadowMapSize","_maxShadowMapSize","_lookTarget","_lightPositionWorld","_renderList","_MorphingFlag","_SkinningFlag","_NumberOfMaterialVariants","_depthMaterials","_distanceMaterials","_materialCache","cubeDirections","cubeUps","cube2DViewPorts","depthMaterialTemplate","distanceShader","distanceUniforms","useMorphing","useSkinning","depthMaterial","distanceMaterial","USE_SHADOWMAP","getDepthMaterial","isPointLight","lightPositionWorld","materialVariants","customMaterial","customDepthMaterial","customDistanceMaterial","variantIndex","keyA","keyB","materialsForVariant","cachedMaterial","renderSingleSided","renderReverseSided","shadowCamera","faceCount","BLEND","vpWidth","vpHeight","pars","shadowMatrix","vpDimensions","clearAlpha","WebGLColorBuffer","WebGLDepthBuffer","WebGLStencilBuffer","maxVertexAttributes","newAttributes","enabledAttributes","attributeDivisors","compressedTextureFormats","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","currentScissorTest","currentTextureSlot","currentBoundTextures","currentScissor","currentViewport","createTexture","bindTexture","texParameteri","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","texImage2D","emptyTextures","TEXTURE_2D","TEXTURE_CUBE_MAP","DEPTH_TEST","enableVertexAttribArray","vertexAttribDivisorANGLE","disableVertexAttribArray","getCompressedTextureFormats","formats","COMPRESSED_TEXTURE_FORMATS","blendEquationSeparate","blendFuncSeparate","blendFunc","setMask","setTest","setFunc","setStencilTest","stencilTest","setStencilWrite","stencilWrite","setStencilFunc","stencilFunc","stencilRef","stencilMask","setStencilOp","stencilFail","stencilZFail","stencilZPass","setOp","frontFace","CW","CCW","BACK","FRONT","FRONT_AND_BACK","factor","units","POLYGON_OFFSET_FILL","getScissorTest","SCISSOR_TEST","activeTexture","webglSlot","TEXTURE0","webglType","webglTexture","boundTexture","compressedTexImage2D","setClear","locked","currentColorMask","currentColorClear","colorMask","setLocked","lock","currentDepthMask","currentDepthFunc","currentDepthClear","depthMask","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","STENCIL_TEST","stencilOp","_infoMemory","_isWebGL2","WebGL2RenderingContext","clampToMaxSize","maxSize","filterFallback","onTextureDispose","__image__webglTextureCube","deleteTexture","__webglInit","deallocateTexture","onRenderTargetDispose","deleteFramebuffer","__webglDepthbuffer","deleteRenderbuffer","deallocateRenderTarget","__version","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","textureNeedsPowerOfTwo","HTMLImageElement","HTMLCanvasElement","makePowerOfTwo","isPowerOfTwoImage","glFormat","glType","setTextureParameters","mipmap","internalFormat","DEPTH_COMPONENT32F","DEPTH_COMPONENT16","generateMipmap","uploadTexture","textureType","TEXTURE_WRAP_S","TEXTURE_WRAP_T","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","setupFrameBufferTexture","attachment","textureTarget","setupRenderBufferStorage","renderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL","DEPTH_STENCIL_ATTACHMENT","RGBA4","setupDepthRenderbuffer","webglDepthTexture","setupDepthTexture","createRenderbuffer","isCompressed","isDataTexture","cubeImage","isTargetPowerOfTwo","createFramebuffer","emptyTexture","emptyCubeTexture","UniformContainer","arrayCacheF32","arrayCacheI32","flatten","nBlocks","blockSize","firstElem","allocTexUnits","setValue1f","uniform1f","addr","setValue1i","uniform1i","setValue2fv","uniform2fv","uniform2f","setValue3fv","uniform3f","uniform3fv","setValue4fv","uniform4fv","uniform4f","setValue2fm","uniformMatrix2fv","setValue3fm","uniformMatrix3fv","setValue4fm","uniformMatrix4fv","setValueT1","unit","setValueT6","setValue2iv","uniform2iv","setValue3iv","uniform3iv","setValue4iv","uniform4iv","setValue1fv","uniform1fv","setValue1iv","uniform1iv","setValueV2a","setValueV3a","setValueV4a","setValueM2a","setValueM3a","setValueM4a","setValueT1a","setValueT6a","SingleUniform","activeInfo","getSingularSetter","PureArrayUniform","getPureArraySetter","StructuredUniform","RePathPart","addUniform","container","uniformObject","parseUniform","pathLength","matchEnd","idIsIndex","subscript","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","flares","vertexBuffer","elementBuffer","tempTexture","occlusionTexture","renderType","occlusionMap","screenPosition","tempPosition","invAspect","halfViewportWidth","halfViewportHeight","screenPositionPixels","validArea","TEXTURE1","copyTexImage2D","spritePosition","spriteRotation","spriteScale","uvOffset","uvScale","fogType","fillStyle","fillRect","oldFogType","sceneFogType","Face4","LineStrip","LinePieces","MeshFaceMaterial","Particle","ParticleSystem","PointCloudMaterial","ParticleBasicMaterial","ParticleSystemMaterial","isIntersectionBox","isIntersectionSphere","multiplyVector3","multiplyVector3Array","extractPosition","multiplyVector4","rotateAxis","crossVector","rotateByAxis","isIntersectionLine","isIntersectionPlane","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","getChildByName","renderDepth","eulerOrder","useQuaternion","setLens","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraNear","shadowCameraFar","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","addIndex","addDrawCall","indexOffset","clearDrawCalls","computeOffsets","wrapAround","wrapRGB","metal","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","addPrePlugin","addPostPlugin","updateShadowMap","shadowMapCullFace","getData","GeometryUtils","geometry1","ImageUtils","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","Projector","projectVector","unprojectVector","pickingRay","CanvasRenderer","CurveUtils","tangentQuadraticBezier","tangentCubicBezier","tangentSpline","SceneUtils","createMultiMaterialObject","detach","attach","ShapeUtils","contour","triangulate","verts","px","py","aX","aY","bX","bY","cX","cY","cCROSSap","bCROSScp","vertIndices","nv","triangulateShape","holes","removeDupEndPts","point_in_segment_2D_colin","inSegPt1","inSegPt2","inOtherPt","intersect_segments_2D","inSeg1Pt1","inSeg1Pt2","inSeg2Pt1","inSeg2Pt2","inExcludeAdjacentSegs","seg1dx","seg1dy","seg2dx","seg2dy","seg1seg2dx","seg1seg2dy","perpSeg1","perpSeg2","factorSeg1","seg1min","seg1max","seg1minVal","seg1maxVal","seg2min","seg2max","seg2minVal","seg2maxVal","seg1Pt","seg2Pt","isPointInsideAngle","inVertex","inLegFromPt","inLegToPt","legFromPtX","legFromPtY","legToPtX","legToPtY","otherPtX","otherPtY","from2toAngle","from2otherAngle","other2toAngle","allPointsMap","allpoints","hl","shapeWithoutHoles","hole","shape","isCutLineInsideAngles","inShapeIdx","inHoleIdx","lastShapeIdx","prevShapeIdx","nextShapeIdx","insideAngle","lastHoleIdx","prevHoleIdx","nextHoleIdx","intersectsShapeEdge","inShapePt","inHolePt","sIdx","nextIdx","indepHoles","intersectsHoleEdge","ihIdx","chkHole","hIdx","holeIndex","shapeIndex","shapePt","holePt","holeIdx","cutKey","tmpShape1","tmpShape2","tmpHole1","tmpHole2","failedCuts","minShapeIndex","counter","h2","removeHoles","triangles","isClockWise","pts","b2p0","b2p1","b2p2","b3","b3p0","b3p1","b3p2","b3p3","Curve","getPointAt","getUtoTmapping","getPoints","divisions","getSpacedPoints","lengths","getLengths","cacheArcLengths","sum","updateArcLengths","targetArcLength","arcLengths","comparison","lengthBefore","getTangent","pt1","getTangentAt","getPointFunc","CurvePath","curves","autoClose","curve","closePath","startPoint","endPoint","LineCurve","curveLengths","getCurveLengths","segmentLength","lens","cacheLengths","sums","resolution","EllipseCurve","SplineCurve","createPointsGeometry","createGeometry","createSpacedPointsGeometry","generateShapes","createPath","glyph","glyphs","cpx","cpy","cpx0","cpy0","cpx1","cpy1","cpx2","cpy2","laste","ShapePath","outline","_cachedOutline","moveTo","lineTo","quadraticCurveTo","bezierCurveTo","ha","createPaths","shapes","toShapes","Path","currentPoint","fromPoints","aCPx","aCPy","QuadraticBezierCurve","aCP1x","aCP1y","aCP2x","aCP2y","CubicBezierCurve","splineThru","npts","aRadius","aStartAngle","aEndAngle","aClockwise","absarc","absellipse","ellipse","xRadius","yRadius","aRotation","firstPoint","lastPoint","subPaths","currentPath","isCCW","noHoles","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","Shape","isPointInsidePolygon","inPt","inPolygon","polyLen","inside","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","tmpPoints","tmpHoles","betterShapeHoles","newShapes","newShapeHoles","mainIdx","ambiguous","toChange","sLen","sho","ho","hole_unassigned","s2Idx","froms","tos","extrude","ExtrudeGeometry","makeGeometry","ShapeGeometry","getPointsHoles","holesPts","extractAllPoints","extractPoints","point0","point1","point2","point3","twoPi","deltaAngle","samePoints","ArcCurve","LineCurve3","QuadraticBezierCurve3","CubicBezierCurve3","SplineCurve3","CatmullRomCurve3","CubicPoly","pz","c0","initNonuniformCatmullRom","x3","dt0","dt1","dt2","initCatmullRom","tension","calc","closed","ClosedSplineCurve3","CubeGeometry","vertexCount","calculateVertexCount","indexCount","vertexBufferOffset","uvBufferOffset","indexBufferOffset","numberOfVertices","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","CircleGeometry","CircleBufferGeometry","ii","segment","CylinderBufferGeometry","nbCap","calculateIndexCount","indexArray","halfHeight","generateCap","centerIndexStart","centerIndexEnd","cosTheta","sinTheta","tanTheta","indexRow","i3","generateTorso","CylinderGeometry","ConeBufferGeometry","ConeGeometry","sortFunction","vert1","vert2","addShapeList","addShape","extrudePts","splineTube","binormal","position2","ahole","amount","bevelThickness","bevelSize","bevelSegments","bevelEnabled","curveSegments","steps","extrudePath","extrudeByPath","uvgen","UVGenerator","WorldUVGenerator","frames","TubeGeometry","FrenetFrames","shapesOffset","shapePoints","scalePt2","pt","bs","vert","vlen","flen","getBevelVec","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","sf","v_trans_lensq","direction_eq","contourMovements","oneHoleMovements","holesMovements","verticesMovements","binormals","sidewalls","layeroffset","slen1","slen2","f4","f3","generateTopUV","wallContour","stepIndex","stepsLength","contourIndex1","contourIndex2","generateSideWallUV","layer","buildLidFaces","buildSideFaces","indexA","indexB","indexC","indexD","LatheBufferGeometry","inverseSegments","n1","n2","LatheGeometry","PlaneGeometry","width_half","height_half","segment_width","segment_height","offset2","RingBufferGeometry","radiusStep","thetaSegmentLevel","RingGeometry","SphereGeometry","SphereBufferGeometry","thetaEnd","verticesRow","v4","TextGeometry","TorusBufferGeometry","TorusGeometry","TorusKnotBufferGeometry","P1","P2","B","N","calculatePositionOnCurve","cu","su","quOverP","cs","TorusKnotGeometry","heightScale","taper","NoTaper","ip","jp","uva","uvb","uvc","uvd","grid","numpoints","pos2","tangents","SinusoidalTaper","smallest","tz","mat","initialNormal3","PolyhedronGeometry","that","prepare","centroid","subdivide","azimuth","inclination","make","azi","correctUV","cols","aj","bj","rows","DodecahedronGeometry","IcosahedronGeometry","OctahedronGeometry","TetrahedronGeometry","ParametricGeometry","slices","sliceCount","WireframeGeometry","numEdges","numTris","AxisHelper","ArrowHelper","lineGeometry","coneGeometry","headLength","headWidth","cone","setDirection","setColor","BoxHelper","BoundingBoxHelper","CameraHelper","pointMap","addLine","addPoint","setPoint","DirectionalLightHelper","lightPlane","targetLine","EdgesHelper","FaceNormalsHelper","nNormals","objGeometry","GridHelper","setColors","HemisphereLightHelper","sphereSize","lightSphere","PointLightHelper","SkeletonHelper","getBoneList","boneList","matrixWorldInv","boneMatrix","SpotLightHelper","vector2","coneLength","coneWidth","VertexNormalsHelper","objPos","objNorm","WireframeHelper","renderCallback","MorphBlendMesh","animationsMap","animationsList","numFrames","endFrame","createAnimation","setAnimationWeight","lastFrame","currentFrame","directionBackwards","mirroredLoop","autoCreateAnimations","firstAnimation","frameRanges","setAnimationDirectionForward","setAnimationDirectionBackward","setAnimationFPS","setAnimationDuration","setAnimationTime","getAnimationTime","getAnimationDuration","playAnimation","stopAnimation","keyframe","__webpack_amd_options__","./AdaptiveToneMappingPass.js","./BasicShader.js","./BleachBypassShader.js","./BlendShader.js","./BloomPass.js","./BokehPass.js","./BokehShader.js","./BokehShader2.js","./BrightnessContrastShader.js","./CanvasRenderer.js","./ColorCorrectionShader.js","./ColorifyShader.js","./ConvolutionShader.js","./CopyShader.js","./DDSLoader.js","./DOFMipMapShader.js","./DigitalGlitch.js","./DotScreenPass.js","./DotScreenShader.js","./EdgeShader.js","./EdgeShader2.js","./EffectComposer.js","./FXAAShader.js","./FilmPass.js","./FilmShader.js","./FocusShader.js","./FresnelShader.js","./GammaCorrectionShader.js","./GlitchPass.js","./HorizontalBlurShader.js","./HorizontalTiltShiftShader.js","./HueSaturationShader.js","./JSONLoader.js","./KaleidoShader.js","./LuminosityShader.js","./MTLLoader.js","./MarchingCubes.js","./MaskPass.js","./MirrorShader.js","./NormalMapShader.js","./OBJLoader.js","./OceanShaders.js","./OrbitControls.js","./ParallaxShader.js","./Projector.js","./RGBShiftShader.js","./RenderPass.js","./SSAOShader.js","./SVGLoader.js","./SavePass.js","./SepiaShader.js","./ShaderPass.js","./TechnicolorShader.js","./TexturePass.js","./ToneMapShader.js","./TriangleBlurShader.js","./UnpackDepthRGBAShader.js","./VerticalBlurShader.js","./VerticalTiltShiftShader.js","./VignetteShader.js","webpackContext","req","webpackContextResolve","AdaptiveToneMappingPass","adaptive","needsInit","luminanceRT","previousLuminanceRT","currentLuminanceRT","CopyShader","copyShader","copyUniforms","materialCopy","LuminosityShader","materialLuminance","adaptLuminanceShader","MIP_LEVEL_1X1","toFixed","lastLum","currentLum","tau","materialAdaptiveLum","ToneMapShader","materialToneMap","needsSwap","quad","writeBuffer","readBuffer","maskActive","tDiffuse","luminanceMap","setAdaptive","setAdaptionRate","rate","setMaxLuminance","maxLum","maxLuminance","setAverageLuminance","avgLum","averageLuminance","setMiddleGrey","middleGrey","BasicShader","BleachBypassShader","BlendShader","tDiffuse1","tDiffuse2","mixRatio","BloomPass","strength","kernelSize","sigma","renderTargetX","renderTargetY","ConvolutionShader","convolutionShader","convolutionUniforms","blurX","buildKernel","materialConvolution","KERNEL_SIZE_FLOAT","KERNEL_SIZE_INT","blurY","BokehPass","aperture","maxblur","innerWidth","innerHeight","renderTargetColor","renderTargetDepth","materialDepth","BokehShader","bokehShader","bokehUniforms","materialBokeh","renderToScreen","camera2","scene2","quad2","tColor","tDepth","textureWidth","textureHeight","focalDepth","fstop","showFocus","manualdof","vignetting","depthblur","fringe","znear","zfar","noise","dithering","pentagon","shaderFocus","focusCoords","BrightnessContrastShader","brightness","contrast","SpriteCanvasMaterial","_renderData","_elements","_v1","_v2","_v3","_v1x","_v1y","_v2x","_v2y","_v3x","_v3y","_uvs","_uv1x","_uv1y","_uv2x","_uv2y","_uv3x","_uv3y","_projector","_canvasWidth","_canvasHeight","_canvasWidthHalf","_canvasHeightHalf","_viewportX","_viewportY","_viewportWidth","_viewportHeight","_contextGlobalAlpha","_contextGlobalCompositeOperation","_contextStrokeStyle","_contextFillStyle","_contextLineWidth","_contextLineCap","_contextLineJoin","_contextLineDash","_color","RenderableVertex","_diffuseColor","_emissiveColor","_lightColor","_patterns","_clipBox","_clearBox","_elemBox","_ambientLight","_directionalLights","_pointLights","_centroid","_normal","_normalViewMatrix","renderSprite","element","setOpacity","dist","textureToPattern","setFillStyle","bitmap","ox","oy","save","rotate","setStrokeStyle","renderLine","beginPath","setLineCap","setLineJoin","colorStyle1","colorStyle2","grad","createLinearGradient","addColorStop","stroke","setLineDash","renderFace3","positionWorld","lightPosition","calculateLight","normalModel","strokePath","fillPath","patternPath","vertexNormalsModel","fill","setTransform","repeatX","repeatY","createPattern","u0","u1","u2","idet","expand","pixels","globalAlpha","globalCompositeOperation","lineCap","lineJoin","strokeStyle","sortElements","setClearColorHex","clearRect","projectScene","lightColor","calculateLights","el","RenderableSprite","RenderableLine","RenderableFace","ColorCorrectionShader","powRGB","mulRGB","addRGB","ColorifyShader","uImageIncrement","cKernel","gauss","exp","halfWidth","DDSLoader","loadMipmaps","dds","fourCCToInt32","charCodeAt","loadARGBMip","dataOffset","dataLength","srcBuffer","byteArray","blockBytes","FOURCC_DXT1","FOURCC_DXT3","FOURCC_DXT5","FOURCC_ETC1","header","fourCC","isRGBAUncompressed","fromCharCode","caps2","DOFMipMapShader","DigitalGlitch","tDisp","byp","seed","seed_x","seed_y","distortion_x","distortion_y","col_s","DotScreenPass","DotScreenShader","tSize","EdgeShader","EdgeShader2","EffectComposer","pixelRatio","renderTarget1","renderTarget2","passes","copyPass","ShaderPass","swapBuffers","addPass","pass","insertPass","MaskPass","ClearMaskPass","FXAAShader","FilmPass","noiseIntensity","scanlinesIntensity","scanlinesCount","grayscale","FilmShader","nIntensity","sIntensity","sCount","FocusShader","screenWidth","screenHeight","sampleDistance","waveFactor","FresnelShader","mRefractionRatio","mFresnelBias","mFresnelPower","mFresnelScale","GammaCorrectionShader","GlitchPass","dt_size","generateHeightmap","goWild","curF","generateTrigger","randX","data_arr","HorizontalBlurShader","HorizontalTiltShiftShader","HueSaturationShader","statusDomElement","_statusDomElement","KaleidoShader","sides","MTLLoader","setBaseUrl","baseUrl","setMaterialOptions","materialOptions","delimiter_pattern","materialsInfo","ss","materialCreator","MaterialCreator","setManager","setMaterials","materialsArray","nameLookup","convert","converted","mn","covmat","lprop","normalizeRGB","ignoreZeroRGBs","preload","materialName","getAsArray","createMaterial_","MarchingCubes","enableUvs","enableColors","isolation","size2","size3","halfsize","yd","zd","field","normal_cache","vlist","nlist","maxCount","VIntX","pout","nout","isol","valp1","valp2","mu","nc","VIntY","q2","VIntZ","compNorm","q3","polygonize","fx","fy","fz","q1y","q1z","qyz","q1yz","cubeindex","field0","field1","field2","field3","field4","field5","field6","field7","edgeTable","fx2","fy2","fz2","o2","o3","numtris","triTable","posnormtriv","norm","begin","addBall","ballx","bally","ballz","zs","ys","xs","min_z","max_z","min_y","max_y","min_x","y_offset","z_offset","max_x","addPlaneX","xdiv","cxy","addPlaneY","ydiv","addPlaneZ","zdiv","cz","cyz","smin2","generateGeometry","geo","na","nb","nfaces","writeValue","clearValue","REPLACE","KEEP","MirrorShader","NormalMapShader","heightMap","OBJLoader","foundObjects","addObject","smooth","parseVertexIndex","parseNormalIndex","parseUVIndex","addVertex","addNormal","addUV","ua","ub","uc","ud","nd","ia","ib","ic","vertex_pattern","normal_pattern","uv_pattern","face_pattern1","face_pattern2","face_pattern3","face_pattern4","object_pattern","smoothing_pattern","timeEnd","varying","vUV","u_input","u_transformSize","u_subtransformSize","u_wind","u_resolution","u_size","u_phases","u_deltaTime","u_choppiness","u_initialSpectrum","u_displacementMap","u_normalMap","u_geometrySize","u_projectionMatrix","u_viewMatrix","u_cameraPosition","u_skyColor","u_oceanColor","u_sunDirection","u_exposure","vPos","OrbitControls","quat","quatInverse","lastPosition","lastQuaternion","minZoom","maxZoom","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","keyPanSpeed","autoRotate","autoRotateSpeed","enableKeys","UP","BOTTOM","mouseButtons","ORBIT","ZOOM","PAN","target0","position0","zoom0","getPolarAngle","spherical","getAzimuthalAngle","changeEvent","STATE","NONE","rotateLeft","sphericalDelta","panOffset","zoomChanged","EPS","onContextMenu","onMouseDown","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","onMouseMove","onMouseUp","onKeyDown","startEvent","endEvent","ROTATE","DOLLY","TOUCH_ROTATE","TOUCH_DOLLY","TOUCH_PAN","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","rotateUp","panLeft","objectMatrix","panUp","pan","deltaX","deltaY","body","targetDistance","clientWidth","dollyIn","dollyScale","dollyOut","button","clientX","clientY","handleMouseDownRotate","handleMouseDownDolly","handleMouseDownPan","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","stopPropagation","wheelDelta","handleMouseWheel","keyCode","handleKeyDown","touches","pageX","pageY","handleTouchStartRotate","handleTouchStartDolly","handleTouchStartPan","handleTouchMoveRotate","handleTouchMoveDolly","handleTouchMovePan","noZoom","noRotate","noPan","noKeys","staticMoving","dynamicDampingFactor","ParallaxShader","modes","none","steep","occlusion","relief","parallaxScale","parallaxMinLayers","parallaxMaxLayers","RenderableObject","vertexNormalsLength","_object","_objectCount","_vertex","_vertexCount","_face","_faceCount","_line","_lineCount","_sprite","_spriteCount","_modelMatrix","_objectPool","_objectPoolLength","_vertexPool","_vertexPoolLength","_facePool","_facePoolLength","_linePool","_linePoolLength","_spritePool","_spritePoolLength","_vector4","_boundingBox","_points3","_viewMatrix","_viewProjectionMatrix","_modelViewProjectionMatrix","_normalMatrix","_clippedVertex1PositionScreen","_clippedVertex2PositionScreen","projectVertex","invW","checkTriangleVisibility","checkBackfaceCulling","setObject","pushVertex","getNextVertexInPool","pushNormal","pushUv","pushLine","getNextLineInPool","pushTriangle","getNextFaceInPool","getNextSpriteInPool","painterSort","clipLine","alpha1","alpha2","bc1near","bc2near","bc1far","bc2far","getNextObjectInPool","objectMaterials","targetVertex","nl","RGBShiftShader","RenderPass","oldClearColor","oldClearAlpha","SSAOShader","cameraNear","cameraFar","onlyAO","aoClamp","lumInfluence","SVGLoader","parser","DOMParser","svgString","parseFromString","SavePass","textureID","renderTargetParameters","SepiaShader","TechnicolorShader","TexturePass","TriangleBlurShader","UnpackDepthRGBAShader","VerticalBlurShader","VerticalTiltShiftShader","VignetteShader","darkness","arrayPush","isFlattenable","predicate","isStrict","spreadableSymbol","isConcatSpreadable","argsTag","nativeObjectToString","isOwn","unmasked","arrayMap","baseIteratee","baseMap","baseSortBy","compareMultiple","orders","criteria","baseMatches","baseMatchesProperty","baseIsMatch","getMatchData","matchesStrictComparable","matchData","noCustomizer","objValue","assocIndexOf","LARGE_ARRAY_SIZE","pairs","isMasked","toSource","reIsHostCtor","funcProto","reIsNative","uid","coreJsData","maskSrcKey","IE_PROTO","Hash","hashClear","hashDelete","hashGet","hashHas","hashSet","HASH_UNDEFINED","getMapData","equalArrays","equalByTag","equalObjects","getTag","arrayTag","objectTag","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","setCacheAdd","setCacheHas","mapToArray","setToArray","boolTag","dateTag","errorTag","mapTag","numberTag","regexpTag","setTag","stringTag","arrayBufferTag","dataViewTag","symbolProto","symbolValueOf","valueOf","byteLength","byteOffset","getAllKeys","objProps","objLength","skipCtor","objCtor","othCtor","baseGetAllKeys","getSymbols","keysFunc","symbolsFunc","arrayFilter","stubArray","nativeGetSymbols","getOwnPropertySymbols","symbol","resIndex","baseTimes","isIndex","inherited","isArr","isArg","isBuff","isType","skipIndexes","typedArrayTags","freeProcess","types","require","isPrototype","nativeKeys","Ctor","overArg","Set","WeakMap","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","ctorString","isStrictComparable","hasIn","baseGet","memoizeCapped","rePropName","reEscapeChar","number","quote","subString","memoize","MAX_MEMOIZE_SIZE","FUNC_ERROR_TEXT","resolver","memoized","baseToString","symbolToString","baseHasIn","hasPath","hasFunc","baseProperty","basePropertyDeep","baseEach","baseForOwn","createBaseEach","baseFor","createBaseFor","fromRight","eachFunc","comparer","compareAscending","objCriteria","othCriteria","ordersLength","valIsDefined","valIsNull","valIsReflexive","valIsSymbol","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","overRest","setToString","nativeMax","otherArgs","baseSetToString","shortOut","HOT_COUNT","HOT_SPAN","nativeNow","lastCalled","stamp","remaining"],"mappings":"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ACA,6CACA,0CACA,0CACA,uCACA,2CACA,wCACA,wCACA,qCACA,2CACA,yCACA,wCACA,qCACA,0CACA,uCACA,wCACA,0CACA,0CACA,uCACA,uCACA,0CACA,wCACA,qCACA,qCACA,wCACA,wCACA,qCACA,qCACA,yCACA,uCACA,qCACA,qCACA,6CACA,8CACA,2CACA,2CACA,wCACA,0CACA,uCACA,uCACA,oCACA,4CACA,0CACA,yCACA,uCACA,wCACA,uCACA,qCACA,yCACA,2CACA,wCACA,wCACA,qCACA,uCACA,oCACA,oCACA,iCACA,yCACA,sCACA,sCACA,qCACA,sCACA,sCACA,kCACA,sCACA,4CACA,yCACA,yCACA,qCACA,uCACA,oCACA,0CACA,uCACA,0CACA,uCACA,sCACA,oCACA,qCACA,mCACA,wCACA,2CACA,0CACA,uCACA,sCACA,yCACA,oCACA,iCACA,uCACA,0CACA,uCACA,oCACA,oCACA,uCACA,kCACA,2CACA,sCACA,8CACA,8CACA,2CACA,2CACA,wCACA,4CACA,yCACA,yCACA,wCACA,0CACA,uCACA,uCACA,oCACA,yCACA,sCACA,uCACA,0CACA,2CACA,wCACA,wCACA,qCACA,yCACA,uCACA,uCACA,oCACA,uCACA,0CACA,oCACA,uCACA,qCACA,yCACA,mCACA,4CACA,2CACA,wCACA,wCACA,qCACA,yCACA,sCACA,uCACA,mCACA,uCACA,oCACA,oCACA,iCACA,qCACA,kCACA,sCACA,wCACA,yCACA,qCACA,uCACA,wCACA,wCACA,oCACA,oCACA,uCACA,oCACA,uCACA,iCACA,0CACA,kCACA,sCACA,2CACA,8CACA,6CACA,0CACA,0CACA,uCACA,yCACA,qCACA,qCACA,kCACA,wCACA,qCACA,sCACA,kCACA,0CACA,uCACA,uCACA,0CACA,0CACA,wCACA,wCACA,qCACA,qCACA,sCACA,mCACA,2CACA,qCACA,wCACA,mCACA,qCACA,uCACA,0CACA,oCACA,6CACA,2CACA,uCACA,wCACA,qCACA,uCACA,oCACA,yCACA,sC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","file":"0660d3583c38003162cc.worker.js","sourcesContent":[" \tvar parentHotUpdateCallback = window[\"webpackHotUpdate\"];\n \twindow[\"webpackHotUpdate\"] = // eslint-disable-next-line no-unused-vars\n \tfunction webpackHotUpdateCallback(chunkId, moreModules) {\n \t\thotAddUpdateChunk(chunkId, moreModules);\n \t\tif (parentHotUpdateCallback) parentHotUpdateCallback(chunkId, moreModules);\n \t} ;\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadUpdateChunk(chunkId) {\n \t\timportScripts(__webpack_require__.p + \"\" + chunkId + \".\" + hotCurrentHash + \".hot-update.js\");\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadManifest(requestTimeout) {\n \t\trequestTimeout = requestTimeout || 10000;\n \t\treturn new Promise(function(resolve, reject) {\n \t\t\tif (typeof XMLHttpRequest === \"undefined\") {\n \t\t\t\treturn reject(new Error(\"No browser support\"));\n \t\t\t}\n \t\t\ttry {\n \t\t\t\tvar request = new XMLHttpRequest();\n \t\t\t\tvar requestPath = __webpack_require__.p + \"\" + hotCurrentHash + \".hot-update.json\";\n \t\t\t\trequest.open(\"GET\", requestPath, true);\n \t\t\t\trequest.timeout = requestTimeout;\n \t\t\t\trequest.send(null);\n \t\t\t} catch (err) {\n \t\t\t\treturn reject(err);\n \t\t\t}\n \t\t\trequest.onreadystatechange = function() {\n \t\t\t\tif (request.readyState !== 4) return;\n \t\t\t\tif (request.status === 0) {\n \t\t\t\t\t// timeout\n \t\t\t\t\treject(\n \t\t\t\t\t\tnew Error(\"Manifest request to \" + requestPath + \" timed out.\")\n \t\t\t\t\t);\n \t\t\t\t} else if (request.status === 404) {\n \t\t\t\t\t// no update available\n \t\t\t\t\tresolve();\n \t\t\t\t} else if (request.status !== 200 && request.status !== 304) {\n \t\t\t\t\t// other failure\n \t\t\t\t\treject(new Error(\"Manifest request to \" + requestPath + \" failed.\"));\n \t\t\t\t} else {\n \t\t\t\t\t// success\n \t\t\t\t\ttry {\n \t\t\t\t\t\tvar update = JSON.parse(request.responseText);\n \t\t\t\t\t} catch (e) {\n \t\t\t\t\t\treject(e);\n \t\t\t\t\t\treturn;\n \t\t\t\t\t}\n \t\t\t\t\tresolve(update);\n \t\t\t\t}\n \t\t\t};\n \t\t});\n \t}\n\n \t//eslint-disable-next-line no-unused-vars\n \tfunction hotDisposeChunk(chunkId) {\n \t\tdelete installedChunks[chunkId];\n \t}\n\n \tvar hotApplyOnUpdate = true;\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentHash = \"0660d3583c38003162cc\";\n \tvar hotRequestTimeout = 10000;\n \tvar hotCurrentModuleData = {};\n \tvar hotCurrentChildModule;\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentParents = [];\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentParentsTemp = [];\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateRequire(moduleId) {\n \t\tvar me = installedModules[moduleId];\n \t\tif (!me) return __webpack_require__;\n \t\tvar fn = function(request) {\n \t\t\tif (me.hot.active) {\n \t\t\t\tif (installedModules[request]) {\n \t\t\t\t\tif (installedModules[request].parents.indexOf(moduleId) === -1) {\n \t\t\t\t\t\tinstalledModules[request].parents.push(moduleId);\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\thotCurrentParents = [moduleId];\n \t\t\t\t\thotCurrentChildModule = request;\n \t\t\t\t}\n \t\t\t\tif (me.children.indexOf(request) === -1) {\n \t\t\t\t\tme.children.push(request);\n \t\t\t\t}\n \t\t\t} else {\n \t\t\t\tconsole.warn(\n \t\t\t\t\t\"[HMR] unexpected require(\" +\n \t\t\t\t\t\trequest +\n \t\t\t\t\t\t\") from disposed module \" +\n \t\t\t\t\t\tmoduleId\n \t\t\t\t);\n \t\t\t\thotCurrentParents = [];\n \t\t\t}\n \t\t\treturn __webpack_require__(request);\n \t\t};\n \t\tvar ObjectFactory = function ObjectFactory(name) {\n \t\t\treturn {\n \t\t\t\tconfigurable: true,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: function() {\n \t\t\t\t\treturn __webpack_require__[name];\n \t\t\t\t},\n \t\t\t\tset: function(value) {\n \t\t\t\t\t__webpack_require__[name] = value;\n \t\t\t\t}\n \t\t\t};\n \t\t};\n \t\tfor (var name in __webpack_require__) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(__webpack_require__, name) &&\n \t\t\t\tname !== \"e\" &&\n \t\t\t\tname !== \"t\"\n \t\t\t) {\n \t\t\t\tObject.defineProperty(fn, name, ObjectFactory(name));\n \t\t\t}\n \t\t}\n \t\tfn.e = function(chunkId) {\n \t\t\tif (hotStatus === \"ready\") hotSetStatus(\"prepare\");\n \t\t\thotChunksLoading++;\n \t\t\treturn __webpack_require__.e(chunkId).then(finishChunkLoading, function(err) {\n \t\t\t\tfinishChunkLoading();\n \t\t\t\tthrow err;\n \t\t\t});\n\n \t\t\tfunction finishChunkLoading() {\n \t\t\t\thotChunksLoading--;\n \t\t\t\tif (hotStatus === \"prepare\") {\n \t\t\t\t\tif (!hotWaitingFilesMap[chunkId]) {\n \t\t\t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t\t\t}\n \t\t\t\t\tif (hotChunksLoading === 0 && hotWaitingFiles === 0) {\n \t\t\t\t\t\thotUpdateDownloaded();\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t};\n \t\tfn.t = function(value, mode) {\n \t\t\tif (mode & 1) value = fn(value);\n \t\t\treturn __webpack_require__.t(value, mode & ~1);\n \t\t};\n \t\treturn fn;\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateModule(moduleId) {\n \t\tvar hot = {\n \t\t\t// private stuff\n \t\t\t_acceptedDependencies: {},\n \t\t\t_declinedDependencies: {},\n \t\t\t_selfAccepted: false,\n \t\t\t_selfDeclined: false,\n \t\t\t_disposeHandlers: [],\n \t\t\t_main: hotCurrentChildModule !== moduleId,\n\n \t\t\t// Module API\n \t\t\tactive: true,\n \t\t\taccept: function(dep, callback) {\n \t\t\t\tif (dep === undefined) hot._selfAccepted = true;\n \t\t\t\telse if (typeof dep === \"function\") hot._selfAccepted = dep;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._acceptedDependencies[dep[i]] = callback || function() {};\n \t\t\t\telse hot._acceptedDependencies[dep] = callback || function() {};\n \t\t\t},\n \t\t\tdecline: function(dep) {\n \t\t\t\tif (dep === undefined) hot._selfDeclined = true;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._declinedDependencies[dep[i]] = true;\n \t\t\t\telse hot._declinedDependencies[dep] = true;\n \t\t\t},\n \t\t\tdispose: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\taddDisposeHandler: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\tremoveDisposeHandler: function(callback) {\n \t\t\t\tvar idx = hot._disposeHandlers.indexOf(callback);\n \t\t\t\tif (idx >= 0) hot._disposeHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t// Management API\n \t\t\tcheck: hotCheck,\n \t\t\tapply: hotApply,\n \t\t\tstatus: function(l) {\n \t\t\t\tif (!l) return hotStatus;\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\taddStatusHandler: function(l) {\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\tremoveStatusHandler: function(l) {\n \t\t\t\tvar idx = hotStatusHandlers.indexOf(l);\n \t\t\t\tif (idx >= 0) hotStatusHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t//inherit from previous dispose call\n \t\t\tdata: hotCurrentModuleData[moduleId]\n \t\t};\n \t\thotCurrentChildModule = undefined;\n \t\treturn hot;\n \t}\n\n \tvar hotStatusHandlers = [];\n \tvar hotStatus = \"idle\";\n\n \tfunction hotSetStatus(newStatus) {\n \t\thotStatus = newStatus;\n \t\tfor (var i = 0; i < hotStatusHandlers.length; i++)\n \t\t\thotStatusHandlers[i].call(null, newStatus);\n \t}\n\n \t// while downloading\n \tvar hotWaitingFiles = 0;\n \tvar hotChunksLoading = 0;\n \tvar hotWaitingFilesMap = {};\n \tvar hotRequestedFilesMap = {};\n \tvar hotAvailableFilesMap = {};\n \tvar hotDeferred;\n\n \t// The update info\n \tvar hotUpdate, hotUpdateNewHash;\n\n \tfunction toModuleId(id) {\n \t\tvar isNumber = +id + \"\" === id;\n \t\treturn isNumber ? +id : id;\n \t}\n\n \tfunction hotCheck(apply) {\n \t\tif (hotStatus !== \"idle\") {\n \t\t\tthrow new Error(\"check() is only allowed in idle status\");\n \t\t}\n \t\thotApplyOnUpdate = apply;\n \t\thotSetStatus(\"check\");\n \t\treturn hotDownloadManifest(hotRequestTimeout).then(function(update) {\n \t\t\tif (!update) {\n \t\t\t\thotSetStatus(\"idle\");\n \t\t\t\treturn null;\n \t\t\t}\n \t\t\thotRequestedFilesMap = {};\n \t\t\thotWaitingFilesMap = {};\n \t\t\thotAvailableFilesMap = update.c;\n \t\t\thotUpdateNewHash = update.h;\n\n \t\t\thotSetStatus(\"prepare\");\n \t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\thotDeferred = {\n \t\t\t\t\tresolve: resolve,\n \t\t\t\t\treject: reject\n \t\t\t\t};\n \t\t\t});\n \t\t\thotUpdate = {};\n \t\t\tvar chunkId = 0;\n \t\t\t// eslint-disable-next-line no-lone-blocks\n \t\t\t{\n \t\t\t\t/*globals chunkId */\n \t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t}\n \t\t\tif (\n \t\t\t\thotStatus === \"prepare\" &&\n \t\t\t\thotChunksLoading === 0 &&\n \t\t\t\thotWaitingFiles === 0\n \t\t\t) {\n \t\t\t\thotUpdateDownloaded();\n \t\t\t}\n \t\t\treturn promise;\n \t\t});\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotAddUpdateChunk(chunkId, moreModules) {\n \t\tif (!hotAvailableFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])\n \t\t\treturn;\n \t\thotRequestedFilesMap[chunkId] = false;\n \t\tfor (var moduleId in moreModules) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\thotUpdate[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif (--hotWaitingFiles === 0 && hotChunksLoading === 0) {\n \t\t\thotUpdateDownloaded();\n \t\t}\n \t}\n\n \tfunction hotEnsureUpdateChunk(chunkId) {\n \t\tif (!hotAvailableFilesMap[chunkId]) {\n \t\t\thotWaitingFilesMap[chunkId] = true;\n \t\t} else {\n \t\t\thotRequestedFilesMap[chunkId] = true;\n \t\t\thotWaitingFiles++;\n \t\t\thotDownloadUpdateChunk(chunkId);\n \t\t}\n \t}\n\n \tfunction hotUpdateDownloaded() {\n \t\thotSetStatus(\"ready\");\n \t\tvar deferred = hotDeferred;\n \t\thotDeferred = null;\n \t\tif (!deferred) return;\n \t\tif (hotApplyOnUpdate) {\n \t\t\t// Wrap deferred object in Promise to mark it as a well-handled Promise to\n \t\t\t// avoid triggering uncaught exception warning in Chrome.\n \t\t\t// See https://bugs.chromium.org/p/chromium/issues/detail?id=465666\n \t\t\tPromise.resolve()\n \t\t\t\t.then(function() {\n \t\t\t\t\treturn hotApply(hotApplyOnUpdate);\n \t\t\t\t})\n \t\t\t\t.then(\n \t\t\t\t\tfunction(result) {\n \t\t\t\t\t\tdeferred.resolve(result);\n \t\t\t\t\t},\n \t\t\t\t\tfunction(err) {\n \t\t\t\t\t\tdeferred.reject(err);\n \t\t\t\t\t}\n \t\t\t\t);\n \t\t} else {\n \t\t\tvar outdatedModules = [];\n \t\t\tfor (var id in hotUpdate) {\n \t\t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\t\toutdatedModules.push(toModuleId(id));\n \t\t\t\t}\n \t\t\t}\n \t\t\tdeferred.resolve(outdatedModules);\n \t\t}\n \t}\n\n \tfunction hotApply(options) {\n \t\tif (hotStatus !== \"ready\")\n \t\t\tthrow new Error(\"apply() is only allowed in ready status\");\n \t\toptions = options || {};\n\n \t\tvar cb;\n \t\tvar i;\n \t\tvar j;\n \t\tvar module;\n \t\tvar moduleId;\n\n \t\tfunction getAffectedStuff(updateModuleId) {\n \t\t\tvar outdatedModules = [updateModuleId];\n \t\t\tvar outdatedDependencies = {};\n\n \t\t\tvar queue = outdatedModules.map(function(id) {\n \t\t\t\treturn {\n \t\t\t\t\tchain: [id],\n \t\t\t\t\tid: id\n \t\t\t\t};\n \t\t\t});\n \t\t\twhile (queue.length > 0) {\n \t\t\t\tvar queueItem = queue.pop();\n \t\t\t\tvar moduleId = queueItem.id;\n \t\t\t\tvar chain = queueItem.chain;\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (!module || module.hot._selfAccepted) continue;\n \t\t\t\tif (module.hot._selfDeclined) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"self-declined\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tif (module.hot._main) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"unaccepted\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tfor (var i = 0; i < module.parents.length; i++) {\n \t\t\t\t\tvar parentId = module.parents[i];\n \t\t\t\t\tvar parent = installedModules[parentId];\n \t\t\t\t\tif (!parent) continue;\n \t\t\t\t\tif (parent.hot._declinedDependencies[moduleId]) {\n \t\t\t\t\t\treturn {\n \t\t\t\t\t\t\ttype: \"declined\",\n \t\t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\tparentId: parentId\n \t\t\t\t\t\t};\n \t\t\t\t\t}\n \t\t\t\t\tif (outdatedModules.indexOf(parentId) !== -1) continue;\n \t\t\t\t\tif (parent.hot._acceptedDependencies[moduleId]) {\n \t\t\t\t\t\tif (!outdatedDependencies[parentId])\n \t\t\t\t\t\t\toutdatedDependencies[parentId] = [];\n \t\t\t\t\t\taddAllToSet(outdatedDependencies[parentId], [moduleId]);\n \t\t\t\t\t\tcontinue;\n \t\t\t\t\t}\n \t\t\t\t\tdelete outdatedDependencies[parentId];\n \t\t\t\t\toutdatedModules.push(parentId);\n \t\t\t\t\tqueue.push({\n \t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\tid: parentId\n \t\t\t\t\t});\n \t\t\t\t}\n \t\t\t}\n\n \t\t\treturn {\n \t\t\t\ttype: \"accepted\",\n \t\t\t\tmoduleId: updateModuleId,\n \t\t\t\toutdatedModules: outdatedModules,\n \t\t\t\toutdatedDependencies: outdatedDependencies\n \t\t\t};\n \t\t}\n\n \t\tfunction addAllToSet(a, b) {\n \t\t\tfor (var i = 0; i < b.length; i++) {\n \t\t\t\tvar item = b[i];\n \t\t\t\tif (a.indexOf(item) === -1) a.push(item);\n \t\t\t}\n \t\t}\n\n \t\t// at begin all updates modules are outdated\n \t\t// the \"outdated\" status can propagate to parents if they don't accept the children\n \t\tvar outdatedDependencies = {};\n \t\tvar outdatedModules = [];\n \t\tvar appliedUpdate = {};\n\n \t\tvar warnUnexpectedRequire = function warnUnexpectedRequire() {\n \t\t\tconsole.warn(\n \t\t\t\t\"[HMR] unexpected require(\" + result.moduleId + \") to disposed module\"\n \t\t\t);\n \t\t};\n\n \t\tfor (var id in hotUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\tmoduleId = toModuleId(id);\n \t\t\t\t/** @type {TODO} */\n \t\t\t\tvar result;\n \t\t\t\tif (hotUpdate[id]) {\n \t\t\t\t\tresult = getAffectedStuff(moduleId);\n \t\t\t\t} else {\n \t\t\t\t\tresult = {\n \t\t\t\t\t\ttype: \"disposed\",\n \t\t\t\t\t\tmoduleId: id\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\t/** @type {Error|false} */\n \t\t\t\tvar abortError = false;\n \t\t\t\tvar doApply = false;\n \t\t\t\tvar doDispose = false;\n \t\t\t\tvar chainInfo = \"\";\n \t\t\t\tif (result.chain) {\n \t\t\t\t\tchainInfo = \"\\nUpdate propagation: \" + result.chain.join(\" -> \");\n \t\t\t\t}\n \t\t\t\tswitch (result.type) {\n \t\t\t\t\tcase \"self-declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of self decline: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of declined dependency: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\t\" in \" +\n \t\t\t\t\t\t\t\t\tresult.parentId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"unaccepted\":\n \t\t\t\t\t\tif (options.onUnaccepted) options.onUnaccepted(result);\n \t\t\t\t\t\tif (!options.ignoreUnaccepted)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because \" + moduleId + \" is not accepted\" + chainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"accepted\":\n \t\t\t\t\t\tif (options.onAccepted) options.onAccepted(result);\n \t\t\t\t\t\tdoApply = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"disposed\":\n \t\t\t\t\t\tif (options.onDisposed) options.onDisposed(result);\n \t\t\t\t\t\tdoDispose = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tdefault:\n \t\t\t\t\t\tthrow new Error(\"Unexception type \" + result.type);\n \t\t\t\t}\n \t\t\t\tif (abortError) {\n \t\t\t\t\thotSetStatus(\"abort\");\n \t\t\t\t\treturn Promise.reject(abortError);\n \t\t\t\t}\n \t\t\t\tif (doApply) {\n \t\t\t\t\tappliedUpdate[moduleId] = hotUpdate[moduleId];\n \t\t\t\t\taddAllToSet(outdatedModules, result.outdatedModules);\n \t\t\t\t\tfor (moduleId in result.outdatedDependencies) {\n \t\t\t\t\t\tif (\n \t\t\t\t\t\t\tObject.prototype.hasOwnProperty.call(\n \t\t\t\t\t\t\t\tresult.outdatedDependencies,\n \t\t\t\t\t\t\t\tmoduleId\n \t\t\t\t\t\t\t)\n \t\t\t\t\t\t) {\n \t\t\t\t\t\t\tif (!outdatedDependencies[moduleId])\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId] = [];\n \t\t\t\t\t\t\taddAllToSet(\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId],\n \t\t\t\t\t\t\t\tresult.outdatedDependencies[moduleId]\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t\tif (doDispose) {\n \t\t\t\t\taddAllToSet(outdatedModules, [result.moduleId]);\n \t\t\t\t\tappliedUpdate[moduleId] = warnUnexpectedRequire;\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Store self accepted outdated modules to require them later by the module system\n \t\tvar outdatedSelfAcceptedModules = [];\n \t\tfor (i = 0; i < outdatedModules.length; i++) {\n \t\t\tmoduleId = outdatedModules[i];\n \t\t\tif (\n \t\t\t\tinstalledModules[moduleId] &&\n \t\t\t\tinstalledModules[moduleId].hot._selfAccepted &&\n \t\t\t\t// removed self-accepted modules should not be required\n \t\t\t\tappliedUpdate[moduleId] !== warnUnexpectedRequire\n \t\t\t) {\n \t\t\t\toutdatedSelfAcceptedModules.push({\n \t\t\t\t\tmodule: moduleId,\n \t\t\t\t\terrorHandler: installedModules[moduleId].hot._selfAccepted\n \t\t\t\t});\n \t\t\t}\n \t\t}\n\n \t\t// Now in \"dispose\" phase\n \t\thotSetStatus(\"dispose\");\n \t\tObject.keys(hotAvailableFilesMap).forEach(function(chunkId) {\n \t\t\tif (hotAvailableFilesMap[chunkId] === false) {\n \t\t\t\thotDisposeChunk(chunkId);\n \t\t\t}\n \t\t});\n\n \t\tvar idx;\n \t\tvar queue = outdatedModules.slice();\n \t\twhile (queue.length > 0) {\n \t\t\tmoduleId = queue.pop();\n \t\t\tmodule = installedModules[moduleId];\n \t\t\tif (!module) continue;\n\n \t\t\tvar data = {};\n\n \t\t\t// Call dispose handlers\n \t\t\tvar disposeHandlers = module.hot._disposeHandlers;\n \t\t\tfor (j = 0; j < disposeHandlers.length; j++) {\n \t\t\t\tcb = disposeHandlers[j];\n \t\t\t\tcb(data);\n \t\t\t}\n \t\t\thotCurrentModuleData[moduleId] = data;\n\n \t\t\t// disable module (this disables requires from this module)\n \t\t\tmodule.hot.active = false;\n\n \t\t\t// remove module from cache\n \t\t\tdelete installedModules[moduleId];\n\n \t\t\t// when disposing there is no need to call dispose handler\n \t\t\tdelete outdatedDependencies[moduleId];\n\n \t\t\t// remove \"parents\" references from all children\n \t\t\tfor (j = 0; j < module.children.length; j++) {\n \t\t\t\tvar child = installedModules[module.children[j]];\n \t\t\t\tif (!child) continue;\n \t\t\t\tidx = child.parents.indexOf(moduleId);\n \t\t\t\tif (idx >= 0) {\n \t\t\t\t\tchild.parents.splice(idx, 1);\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// remove outdated dependency from module children\n \t\tvar dependency;\n \t\tvar moduleOutdatedDependencies;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tfor (j = 0; j < moduleOutdatedDependencies.length; j++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[j];\n \t\t\t\t\t\tidx = module.children.indexOf(dependency);\n \t\t\t\t\t\tif (idx >= 0) module.children.splice(idx, 1);\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Now in \"apply\" phase\n \t\thotSetStatus(\"apply\");\n\n \t\thotCurrentHash = hotUpdateNewHash;\n\n \t\t// insert new code\n \t\tfor (moduleId in appliedUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {\n \t\t\t\tmodules[moduleId] = appliedUpdate[moduleId];\n \t\t\t}\n \t\t}\n\n \t\t// call accept handlers\n \t\tvar error = null;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tvar callbacks = [];\n \t\t\t\t\tfor (i = 0; i < moduleOutdatedDependencies.length; i++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[i];\n \t\t\t\t\t\tcb = module.hot._acceptedDependencies[dependency];\n \t\t\t\t\t\tif (cb) {\n \t\t\t\t\t\t\tif (callbacks.indexOf(cb) !== -1) continue;\n \t\t\t\t\t\t\tcallbacks.push(cb);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t\tfor (i = 0; i < callbacks.length; i++) {\n \t\t\t\t\t\tcb = callbacks[i];\n \t\t\t\t\t\ttry {\n \t\t\t\t\t\t\tcb(moduleOutdatedDependencies);\n \t\t\t\t\t\t} catch (err) {\n \t\t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\t\ttype: \"accept-errored\",\n \t\t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\t\tdependencyId: moduleOutdatedDependencies[i],\n \t\t\t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t\t\t});\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Load self accepted modules\n \t\tfor (i = 0; i < outdatedSelfAcceptedModules.length; i++) {\n \t\t\tvar item = outdatedSelfAcceptedModules[i];\n \t\t\tmoduleId = item.module;\n \t\t\thotCurrentParents = [moduleId];\n \t\t\ttry {\n \t\t\t\t__webpack_require__(moduleId);\n \t\t\t} catch (err) {\n \t\t\t\tif (typeof item.errorHandler === \"function\") {\n \t\t\t\t\ttry {\n \t\t\t\t\t\titem.errorHandler(err);\n \t\t\t\t\t} catch (err2) {\n \t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\ttype: \"self-accept-error-handler-errored\",\n \t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\terror: err2,\n \t\t\t\t\t\t\t\toriginalError: err\n \t\t\t\t\t\t\t});\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\tif (!error) error = err2;\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\ttype: \"self-accept-errored\",\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t});\n \t\t\t\t\t}\n \t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// handle errors in accept handlers and self accepted module load\n \t\tif (error) {\n \t\t\thotSetStatus(\"fail\");\n \t\t\treturn Promise.reject(error);\n \t\t}\n\n \t\thotSetStatus(\"idle\");\n \t\treturn new Promise(function(resolve) {\n \t\t\tresolve(outdatedModules);\n \t\t});\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {},\n \t\t\thot: hotCreateModule(moduleId),\n \t\t\tparents: (hotCurrentParentsTemp = hotCurrentParents, hotCurrentParents = [], hotCurrentParentsTemp),\n \t\t\tchildren: []\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId));\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// __webpack_hash__\n \t__webpack_require__.h = function() { return hotCurrentHash; };\n\n\n \t// Load entry module and return exports\n \treturn hotCreateRequire(50)(__webpack_require__.s = 50);\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n","(function( self ){\n\n\tvar THREE = require(\"./three.js\");\n\n\tmodule.exports = function( addons ){\n\n\t\tif( addons instanceof Array ){\n\n\t\t\tfor( var addonIndex = 0, length = addons.length; addonIndex < length; addonIndex++ ){\n\t\t\t\t\n\t\t\t\tvar addon = addons[addonIndex];\n\t\t\t\t\n\t\t\t\tif( addon instanceof Function ){\n\n\t\t\t\t\taddon(THREE);\n\n\t\t\t\t}\n\t\t\t\telse if( typeof addon === \"string\" ){\n\n\t\t\t\t\trequire(\"./addons/\" + addon + \".js\")(THREE);\n\n\t\t\t\t}\n\t\t\t\telse {\n\n\t\t\t\t\tthrow new Error(\"Invalid module type provided\");\n\n\t\t\t\t};\n\t\t\t\t\n\t\t\t};\n\n\t\t};\n\n\t\treturn THREE;\n\n\t};\n\n})(this || {});\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","/* @preserve\n * The MIT License (MIT)\n * \n * Copyright (c) 2013-2017 Petka Antonov\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n * \n */\n/**\n * bluebird build version 3.5.1\n * Features enabled: core, race, call_get, generators, map, nodeify, promisify, props, reduce, settle, some, using, timers, filter, any, each\n*/\n!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.Promise=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof _dereq_==\"function\"&&_dereq_;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof _dereq_==\"function\"&&_dereq_;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise) {\nvar SomePromiseArray = Promise._SomePromiseArray;\nfunction any(promises) {\n    var ret = new SomePromiseArray(promises);\n    var promise = ret.promise();\n    ret.setHowMany(1);\n    ret.setUnwrap();\n    ret.init();\n    return promise;\n}\n\nPromise.any = function (promises) {\n    return any(promises);\n};\n\nPromise.prototype.any = function () {\n    return any(this);\n};\n\n};\n\n},{}],2:[function(_dereq_,module,exports){\n\"use strict\";\nvar firstLineError;\ntry {throw new Error(); } catch (e) {firstLineError = e;}\nvar schedule = _dereq_(\"./schedule\");\nvar Queue = _dereq_(\"./queue\");\nvar util = _dereq_(\"./util\");\n\nfunction Async() {\n    this._customScheduler = false;\n    this._isTickUsed = false;\n    this._lateQueue = new Queue(16);\n    this._normalQueue = new Queue(16);\n    this._haveDrainedQueues = false;\n    this._trampolineEnabled = true;\n    var self = this;\n    this.drainQueues = function () {\n        self._drainQueues();\n    };\n    this._schedule = schedule;\n}\n\nAsync.prototype.setScheduler = function(fn) {\n    var prev = this._schedule;\n    this._schedule = fn;\n    this._customScheduler = true;\n    return prev;\n};\n\nAsync.prototype.hasCustomScheduler = function() {\n    return this._customScheduler;\n};\n\nAsync.prototype.enableTrampoline = function() {\n    this._trampolineEnabled = true;\n};\n\nAsync.prototype.disableTrampolineIfNecessary = function() {\n    if (util.hasDevTools) {\n        this._trampolineEnabled = false;\n    }\n};\n\nAsync.prototype.haveItemsQueued = function () {\n    return this._isTickUsed || this._haveDrainedQueues;\n};\n\n\nAsync.prototype.fatalError = function(e, isNode) {\n    if (isNode) {\n        process.stderr.write(\"Fatal \" + (e instanceof Error ? e.stack : e) +\n            \"\\n\");\n        process.exit(2);\n    } else {\n        this.throwLater(e);\n    }\n};\n\nAsync.prototype.throwLater = function(fn, arg) {\n    if (arguments.length === 1) {\n        arg = fn;\n        fn = function () { throw arg; };\n    }\n    if (typeof setTimeout !== \"undefined\") {\n        setTimeout(function() {\n            fn(arg);\n        }, 0);\n    } else try {\n        this._schedule(function() {\n            fn(arg);\n        });\n    } catch (e) {\n        throw new Error(\"No async scheduler available\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n};\n\nfunction AsyncInvokeLater(fn, receiver, arg) {\n    this._lateQueue.push(fn, receiver, arg);\n    this._queueTick();\n}\n\nfunction AsyncInvoke(fn, receiver, arg) {\n    this._normalQueue.push(fn, receiver, arg);\n    this._queueTick();\n}\n\nfunction AsyncSettlePromises(promise) {\n    this._normalQueue._pushOne(promise);\n    this._queueTick();\n}\n\nif (!util.hasDevTools) {\n    Async.prototype.invokeLater = AsyncInvokeLater;\n    Async.prototype.invoke = AsyncInvoke;\n    Async.prototype.settlePromises = AsyncSettlePromises;\n} else {\n    Async.prototype.invokeLater = function (fn, receiver, arg) {\n        if (this._trampolineEnabled) {\n            AsyncInvokeLater.call(this, fn, receiver, arg);\n        } else {\n            this._schedule(function() {\n                setTimeout(function() {\n                    fn.call(receiver, arg);\n                }, 100);\n            });\n        }\n    };\n\n    Async.prototype.invoke = function (fn, receiver, arg) {\n        if (this._trampolineEnabled) {\n            AsyncInvoke.call(this, fn, receiver, arg);\n        } else {\n            this._schedule(function() {\n                fn.call(receiver, arg);\n            });\n        }\n    };\n\n    Async.prototype.settlePromises = function(promise) {\n        if (this._trampolineEnabled) {\n            AsyncSettlePromises.call(this, promise);\n        } else {\n            this._schedule(function() {\n                promise._settlePromises();\n            });\n        }\n    };\n}\n\nAsync.prototype._drainQueue = function(queue) {\n    while (queue.length() > 0) {\n        var fn = queue.shift();\n        if (typeof fn !== \"function\") {\n            fn._settlePromises();\n            continue;\n        }\n        var receiver = queue.shift();\n        var arg = queue.shift();\n        fn.call(receiver, arg);\n    }\n};\n\nAsync.prototype._drainQueues = function () {\n    this._drainQueue(this._normalQueue);\n    this._reset();\n    this._haveDrainedQueues = true;\n    this._drainQueue(this._lateQueue);\n};\n\nAsync.prototype._queueTick = function () {\n    if (!this._isTickUsed) {\n        this._isTickUsed = true;\n        this._schedule(this.drainQueues);\n    }\n};\n\nAsync.prototype._reset = function () {\n    this._isTickUsed = false;\n};\n\nmodule.exports = Async;\nmodule.exports.firstLineError = firstLineError;\n\n},{\"./queue\":26,\"./schedule\":29,\"./util\":36}],3:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, INTERNAL, tryConvertToPromise, debug) {\nvar calledBind = false;\nvar rejectThis = function(_, e) {\n    this._reject(e);\n};\n\nvar targetRejected = function(e, context) {\n    context.promiseRejectionQueued = true;\n    context.bindingPromise._then(rejectThis, rejectThis, null, this, e);\n};\n\nvar bindingResolved = function(thisArg, context) {\n    if (((this._bitField & 50397184) === 0)) {\n        this._resolveCallback(context.target);\n    }\n};\n\nvar bindingRejected = function(e, context) {\n    if (!context.promiseRejectionQueued) this._reject(e);\n};\n\nPromise.prototype.bind = function (thisArg) {\n    if (!calledBind) {\n        calledBind = true;\n        Promise.prototype._propagateFrom = debug.propagateFromFunction();\n        Promise.prototype._boundValue = debug.boundValueFunction();\n    }\n    var maybePromise = tryConvertToPromise(thisArg);\n    var ret = new Promise(INTERNAL);\n    ret._propagateFrom(this, 1);\n    var target = this._target();\n    ret._setBoundTo(maybePromise);\n    if (maybePromise instanceof Promise) {\n        var context = {\n            promiseRejectionQueued: false,\n            promise: ret,\n            target: target,\n            bindingPromise: maybePromise\n        };\n        target._then(INTERNAL, targetRejected, undefined, ret, context);\n        maybePromise._then(\n            bindingResolved, bindingRejected, undefined, ret, context);\n        ret._setOnCancel(maybePromise);\n    } else {\n        ret._resolveCallback(target);\n    }\n    return ret;\n};\n\nPromise.prototype._setBoundTo = function (obj) {\n    if (obj !== undefined) {\n        this._bitField = this._bitField | 2097152;\n        this._boundTo = obj;\n    } else {\n        this._bitField = this._bitField & (~2097152);\n    }\n};\n\nPromise.prototype._isBound = function () {\n    return (this._bitField & 2097152) === 2097152;\n};\n\nPromise.bind = function (thisArg, value) {\n    return Promise.resolve(value).bind(thisArg);\n};\n};\n\n},{}],4:[function(_dereq_,module,exports){\n\"use strict\";\nvar old;\nif (typeof Promise !== \"undefined\") old = Promise;\nfunction noConflict() {\n    try { if (Promise === bluebird) Promise = old; }\n    catch (e) {}\n    return bluebird;\n}\nvar bluebird = _dereq_(\"./promise\")();\nbluebird.noConflict = noConflict;\nmodule.exports = bluebird;\n\n},{\"./promise\":22}],5:[function(_dereq_,module,exports){\n\"use strict\";\nvar cr = Object.create;\nif (cr) {\n    var callerCache = cr(null);\n    var getterCache = cr(null);\n    callerCache[\" size\"] = getterCache[\" size\"] = 0;\n}\n\nmodule.exports = function(Promise) {\nvar util = _dereq_(\"./util\");\nvar canEvaluate = util.canEvaluate;\nvar isIdentifier = util.isIdentifier;\n\nvar getMethodCaller;\nvar getGetter;\nif (!true) {\nvar makeMethodCaller = function (methodName) {\n    return new Function(\"ensureMethod\", \"                                    \\n\\\n        return function(obj) {                                               \\n\\\n            'use strict'                                                     \\n\\\n            var len = this.length;                                           \\n\\\n            ensureMethod(obj, 'methodName');                                 \\n\\\n            switch(len) {                                                    \\n\\\n                case 1: return obj.methodName(this[0]);                      \\n\\\n                case 2: return obj.methodName(this[0], this[1]);             \\n\\\n                case 3: return obj.methodName(this[0], this[1], this[2]);    \\n\\\n                case 0: return obj.methodName();                             \\n\\\n                default:                                                     \\n\\\n                    return obj.methodName.apply(obj, this);                  \\n\\\n            }                                                                \\n\\\n        };                                                                   \\n\\\n        \".replace(/methodName/g, methodName))(ensureMethod);\n};\n\nvar makeGetter = function (propertyName) {\n    return new Function(\"obj\", \"                                             \\n\\\n        'use strict';                                                        \\n\\\n        return obj.propertyName;                                             \\n\\\n        \".replace(\"propertyName\", propertyName));\n};\n\nvar getCompiled = function(name, compiler, cache) {\n    var ret = cache[name];\n    if (typeof ret !== \"function\") {\n        if (!isIdentifier(name)) {\n            return null;\n        }\n        ret = compiler(name);\n        cache[name] = ret;\n        cache[\" size\"]++;\n        if (cache[\" size\"] > 512) {\n            var keys = Object.keys(cache);\n            for (var i = 0; i < 256; ++i) delete cache[keys[i]];\n            cache[\" size\"] = keys.length - 256;\n        }\n    }\n    return ret;\n};\n\ngetMethodCaller = function(name) {\n    return getCompiled(name, makeMethodCaller, callerCache);\n};\n\ngetGetter = function(name) {\n    return getCompiled(name, makeGetter, getterCache);\n};\n}\n\nfunction ensureMethod(obj, methodName) {\n    var fn;\n    if (obj != null) fn = obj[methodName];\n    if (typeof fn !== \"function\") {\n        var message = \"Object \" + util.classString(obj) + \" has no method '\" +\n            util.toString(methodName) + \"'\";\n        throw new Promise.TypeError(message);\n    }\n    return fn;\n}\n\nfunction caller(obj) {\n    var methodName = this.pop();\n    var fn = ensureMethod(obj, methodName);\n    return fn.apply(obj, this);\n}\nPromise.prototype.call = function (methodName) {\n    var args = [].slice.call(arguments, 1);;\n    if (!true) {\n        if (canEvaluate) {\n            var maybeCaller = getMethodCaller(methodName);\n            if (maybeCaller !== null) {\n                return this._then(\n                    maybeCaller, undefined, undefined, args, undefined);\n            }\n        }\n    }\n    args.push(methodName);\n    return this._then(caller, undefined, undefined, args, undefined);\n};\n\nfunction namedGetter(obj) {\n    return obj[this];\n}\nfunction indexedGetter(obj) {\n    var index = +this;\n    if (index < 0) index = Math.max(0, index + obj.length);\n    return obj[index];\n}\nPromise.prototype.get = function (propertyName) {\n    var isIndex = (typeof propertyName === \"number\");\n    var getter;\n    if (!isIndex) {\n        if (canEvaluate) {\n            var maybeGetter = getGetter(propertyName);\n            getter = maybeGetter !== null ? maybeGetter : namedGetter;\n        } else {\n            getter = namedGetter;\n        }\n    } else {\n        getter = indexedGetter;\n    }\n    return this._then(getter, undefined, undefined, propertyName, undefined);\n};\n};\n\n},{\"./util\":36}],6:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, PromiseArray, apiRejection, debug) {\nvar util = _dereq_(\"./util\");\nvar tryCatch = util.tryCatch;\nvar errorObj = util.errorObj;\nvar async = Promise._async;\n\nPromise.prototype[\"break\"] = Promise.prototype.cancel = function() {\n    if (!debug.cancellation()) return this._warn(\"cancellation is disabled\");\n\n    var promise = this;\n    var child = promise;\n    while (promise._isCancellable()) {\n        if (!promise._cancelBy(child)) {\n            if (child._isFollowing()) {\n                child._followee().cancel();\n            } else {\n                child._cancelBranched();\n            }\n            break;\n        }\n\n        var parent = promise._cancellationParent;\n        if (parent == null || !parent._isCancellable()) {\n            if (promise._isFollowing()) {\n                promise._followee().cancel();\n            } else {\n                promise._cancelBranched();\n            }\n            break;\n        } else {\n            if (promise._isFollowing()) promise._followee().cancel();\n            promise._setWillBeCancelled();\n            child = promise;\n            promise = parent;\n        }\n    }\n};\n\nPromise.prototype._branchHasCancelled = function() {\n    this._branchesRemainingToCancel--;\n};\n\nPromise.prototype._enoughBranchesHaveCancelled = function() {\n    return this._branchesRemainingToCancel === undefined ||\n           this._branchesRemainingToCancel <= 0;\n};\n\nPromise.prototype._cancelBy = function(canceller) {\n    if (canceller === this) {\n        this._branchesRemainingToCancel = 0;\n        this._invokeOnCancel();\n        return true;\n    } else {\n        this._branchHasCancelled();\n        if (this._enoughBranchesHaveCancelled()) {\n            this._invokeOnCancel();\n            return true;\n        }\n    }\n    return false;\n};\n\nPromise.prototype._cancelBranched = function() {\n    if (this._enoughBranchesHaveCancelled()) {\n        this._cancel();\n    }\n};\n\nPromise.prototype._cancel = function() {\n    if (!this._isCancellable()) return;\n    this._setCancelled();\n    async.invoke(this._cancelPromises, this, undefined);\n};\n\nPromise.prototype._cancelPromises = function() {\n    if (this._length() > 0) this._settlePromises();\n};\n\nPromise.prototype._unsetOnCancel = function() {\n    this._onCancelField = undefined;\n};\n\nPromise.prototype._isCancellable = function() {\n    return this.isPending() && !this._isCancelled();\n};\n\nPromise.prototype.isCancellable = function() {\n    return this.isPending() && !this.isCancelled();\n};\n\nPromise.prototype._doInvokeOnCancel = function(onCancelCallback, internalOnly) {\n    if (util.isArray(onCancelCallback)) {\n        for (var i = 0; i < onCancelCallback.length; ++i) {\n            this._doInvokeOnCancel(onCancelCallback[i], internalOnly);\n        }\n    } else if (onCancelCallback !== undefined) {\n        if (typeof onCancelCallback === \"function\") {\n            if (!internalOnly) {\n                var e = tryCatch(onCancelCallback).call(this._boundValue());\n                if (e === errorObj) {\n                    this._attachExtraTrace(e.e);\n                    async.throwLater(e.e);\n                }\n            }\n        } else {\n            onCancelCallback._resultCancelled(this);\n        }\n    }\n};\n\nPromise.prototype._invokeOnCancel = function() {\n    var onCancelCallback = this._onCancel();\n    this._unsetOnCancel();\n    async.invoke(this._doInvokeOnCancel, this, onCancelCallback);\n};\n\nPromise.prototype._invokeInternalOnCancel = function() {\n    if (this._isCancellable()) {\n        this._doInvokeOnCancel(this._onCancel(), true);\n        this._unsetOnCancel();\n    }\n};\n\nPromise.prototype._resultCancelled = function() {\n    this.cancel();\n};\n\n};\n\n},{\"./util\":36}],7:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(NEXT_FILTER) {\nvar util = _dereq_(\"./util\");\nvar getKeys = _dereq_(\"./es5\").keys;\nvar tryCatch = util.tryCatch;\nvar errorObj = util.errorObj;\n\nfunction catchFilter(instances, cb, promise) {\n    return function(e) {\n        var boundTo = promise._boundValue();\n        predicateLoop: for (var i = 0; i < instances.length; ++i) {\n            var item = instances[i];\n\n            if (item === Error ||\n                (item != null && item.prototype instanceof Error)) {\n                if (e instanceof item) {\n                    return tryCatch(cb).call(boundTo, e);\n                }\n            } else if (typeof item === \"function\") {\n                var matchesPredicate = tryCatch(item).call(boundTo, e);\n                if (matchesPredicate === errorObj) {\n                    return matchesPredicate;\n                } else if (matchesPredicate) {\n                    return tryCatch(cb).call(boundTo, e);\n                }\n            } else if (util.isObject(e)) {\n                var keys = getKeys(item);\n                for (var j = 0; j < keys.length; ++j) {\n                    var key = keys[j];\n                    if (item[key] != e[key]) {\n                        continue predicateLoop;\n                    }\n                }\n                return tryCatch(cb).call(boundTo, e);\n            }\n        }\n        return NEXT_FILTER;\n    };\n}\n\nreturn catchFilter;\n};\n\n},{\"./es5\":13,\"./util\":36}],8:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise) {\nvar longStackTraces = false;\nvar contextStack = [];\n\nPromise.prototype._promiseCreated = function() {};\nPromise.prototype._pushContext = function() {};\nPromise.prototype._popContext = function() {return null;};\nPromise._peekContext = Promise.prototype._peekContext = function() {};\n\nfunction Context() {\n    this._trace = new Context.CapturedTrace(peekContext());\n}\nContext.prototype._pushContext = function () {\n    if (this._trace !== undefined) {\n        this._trace._promiseCreated = null;\n        contextStack.push(this._trace);\n    }\n};\n\nContext.prototype._popContext = function () {\n    if (this._trace !== undefined) {\n        var trace = contextStack.pop();\n        var ret = trace._promiseCreated;\n        trace._promiseCreated = null;\n        return ret;\n    }\n    return null;\n};\n\nfunction createContext() {\n    if (longStackTraces) return new Context();\n}\n\nfunction peekContext() {\n    var lastIndex = contextStack.length - 1;\n    if (lastIndex >= 0) {\n        return contextStack[lastIndex];\n    }\n    return undefined;\n}\nContext.CapturedTrace = null;\nContext.create = createContext;\nContext.deactivateLongStackTraces = function() {};\nContext.activateLongStackTraces = function() {\n    var Promise_pushContext = Promise.prototype._pushContext;\n    var Promise_popContext = Promise.prototype._popContext;\n    var Promise_PeekContext = Promise._peekContext;\n    var Promise_peekContext = Promise.prototype._peekContext;\n    var Promise_promiseCreated = Promise.prototype._promiseCreated;\n    Context.deactivateLongStackTraces = function() {\n        Promise.prototype._pushContext = Promise_pushContext;\n        Promise.prototype._popContext = Promise_popContext;\n        Promise._peekContext = Promise_PeekContext;\n        Promise.prototype._peekContext = Promise_peekContext;\n        Promise.prototype._promiseCreated = Promise_promiseCreated;\n        longStackTraces = false;\n    };\n    longStackTraces = true;\n    Promise.prototype._pushContext = Context.prototype._pushContext;\n    Promise.prototype._popContext = Context.prototype._popContext;\n    Promise._peekContext = Promise.prototype._peekContext = peekContext;\n    Promise.prototype._promiseCreated = function() {\n        var ctx = this._peekContext();\n        if (ctx && ctx._promiseCreated == null) ctx._promiseCreated = this;\n    };\n};\nreturn Context;\n};\n\n},{}],9:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, Context) {\nvar getDomain = Promise._getDomain;\nvar async = Promise._async;\nvar Warning = _dereq_(\"./errors\").Warning;\nvar util = _dereq_(\"./util\");\nvar canAttachTrace = util.canAttachTrace;\nvar unhandledRejectionHandled;\nvar possiblyUnhandledRejection;\nvar bluebirdFramePattern =\n    /[\\\\\\/]bluebird[\\\\\\/]js[\\\\\\/](release|debug|instrumented)/;\nvar nodeFramePattern = /\\((?:timers\\.js):\\d+:\\d+\\)/;\nvar parseLinePattern = /[\\/<\\(](.+?):(\\d+):(\\d+)\\)?\\s*$/;\nvar stackFramePattern = null;\nvar formatStack = null;\nvar indentStackFrames = false;\nvar printWarning;\nvar debugging = !!(util.env(\"BLUEBIRD_DEBUG\") != 0 &&\n                        (true ||\n                         util.env(\"BLUEBIRD_DEBUG\") ||\n                         util.env(\"NODE_ENV\") === \"development\"));\n\nvar warnings = !!(util.env(\"BLUEBIRD_WARNINGS\") != 0 &&\n    (debugging || util.env(\"BLUEBIRD_WARNINGS\")));\n\nvar longStackTraces = !!(util.env(\"BLUEBIRD_LONG_STACK_TRACES\") != 0 &&\n    (debugging || util.env(\"BLUEBIRD_LONG_STACK_TRACES\")));\n\nvar wForgottenReturn = util.env(\"BLUEBIRD_W_FORGOTTEN_RETURN\") != 0 &&\n    (warnings || !!util.env(\"BLUEBIRD_W_FORGOTTEN_RETURN\"));\n\nPromise.prototype.suppressUnhandledRejections = function() {\n    var target = this._target();\n    target._bitField = ((target._bitField & (~1048576)) |\n                      524288);\n};\n\nPromise.prototype._ensurePossibleRejectionHandled = function () {\n    if ((this._bitField & 524288) !== 0) return;\n    this._setRejectionIsUnhandled();\n    var self = this;\n    setTimeout(function() {\n        self._notifyUnhandledRejection();\n    }, 1);\n};\n\nPromise.prototype._notifyUnhandledRejectionIsHandled = function () {\n    fireRejectionEvent(\"rejectionHandled\",\n                                  unhandledRejectionHandled, undefined, this);\n};\n\nPromise.prototype._setReturnedNonUndefined = function() {\n    this._bitField = this._bitField | 268435456;\n};\n\nPromise.prototype._returnedNonUndefined = function() {\n    return (this._bitField & 268435456) !== 0;\n};\n\nPromise.prototype._notifyUnhandledRejection = function () {\n    if (this._isRejectionUnhandled()) {\n        var reason = this._settledValue();\n        this._setUnhandledRejectionIsNotified();\n        fireRejectionEvent(\"unhandledRejection\",\n                                      possiblyUnhandledRejection, reason, this);\n    }\n};\n\nPromise.prototype._setUnhandledRejectionIsNotified = function () {\n    this._bitField = this._bitField | 262144;\n};\n\nPromise.prototype._unsetUnhandledRejectionIsNotified = function () {\n    this._bitField = this._bitField & (~262144);\n};\n\nPromise.prototype._isUnhandledRejectionNotified = function () {\n    return (this._bitField & 262144) > 0;\n};\n\nPromise.prototype._setRejectionIsUnhandled = function () {\n    this._bitField = this._bitField | 1048576;\n};\n\nPromise.prototype._unsetRejectionIsUnhandled = function () {\n    this._bitField = this._bitField & (~1048576);\n    if (this._isUnhandledRejectionNotified()) {\n        this._unsetUnhandledRejectionIsNotified();\n        this._notifyUnhandledRejectionIsHandled();\n    }\n};\n\nPromise.prototype._isRejectionUnhandled = function () {\n    return (this._bitField & 1048576) > 0;\n};\n\nPromise.prototype._warn = function(message, shouldUseOwnTrace, promise) {\n    return warn(message, shouldUseOwnTrace, promise || this);\n};\n\nPromise.onPossiblyUnhandledRejection = function (fn) {\n    var domain = getDomain();\n    possiblyUnhandledRejection =\n        typeof fn === \"function\" ? (domain === null ?\n                                            fn : util.domainBind(domain, fn))\n                                 : undefined;\n};\n\nPromise.onUnhandledRejectionHandled = function (fn) {\n    var domain = getDomain();\n    unhandledRejectionHandled =\n        typeof fn === \"function\" ? (domain === null ?\n                                            fn : util.domainBind(domain, fn))\n                                 : undefined;\n};\n\nvar disableLongStackTraces = function() {};\nPromise.longStackTraces = function () {\n    if (async.haveItemsQueued() && !config.longStackTraces) {\n        throw new Error(\"cannot enable long stack traces after promises have been created\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n    if (!config.longStackTraces && longStackTracesIsSupported()) {\n        var Promise_captureStackTrace = Promise.prototype._captureStackTrace;\n        var Promise_attachExtraTrace = Promise.prototype._attachExtraTrace;\n        config.longStackTraces = true;\n        disableLongStackTraces = function() {\n            if (async.haveItemsQueued() && !config.longStackTraces) {\n                throw new Error(\"cannot enable long stack traces after promises have been created\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n            }\n            Promise.prototype._captureStackTrace = Promise_captureStackTrace;\n            Promise.prototype._attachExtraTrace = Promise_attachExtraTrace;\n            Context.deactivateLongStackTraces();\n            async.enableTrampoline();\n            config.longStackTraces = false;\n        };\n        Promise.prototype._captureStackTrace = longStackTracesCaptureStackTrace;\n        Promise.prototype._attachExtraTrace = longStackTracesAttachExtraTrace;\n        Context.activateLongStackTraces();\n        async.disableTrampolineIfNecessary();\n    }\n};\n\nPromise.hasLongStackTraces = function () {\n    return config.longStackTraces && longStackTracesIsSupported();\n};\n\nvar fireDomEvent = (function() {\n    try {\n        if (typeof CustomEvent === \"function\") {\n            var event = new CustomEvent(\"CustomEvent\");\n            util.global.dispatchEvent(event);\n            return function(name, event) {\n                var domEvent = new CustomEvent(name.toLowerCase(), {\n                    detail: event,\n                    cancelable: true\n                });\n                return !util.global.dispatchEvent(domEvent);\n            };\n        } else if (typeof Event === \"function\") {\n            var event = new Event(\"CustomEvent\");\n            util.global.dispatchEvent(event);\n            return function(name, event) {\n                var domEvent = new Event(name.toLowerCase(), {\n                    cancelable: true\n                });\n                domEvent.detail = event;\n                return !util.global.dispatchEvent(domEvent);\n            };\n        } else {\n            var event = document.createEvent(\"CustomEvent\");\n            event.initCustomEvent(\"testingtheevent\", false, true, {});\n            util.global.dispatchEvent(event);\n            return function(name, event) {\n                var domEvent = document.createEvent(\"CustomEvent\");\n                domEvent.initCustomEvent(name.toLowerCase(), false, true,\n                    event);\n                return !util.global.dispatchEvent(domEvent);\n            };\n        }\n    } catch (e) {}\n    return function() {\n        return false;\n    };\n})();\n\nvar fireGlobalEvent = (function() {\n    if (util.isNode) {\n        return function() {\n            return process.emit.apply(process, arguments);\n        };\n    } else {\n        if (!util.global) {\n            return function() {\n                return false;\n            };\n        }\n        return function(name) {\n            var methodName = \"on\" + name.toLowerCase();\n            var method = util.global[methodName];\n            if (!method) return false;\n            method.apply(util.global, [].slice.call(arguments, 1));\n            return true;\n        };\n    }\n})();\n\nfunction generatePromiseLifecycleEventObject(name, promise) {\n    return {promise: promise};\n}\n\nvar eventToObjectGenerator = {\n    promiseCreated: generatePromiseLifecycleEventObject,\n    promiseFulfilled: generatePromiseLifecycleEventObject,\n    promiseRejected: generatePromiseLifecycleEventObject,\n    promiseResolved: generatePromiseLifecycleEventObject,\n    promiseCancelled: generatePromiseLifecycleEventObject,\n    promiseChained: function(name, promise, child) {\n        return {promise: promise, child: child};\n    },\n    warning: function(name, warning) {\n        return {warning: warning};\n    },\n    unhandledRejection: function (name, reason, promise) {\n        return {reason: reason, promise: promise};\n    },\n    rejectionHandled: generatePromiseLifecycleEventObject\n};\n\nvar activeFireEvent = function (name) {\n    var globalEventFired = false;\n    try {\n        globalEventFired = fireGlobalEvent.apply(null, arguments);\n    } catch (e) {\n        async.throwLater(e);\n        globalEventFired = true;\n    }\n\n    var domEventFired = false;\n    try {\n        domEventFired = fireDomEvent(name,\n                    eventToObjectGenerator[name].apply(null, arguments));\n    } catch (e) {\n        async.throwLater(e);\n        domEventFired = true;\n    }\n\n    return domEventFired || globalEventFired;\n};\n\nPromise.config = function(opts) {\n    opts = Object(opts);\n    if (\"longStackTraces\" in opts) {\n        if (opts.longStackTraces) {\n            Promise.longStackTraces();\n        } else if (!opts.longStackTraces && Promise.hasLongStackTraces()) {\n            disableLongStackTraces();\n        }\n    }\n    if (\"warnings\" in opts) {\n        var warningsOption = opts.warnings;\n        config.warnings = !!warningsOption;\n        wForgottenReturn = config.warnings;\n\n        if (util.isObject(warningsOption)) {\n            if (\"wForgottenReturn\" in warningsOption) {\n                wForgottenReturn = !!warningsOption.wForgottenReturn;\n            }\n        }\n    }\n    if (\"cancellation\" in opts && opts.cancellation && !config.cancellation) {\n        if (async.haveItemsQueued()) {\n            throw new Error(\n                \"cannot enable cancellation after promises are in use\");\n        }\n        Promise.prototype._clearCancellationData =\n            cancellationClearCancellationData;\n        Promise.prototype._propagateFrom = cancellationPropagateFrom;\n        Promise.prototype._onCancel = cancellationOnCancel;\n        Promise.prototype._setOnCancel = cancellationSetOnCancel;\n        Promise.prototype._attachCancellationCallback =\n            cancellationAttachCancellationCallback;\n        Promise.prototype._execute = cancellationExecute;\n        propagateFromFunction = cancellationPropagateFrom;\n        config.cancellation = true;\n    }\n    if (\"monitoring\" in opts) {\n        if (opts.monitoring && !config.monitoring) {\n            config.monitoring = true;\n            Promise.prototype._fireEvent = activeFireEvent;\n        } else if (!opts.monitoring && config.monitoring) {\n            config.monitoring = false;\n            Promise.prototype._fireEvent = defaultFireEvent;\n        }\n    }\n    return Promise;\n};\n\nfunction defaultFireEvent() { return false; }\n\nPromise.prototype._fireEvent = defaultFireEvent;\nPromise.prototype._execute = function(executor, resolve, reject) {\n    try {\n        executor(resolve, reject);\n    } catch (e) {\n        return e;\n    }\n};\nPromise.prototype._onCancel = function () {};\nPromise.prototype._setOnCancel = function (handler) { ; };\nPromise.prototype._attachCancellationCallback = function(onCancel) {\n    ;\n};\nPromise.prototype._captureStackTrace = function () {};\nPromise.prototype._attachExtraTrace = function () {};\nPromise.prototype._clearCancellationData = function() {};\nPromise.prototype._propagateFrom = function (parent, flags) {\n    ;\n    ;\n};\n\nfunction cancellationExecute(executor, resolve, reject) {\n    var promise = this;\n    try {\n        executor(resolve, reject, function(onCancel) {\n            if (typeof onCancel !== \"function\") {\n                throw new TypeError(\"onCancel must be a function, got: \" +\n                                    util.toString(onCancel));\n            }\n            promise._attachCancellationCallback(onCancel);\n        });\n    } catch (e) {\n        return e;\n    }\n}\n\nfunction cancellationAttachCancellationCallback(onCancel) {\n    if (!this._isCancellable()) return this;\n\n    var previousOnCancel = this._onCancel();\n    if (previousOnCancel !== undefined) {\n        if (util.isArray(previousOnCancel)) {\n            previousOnCancel.push(onCancel);\n        } else {\n            this._setOnCancel([previousOnCancel, onCancel]);\n        }\n    } else {\n        this._setOnCancel(onCancel);\n    }\n}\n\nfunction cancellationOnCancel() {\n    return this._onCancelField;\n}\n\nfunction cancellationSetOnCancel(onCancel) {\n    this._onCancelField = onCancel;\n}\n\nfunction cancellationClearCancellationData() {\n    this._cancellationParent = undefined;\n    this._onCancelField = undefined;\n}\n\nfunction cancellationPropagateFrom(parent, flags) {\n    if ((flags & 1) !== 0) {\n        this._cancellationParent = parent;\n        var branchesRemainingToCancel = parent._branchesRemainingToCancel;\n        if (branchesRemainingToCancel === undefined) {\n            branchesRemainingToCancel = 0;\n        }\n        parent._branchesRemainingToCancel = branchesRemainingToCancel + 1;\n    }\n    if ((flags & 2) !== 0 && parent._isBound()) {\n        this._setBoundTo(parent._boundTo);\n    }\n}\n\nfunction bindingPropagateFrom(parent, flags) {\n    if ((flags & 2) !== 0 && parent._isBound()) {\n        this._setBoundTo(parent._boundTo);\n    }\n}\nvar propagateFromFunction = bindingPropagateFrom;\n\nfunction boundValueFunction() {\n    var ret = this._boundTo;\n    if (ret !== undefined) {\n        if (ret instanceof Promise) {\n            if (ret.isFulfilled()) {\n                return ret.value();\n            } else {\n                return undefined;\n            }\n        }\n    }\n    return ret;\n}\n\nfunction longStackTracesCaptureStackTrace() {\n    this._trace = new CapturedTrace(this._peekContext());\n}\n\nfunction longStackTracesAttachExtraTrace(error, ignoreSelf) {\n    if (canAttachTrace(error)) {\n        var trace = this._trace;\n        if (trace !== undefined) {\n            if (ignoreSelf) trace = trace._parent;\n        }\n        if (trace !== undefined) {\n            trace.attachExtraTrace(error);\n        } else if (!error.__stackCleaned__) {\n            var parsed = parseStackAndMessage(error);\n            util.notEnumerableProp(error, \"stack\",\n                parsed.message + \"\\n\" + parsed.stack.join(\"\\n\"));\n            util.notEnumerableProp(error, \"__stackCleaned__\", true);\n        }\n    }\n}\n\nfunction checkForgottenReturns(returnValue, promiseCreated, name, promise,\n                               parent) {\n    if (returnValue === undefined && promiseCreated !== null &&\n        wForgottenReturn) {\n        if (parent !== undefined && parent._returnedNonUndefined()) return;\n        if ((promise._bitField & 65535) === 0) return;\n\n        if (name) name = name + \" \";\n        var handlerLine = \"\";\n        var creatorLine = \"\";\n        if (promiseCreated._trace) {\n            var traceLines = promiseCreated._trace.stack.split(\"\\n\");\n            var stack = cleanStack(traceLines);\n            for (var i = stack.length - 1; i >= 0; --i) {\n                var line = stack[i];\n                if (!nodeFramePattern.test(line)) {\n                    var lineMatches = line.match(parseLinePattern);\n                    if (lineMatches) {\n                        handlerLine  = \"at \" + lineMatches[1] +\n                            \":\" + lineMatches[2] + \":\" + lineMatches[3] + \" \";\n                    }\n                    break;\n                }\n            }\n\n            if (stack.length > 0) {\n                var firstUserLine = stack[0];\n                for (var i = 0; i < traceLines.length; ++i) {\n\n                    if (traceLines[i] === firstUserLine) {\n                        if (i > 0) {\n                            creatorLine = \"\\n\" + traceLines[i - 1];\n                        }\n                        break;\n                    }\n                }\n\n            }\n        }\n        var msg = \"a promise was created in a \" + name +\n            \"handler \" + handlerLine + \"but was not returned from it, \" +\n            \"see http://goo.gl/rRqMUw\" +\n            creatorLine;\n        promise._warn(msg, true, promiseCreated);\n    }\n}\n\nfunction deprecated(name, replacement) {\n    var message = name +\n        \" is deprecated and will be removed in a future version.\";\n    if (replacement) message += \" Use \" + replacement + \" instead.\";\n    return warn(message);\n}\n\nfunction warn(message, shouldUseOwnTrace, promise) {\n    if (!config.warnings) return;\n    var warning = new Warning(message);\n    var ctx;\n    if (shouldUseOwnTrace) {\n        promise._attachExtraTrace(warning);\n    } else if (config.longStackTraces && (ctx = Promise._peekContext())) {\n        ctx.attachExtraTrace(warning);\n    } else {\n        var parsed = parseStackAndMessage(warning);\n        warning.stack = parsed.message + \"\\n\" + parsed.stack.join(\"\\n\");\n    }\n\n    if (!activeFireEvent(\"warning\", warning)) {\n        formatAndLogError(warning, \"\", true);\n    }\n}\n\nfunction reconstructStack(message, stacks) {\n    for (var i = 0; i < stacks.length - 1; ++i) {\n        stacks[i].push(\"From previous event:\");\n        stacks[i] = stacks[i].join(\"\\n\");\n    }\n    if (i < stacks.length) {\n        stacks[i] = stacks[i].join(\"\\n\");\n    }\n    return message + \"\\n\" + stacks.join(\"\\n\");\n}\n\nfunction removeDuplicateOrEmptyJumps(stacks) {\n    for (var i = 0; i < stacks.length; ++i) {\n        if (stacks[i].length === 0 ||\n            ((i + 1 < stacks.length) && stacks[i][0] === stacks[i+1][0])) {\n            stacks.splice(i, 1);\n            i--;\n        }\n    }\n}\n\nfunction removeCommonRoots(stacks) {\n    var current = stacks[0];\n    for (var i = 1; i < stacks.length; ++i) {\n        var prev = stacks[i];\n        var currentLastIndex = current.length - 1;\n        var currentLastLine = current[currentLastIndex];\n        var commonRootMeetPoint = -1;\n\n        for (var j = prev.length - 1; j >= 0; --j) {\n            if (prev[j] === currentLastLine) {\n                commonRootMeetPoint = j;\n                break;\n            }\n        }\n\n        for (var j = commonRootMeetPoint; j >= 0; --j) {\n            var line = prev[j];\n            if (current[currentLastIndex] === line) {\n                current.pop();\n                currentLastIndex--;\n            } else {\n                break;\n            }\n        }\n        current = prev;\n    }\n}\n\nfunction cleanStack(stack) {\n    var ret = [];\n    for (var i = 0; i < stack.length; ++i) {\n        var line = stack[i];\n        var isTraceLine = \"    (No stack trace)\" === line ||\n            stackFramePattern.test(line);\n        var isInternalFrame = isTraceLine && shouldIgnore(line);\n        if (isTraceLine && !isInternalFrame) {\n            if (indentStackFrames && line.charAt(0) !== \" \") {\n                line = \"    \" + line;\n            }\n            ret.push(line);\n        }\n    }\n    return ret;\n}\n\nfunction stackFramesAsArray(error) {\n    var stack = error.stack.replace(/\\s+$/g, \"\").split(\"\\n\");\n    for (var i = 0; i < stack.length; ++i) {\n        var line = stack[i];\n        if (\"    (No stack trace)\" === line || stackFramePattern.test(line)) {\n            break;\n        }\n    }\n    if (i > 0 && error.name != \"SyntaxError\") {\n        stack = stack.slice(i);\n    }\n    return stack;\n}\n\nfunction parseStackAndMessage(error) {\n    var stack = error.stack;\n    var message = error.toString();\n    stack = typeof stack === \"string\" && stack.length > 0\n                ? stackFramesAsArray(error) : [\"    (No stack trace)\"];\n    return {\n        message: message,\n        stack: error.name == \"SyntaxError\" ? stack : cleanStack(stack)\n    };\n}\n\nfunction formatAndLogError(error, title, isSoft) {\n    if (typeof console !== \"undefined\") {\n        var message;\n        if (util.isObject(error)) {\n            var stack = error.stack;\n            message = title + formatStack(stack, error);\n        } else {\n            message = title + String(error);\n        }\n        if (typeof printWarning === \"function\") {\n            printWarning(message, isSoft);\n        } else if (typeof console.log === \"function\" ||\n            typeof console.log === \"object\") {\n            console.log(message);\n        }\n    }\n}\n\nfunction fireRejectionEvent(name, localHandler, reason, promise) {\n    var localEventFired = false;\n    try {\n        if (typeof localHandler === \"function\") {\n            localEventFired = true;\n            if (name === \"rejectionHandled\") {\n                localHandler(promise);\n            } else {\n                localHandler(reason, promise);\n            }\n        }\n    } catch (e) {\n        async.throwLater(e);\n    }\n\n    if (name === \"unhandledRejection\") {\n        if (!activeFireEvent(name, reason, promise) && !localEventFired) {\n            formatAndLogError(reason, \"Unhandled rejection \");\n        }\n    } else {\n        activeFireEvent(name, promise);\n    }\n}\n\nfunction formatNonError(obj) {\n    var str;\n    if (typeof obj === \"function\") {\n        str = \"[function \" +\n            (obj.name || \"anonymous\") +\n            \"]\";\n    } else {\n        str = obj && typeof obj.toString === \"function\"\n            ? obj.toString() : util.toString(obj);\n        var ruselessToString = /\\[object [a-zA-Z0-9$_]+\\]/;\n        if (ruselessToString.test(str)) {\n            try {\n                var newStr = JSON.stringify(obj);\n                str = newStr;\n            }\n            catch(e) {\n\n            }\n        }\n        if (str.length === 0) {\n            str = \"(empty array)\";\n        }\n    }\n    return (\"(<\" + snip(str) + \">, no stack trace)\");\n}\n\nfunction snip(str) {\n    var maxChars = 41;\n    if (str.length < maxChars) {\n        return str;\n    }\n    return str.substr(0, maxChars - 3) + \"...\";\n}\n\nfunction longStackTracesIsSupported() {\n    return typeof captureStackTrace === \"function\";\n}\n\nvar shouldIgnore = function() { return false; };\nvar parseLineInfoRegex = /[\\/<\\(]([^:\\/]+):(\\d+):(?:\\d+)\\)?\\s*$/;\nfunction parseLineInfo(line) {\n    var matches = line.match(parseLineInfoRegex);\n    if (matches) {\n        return {\n            fileName: matches[1],\n            line: parseInt(matches[2], 10)\n        };\n    }\n}\n\nfunction setBounds(firstLineError, lastLineError) {\n    if (!longStackTracesIsSupported()) return;\n    var firstStackLines = firstLineError.stack.split(\"\\n\");\n    var lastStackLines = lastLineError.stack.split(\"\\n\");\n    var firstIndex = -1;\n    var lastIndex = -1;\n    var firstFileName;\n    var lastFileName;\n    for (var i = 0; i < firstStackLines.length; ++i) {\n        var result = parseLineInfo(firstStackLines[i]);\n        if (result) {\n            firstFileName = result.fileName;\n            firstIndex = result.line;\n            break;\n        }\n    }\n    for (var i = 0; i < lastStackLines.length; ++i) {\n        var result = parseLineInfo(lastStackLines[i]);\n        if (result) {\n            lastFileName = result.fileName;\n            lastIndex = result.line;\n            break;\n        }\n    }\n    if (firstIndex < 0 || lastIndex < 0 || !firstFileName || !lastFileName ||\n        firstFileName !== lastFileName || firstIndex >= lastIndex) {\n        return;\n    }\n\n    shouldIgnore = function(line) {\n        if (bluebirdFramePattern.test(line)) return true;\n        var info = parseLineInfo(line);\n        if (info) {\n            if (info.fileName === firstFileName &&\n                (firstIndex <= info.line && info.line <= lastIndex)) {\n                return true;\n            }\n        }\n        return false;\n    };\n}\n\nfunction CapturedTrace(parent) {\n    this._parent = parent;\n    this._promisesCreated = 0;\n    var length = this._length = 1 + (parent === undefined ? 0 : parent._length);\n    captureStackTrace(this, CapturedTrace);\n    if (length > 32) this.uncycle();\n}\nutil.inherits(CapturedTrace, Error);\nContext.CapturedTrace = CapturedTrace;\n\nCapturedTrace.prototype.uncycle = function() {\n    var length = this._length;\n    if (length < 2) return;\n    var nodes = [];\n    var stackToIndex = {};\n\n    for (var i = 0, node = this; node !== undefined; ++i) {\n        nodes.push(node);\n        node = node._parent;\n    }\n    length = this._length = i;\n    for (var i = length - 1; i >= 0; --i) {\n        var stack = nodes[i].stack;\n        if (stackToIndex[stack] === undefined) {\n            stackToIndex[stack] = i;\n        }\n    }\n    for (var i = 0; i < length; ++i) {\n        var currentStack = nodes[i].stack;\n        var index = stackToIndex[currentStack];\n        if (index !== undefined && index !== i) {\n            if (index > 0) {\n                nodes[index - 1]._parent = undefined;\n                nodes[index - 1]._length = 1;\n            }\n            nodes[i]._parent = undefined;\n            nodes[i]._length = 1;\n            var cycleEdgeNode = i > 0 ? nodes[i - 1] : this;\n\n            if (index < length - 1) {\n                cycleEdgeNode._parent = nodes[index + 1];\n                cycleEdgeNode._parent.uncycle();\n                cycleEdgeNode._length =\n                    cycleEdgeNode._parent._length + 1;\n            } else {\n                cycleEdgeNode._parent = undefined;\n                cycleEdgeNode._length = 1;\n            }\n            var currentChildLength = cycleEdgeNode._length + 1;\n            for (var j = i - 2; j >= 0; --j) {\n                nodes[j]._length = currentChildLength;\n                currentChildLength++;\n            }\n            return;\n        }\n    }\n};\n\nCapturedTrace.prototype.attachExtraTrace = function(error) {\n    if (error.__stackCleaned__) return;\n    this.uncycle();\n    var parsed = parseStackAndMessage(error);\n    var message = parsed.message;\n    var stacks = [parsed.stack];\n\n    var trace = this;\n    while (trace !== undefined) {\n        stacks.push(cleanStack(trace.stack.split(\"\\n\")));\n        trace = trace._parent;\n    }\n    removeCommonRoots(stacks);\n    removeDuplicateOrEmptyJumps(stacks);\n    util.notEnumerableProp(error, \"stack\", reconstructStack(message, stacks));\n    util.notEnumerableProp(error, \"__stackCleaned__\", true);\n};\n\nvar captureStackTrace = (function stackDetection() {\n    var v8stackFramePattern = /^\\s*at\\s*/;\n    var v8stackFormatter = function(stack, error) {\n        if (typeof stack === \"string\") return stack;\n\n        if (error.name !== undefined &&\n            error.message !== undefined) {\n            return error.toString();\n        }\n        return formatNonError(error);\n    };\n\n    if (typeof Error.stackTraceLimit === \"number\" &&\n        typeof Error.captureStackTrace === \"function\") {\n        Error.stackTraceLimit += 6;\n        stackFramePattern = v8stackFramePattern;\n        formatStack = v8stackFormatter;\n        var captureStackTrace = Error.captureStackTrace;\n\n        shouldIgnore = function(line) {\n            return bluebirdFramePattern.test(line);\n        };\n        return function(receiver, ignoreUntil) {\n            Error.stackTraceLimit += 6;\n            captureStackTrace(receiver, ignoreUntil);\n            Error.stackTraceLimit -= 6;\n        };\n    }\n    var err = new Error();\n\n    if (typeof err.stack === \"string\" &&\n        err.stack.split(\"\\n\")[0].indexOf(\"stackDetection@\") >= 0) {\n        stackFramePattern = /@/;\n        formatStack = v8stackFormatter;\n        indentStackFrames = true;\n        return function captureStackTrace(o) {\n            o.stack = new Error().stack;\n        };\n    }\n\n    var hasStackAfterThrow;\n    try { throw new Error(); }\n    catch(e) {\n        hasStackAfterThrow = (\"stack\" in e);\n    }\n    if (!(\"stack\" in err) && hasStackAfterThrow &&\n        typeof Error.stackTraceLimit === \"number\") {\n        stackFramePattern = v8stackFramePattern;\n        formatStack = v8stackFormatter;\n        return function captureStackTrace(o) {\n            Error.stackTraceLimit += 6;\n            try { throw new Error(); }\n            catch(e) { o.stack = e.stack; }\n            Error.stackTraceLimit -= 6;\n        };\n    }\n\n    formatStack = function(stack, error) {\n        if (typeof stack === \"string\") return stack;\n\n        if ((typeof error === \"object\" ||\n            typeof error === \"function\") &&\n            error.name !== undefined &&\n            error.message !== undefined) {\n            return error.toString();\n        }\n        return formatNonError(error);\n    };\n\n    return null;\n\n})([]);\n\nif (typeof console !== \"undefined\" && typeof console.warn !== \"undefined\") {\n    printWarning = function (message) {\n        console.warn(message);\n    };\n    if (util.isNode && process.stderr.isTTY) {\n        printWarning = function(message, isSoft) {\n            var color = isSoft ? \"\\u001b[33m\" : \"\\u001b[31m\";\n            console.warn(color + message + \"\\u001b[0m\\n\");\n        };\n    } else if (!util.isNode && typeof (new Error().stack) === \"string\") {\n        printWarning = function(message, isSoft) {\n            console.warn(\"%c\" + message,\n                        isSoft ? \"color: darkorange\" : \"color: red\");\n        };\n    }\n}\n\nvar config = {\n    warnings: warnings,\n    longStackTraces: false,\n    cancellation: false,\n    monitoring: false\n};\n\nif (longStackTraces) Promise.longStackTraces();\n\nreturn {\n    longStackTraces: function() {\n        return config.longStackTraces;\n    },\n    warnings: function() {\n        return config.warnings;\n    },\n    cancellation: function() {\n        return config.cancellation;\n    },\n    monitoring: function() {\n        return config.monitoring;\n    },\n    propagateFromFunction: function() {\n        return propagateFromFunction;\n    },\n    boundValueFunction: function() {\n        return boundValueFunction;\n    },\n    checkForgottenReturns: checkForgottenReturns,\n    setBounds: setBounds,\n    warn: warn,\n    deprecated: deprecated,\n    CapturedTrace: CapturedTrace,\n    fireDomEvent: fireDomEvent,\n    fireGlobalEvent: fireGlobalEvent\n};\n};\n\n},{\"./errors\":12,\"./util\":36}],10:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise) {\nfunction returner() {\n    return this.value;\n}\nfunction thrower() {\n    throw this.reason;\n}\n\nPromise.prototype[\"return\"] =\nPromise.prototype.thenReturn = function (value) {\n    if (value instanceof Promise) value.suppressUnhandledRejections();\n    return this._then(\n        returner, undefined, undefined, {value: value}, undefined);\n};\n\nPromise.prototype[\"throw\"] =\nPromise.prototype.thenThrow = function (reason) {\n    return this._then(\n        thrower, undefined, undefined, {reason: reason}, undefined);\n};\n\nPromise.prototype.catchThrow = function (reason) {\n    if (arguments.length <= 1) {\n        return this._then(\n            undefined, thrower, undefined, {reason: reason}, undefined);\n    } else {\n        var _reason = arguments[1];\n        var handler = function() {throw _reason;};\n        return this.caught(reason, handler);\n    }\n};\n\nPromise.prototype.catchReturn = function (value) {\n    if (arguments.length <= 1) {\n        if (value instanceof Promise) value.suppressUnhandledRejections();\n        return this._then(\n            undefined, returner, undefined, {value: value}, undefined);\n    } else {\n        var _value = arguments[1];\n        if (_value instanceof Promise) _value.suppressUnhandledRejections();\n        var handler = function() {return _value;};\n        return this.caught(value, handler);\n    }\n};\n};\n\n},{}],11:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, INTERNAL) {\nvar PromiseReduce = Promise.reduce;\nvar PromiseAll = Promise.all;\n\nfunction promiseAllThis() {\n    return PromiseAll(this);\n}\n\nfunction PromiseMapSeries(promises, fn) {\n    return PromiseReduce(promises, fn, INTERNAL, INTERNAL);\n}\n\nPromise.prototype.each = function (fn) {\n    return PromiseReduce(this, fn, INTERNAL, 0)\n              ._then(promiseAllThis, undefined, undefined, this, undefined);\n};\n\nPromise.prototype.mapSeries = function (fn) {\n    return PromiseReduce(this, fn, INTERNAL, INTERNAL);\n};\n\nPromise.each = function (promises, fn) {\n    return PromiseReduce(promises, fn, INTERNAL, 0)\n              ._then(promiseAllThis, undefined, undefined, promises, undefined);\n};\n\nPromise.mapSeries = PromiseMapSeries;\n};\n\n\n},{}],12:[function(_dereq_,module,exports){\n\"use strict\";\nvar es5 = _dereq_(\"./es5\");\nvar Objectfreeze = es5.freeze;\nvar util = _dereq_(\"./util\");\nvar inherits = util.inherits;\nvar notEnumerableProp = util.notEnumerableProp;\n\nfunction subError(nameProperty, defaultMessage) {\n    function SubError(message) {\n        if (!(this instanceof SubError)) return new SubError(message);\n        notEnumerableProp(this, \"message\",\n            typeof message === \"string\" ? message : defaultMessage);\n        notEnumerableProp(this, \"name\", nameProperty);\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, this.constructor);\n        } else {\n            Error.call(this);\n        }\n    }\n    inherits(SubError, Error);\n    return SubError;\n}\n\nvar _TypeError, _RangeError;\nvar Warning = subError(\"Warning\", \"warning\");\nvar CancellationError = subError(\"CancellationError\", \"cancellation error\");\nvar TimeoutError = subError(\"TimeoutError\", \"timeout error\");\nvar AggregateError = subError(\"AggregateError\", \"aggregate error\");\ntry {\n    _TypeError = TypeError;\n    _RangeError = RangeError;\n} catch(e) {\n    _TypeError = subError(\"TypeError\", \"type error\");\n    _RangeError = subError(\"RangeError\", \"range error\");\n}\n\nvar methods = (\"join pop push shift unshift slice filter forEach some \" +\n    \"every map indexOf lastIndexOf reduce reduceRight sort reverse\").split(\" \");\n\nfor (var i = 0; i < methods.length; ++i) {\n    if (typeof Array.prototype[methods[i]] === \"function\") {\n        AggregateError.prototype[methods[i]] = Array.prototype[methods[i]];\n    }\n}\n\nes5.defineProperty(AggregateError.prototype, \"length\", {\n    value: 0,\n    configurable: false,\n    writable: true,\n    enumerable: true\n});\nAggregateError.prototype[\"isOperational\"] = true;\nvar level = 0;\nAggregateError.prototype.toString = function() {\n    var indent = Array(level * 4 + 1).join(\" \");\n    var ret = \"\\n\" + indent + \"AggregateError of:\" + \"\\n\";\n    level++;\n    indent = Array(level * 4 + 1).join(\" \");\n    for (var i = 0; i < this.length; ++i) {\n        var str = this[i] === this ? \"[Circular AggregateError]\" : this[i] + \"\";\n        var lines = str.split(\"\\n\");\n        for (var j = 0; j < lines.length; ++j) {\n            lines[j] = indent + lines[j];\n        }\n        str = lines.join(\"\\n\");\n        ret += str + \"\\n\";\n    }\n    level--;\n    return ret;\n};\n\nfunction OperationalError(message) {\n    if (!(this instanceof OperationalError))\n        return new OperationalError(message);\n    notEnumerableProp(this, \"name\", \"OperationalError\");\n    notEnumerableProp(this, \"message\", message);\n    this.cause = message;\n    this[\"isOperational\"] = true;\n\n    if (message instanceof Error) {\n        notEnumerableProp(this, \"message\", message.message);\n        notEnumerableProp(this, \"stack\", message.stack);\n    } else if (Error.captureStackTrace) {\n        Error.captureStackTrace(this, this.constructor);\n    }\n\n}\ninherits(OperationalError, Error);\n\nvar errorTypes = Error[\"__BluebirdErrorTypes__\"];\nif (!errorTypes) {\n    errorTypes = Objectfreeze({\n        CancellationError: CancellationError,\n        TimeoutError: TimeoutError,\n        OperationalError: OperationalError,\n        RejectionError: OperationalError,\n        AggregateError: AggregateError\n    });\n    es5.defineProperty(Error, \"__BluebirdErrorTypes__\", {\n        value: errorTypes,\n        writable: false,\n        enumerable: false,\n        configurable: false\n    });\n}\n\nmodule.exports = {\n    Error: Error,\n    TypeError: _TypeError,\n    RangeError: _RangeError,\n    CancellationError: errorTypes.CancellationError,\n    OperationalError: errorTypes.OperationalError,\n    TimeoutError: errorTypes.TimeoutError,\n    AggregateError: errorTypes.AggregateError,\n    Warning: Warning\n};\n\n},{\"./es5\":13,\"./util\":36}],13:[function(_dereq_,module,exports){\nvar isES5 = (function(){\n    \"use strict\";\n    return this === undefined;\n})();\n\nif (isES5) {\n    module.exports = {\n        freeze: Object.freeze,\n        defineProperty: Object.defineProperty,\n        getDescriptor: Object.getOwnPropertyDescriptor,\n        keys: Object.keys,\n        names: Object.getOwnPropertyNames,\n        getPrototypeOf: Object.getPrototypeOf,\n        isArray: Array.isArray,\n        isES5: isES5,\n        propertyIsWritable: function(obj, prop) {\n            var descriptor = Object.getOwnPropertyDescriptor(obj, prop);\n            return !!(!descriptor || descriptor.writable || descriptor.set);\n        }\n    };\n} else {\n    var has = {}.hasOwnProperty;\n    var str = {}.toString;\n    var proto = {}.constructor.prototype;\n\n    var ObjectKeys = function (o) {\n        var ret = [];\n        for (var key in o) {\n            if (has.call(o, key)) {\n                ret.push(key);\n            }\n        }\n        return ret;\n    };\n\n    var ObjectGetDescriptor = function(o, key) {\n        return {value: o[key]};\n    };\n\n    var ObjectDefineProperty = function (o, key, desc) {\n        o[key] = desc.value;\n        return o;\n    };\n\n    var ObjectFreeze = function (obj) {\n        return obj;\n    };\n\n    var ObjectGetPrototypeOf = function (obj) {\n        try {\n            return Object(obj).constructor.prototype;\n        }\n        catch (e) {\n            return proto;\n        }\n    };\n\n    var ArrayIsArray = function (obj) {\n        try {\n            return str.call(obj) === \"[object Array]\";\n        }\n        catch(e) {\n            return false;\n        }\n    };\n\n    module.exports = {\n        isArray: ArrayIsArray,\n        keys: ObjectKeys,\n        names: ObjectKeys,\n        defineProperty: ObjectDefineProperty,\n        getDescriptor: ObjectGetDescriptor,\n        freeze: ObjectFreeze,\n        getPrototypeOf: ObjectGetPrototypeOf,\n        isES5: isES5,\n        propertyIsWritable: function() {\n            return true;\n        }\n    };\n}\n\n},{}],14:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, INTERNAL) {\nvar PromiseMap = Promise.map;\n\nPromise.prototype.filter = function (fn, options) {\n    return PromiseMap(this, fn, options, INTERNAL);\n};\n\nPromise.filter = function (promises, fn, options) {\n    return PromiseMap(promises, fn, options, INTERNAL);\n};\n};\n\n},{}],15:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, tryConvertToPromise, NEXT_FILTER) {\nvar util = _dereq_(\"./util\");\nvar CancellationError = Promise.CancellationError;\nvar errorObj = util.errorObj;\nvar catchFilter = _dereq_(\"./catch_filter\")(NEXT_FILTER);\n\nfunction PassThroughHandlerContext(promise, type, handler) {\n    this.promise = promise;\n    this.type = type;\n    this.handler = handler;\n    this.called = false;\n    this.cancelPromise = null;\n}\n\nPassThroughHandlerContext.prototype.isFinallyHandler = function() {\n    return this.type === 0;\n};\n\nfunction FinallyHandlerCancelReaction(finallyHandler) {\n    this.finallyHandler = finallyHandler;\n}\n\nFinallyHandlerCancelReaction.prototype._resultCancelled = function() {\n    checkCancel(this.finallyHandler);\n};\n\nfunction checkCancel(ctx, reason) {\n    if (ctx.cancelPromise != null) {\n        if (arguments.length > 1) {\n            ctx.cancelPromise._reject(reason);\n        } else {\n            ctx.cancelPromise._cancel();\n        }\n        ctx.cancelPromise = null;\n        return true;\n    }\n    return false;\n}\n\nfunction succeed() {\n    return finallyHandler.call(this, this.promise._target()._settledValue());\n}\nfunction fail(reason) {\n    if (checkCancel(this, reason)) return;\n    errorObj.e = reason;\n    return errorObj;\n}\nfunction finallyHandler(reasonOrValue) {\n    var promise = this.promise;\n    var handler = this.handler;\n\n    if (!this.called) {\n        this.called = true;\n        var ret = this.isFinallyHandler()\n            ? handler.call(promise._boundValue())\n            : handler.call(promise._boundValue(), reasonOrValue);\n        if (ret === NEXT_FILTER) {\n            return ret;\n        } else if (ret !== undefined) {\n            promise._setReturnedNonUndefined();\n            var maybePromise = tryConvertToPromise(ret, promise);\n            if (maybePromise instanceof Promise) {\n                if (this.cancelPromise != null) {\n                    if (maybePromise._isCancelled()) {\n                        var reason =\n                            new CancellationError(\"late cancellation observer\");\n                        promise._attachExtraTrace(reason);\n                        errorObj.e = reason;\n                        return errorObj;\n                    } else if (maybePromise.isPending()) {\n                        maybePromise._attachCancellationCallback(\n                            new FinallyHandlerCancelReaction(this));\n                    }\n                }\n                return maybePromise._then(\n                    succeed, fail, undefined, this, undefined);\n            }\n        }\n    }\n\n    if (promise.isRejected()) {\n        checkCancel(this);\n        errorObj.e = reasonOrValue;\n        return errorObj;\n    } else {\n        checkCancel(this);\n        return reasonOrValue;\n    }\n}\n\nPromise.prototype._passThrough = function(handler, type, success, fail) {\n    if (typeof handler !== \"function\") return this.then();\n    return this._then(success,\n                      fail,\n                      undefined,\n                      new PassThroughHandlerContext(this, type, handler),\n                      undefined);\n};\n\nPromise.prototype.lastly =\nPromise.prototype[\"finally\"] = function (handler) {\n    return this._passThrough(handler,\n                             0,\n                             finallyHandler,\n                             finallyHandler);\n};\n\n\nPromise.prototype.tap = function (handler) {\n    return this._passThrough(handler, 1, finallyHandler);\n};\n\nPromise.prototype.tapCatch = function (handlerOrPredicate) {\n    var len = arguments.length;\n    if(len === 1) {\n        return this._passThrough(handlerOrPredicate,\n                                 1,\n                                 undefined,\n                                 finallyHandler);\n    } else {\n         var catchInstances = new Array(len - 1),\n            j = 0, i;\n        for (i = 0; i < len - 1; ++i) {\n            var item = arguments[i];\n            if (util.isObject(item)) {\n                catchInstances[j++] = item;\n            } else {\n                return Promise.reject(new TypeError(\n                    \"tapCatch statement predicate: \"\n                    + \"expecting an object but got \" + util.classString(item)\n                ));\n            }\n        }\n        catchInstances.length = j;\n        var handler = arguments[i];\n        return this._passThrough(catchFilter(catchInstances, handler, this),\n                                 1,\n                                 undefined,\n                                 finallyHandler);\n    }\n\n};\n\nreturn PassThroughHandlerContext;\n};\n\n},{\"./catch_filter\":7,\"./util\":36}],16:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise,\n                          apiRejection,\n                          INTERNAL,\n                          tryConvertToPromise,\n                          Proxyable,\n                          debug) {\nvar errors = _dereq_(\"./errors\");\nvar TypeError = errors.TypeError;\nvar util = _dereq_(\"./util\");\nvar errorObj = util.errorObj;\nvar tryCatch = util.tryCatch;\nvar yieldHandlers = [];\n\nfunction promiseFromYieldHandler(value, yieldHandlers, traceParent) {\n    for (var i = 0; i < yieldHandlers.length; ++i) {\n        traceParent._pushContext();\n        var result = tryCatch(yieldHandlers[i])(value);\n        traceParent._popContext();\n        if (result === errorObj) {\n            traceParent._pushContext();\n            var ret = Promise.reject(errorObj.e);\n            traceParent._popContext();\n            return ret;\n        }\n        var maybePromise = tryConvertToPromise(result, traceParent);\n        if (maybePromise instanceof Promise) return maybePromise;\n    }\n    return null;\n}\n\nfunction PromiseSpawn(generatorFunction, receiver, yieldHandler, stack) {\n    if (debug.cancellation()) {\n        var internal = new Promise(INTERNAL);\n        var _finallyPromise = this._finallyPromise = new Promise(INTERNAL);\n        this._promise = internal.lastly(function() {\n            return _finallyPromise;\n        });\n        internal._captureStackTrace();\n        internal._setOnCancel(this);\n    } else {\n        var promise = this._promise = new Promise(INTERNAL);\n        promise._captureStackTrace();\n    }\n    this._stack = stack;\n    this._generatorFunction = generatorFunction;\n    this._receiver = receiver;\n    this._generator = undefined;\n    this._yieldHandlers = typeof yieldHandler === \"function\"\n        ? [yieldHandler].concat(yieldHandlers)\n        : yieldHandlers;\n    this._yieldedPromise = null;\n    this._cancellationPhase = false;\n}\nutil.inherits(PromiseSpawn, Proxyable);\n\nPromiseSpawn.prototype._isResolved = function() {\n    return this._promise === null;\n};\n\nPromiseSpawn.prototype._cleanup = function() {\n    this._promise = this._generator = null;\n    if (debug.cancellation() && this._finallyPromise !== null) {\n        this._finallyPromise._fulfill();\n        this._finallyPromise = null;\n    }\n};\n\nPromiseSpawn.prototype._promiseCancelled = function() {\n    if (this._isResolved()) return;\n    var implementsReturn = typeof this._generator[\"return\"] !== \"undefined\";\n\n    var result;\n    if (!implementsReturn) {\n        var reason = new Promise.CancellationError(\n            \"generator .return() sentinel\");\n        Promise.coroutine.returnSentinel = reason;\n        this._promise._attachExtraTrace(reason);\n        this._promise._pushContext();\n        result = tryCatch(this._generator[\"throw\"]).call(this._generator,\n                                                         reason);\n        this._promise._popContext();\n    } else {\n        this._promise._pushContext();\n        result = tryCatch(this._generator[\"return\"]).call(this._generator,\n                                                          undefined);\n        this._promise._popContext();\n    }\n    this._cancellationPhase = true;\n    this._yieldedPromise = null;\n    this._continue(result);\n};\n\nPromiseSpawn.prototype._promiseFulfilled = function(value) {\n    this._yieldedPromise = null;\n    this._promise._pushContext();\n    var result = tryCatch(this._generator.next).call(this._generator, value);\n    this._promise._popContext();\n    this._continue(result);\n};\n\nPromiseSpawn.prototype._promiseRejected = function(reason) {\n    this._yieldedPromise = null;\n    this._promise._attachExtraTrace(reason);\n    this._promise._pushContext();\n    var result = tryCatch(this._generator[\"throw\"])\n        .call(this._generator, reason);\n    this._promise._popContext();\n    this._continue(result);\n};\n\nPromiseSpawn.prototype._resultCancelled = function() {\n    if (this._yieldedPromise instanceof Promise) {\n        var promise = this._yieldedPromise;\n        this._yieldedPromise = null;\n        promise.cancel();\n    }\n};\n\nPromiseSpawn.prototype.promise = function () {\n    return this._promise;\n};\n\nPromiseSpawn.prototype._run = function () {\n    this._generator = this._generatorFunction.call(this._receiver);\n    this._receiver =\n        this._generatorFunction = undefined;\n    this._promiseFulfilled(undefined);\n};\n\nPromiseSpawn.prototype._continue = function (result) {\n    var promise = this._promise;\n    if (result === errorObj) {\n        this._cleanup();\n        if (this._cancellationPhase) {\n            return promise.cancel();\n        } else {\n            return promise._rejectCallback(result.e, false);\n        }\n    }\n\n    var value = result.value;\n    if (result.done === true) {\n        this._cleanup();\n        if (this._cancellationPhase) {\n            return promise.cancel();\n        } else {\n            return promise._resolveCallback(value);\n        }\n    } else {\n        var maybePromise = tryConvertToPromise(value, this._promise);\n        if (!(maybePromise instanceof Promise)) {\n            maybePromise =\n                promiseFromYieldHandler(maybePromise,\n                                        this._yieldHandlers,\n                                        this._promise);\n            if (maybePromise === null) {\n                this._promiseRejected(\n                    new TypeError(\n                        \"A value %s was yielded that could not be treated as a promise\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\\u000a\".replace(\"%s\", String(value)) +\n                        \"From coroutine:\\u000a\" +\n                        this._stack.split(\"\\n\").slice(1, -7).join(\"\\n\")\n                    )\n                );\n                return;\n            }\n        }\n        maybePromise = maybePromise._target();\n        var bitField = maybePromise._bitField;\n        ;\n        if (((bitField & 50397184) === 0)) {\n            this._yieldedPromise = maybePromise;\n            maybePromise._proxy(this, null);\n        } else if (((bitField & 33554432) !== 0)) {\n            Promise._async.invoke(\n                this._promiseFulfilled, this, maybePromise._value()\n            );\n        } else if (((bitField & 16777216) !== 0)) {\n            Promise._async.invoke(\n                this._promiseRejected, this, maybePromise._reason()\n            );\n        } else {\n            this._promiseCancelled();\n        }\n    }\n};\n\nPromise.coroutine = function (generatorFunction, options) {\n    if (typeof generatorFunction !== \"function\") {\n        throw new TypeError(\"generatorFunction must be a function\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n    var yieldHandler = Object(options).yieldHandler;\n    var PromiseSpawn$ = PromiseSpawn;\n    var stack = new Error().stack;\n    return function () {\n        var generator = generatorFunction.apply(this, arguments);\n        var spawn = new PromiseSpawn$(undefined, undefined, yieldHandler,\n                                      stack);\n        var ret = spawn.promise();\n        spawn._generator = generator;\n        spawn._promiseFulfilled(undefined);\n        return ret;\n    };\n};\n\nPromise.coroutine.addYieldHandler = function(fn) {\n    if (typeof fn !== \"function\") {\n        throw new TypeError(\"expecting a function but got \" + util.classString(fn));\n    }\n    yieldHandlers.push(fn);\n};\n\nPromise.spawn = function (generatorFunction) {\n    debug.deprecated(\"Promise.spawn()\", \"Promise.coroutine()\");\n    if (typeof generatorFunction !== \"function\") {\n        return apiRejection(\"generatorFunction must be a function\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n    var spawn = new PromiseSpawn(generatorFunction, this);\n    var ret = spawn.promise();\n    spawn._run(Promise.spawn);\n    return ret;\n};\n};\n\n},{\"./errors\":12,\"./util\":36}],17:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports =\nfunction(Promise, PromiseArray, tryConvertToPromise, INTERNAL, async,\n         getDomain) {\nvar util = _dereq_(\"./util\");\nvar canEvaluate = util.canEvaluate;\nvar tryCatch = util.tryCatch;\nvar errorObj = util.errorObj;\nvar reject;\n\nif (!true) {\nif (canEvaluate) {\n    var thenCallback = function(i) {\n        return new Function(\"value\", \"holder\", \"                             \\n\\\n            'use strict';                                                    \\n\\\n            holder.pIndex = value;                                           \\n\\\n            holder.checkFulfillment(this);                                   \\n\\\n            \".replace(/Index/g, i));\n    };\n\n    var promiseSetter = function(i) {\n        return new Function(\"promise\", \"holder\", \"                           \\n\\\n            'use strict';                                                    \\n\\\n            holder.pIndex = promise;                                         \\n\\\n            \".replace(/Index/g, i));\n    };\n\n    var generateHolderClass = function(total) {\n        var props = new Array(total);\n        for (var i = 0; i < props.length; ++i) {\n            props[i] = \"this.p\" + (i+1);\n        }\n        var assignment = props.join(\" = \") + \" = null;\";\n        var cancellationCode= \"var promise;\\n\" + props.map(function(prop) {\n            return \"                                                         \\n\\\n                promise = \" + prop + \";                                      \\n\\\n                if (promise instanceof Promise) {                            \\n\\\n                    promise.cancel();                                        \\n\\\n                }                                                            \\n\\\n            \";\n        }).join(\"\\n\");\n        var passedArguments = props.join(\", \");\n        var name = \"Holder$\" + total;\n\n\n        var code = \"return function(tryCatch, errorObj, Promise, async) {    \\n\\\n            'use strict';                                                    \\n\\\n            function [TheName](fn) {                                         \\n\\\n                [TheProperties]                                              \\n\\\n                this.fn = fn;                                                \\n\\\n                this.asyncNeeded = true;                                     \\n\\\n                this.now = 0;                                                \\n\\\n            }                                                                \\n\\\n                                                                             \\n\\\n            [TheName].prototype._callFunction = function(promise) {          \\n\\\n                promise._pushContext();                                      \\n\\\n                var ret = tryCatch(this.fn)([ThePassedArguments]);           \\n\\\n                promise._popContext();                                       \\n\\\n                if (ret === errorObj) {                                      \\n\\\n                    promise._rejectCallback(ret.e, false);                   \\n\\\n                } else {                                                     \\n\\\n                    promise._resolveCallback(ret);                           \\n\\\n                }                                                            \\n\\\n            };                                                               \\n\\\n                                                                             \\n\\\n            [TheName].prototype.checkFulfillment = function(promise) {       \\n\\\n                var now = ++this.now;                                        \\n\\\n                if (now === [TheTotal]) {                                    \\n\\\n                    if (this.asyncNeeded) {                                  \\n\\\n                        async.invoke(this._callFunction, this, promise);     \\n\\\n                    } else {                                                 \\n\\\n                        this._callFunction(promise);                         \\n\\\n                    }                                                        \\n\\\n                                                                             \\n\\\n                }                                                            \\n\\\n            };                                                               \\n\\\n                                                                             \\n\\\n            [TheName].prototype._resultCancelled = function() {              \\n\\\n                [CancellationCode]                                           \\n\\\n            };                                                               \\n\\\n                                                                             \\n\\\n            return [TheName];                                                \\n\\\n        }(tryCatch, errorObj, Promise, async);                               \\n\\\n        \";\n\n        code = code.replace(/\\[TheName\\]/g, name)\n            .replace(/\\[TheTotal\\]/g, total)\n            .replace(/\\[ThePassedArguments\\]/g, passedArguments)\n            .replace(/\\[TheProperties\\]/g, assignment)\n            .replace(/\\[CancellationCode\\]/g, cancellationCode);\n\n        return new Function(\"tryCatch\", \"errorObj\", \"Promise\", \"async\", code)\n                           (tryCatch, errorObj, Promise, async);\n    };\n\n    var holderClasses = [];\n    var thenCallbacks = [];\n    var promiseSetters = [];\n\n    for (var i = 0; i < 8; ++i) {\n        holderClasses.push(generateHolderClass(i + 1));\n        thenCallbacks.push(thenCallback(i + 1));\n        promiseSetters.push(promiseSetter(i + 1));\n    }\n\n    reject = function (reason) {\n        this._reject(reason);\n    };\n}}\n\nPromise.join = function () {\n    var last = arguments.length - 1;\n    var fn;\n    if (last > 0 && typeof arguments[last] === \"function\") {\n        fn = arguments[last];\n        if (!true) {\n            if (last <= 8 && canEvaluate) {\n                var ret = new Promise(INTERNAL);\n                ret._captureStackTrace();\n                var HolderClass = holderClasses[last - 1];\n                var holder = new HolderClass(fn);\n                var callbacks = thenCallbacks;\n\n                for (var i = 0; i < last; ++i) {\n                    var maybePromise = tryConvertToPromise(arguments[i], ret);\n                    if (maybePromise instanceof Promise) {\n                        maybePromise = maybePromise._target();\n                        var bitField = maybePromise._bitField;\n                        ;\n                        if (((bitField & 50397184) === 0)) {\n                            maybePromise._then(callbacks[i], reject,\n                                               undefined, ret, holder);\n                            promiseSetters[i](maybePromise, holder);\n                            holder.asyncNeeded = false;\n                        } else if (((bitField & 33554432) !== 0)) {\n                            callbacks[i].call(ret,\n                                              maybePromise._value(), holder);\n                        } else if (((bitField & 16777216) !== 0)) {\n                            ret._reject(maybePromise._reason());\n                        } else {\n                            ret._cancel();\n                        }\n                    } else {\n                        callbacks[i].call(ret, maybePromise, holder);\n                    }\n                }\n\n                if (!ret._isFateSealed()) {\n                    if (holder.asyncNeeded) {\n                        var domain = getDomain();\n                        if (domain !== null) {\n                            holder.fn = util.domainBind(domain, holder.fn);\n                        }\n                    }\n                    ret._setAsyncGuaranteed();\n                    ret._setOnCancel(holder);\n                }\n                return ret;\n            }\n        }\n    }\n    var args = [].slice.call(arguments);;\n    if (fn) args.pop();\n    var ret = new PromiseArray(args).promise();\n    return fn !== undefined ? ret.spread(fn) : ret;\n};\n\n};\n\n},{\"./util\":36}],18:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise,\n                          PromiseArray,\n                          apiRejection,\n                          tryConvertToPromise,\n                          INTERNAL,\n                          debug) {\nvar getDomain = Promise._getDomain;\nvar util = _dereq_(\"./util\");\nvar tryCatch = util.tryCatch;\nvar errorObj = util.errorObj;\nvar async = Promise._async;\n\nfunction MappingPromiseArray(promises, fn, limit, _filter) {\n    this.constructor$(promises);\n    this._promise._captureStackTrace();\n    var domain = getDomain();\n    this._callback = domain === null ? fn : util.domainBind(domain, fn);\n    this._preservedValues = _filter === INTERNAL\n        ? new Array(this.length())\n        : null;\n    this._limit = limit;\n    this._inFlight = 0;\n    this._queue = [];\n    async.invoke(this._asyncInit, this, undefined);\n}\nutil.inherits(MappingPromiseArray, PromiseArray);\n\nMappingPromiseArray.prototype._asyncInit = function() {\n    this._init$(undefined, -2);\n};\n\nMappingPromiseArray.prototype._init = function () {};\n\nMappingPromiseArray.prototype._promiseFulfilled = function (value, index) {\n    var values = this._values;\n    var length = this.length();\n    var preservedValues = this._preservedValues;\n    var limit = this._limit;\n\n    if (index < 0) {\n        index = (index * -1) - 1;\n        values[index] = value;\n        if (limit >= 1) {\n            this._inFlight--;\n            this._drainQueue();\n            if (this._isResolved()) return true;\n        }\n    } else {\n        if (limit >= 1 && this._inFlight >= limit) {\n            values[index] = value;\n            this._queue.push(index);\n            return false;\n        }\n        if (preservedValues !== null) preservedValues[index] = value;\n\n        var promise = this._promise;\n        var callback = this._callback;\n        var receiver = promise._boundValue();\n        promise._pushContext();\n        var ret = tryCatch(callback).call(receiver, value, index, length);\n        var promiseCreated = promise._popContext();\n        debug.checkForgottenReturns(\n            ret,\n            promiseCreated,\n            preservedValues !== null ? \"Promise.filter\" : \"Promise.map\",\n            promise\n        );\n        if (ret === errorObj) {\n            this._reject(ret.e);\n            return true;\n        }\n\n        var maybePromise = tryConvertToPromise(ret, this._promise);\n        if (maybePromise instanceof Promise) {\n            maybePromise = maybePromise._target();\n            var bitField = maybePromise._bitField;\n            ;\n            if (((bitField & 50397184) === 0)) {\n                if (limit >= 1) this._inFlight++;\n                values[index] = maybePromise;\n                maybePromise._proxy(this, (index + 1) * -1);\n                return false;\n            } else if (((bitField & 33554432) !== 0)) {\n                ret = maybePromise._value();\n            } else if (((bitField & 16777216) !== 0)) {\n                this._reject(maybePromise._reason());\n                return true;\n            } else {\n                this._cancel();\n                return true;\n            }\n        }\n        values[index] = ret;\n    }\n    var totalResolved = ++this._totalResolved;\n    if (totalResolved >= length) {\n        if (preservedValues !== null) {\n            this._filter(values, preservedValues);\n        } else {\n            this._resolve(values);\n        }\n        return true;\n    }\n    return false;\n};\n\nMappingPromiseArray.prototype._drainQueue = function () {\n    var queue = this._queue;\n    var limit = this._limit;\n    var values = this._values;\n    while (queue.length > 0 && this._inFlight < limit) {\n        if (this._isResolved()) return;\n        var index = queue.pop();\n        this._promiseFulfilled(values[index], index);\n    }\n};\n\nMappingPromiseArray.prototype._filter = function (booleans, values) {\n    var len = values.length;\n    var ret = new Array(len);\n    var j = 0;\n    for (var i = 0; i < len; ++i) {\n        if (booleans[i]) ret[j++] = values[i];\n    }\n    ret.length = j;\n    this._resolve(ret);\n};\n\nMappingPromiseArray.prototype.preservedValues = function () {\n    return this._preservedValues;\n};\n\nfunction map(promises, fn, options, _filter) {\n    if (typeof fn !== \"function\") {\n        return apiRejection(\"expecting a function but got \" + util.classString(fn));\n    }\n\n    var limit = 0;\n    if (options !== undefined) {\n        if (typeof options === \"object\" && options !== null) {\n            if (typeof options.concurrency !== \"number\") {\n                return Promise.reject(\n                    new TypeError(\"'concurrency' must be a number but it is \" +\n                                    util.classString(options.concurrency)));\n            }\n            limit = options.concurrency;\n        } else {\n            return Promise.reject(new TypeError(\n                            \"options argument must be an object but it is \" +\n                             util.classString(options)));\n        }\n    }\n    limit = typeof limit === \"number\" &&\n        isFinite(limit) && limit >= 1 ? limit : 0;\n    return new MappingPromiseArray(promises, fn, limit, _filter).promise();\n}\n\nPromise.prototype.map = function (fn, options) {\n    return map(this, fn, options, null);\n};\n\nPromise.map = function (promises, fn, options, _filter) {\n    return map(promises, fn, options, _filter);\n};\n\n\n};\n\n},{\"./util\":36}],19:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports =\nfunction(Promise, INTERNAL, tryConvertToPromise, apiRejection, debug) {\nvar util = _dereq_(\"./util\");\nvar tryCatch = util.tryCatch;\n\nPromise.method = function (fn) {\n    if (typeof fn !== \"function\") {\n        throw new Promise.TypeError(\"expecting a function but got \" + util.classString(fn));\n    }\n    return function () {\n        var ret = new Promise(INTERNAL);\n        ret._captureStackTrace();\n        ret._pushContext();\n        var value = tryCatch(fn).apply(this, arguments);\n        var promiseCreated = ret._popContext();\n        debug.checkForgottenReturns(\n            value, promiseCreated, \"Promise.method\", ret);\n        ret._resolveFromSyncValue(value);\n        return ret;\n    };\n};\n\nPromise.attempt = Promise[\"try\"] = function (fn) {\n    if (typeof fn !== \"function\") {\n        return apiRejection(\"expecting a function but got \" + util.classString(fn));\n    }\n    var ret = new Promise(INTERNAL);\n    ret._captureStackTrace();\n    ret._pushContext();\n    var value;\n    if (arguments.length > 1) {\n        debug.deprecated(\"calling Promise.try with more than 1 argument\");\n        var arg = arguments[1];\n        var ctx = arguments[2];\n        value = util.isArray(arg) ? tryCatch(fn).apply(ctx, arg)\n                                  : tryCatch(fn).call(ctx, arg);\n    } else {\n        value = tryCatch(fn)();\n    }\n    var promiseCreated = ret._popContext();\n    debug.checkForgottenReturns(\n        value, promiseCreated, \"Promise.try\", ret);\n    ret._resolveFromSyncValue(value);\n    return ret;\n};\n\nPromise.prototype._resolveFromSyncValue = function (value) {\n    if (value === util.errorObj) {\n        this._rejectCallback(value.e, false);\n    } else {\n        this._resolveCallback(value, true);\n    }\n};\n};\n\n},{\"./util\":36}],20:[function(_dereq_,module,exports){\n\"use strict\";\nvar util = _dereq_(\"./util\");\nvar maybeWrapAsError = util.maybeWrapAsError;\nvar errors = _dereq_(\"./errors\");\nvar OperationalError = errors.OperationalError;\nvar es5 = _dereq_(\"./es5\");\n\nfunction isUntypedError(obj) {\n    return obj instanceof Error &&\n        es5.getPrototypeOf(obj) === Error.prototype;\n}\n\nvar rErrorKey = /^(?:name|message|stack|cause)$/;\nfunction wrapAsOperationalError(obj) {\n    var ret;\n    if (isUntypedError(obj)) {\n        ret = new OperationalError(obj);\n        ret.name = obj.name;\n        ret.message = obj.message;\n        ret.stack = obj.stack;\n        var keys = es5.keys(obj);\n        for (var i = 0; i < keys.length; ++i) {\n            var key = keys[i];\n            if (!rErrorKey.test(key)) {\n                ret[key] = obj[key];\n            }\n        }\n        return ret;\n    }\n    util.markAsOriginatingFromRejection(obj);\n    return obj;\n}\n\nfunction nodebackForPromise(promise, multiArgs) {\n    return function(err, value) {\n        if (promise === null) return;\n        if (err) {\n            var wrapped = wrapAsOperationalError(maybeWrapAsError(err));\n            promise._attachExtraTrace(wrapped);\n            promise._reject(wrapped);\n        } else if (!multiArgs) {\n            promise._fulfill(value);\n        } else {\n            var args = [].slice.call(arguments, 1);;\n            promise._fulfill(args);\n        }\n        promise = null;\n    };\n}\n\nmodule.exports = nodebackForPromise;\n\n},{\"./errors\":12,\"./es5\":13,\"./util\":36}],21:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise) {\nvar util = _dereq_(\"./util\");\nvar async = Promise._async;\nvar tryCatch = util.tryCatch;\nvar errorObj = util.errorObj;\n\nfunction spreadAdapter(val, nodeback) {\n    var promise = this;\n    if (!util.isArray(val)) return successAdapter.call(promise, val, nodeback);\n    var ret =\n        tryCatch(nodeback).apply(promise._boundValue(), [null].concat(val));\n    if (ret === errorObj) {\n        async.throwLater(ret.e);\n    }\n}\n\nfunction successAdapter(val, nodeback) {\n    var promise = this;\n    var receiver = promise._boundValue();\n    var ret = val === undefined\n        ? tryCatch(nodeback).call(receiver, null)\n        : tryCatch(nodeback).call(receiver, null, val);\n    if (ret === errorObj) {\n        async.throwLater(ret.e);\n    }\n}\nfunction errorAdapter(reason, nodeback) {\n    var promise = this;\n    if (!reason) {\n        var newReason = new Error(reason + \"\");\n        newReason.cause = reason;\n        reason = newReason;\n    }\n    var ret = tryCatch(nodeback).call(promise._boundValue(), reason);\n    if (ret === errorObj) {\n        async.throwLater(ret.e);\n    }\n}\n\nPromise.prototype.asCallback = Promise.prototype.nodeify = function (nodeback,\n                                                                     options) {\n    if (typeof nodeback == \"function\") {\n        var adapter = successAdapter;\n        if (options !== undefined && Object(options).spread) {\n            adapter = spreadAdapter;\n        }\n        this._then(\n            adapter,\n            errorAdapter,\n            undefined,\n            this,\n            nodeback\n        );\n    }\n    return this;\n};\n};\n\n},{\"./util\":36}],22:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function() {\nvar makeSelfResolutionError = function () {\n    return new TypeError(\"circular promise resolution chain\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n};\nvar reflectHandler = function() {\n    return new Promise.PromiseInspection(this._target());\n};\nvar apiRejection = function(msg) {\n    return Promise.reject(new TypeError(msg));\n};\nfunction Proxyable() {}\nvar UNDEFINED_BINDING = {};\nvar util = _dereq_(\"./util\");\n\nvar getDomain;\nif (util.isNode) {\n    getDomain = function() {\n        var ret = process.domain;\n        if (ret === undefined) ret = null;\n        return ret;\n    };\n} else {\n    getDomain = function() {\n        return null;\n    };\n}\nutil.notEnumerableProp(Promise, \"_getDomain\", getDomain);\n\nvar es5 = _dereq_(\"./es5\");\nvar Async = _dereq_(\"./async\");\nvar async = new Async();\nes5.defineProperty(Promise, \"_async\", {value: async});\nvar errors = _dereq_(\"./errors\");\nvar TypeError = Promise.TypeError = errors.TypeError;\nPromise.RangeError = errors.RangeError;\nvar CancellationError = Promise.CancellationError = errors.CancellationError;\nPromise.TimeoutError = errors.TimeoutError;\nPromise.OperationalError = errors.OperationalError;\nPromise.RejectionError = errors.OperationalError;\nPromise.AggregateError = errors.AggregateError;\nvar INTERNAL = function(){};\nvar APPLY = {};\nvar NEXT_FILTER = {};\nvar tryConvertToPromise = _dereq_(\"./thenables\")(Promise, INTERNAL);\nvar PromiseArray =\n    _dereq_(\"./promise_array\")(Promise, INTERNAL,\n                               tryConvertToPromise, apiRejection, Proxyable);\nvar Context = _dereq_(\"./context\")(Promise);\n /*jshint unused:false*/\nvar createContext = Context.create;\nvar debug = _dereq_(\"./debuggability\")(Promise, Context);\nvar CapturedTrace = debug.CapturedTrace;\nvar PassThroughHandlerContext =\n    _dereq_(\"./finally\")(Promise, tryConvertToPromise, NEXT_FILTER);\nvar catchFilter = _dereq_(\"./catch_filter\")(NEXT_FILTER);\nvar nodebackForPromise = _dereq_(\"./nodeback\");\nvar errorObj = util.errorObj;\nvar tryCatch = util.tryCatch;\nfunction check(self, executor) {\n    if (self == null || self.constructor !== Promise) {\n        throw new TypeError(\"the promise constructor cannot be invoked directly\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n    if (typeof executor !== \"function\") {\n        throw new TypeError(\"expecting a function but got \" + util.classString(executor));\n    }\n\n}\n\nfunction Promise(executor) {\n    if (executor !== INTERNAL) {\n        check(this, executor);\n    }\n    this._bitField = 0;\n    this._fulfillmentHandler0 = undefined;\n    this._rejectionHandler0 = undefined;\n    this._promise0 = undefined;\n    this._receiver0 = undefined;\n    this._resolveFromExecutor(executor);\n    this._promiseCreated();\n    this._fireEvent(\"promiseCreated\", this);\n}\n\nPromise.prototype.toString = function () {\n    return \"[object Promise]\";\n};\n\nPromise.prototype.caught = Promise.prototype[\"catch\"] = function (fn) {\n    var len = arguments.length;\n    if (len > 1) {\n        var catchInstances = new Array(len - 1),\n            j = 0, i;\n        for (i = 0; i < len - 1; ++i) {\n            var item = arguments[i];\n            if (util.isObject(item)) {\n                catchInstances[j++] = item;\n            } else {\n                return apiRejection(\"Catch statement predicate: \" +\n                    \"expecting an object but got \" + util.classString(item));\n            }\n        }\n        catchInstances.length = j;\n        fn = arguments[i];\n        return this.then(undefined, catchFilter(catchInstances, fn, this));\n    }\n    return this.then(undefined, fn);\n};\n\nPromise.prototype.reflect = function () {\n    return this._then(reflectHandler,\n        reflectHandler, undefined, this, undefined);\n};\n\nPromise.prototype.then = function (didFulfill, didReject) {\n    if (debug.warnings() && arguments.length > 0 &&\n        typeof didFulfill !== \"function\" &&\n        typeof didReject !== \"function\") {\n        var msg = \".then() only accepts functions but was passed: \" +\n                util.classString(didFulfill);\n        if (arguments.length > 1) {\n            msg += \", \" + util.classString(didReject);\n        }\n        this._warn(msg);\n    }\n    return this._then(didFulfill, didReject, undefined, undefined, undefined);\n};\n\nPromise.prototype.done = function (didFulfill, didReject) {\n    var promise =\n        this._then(didFulfill, didReject, undefined, undefined, undefined);\n    promise._setIsFinal();\n};\n\nPromise.prototype.spread = function (fn) {\n    if (typeof fn !== \"function\") {\n        return apiRejection(\"expecting a function but got \" + util.classString(fn));\n    }\n    return this.all()._then(fn, undefined, undefined, APPLY, undefined);\n};\n\nPromise.prototype.toJSON = function () {\n    var ret = {\n        isFulfilled: false,\n        isRejected: false,\n        fulfillmentValue: undefined,\n        rejectionReason: undefined\n    };\n    if (this.isFulfilled()) {\n        ret.fulfillmentValue = this.value();\n        ret.isFulfilled = true;\n    } else if (this.isRejected()) {\n        ret.rejectionReason = this.reason();\n        ret.isRejected = true;\n    }\n    return ret;\n};\n\nPromise.prototype.all = function () {\n    if (arguments.length > 0) {\n        this._warn(\".all() was passed arguments but it does not take any\");\n    }\n    return new PromiseArray(this).promise();\n};\n\nPromise.prototype.error = function (fn) {\n    return this.caught(util.originatesFromRejection, fn);\n};\n\nPromise.getNewLibraryCopy = module.exports;\n\nPromise.is = function (val) {\n    return val instanceof Promise;\n};\n\nPromise.fromNode = Promise.fromCallback = function(fn) {\n    var ret = new Promise(INTERNAL);\n    ret._captureStackTrace();\n    var multiArgs = arguments.length > 1 ? !!Object(arguments[1]).multiArgs\n                                         : false;\n    var result = tryCatch(fn)(nodebackForPromise(ret, multiArgs));\n    if (result === errorObj) {\n        ret._rejectCallback(result.e, true);\n    }\n    if (!ret._isFateSealed()) ret._setAsyncGuaranteed();\n    return ret;\n};\n\nPromise.all = function (promises) {\n    return new PromiseArray(promises).promise();\n};\n\nPromise.cast = function (obj) {\n    var ret = tryConvertToPromise(obj);\n    if (!(ret instanceof Promise)) {\n        ret = new Promise(INTERNAL);\n        ret._captureStackTrace();\n        ret._setFulfilled();\n        ret._rejectionHandler0 = obj;\n    }\n    return ret;\n};\n\nPromise.resolve = Promise.fulfilled = Promise.cast;\n\nPromise.reject = Promise.rejected = function (reason) {\n    var ret = new Promise(INTERNAL);\n    ret._captureStackTrace();\n    ret._rejectCallback(reason, true);\n    return ret;\n};\n\nPromise.setScheduler = function(fn) {\n    if (typeof fn !== \"function\") {\n        throw new TypeError(\"expecting a function but got \" + util.classString(fn));\n    }\n    return async.setScheduler(fn);\n};\n\nPromise.prototype._then = function (\n    didFulfill,\n    didReject,\n    _,    receiver,\n    internalData\n) {\n    var haveInternalData = internalData !== undefined;\n    var promise = haveInternalData ? internalData : new Promise(INTERNAL);\n    var target = this._target();\n    var bitField = target._bitField;\n\n    if (!haveInternalData) {\n        promise._propagateFrom(this, 3);\n        promise._captureStackTrace();\n        if (receiver === undefined &&\n            ((this._bitField & 2097152) !== 0)) {\n            if (!((bitField & 50397184) === 0)) {\n                receiver = this._boundValue();\n            } else {\n                receiver = target === this ? undefined : this._boundTo;\n            }\n        }\n        this._fireEvent(\"promiseChained\", this, promise);\n    }\n\n    var domain = getDomain();\n    if (!((bitField & 50397184) === 0)) {\n        var handler, value, settler = target._settlePromiseCtx;\n        if (((bitField & 33554432) !== 0)) {\n            value = target._rejectionHandler0;\n            handler = didFulfill;\n        } else if (((bitField & 16777216) !== 0)) {\n            value = target._fulfillmentHandler0;\n            handler = didReject;\n            target._unsetRejectionIsUnhandled();\n        } else {\n            settler = target._settlePromiseLateCancellationObserver;\n            value = new CancellationError(\"late cancellation observer\");\n            target._attachExtraTrace(value);\n            handler = didReject;\n        }\n\n        async.invoke(settler, target, {\n            handler: domain === null ? handler\n                : (typeof handler === \"function\" &&\n                    util.domainBind(domain, handler)),\n            promise: promise,\n            receiver: receiver,\n            value: value\n        });\n    } else {\n        target._addCallbacks(didFulfill, didReject, promise, receiver, domain);\n    }\n\n    return promise;\n};\n\nPromise.prototype._length = function () {\n    return this._bitField & 65535;\n};\n\nPromise.prototype._isFateSealed = function () {\n    return (this._bitField & 117506048) !== 0;\n};\n\nPromise.prototype._isFollowing = function () {\n    return (this._bitField & 67108864) === 67108864;\n};\n\nPromise.prototype._setLength = function (len) {\n    this._bitField = (this._bitField & -65536) |\n        (len & 65535);\n};\n\nPromise.prototype._setFulfilled = function () {\n    this._bitField = this._bitField | 33554432;\n    this._fireEvent(\"promiseFulfilled\", this);\n};\n\nPromise.prototype._setRejected = function () {\n    this._bitField = this._bitField | 16777216;\n    this._fireEvent(\"promiseRejected\", this);\n};\n\nPromise.prototype._setFollowing = function () {\n    this._bitField = this._bitField | 67108864;\n    this._fireEvent(\"promiseResolved\", this);\n};\n\nPromise.prototype._setIsFinal = function () {\n    this._bitField = this._bitField | 4194304;\n};\n\nPromise.prototype._isFinal = function () {\n    return (this._bitField & 4194304) > 0;\n};\n\nPromise.prototype._unsetCancelled = function() {\n    this._bitField = this._bitField & (~65536);\n};\n\nPromise.prototype._setCancelled = function() {\n    this._bitField = this._bitField | 65536;\n    this._fireEvent(\"promiseCancelled\", this);\n};\n\nPromise.prototype._setWillBeCancelled = function() {\n    this._bitField = this._bitField | 8388608;\n};\n\nPromise.prototype._setAsyncGuaranteed = function() {\n    if (async.hasCustomScheduler()) return;\n    this._bitField = this._bitField | 134217728;\n};\n\nPromise.prototype._receiverAt = function (index) {\n    var ret = index === 0 ? this._receiver0 : this[\n            index * 4 - 4 + 3];\n    if (ret === UNDEFINED_BINDING) {\n        return undefined;\n    } else if (ret === undefined && this._isBound()) {\n        return this._boundValue();\n    }\n    return ret;\n};\n\nPromise.prototype._promiseAt = function (index) {\n    return this[\n            index * 4 - 4 + 2];\n};\n\nPromise.prototype._fulfillmentHandlerAt = function (index) {\n    return this[\n            index * 4 - 4 + 0];\n};\n\nPromise.prototype._rejectionHandlerAt = function (index) {\n    return this[\n            index * 4 - 4 + 1];\n};\n\nPromise.prototype._boundValue = function() {};\n\nPromise.prototype._migrateCallback0 = function (follower) {\n    var bitField = follower._bitField;\n    var fulfill = follower._fulfillmentHandler0;\n    var reject = follower._rejectionHandler0;\n    var promise = follower._promise0;\n    var receiver = follower._receiverAt(0);\n    if (receiver === undefined) receiver = UNDEFINED_BINDING;\n    this._addCallbacks(fulfill, reject, promise, receiver, null);\n};\n\nPromise.prototype._migrateCallbackAt = function (follower, index) {\n    var fulfill = follower._fulfillmentHandlerAt(index);\n    var reject = follower._rejectionHandlerAt(index);\n    var promise = follower._promiseAt(index);\n    var receiver = follower._receiverAt(index);\n    if (receiver === undefined) receiver = UNDEFINED_BINDING;\n    this._addCallbacks(fulfill, reject, promise, receiver, null);\n};\n\nPromise.prototype._addCallbacks = function (\n    fulfill,\n    reject,\n    promise,\n    receiver,\n    domain\n) {\n    var index = this._length();\n\n    if (index >= 65535 - 4) {\n        index = 0;\n        this._setLength(0);\n    }\n\n    if (index === 0) {\n        this._promise0 = promise;\n        this._receiver0 = receiver;\n        if (typeof fulfill === \"function\") {\n            this._fulfillmentHandler0 =\n                domain === null ? fulfill : util.domainBind(domain, fulfill);\n        }\n        if (typeof reject === \"function\") {\n            this._rejectionHandler0 =\n                domain === null ? reject : util.domainBind(domain, reject);\n        }\n    } else {\n        var base = index * 4 - 4;\n        this[base + 2] = promise;\n        this[base + 3] = receiver;\n        if (typeof fulfill === \"function\") {\n            this[base + 0] =\n                domain === null ? fulfill : util.domainBind(domain, fulfill);\n        }\n        if (typeof reject === \"function\") {\n            this[base + 1] =\n                domain === null ? reject : util.domainBind(domain, reject);\n        }\n    }\n    this._setLength(index + 1);\n    return index;\n};\n\nPromise.prototype._proxy = function (proxyable, arg) {\n    this._addCallbacks(undefined, undefined, arg, proxyable, null);\n};\n\nPromise.prototype._resolveCallback = function(value, shouldBind) {\n    if (((this._bitField & 117506048) !== 0)) return;\n    if (value === this)\n        return this._rejectCallback(makeSelfResolutionError(), false);\n    var maybePromise = tryConvertToPromise(value, this);\n    if (!(maybePromise instanceof Promise)) return this._fulfill(value);\n\n    if (shouldBind) this._propagateFrom(maybePromise, 2);\n\n    var promise = maybePromise._target();\n\n    if (promise === this) {\n        this._reject(makeSelfResolutionError());\n        return;\n    }\n\n    var bitField = promise._bitField;\n    if (((bitField & 50397184) === 0)) {\n        var len = this._length();\n        if (len > 0) promise._migrateCallback0(this);\n        for (var i = 1; i < len; ++i) {\n            promise._migrateCallbackAt(this, i);\n        }\n        this._setFollowing();\n        this._setLength(0);\n        this._setFollowee(promise);\n    } else if (((bitField & 33554432) !== 0)) {\n        this._fulfill(promise._value());\n    } else if (((bitField & 16777216) !== 0)) {\n        this._reject(promise._reason());\n    } else {\n        var reason = new CancellationError(\"late cancellation observer\");\n        promise._attachExtraTrace(reason);\n        this._reject(reason);\n    }\n};\n\nPromise.prototype._rejectCallback =\nfunction(reason, synchronous, ignoreNonErrorWarnings) {\n    var trace = util.ensureErrorObject(reason);\n    var hasStack = trace === reason;\n    if (!hasStack && !ignoreNonErrorWarnings && debug.warnings()) {\n        var message = \"a promise was rejected with a non-error: \" +\n            util.classString(reason);\n        this._warn(message, true);\n    }\n    this._attachExtraTrace(trace, synchronous ? hasStack : false);\n    this._reject(reason);\n};\n\nPromise.prototype._resolveFromExecutor = function (executor) {\n    if (executor === INTERNAL) return;\n    var promise = this;\n    this._captureStackTrace();\n    this._pushContext();\n    var synchronous = true;\n    var r = this._execute(executor, function(value) {\n        promise._resolveCallback(value);\n    }, function (reason) {\n        promise._rejectCallback(reason, synchronous);\n    });\n    synchronous = false;\n    this._popContext();\n\n    if (r !== undefined) {\n        promise._rejectCallback(r, true);\n    }\n};\n\nPromise.prototype._settlePromiseFromHandler = function (\n    handler, receiver, value, promise\n) {\n    var bitField = promise._bitField;\n    if (((bitField & 65536) !== 0)) return;\n    promise._pushContext();\n    var x;\n    if (receiver === APPLY) {\n        if (!value || typeof value.length !== \"number\") {\n            x = errorObj;\n            x.e = new TypeError(\"cannot .spread() a non-array: \" +\n                                    util.classString(value));\n        } else {\n            x = tryCatch(handler).apply(this._boundValue(), value);\n        }\n    } else {\n        x = tryCatch(handler).call(receiver, value);\n    }\n    var promiseCreated = promise._popContext();\n    bitField = promise._bitField;\n    if (((bitField & 65536) !== 0)) return;\n\n    if (x === NEXT_FILTER) {\n        promise._reject(value);\n    } else if (x === errorObj) {\n        promise._rejectCallback(x.e, false);\n    } else {\n        debug.checkForgottenReturns(x, promiseCreated, \"\",  promise, this);\n        promise._resolveCallback(x);\n    }\n};\n\nPromise.prototype._target = function() {\n    var ret = this;\n    while (ret._isFollowing()) ret = ret._followee();\n    return ret;\n};\n\nPromise.prototype._followee = function() {\n    return this._rejectionHandler0;\n};\n\nPromise.prototype._setFollowee = function(promise) {\n    this._rejectionHandler0 = promise;\n};\n\nPromise.prototype._settlePromise = function(promise, handler, receiver, value) {\n    var isPromise = promise instanceof Promise;\n    var bitField = this._bitField;\n    var asyncGuaranteed = ((bitField & 134217728) !== 0);\n    if (((bitField & 65536) !== 0)) {\n        if (isPromise) promise._invokeInternalOnCancel();\n\n        if (receiver instanceof PassThroughHandlerContext &&\n            receiver.isFinallyHandler()) {\n            receiver.cancelPromise = promise;\n            if (tryCatch(handler).call(receiver, value) === errorObj) {\n                promise._reject(errorObj.e);\n            }\n        } else if (handler === reflectHandler) {\n            promise._fulfill(reflectHandler.call(receiver));\n        } else if (receiver instanceof Proxyable) {\n            receiver._promiseCancelled(promise);\n        } else if (isPromise || promise instanceof PromiseArray) {\n            promise._cancel();\n        } else {\n            receiver.cancel();\n        }\n    } else if (typeof handler === \"function\") {\n        if (!isPromise) {\n            handler.call(receiver, value, promise);\n        } else {\n            if (asyncGuaranteed) promise._setAsyncGuaranteed();\n            this._settlePromiseFromHandler(handler, receiver, value, promise);\n        }\n    } else if (receiver instanceof Proxyable) {\n        if (!receiver._isResolved()) {\n            if (((bitField & 33554432) !== 0)) {\n                receiver._promiseFulfilled(value, promise);\n            } else {\n                receiver._promiseRejected(value, promise);\n            }\n        }\n    } else if (isPromise) {\n        if (asyncGuaranteed) promise._setAsyncGuaranteed();\n        if (((bitField & 33554432) !== 0)) {\n            promise._fulfill(value);\n        } else {\n            promise._reject(value);\n        }\n    }\n};\n\nPromise.prototype._settlePromiseLateCancellationObserver = function(ctx) {\n    var handler = ctx.handler;\n    var promise = ctx.promise;\n    var receiver = ctx.receiver;\n    var value = ctx.value;\n    if (typeof handler === \"function\") {\n        if (!(promise instanceof Promise)) {\n            handler.call(receiver, value, promise);\n        } else {\n            this._settlePromiseFromHandler(handler, receiver, value, promise);\n        }\n    } else if (promise instanceof Promise) {\n        promise._reject(value);\n    }\n};\n\nPromise.prototype._settlePromiseCtx = function(ctx) {\n    this._settlePromise(ctx.promise, ctx.handler, ctx.receiver, ctx.value);\n};\n\nPromise.prototype._settlePromise0 = function(handler, value, bitField) {\n    var promise = this._promise0;\n    var receiver = this._receiverAt(0);\n    this._promise0 = undefined;\n    this._receiver0 = undefined;\n    this._settlePromise(promise, handler, receiver, value);\n};\n\nPromise.prototype._clearCallbackDataAtIndex = function(index) {\n    var base = index * 4 - 4;\n    this[base + 2] =\n    this[base + 3] =\n    this[base + 0] =\n    this[base + 1] = undefined;\n};\n\nPromise.prototype._fulfill = function (value) {\n    var bitField = this._bitField;\n    if (((bitField & 117506048) >>> 16)) return;\n    if (value === this) {\n        var err = makeSelfResolutionError();\n        this._attachExtraTrace(err);\n        return this._reject(err);\n    }\n    this._setFulfilled();\n    this._rejectionHandler0 = value;\n\n    if ((bitField & 65535) > 0) {\n        if (((bitField & 134217728) !== 0)) {\n            this._settlePromises();\n        } else {\n            async.settlePromises(this);\n        }\n    }\n};\n\nPromise.prototype._reject = function (reason) {\n    var bitField = this._bitField;\n    if (((bitField & 117506048) >>> 16)) return;\n    this._setRejected();\n    this._fulfillmentHandler0 = reason;\n\n    if (this._isFinal()) {\n        return async.fatalError(reason, util.isNode);\n    }\n\n    if ((bitField & 65535) > 0) {\n        async.settlePromises(this);\n    } else {\n        this._ensurePossibleRejectionHandled();\n    }\n};\n\nPromise.prototype._fulfillPromises = function (len, value) {\n    for (var i = 1; i < len; i++) {\n        var handler = this._fulfillmentHandlerAt(i);\n        var promise = this._promiseAt(i);\n        var receiver = this._receiverAt(i);\n        this._clearCallbackDataAtIndex(i);\n        this._settlePromise(promise, handler, receiver, value);\n    }\n};\n\nPromise.prototype._rejectPromises = function (len, reason) {\n    for (var i = 1; i < len; i++) {\n        var handler = this._rejectionHandlerAt(i);\n        var promise = this._promiseAt(i);\n        var receiver = this._receiverAt(i);\n        this._clearCallbackDataAtIndex(i);\n        this._settlePromise(promise, handler, receiver, reason);\n    }\n};\n\nPromise.prototype._settlePromises = function () {\n    var bitField = this._bitField;\n    var len = (bitField & 65535);\n\n    if (len > 0) {\n        if (((bitField & 16842752) !== 0)) {\n            var reason = this._fulfillmentHandler0;\n            this._settlePromise0(this._rejectionHandler0, reason, bitField);\n            this._rejectPromises(len, reason);\n        } else {\n            var value = this._rejectionHandler0;\n            this._settlePromise0(this._fulfillmentHandler0, value, bitField);\n            this._fulfillPromises(len, value);\n        }\n        this._setLength(0);\n    }\n    this._clearCancellationData();\n};\n\nPromise.prototype._settledValue = function() {\n    var bitField = this._bitField;\n    if (((bitField & 33554432) !== 0)) {\n        return this._rejectionHandler0;\n    } else if (((bitField & 16777216) !== 0)) {\n        return this._fulfillmentHandler0;\n    }\n};\n\nfunction deferResolve(v) {this.promise._resolveCallback(v);}\nfunction deferReject(v) {this.promise._rejectCallback(v, false);}\n\nPromise.defer = Promise.pending = function() {\n    debug.deprecated(\"Promise.defer\", \"new Promise\");\n    var promise = new Promise(INTERNAL);\n    return {\n        promise: promise,\n        resolve: deferResolve,\n        reject: deferReject\n    };\n};\n\nutil.notEnumerableProp(Promise,\n                       \"_makeSelfResolutionError\",\n                       makeSelfResolutionError);\n\n_dereq_(\"./method\")(Promise, INTERNAL, tryConvertToPromise, apiRejection,\n    debug);\n_dereq_(\"./bind\")(Promise, INTERNAL, tryConvertToPromise, debug);\n_dereq_(\"./cancel\")(Promise, PromiseArray, apiRejection, debug);\n_dereq_(\"./direct_resolve\")(Promise);\n_dereq_(\"./synchronous_inspection\")(Promise);\n_dereq_(\"./join\")(\n    Promise, PromiseArray, tryConvertToPromise, INTERNAL, async, getDomain);\nPromise.Promise = Promise;\nPromise.version = \"3.5.1\";\n_dereq_('./map.js')(Promise, PromiseArray, apiRejection, tryConvertToPromise, INTERNAL, debug);\n_dereq_('./call_get.js')(Promise);\n_dereq_('./using.js')(Promise, apiRejection, tryConvertToPromise, createContext, INTERNAL, debug);\n_dereq_('./timers.js')(Promise, INTERNAL, debug);\n_dereq_('./generators.js')(Promise, apiRejection, INTERNAL, tryConvertToPromise, Proxyable, debug);\n_dereq_('./nodeify.js')(Promise);\n_dereq_('./promisify.js')(Promise, INTERNAL);\n_dereq_('./props.js')(Promise, PromiseArray, tryConvertToPromise, apiRejection);\n_dereq_('./race.js')(Promise, INTERNAL, tryConvertToPromise, apiRejection);\n_dereq_('./reduce.js')(Promise, PromiseArray, apiRejection, tryConvertToPromise, INTERNAL, debug);\n_dereq_('./settle.js')(Promise, PromiseArray, debug);\n_dereq_('./some.js')(Promise, PromiseArray, apiRejection);\n_dereq_('./filter.js')(Promise, INTERNAL);\n_dereq_('./each.js')(Promise, INTERNAL);\n_dereq_('./any.js')(Promise);\n                                                         \n    util.toFastProperties(Promise);                                          \n    util.toFastProperties(Promise.prototype);                                \n    function fillTypes(value) {                                              \n        var p = new Promise(INTERNAL);                                       \n        p._fulfillmentHandler0 = value;                                      \n        p._rejectionHandler0 = value;                                        \n        p._promise0 = value;                                                 \n        p._receiver0 = value;                                                \n    }                                                                        \n    // Complete slack tracking, opt out of field-type tracking and           \n    // stabilize map                                                         \n    fillTypes({a: 1});                                                       \n    fillTypes({b: 2});                                                       \n    fillTypes({c: 3});                                                       \n    fillTypes(1);                                                            \n    fillTypes(function(){});                                                 \n    fillTypes(undefined);                                                    \n    fillTypes(false);                                                        \n    fillTypes(new Promise(INTERNAL));                                        \n    debug.setBounds(Async.firstLineError, util.lastLineError);               \n    return Promise;                                                          \n\n};\n\n},{\"./any.js\":1,\"./async\":2,\"./bind\":3,\"./call_get.js\":5,\"./cancel\":6,\"./catch_filter\":7,\"./context\":8,\"./debuggability\":9,\"./direct_resolve\":10,\"./each.js\":11,\"./errors\":12,\"./es5\":13,\"./filter.js\":14,\"./finally\":15,\"./generators.js\":16,\"./join\":17,\"./map.js\":18,\"./method\":19,\"./nodeback\":20,\"./nodeify.js\":21,\"./promise_array\":23,\"./promisify.js\":24,\"./props.js\":25,\"./race.js\":27,\"./reduce.js\":28,\"./settle.js\":30,\"./some.js\":31,\"./synchronous_inspection\":32,\"./thenables\":33,\"./timers.js\":34,\"./using.js\":35,\"./util\":36}],23:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, INTERNAL, tryConvertToPromise,\n    apiRejection, Proxyable) {\nvar util = _dereq_(\"./util\");\nvar isArray = util.isArray;\n\nfunction toResolutionValue(val) {\n    switch(val) {\n    case -2: return [];\n    case -3: return {};\n    case -6: return new Map();\n    }\n}\n\nfunction PromiseArray(values) {\n    var promise = this._promise = new Promise(INTERNAL);\n    if (values instanceof Promise) {\n        promise._propagateFrom(values, 3);\n    }\n    promise._setOnCancel(this);\n    this._values = values;\n    this._length = 0;\n    this._totalResolved = 0;\n    this._init(undefined, -2);\n}\nutil.inherits(PromiseArray, Proxyable);\n\nPromiseArray.prototype.length = function () {\n    return this._length;\n};\n\nPromiseArray.prototype.promise = function () {\n    return this._promise;\n};\n\nPromiseArray.prototype._init = function init(_, resolveValueIfEmpty) {\n    var values = tryConvertToPromise(this._values, this._promise);\n    if (values instanceof Promise) {\n        values = values._target();\n        var bitField = values._bitField;\n        ;\n        this._values = values;\n\n        if (((bitField & 50397184) === 0)) {\n            this._promise._setAsyncGuaranteed();\n            return values._then(\n                init,\n                this._reject,\n                undefined,\n                this,\n                resolveValueIfEmpty\n           );\n        } else if (((bitField & 33554432) !== 0)) {\n            values = values._value();\n        } else if (((bitField & 16777216) !== 0)) {\n            return this._reject(values._reason());\n        } else {\n            return this._cancel();\n        }\n    }\n    values = util.asArray(values);\n    if (values === null) {\n        var err = apiRejection(\n            \"expecting an array or an iterable object but got \" + util.classString(values)).reason();\n        this._promise._rejectCallback(err, false);\n        return;\n    }\n\n    if (values.length === 0) {\n        if (resolveValueIfEmpty === -5) {\n            this._resolveEmptyArray();\n        }\n        else {\n            this._resolve(toResolutionValue(resolveValueIfEmpty));\n        }\n        return;\n    }\n    this._iterate(values);\n};\n\nPromiseArray.prototype._iterate = function(values) {\n    var len = this.getActualLength(values.length);\n    this._length = len;\n    this._values = this.shouldCopyValues() ? new Array(len) : this._values;\n    var result = this._promise;\n    var isResolved = false;\n    var bitField = null;\n    for (var i = 0; i < len; ++i) {\n        var maybePromise = tryConvertToPromise(values[i], result);\n\n        if (maybePromise instanceof Promise) {\n            maybePromise = maybePromise._target();\n            bitField = maybePromise._bitField;\n        } else {\n            bitField = null;\n        }\n\n        if (isResolved) {\n            if (bitField !== null) {\n                maybePromise.suppressUnhandledRejections();\n            }\n        } else if (bitField !== null) {\n            if (((bitField & 50397184) === 0)) {\n                maybePromise._proxy(this, i);\n                this._values[i] = maybePromise;\n            } else if (((bitField & 33554432) !== 0)) {\n                isResolved = this._promiseFulfilled(maybePromise._value(), i);\n            } else if (((bitField & 16777216) !== 0)) {\n                isResolved = this._promiseRejected(maybePromise._reason(), i);\n            } else {\n                isResolved = this._promiseCancelled(i);\n            }\n        } else {\n            isResolved = this._promiseFulfilled(maybePromise, i);\n        }\n    }\n    if (!isResolved) result._setAsyncGuaranteed();\n};\n\nPromiseArray.prototype._isResolved = function () {\n    return this._values === null;\n};\n\nPromiseArray.prototype._resolve = function (value) {\n    this._values = null;\n    this._promise._fulfill(value);\n};\n\nPromiseArray.prototype._cancel = function() {\n    if (this._isResolved() || !this._promise._isCancellable()) return;\n    this._values = null;\n    this._promise._cancel();\n};\n\nPromiseArray.prototype._reject = function (reason) {\n    this._values = null;\n    this._promise._rejectCallback(reason, false);\n};\n\nPromiseArray.prototype._promiseFulfilled = function (value, index) {\n    this._values[index] = value;\n    var totalResolved = ++this._totalResolved;\n    if (totalResolved >= this._length) {\n        this._resolve(this._values);\n        return true;\n    }\n    return false;\n};\n\nPromiseArray.prototype._promiseCancelled = function() {\n    this._cancel();\n    return true;\n};\n\nPromiseArray.prototype._promiseRejected = function (reason) {\n    this._totalResolved++;\n    this._reject(reason);\n    return true;\n};\n\nPromiseArray.prototype._resultCancelled = function() {\n    if (this._isResolved()) return;\n    var values = this._values;\n    this._cancel();\n    if (values instanceof Promise) {\n        values.cancel();\n    } else {\n        for (var i = 0; i < values.length; ++i) {\n            if (values[i] instanceof Promise) {\n                values[i].cancel();\n            }\n        }\n    }\n};\n\nPromiseArray.prototype.shouldCopyValues = function () {\n    return true;\n};\n\nPromiseArray.prototype.getActualLength = function (len) {\n    return len;\n};\n\nreturn PromiseArray;\n};\n\n},{\"./util\":36}],24:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, INTERNAL) {\nvar THIS = {};\nvar util = _dereq_(\"./util\");\nvar nodebackForPromise = _dereq_(\"./nodeback\");\nvar withAppended = util.withAppended;\nvar maybeWrapAsError = util.maybeWrapAsError;\nvar canEvaluate = util.canEvaluate;\nvar TypeError = _dereq_(\"./errors\").TypeError;\nvar defaultSuffix = \"Async\";\nvar defaultPromisified = {__isPromisified__: true};\nvar noCopyProps = [\n    \"arity\",    \"length\",\n    \"name\",\n    \"arguments\",\n    \"caller\",\n    \"callee\",\n    \"prototype\",\n    \"__isPromisified__\"\n];\nvar noCopyPropsPattern = new RegExp(\"^(?:\" + noCopyProps.join(\"|\") + \")$\");\n\nvar defaultFilter = function(name) {\n    return util.isIdentifier(name) &&\n        name.charAt(0) !== \"_\" &&\n        name !== \"constructor\";\n};\n\nfunction propsFilter(key) {\n    return !noCopyPropsPattern.test(key);\n}\n\nfunction isPromisified(fn) {\n    try {\n        return fn.__isPromisified__ === true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n\nfunction hasPromisified(obj, key, suffix) {\n    var val = util.getDataPropertyOrDefault(obj, key + suffix,\n                                            defaultPromisified);\n    return val ? isPromisified(val) : false;\n}\nfunction checkValid(ret, suffix, suffixRegexp) {\n    for (var i = 0; i < ret.length; i += 2) {\n        var key = ret[i];\n        if (suffixRegexp.test(key)) {\n            var keyWithoutAsyncSuffix = key.replace(suffixRegexp, \"\");\n            for (var j = 0; j < ret.length; j += 2) {\n                if (ret[j] === keyWithoutAsyncSuffix) {\n                    throw new TypeError(\"Cannot promisify an API that has normal methods with '%s'-suffix\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\"\n                        .replace(\"%s\", suffix));\n                }\n            }\n        }\n    }\n}\n\nfunction promisifiableMethods(obj, suffix, suffixRegexp, filter) {\n    var keys = util.inheritedDataKeys(obj);\n    var ret = [];\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var value = obj[key];\n        var passesDefaultFilter = filter === defaultFilter\n            ? true : defaultFilter(key, value, obj);\n        if (typeof value === \"function\" &&\n            !isPromisified(value) &&\n            !hasPromisified(obj, key, suffix) &&\n            filter(key, value, obj, passesDefaultFilter)) {\n            ret.push(key, value);\n        }\n    }\n    checkValid(ret, suffix, suffixRegexp);\n    return ret;\n}\n\nvar escapeIdentRegex = function(str) {\n    return str.replace(/([$])/, \"\\\\$\");\n};\n\nvar makeNodePromisifiedEval;\nif (!true) {\nvar switchCaseArgumentOrder = function(likelyArgumentCount) {\n    var ret = [likelyArgumentCount];\n    var min = Math.max(0, likelyArgumentCount - 1 - 3);\n    for(var i = likelyArgumentCount - 1; i >= min; --i) {\n        ret.push(i);\n    }\n    for(var i = likelyArgumentCount + 1; i <= 3; ++i) {\n        ret.push(i);\n    }\n    return ret;\n};\n\nvar argumentSequence = function(argumentCount) {\n    return util.filledRange(argumentCount, \"_arg\", \"\");\n};\n\nvar parameterDeclaration = function(parameterCount) {\n    return util.filledRange(\n        Math.max(parameterCount, 3), \"_arg\", \"\");\n};\n\nvar parameterCount = function(fn) {\n    if (typeof fn.length === \"number\") {\n        return Math.max(Math.min(fn.length, 1023 + 1), 0);\n    }\n    return 0;\n};\n\nmakeNodePromisifiedEval =\nfunction(callback, receiver, originalName, fn, _, multiArgs) {\n    var newParameterCount = Math.max(0, parameterCount(fn) - 1);\n    var argumentOrder = switchCaseArgumentOrder(newParameterCount);\n    var shouldProxyThis = typeof callback === \"string\" || receiver === THIS;\n\n    function generateCallForArgumentCount(count) {\n        var args = argumentSequence(count).join(\", \");\n        var comma = count > 0 ? \", \" : \"\";\n        var ret;\n        if (shouldProxyThis) {\n            ret = \"ret = callback.call(this, {{args}}, nodeback); break;\\n\";\n        } else {\n            ret = receiver === undefined\n                ? \"ret = callback({{args}}, nodeback); break;\\n\"\n                : \"ret = callback.call(receiver, {{args}}, nodeback); break;\\n\";\n        }\n        return ret.replace(\"{{args}}\", args).replace(\", \", comma);\n    }\n\n    function generateArgumentSwitchCase() {\n        var ret = \"\";\n        for (var i = 0; i < argumentOrder.length; ++i) {\n            ret += \"case \" + argumentOrder[i] +\":\" +\n                generateCallForArgumentCount(argumentOrder[i]);\n        }\n\n        ret += \"                                                             \\n\\\n        default:                                                             \\n\\\n            var args = new Array(len + 1);                                   \\n\\\n            var i = 0;                                                       \\n\\\n            for (var i = 0; i < len; ++i) {                                  \\n\\\n               args[i] = arguments[i];                                       \\n\\\n            }                                                                \\n\\\n            args[i] = nodeback;                                              \\n\\\n            [CodeForCall]                                                    \\n\\\n            break;                                                           \\n\\\n        \".replace(\"[CodeForCall]\", (shouldProxyThis\n                                ? \"ret = callback.apply(this, args);\\n\"\n                                : \"ret = callback.apply(receiver, args);\\n\"));\n        return ret;\n    }\n\n    var getFunctionCode = typeof callback === \"string\"\n                                ? (\"this != null ? this['\"+callback+\"'] : fn\")\n                                : \"fn\";\n    var body = \"'use strict';                                                \\n\\\n        var ret = function (Parameters) {                                    \\n\\\n            'use strict';                                                    \\n\\\n            var len = arguments.length;                                      \\n\\\n            var promise = new Promise(INTERNAL);                             \\n\\\n            promise._captureStackTrace();                                    \\n\\\n            var nodeback = nodebackForPromise(promise, \" + multiArgs + \");   \\n\\\n            var ret;                                                         \\n\\\n            var callback = tryCatch([GetFunctionCode]);                      \\n\\\n            switch(len) {                                                    \\n\\\n                [CodeForSwitchCase]                                          \\n\\\n            }                                                                \\n\\\n            if (ret === errorObj) {                                          \\n\\\n                promise._rejectCallback(maybeWrapAsError(ret.e), true, true);\\n\\\n            }                                                                \\n\\\n            if (!promise._isFateSealed()) promise._setAsyncGuaranteed();     \\n\\\n            return promise;                                                  \\n\\\n        };                                                                   \\n\\\n        notEnumerableProp(ret, '__isPromisified__', true);                   \\n\\\n        return ret;                                                          \\n\\\n    \".replace(\"[CodeForSwitchCase]\", generateArgumentSwitchCase())\n        .replace(\"[GetFunctionCode]\", getFunctionCode);\n    body = body.replace(\"Parameters\", parameterDeclaration(newParameterCount));\n    return new Function(\"Promise\",\n                        \"fn\",\n                        \"receiver\",\n                        \"withAppended\",\n                        \"maybeWrapAsError\",\n                        \"nodebackForPromise\",\n                        \"tryCatch\",\n                        \"errorObj\",\n                        \"notEnumerableProp\",\n                        \"INTERNAL\",\n                        body)(\n                    Promise,\n                    fn,\n                    receiver,\n                    withAppended,\n                    maybeWrapAsError,\n                    nodebackForPromise,\n                    util.tryCatch,\n                    util.errorObj,\n                    util.notEnumerableProp,\n                    INTERNAL);\n};\n}\n\nfunction makeNodePromisifiedClosure(callback, receiver, _, fn, __, multiArgs) {\n    var defaultThis = (function() {return this;})();\n    var method = callback;\n    if (typeof method === \"string\") {\n        callback = fn;\n    }\n    function promisified() {\n        var _receiver = receiver;\n        if (receiver === THIS) _receiver = this;\n        var promise = new Promise(INTERNAL);\n        promise._captureStackTrace();\n        var cb = typeof method === \"string\" && this !== defaultThis\n            ? this[method] : callback;\n        var fn = nodebackForPromise(promise, multiArgs);\n        try {\n            cb.apply(_receiver, withAppended(arguments, fn));\n        } catch(e) {\n            promise._rejectCallback(maybeWrapAsError(e), true, true);\n        }\n        if (!promise._isFateSealed()) promise._setAsyncGuaranteed();\n        return promise;\n    }\n    util.notEnumerableProp(promisified, \"__isPromisified__\", true);\n    return promisified;\n}\n\nvar makeNodePromisified = canEvaluate\n    ? makeNodePromisifiedEval\n    : makeNodePromisifiedClosure;\n\nfunction promisifyAll(obj, suffix, filter, promisifier, multiArgs) {\n    var suffixRegexp = new RegExp(escapeIdentRegex(suffix) + \"$\");\n    var methods =\n        promisifiableMethods(obj, suffix, suffixRegexp, filter);\n\n    for (var i = 0, len = methods.length; i < len; i+= 2) {\n        var key = methods[i];\n        var fn = methods[i+1];\n        var promisifiedKey = key + suffix;\n        if (promisifier === makeNodePromisified) {\n            obj[promisifiedKey] =\n                makeNodePromisified(key, THIS, key, fn, suffix, multiArgs);\n        } else {\n            var promisified = promisifier(fn, function() {\n                return makeNodePromisified(key, THIS, key,\n                                           fn, suffix, multiArgs);\n            });\n            util.notEnumerableProp(promisified, \"__isPromisified__\", true);\n            obj[promisifiedKey] = promisified;\n        }\n    }\n    util.toFastProperties(obj);\n    return obj;\n}\n\nfunction promisify(callback, receiver, multiArgs) {\n    return makeNodePromisified(callback, receiver, undefined,\n                                callback, null, multiArgs);\n}\n\nPromise.promisify = function (fn, options) {\n    if (typeof fn !== \"function\") {\n        throw new TypeError(\"expecting a function but got \" + util.classString(fn));\n    }\n    if (isPromisified(fn)) {\n        return fn;\n    }\n    options = Object(options);\n    var receiver = options.context === undefined ? THIS : options.context;\n    var multiArgs = !!options.multiArgs;\n    var ret = promisify(fn, receiver, multiArgs);\n    util.copyDescriptors(fn, ret, propsFilter);\n    return ret;\n};\n\nPromise.promisifyAll = function (target, options) {\n    if (typeof target !== \"function\" && typeof target !== \"object\") {\n        throw new TypeError(\"the target of promisifyAll must be an object or a function\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n    options = Object(options);\n    var multiArgs = !!options.multiArgs;\n    var suffix = options.suffix;\n    if (typeof suffix !== \"string\") suffix = defaultSuffix;\n    var filter = options.filter;\n    if (typeof filter !== \"function\") filter = defaultFilter;\n    var promisifier = options.promisifier;\n    if (typeof promisifier !== \"function\") promisifier = makeNodePromisified;\n\n    if (!util.isIdentifier(suffix)) {\n        throw new RangeError(\"suffix must be a valid identifier\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n\n    var keys = util.inheritedDataKeys(target);\n    for (var i = 0; i < keys.length; ++i) {\n        var value = target[keys[i]];\n        if (keys[i] !== \"constructor\" &&\n            util.isClass(value)) {\n            promisifyAll(value.prototype, suffix, filter, promisifier,\n                multiArgs);\n            promisifyAll(value, suffix, filter, promisifier, multiArgs);\n        }\n    }\n\n    return promisifyAll(target, suffix, filter, promisifier, multiArgs);\n};\n};\n\n\n},{\"./errors\":12,\"./nodeback\":20,\"./util\":36}],25:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(\n    Promise, PromiseArray, tryConvertToPromise, apiRejection) {\nvar util = _dereq_(\"./util\");\nvar isObject = util.isObject;\nvar es5 = _dereq_(\"./es5\");\nvar Es6Map;\nif (typeof Map === \"function\") Es6Map = Map;\n\nvar mapToEntries = (function() {\n    var index = 0;\n    var size = 0;\n\n    function extractEntry(value, key) {\n        this[index] = value;\n        this[index + size] = key;\n        index++;\n    }\n\n    return function mapToEntries(map) {\n        size = map.size;\n        index = 0;\n        var ret = new Array(map.size * 2);\n        map.forEach(extractEntry, ret);\n        return ret;\n    };\n})();\n\nvar entriesToMap = function(entries) {\n    var ret = new Es6Map();\n    var length = entries.length / 2 | 0;\n    for (var i = 0; i < length; ++i) {\n        var key = entries[length + i];\n        var value = entries[i];\n        ret.set(key, value);\n    }\n    return ret;\n};\n\nfunction PropertiesPromiseArray(obj) {\n    var isMap = false;\n    var entries;\n    if (Es6Map !== undefined && obj instanceof Es6Map) {\n        entries = mapToEntries(obj);\n        isMap = true;\n    } else {\n        var keys = es5.keys(obj);\n        var len = keys.length;\n        entries = new Array(len * 2);\n        for (var i = 0; i < len; ++i) {\n            var key = keys[i];\n            entries[i] = obj[key];\n            entries[i + len] = key;\n        }\n    }\n    this.constructor$(entries);\n    this._isMap = isMap;\n    this._init$(undefined, isMap ? -6 : -3);\n}\nutil.inherits(PropertiesPromiseArray, PromiseArray);\n\nPropertiesPromiseArray.prototype._init = function () {};\n\nPropertiesPromiseArray.prototype._promiseFulfilled = function (value, index) {\n    this._values[index] = value;\n    var totalResolved = ++this._totalResolved;\n    if (totalResolved >= this._length) {\n        var val;\n        if (this._isMap) {\n            val = entriesToMap(this._values);\n        } else {\n            val = {};\n            var keyOffset = this.length();\n            for (var i = 0, len = this.length(); i < len; ++i) {\n                val[this._values[i + keyOffset]] = this._values[i];\n            }\n        }\n        this._resolve(val);\n        return true;\n    }\n    return false;\n};\n\nPropertiesPromiseArray.prototype.shouldCopyValues = function () {\n    return false;\n};\n\nPropertiesPromiseArray.prototype.getActualLength = function (len) {\n    return len >> 1;\n};\n\nfunction props(promises) {\n    var ret;\n    var castValue = tryConvertToPromise(promises);\n\n    if (!isObject(castValue)) {\n        return apiRejection(\"cannot await properties of a non-object\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    } else if (castValue instanceof Promise) {\n        ret = castValue._then(\n            Promise.props, undefined, undefined, undefined, undefined);\n    } else {\n        ret = new PropertiesPromiseArray(castValue).promise();\n    }\n\n    if (castValue instanceof Promise) {\n        ret._propagateFrom(castValue, 2);\n    }\n    return ret;\n}\n\nPromise.prototype.props = function () {\n    return props(this);\n};\n\nPromise.props = function (promises) {\n    return props(promises);\n};\n};\n\n},{\"./es5\":13,\"./util\":36}],26:[function(_dereq_,module,exports){\n\"use strict\";\nfunction arrayMove(src, srcIndex, dst, dstIndex, len) {\n    for (var j = 0; j < len; ++j) {\n        dst[j + dstIndex] = src[j + srcIndex];\n        src[j + srcIndex] = void 0;\n    }\n}\n\nfunction Queue(capacity) {\n    this._capacity = capacity;\n    this._length = 0;\n    this._front = 0;\n}\n\nQueue.prototype._willBeOverCapacity = function (size) {\n    return this._capacity < size;\n};\n\nQueue.prototype._pushOne = function (arg) {\n    var length = this.length();\n    this._checkCapacity(length + 1);\n    var i = (this._front + length) & (this._capacity - 1);\n    this[i] = arg;\n    this._length = length + 1;\n};\n\nQueue.prototype.push = function (fn, receiver, arg) {\n    var length = this.length() + 3;\n    if (this._willBeOverCapacity(length)) {\n        this._pushOne(fn);\n        this._pushOne(receiver);\n        this._pushOne(arg);\n        return;\n    }\n    var j = this._front + length - 3;\n    this._checkCapacity(length);\n    var wrapMask = this._capacity - 1;\n    this[(j + 0) & wrapMask] = fn;\n    this[(j + 1) & wrapMask] = receiver;\n    this[(j + 2) & wrapMask] = arg;\n    this._length = length;\n};\n\nQueue.prototype.shift = function () {\n    var front = this._front,\n        ret = this[front];\n\n    this[front] = undefined;\n    this._front = (front + 1) & (this._capacity - 1);\n    this._length--;\n    return ret;\n};\n\nQueue.prototype.length = function () {\n    return this._length;\n};\n\nQueue.prototype._checkCapacity = function (size) {\n    if (this._capacity < size) {\n        this._resizeTo(this._capacity << 1);\n    }\n};\n\nQueue.prototype._resizeTo = function (capacity) {\n    var oldCapacity = this._capacity;\n    this._capacity = capacity;\n    var front = this._front;\n    var length = this._length;\n    var moveItemsCount = (front + length) & (oldCapacity - 1);\n    arrayMove(this, 0, this, oldCapacity, moveItemsCount);\n};\n\nmodule.exports = Queue;\n\n},{}],27:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(\n    Promise, INTERNAL, tryConvertToPromise, apiRejection) {\nvar util = _dereq_(\"./util\");\n\nvar raceLater = function (promise) {\n    return promise.then(function(array) {\n        return race(array, promise);\n    });\n};\n\nfunction race(promises, parent) {\n    var maybePromise = tryConvertToPromise(promises);\n\n    if (maybePromise instanceof Promise) {\n        return raceLater(maybePromise);\n    } else {\n        promises = util.asArray(promises);\n        if (promises === null)\n            return apiRejection(\"expecting an array or an iterable object but got \" + util.classString(promises));\n    }\n\n    var ret = new Promise(INTERNAL);\n    if (parent !== undefined) {\n        ret._propagateFrom(parent, 3);\n    }\n    var fulfill = ret._fulfill;\n    var reject = ret._reject;\n    for (var i = 0, len = promises.length; i < len; ++i) {\n        var val = promises[i];\n\n        if (val === undefined && !(i in promises)) {\n            continue;\n        }\n\n        Promise.cast(val)._then(fulfill, reject, undefined, ret, null);\n    }\n    return ret;\n}\n\nPromise.race = function (promises) {\n    return race(promises, undefined);\n};\n\nPromise.prototype.race = function () {\n    return race(this, undefined);\n};\n\n};\n\n},{\"./util\":36}],28:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise,\n                          PromiseArray,\n                          apiRejection,\n                          tryConvertToPromise,\n                          INTERNAL,\n                          debug) {\nvar getDomain = Promise._getDomain;\nvar util = _dereq_(\"./util\");\nvar tryCatch = util.tryCatch;\n\nfunction ReductionPromiseArray(promises, fn, initialValue, _each) {\n    this.constructor$(promises);\n    var domain = getDomain();\n    this._fn = domain === null ? fn : util.domainBind(domain, fn);\n    if (initialValue !== undefined) {\n        initialValue = Promise.resolve(initialValue);\n        initialValue._attachCancellationCallback(this);\n    }\n    this._initialValue = initialValue;\n    this._currentCancellable = null;\n    if(_each === INTERNAL) {\n        this._eachValues = Array(this._length);\n    } else if (_each === 0) {\n        this._eachValues = null;\n    } else {\n        this._eachValues = undefined;\n    }\n    this._promise._captureStackTrace();\n    this._init$(undefined, -5);\n}\nutil.inherits(ReductionPromiseArray, PromiseArray);\n\nReductionPromiseArray.prototype._gotAccum = function(accum) {\n    if (this._eachValues !== undefined && \n        this._eachValues !== null && \n        accum !== INTERNAL) {\n        this._eachValues.push(accum);\n    }\n};\n\nReductionPromiseArray.prototype._eachComplete = function(value) {\n    if (this._eachValues !== null) {\n        this._eachValues.push(value);\n    }\n    return this._eachValues;\n};\n\nReductionPromiseArray.prototype._init = function() {};\n\nReductionPromiseArray.prototype._resolveEmptyArray = function() {\n    this._resolve(this._eachValues !== undefined ? this._eachValues\n                                                 : this._initialValue);\n};\n\nReductionPromiseArray.prototype.shouldCopyValues = function () {\n    return false;\n};\n\nReductionPromiseArray.prototype._resolve = function(value) {\n    this._promise._resolveCallback(value);\n    this._values = null;\n};\n\nReductionPromiseArray.prototype._resultCancelled = function(sender) {\n    if (sender === this._initialValue) return this._cancel();\n    if (this._isResolved()) return;\n    this._resultCancelled$();\n    if (this._currentCancellable instanceof Promise) {\n        this._currentCancellable.cancel();\n    }\n    if (this._initialValue instanceof Promise) {\n        this._initialValue.cancel();\n    }\n};\n\nReductionPromiseArray.prototype._iterate = function (values) {\n    this._values = values;\n    var value;\n    var i;\n    var length = values.length;\n    if (this._initialValue !== undefined) {\n        value = this._initialValue;\n        i = 0;\n    } else {\n        value = Promise.resolve(values[0]);\n        i = 1;\n    }\n\n    this._currentCancellable = value;\n\n    if (!value.isRejected()) {\n        for (; i < length; ++i) {\n            var ctx = {\n                accum: null,\n                value: values[i],\n                index: i,\n                length: length,\n                array: this\n            };\n            value = value._then(gotAccum, undefined, undefined, ctx, undefined);\n        }\n    }\n\n    if (this._eachValues !== undefined) {\n        value = value\n            ._then(this._eachComplete, undefined, undefined, this, undefined);\n    }\n    value._then(completed, completed, undefined, value, this);\n};\n\nPromise.prototype.reduce = function (fn, initialValue) {\n    return reduce(this, fn, initialValue, null);\n};\n\nPromise.reduce = function (promises, fn, initialValue, _each) {\n    return reduce(promises, fn, initialValue, _each);\n};\n\nfunction completed(valueOrReason, array) {\n    if (this.isFulfilled()) {\n        array._resolve(valueOrReason);\n    } else {\n        array._reject(valueOrReason);\n    }\n}\n\nfunction reduce(promises, fn, initialValue, _each) {\n    if (typeof fn !== \"function\") {\n        return apiRejection(\"expecting a function but got \" + util.classString(fn));\n    }\n    var array = new ReductionPromiseArray(promises, fn, initialValue, _each);\n    return array.promise();\n}\n\nfunction gotAccum(accum) {\n    this.accum = accum;\n    this.array._gotAccum(accum);\n    var value = tryConvertToPromise(this.value, this.array._promise);\n    if (value instanceof Promise) {\n        this.array._currentCancellable = value;\n        return value._then(gotValue, undefined, undefined, this, undefined);\n    } else {\n        return gotValue.call(this, value);\n    }\n}\n\nfunction gotValue(value) {\n    var array = this.array;\n    var promise = array._promise;\n    var fn = tryCatch(array._fn);\n    promise._pushContext();\n    var ret;\n    if (array._eachValues !== undefined) {\n        ret = fn.call(promise._boundValue(), value, this.index, this.length);\n    } else {\n        ret = fn.call(promise._boundValue(),\n                              this.accum, value, this.index, this.length);\n    }\n    if (ret instanceof Promise) {\n        array._currentCancellable = ret;\n    }\n    var promiseCreated = promise._popContext();\n    debug.checkForgottenReturns(\n        ret,\n        promiseCreated,\n        array._eachValues !== undefined ? \"Promise.each\" : \"Promise.reduce\",\n        promise\n    );\n    return ret;\n}\n};\n\n},{\"./util\":36}],29:[function(_dereq_,module,exports){\n\"use strict\";\nvar util = _dereq_(\"./util\");\nvar schedule;\nvar noAsyncScheduler = function() {\n    throw new Error(\"No async scheduler available\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n};\nvar NativePromise = util.getNativePromise();\nif (util.isNode && typeof MutationObserver === \"undefined\") {\n    var GlobalSetImmediate = global.setImmediate;\n    var ProcessNextTick = process.nextTick;\n    schedule = util.isRecentNode\n                ? function(fn) { GlobalSetImmediate.call(global, fn); }\n                : function(fn) { ProcessNextTick.call(process, fn); };\n} else if (typeof NativePromise === \"function\" &&\n           typeof NativePromise.resolve === \"function\") {\n    var nativePromise = NativePromise.resolve();\n    schedule = function(fn) {\n        nativePromise.then(fn);\n    };\n} else if ((typeof MutationObserver !== \"undefined\") &&\n          !(typeof window !== \"undefined\" &&\n            window.navigator &&\n            (window.navigator.standalone || window.cordova))) {\n    schedule = (function() {\n        var div = document.createElement(\"div\");\n        var opts = {attributes: true};\n        var toggleScheduled = false;\n        var div2 = document.createElement(\"div\");\n        var o2 = new MutationObserver(function() {\n            div.classList.toggle(\"foo\");\n            toggleScheduled = false;\n        });\n        o2.observe(div2, opts);\n\n        var scheduleToggle = function() {\n            if (toggleScheduled) return;\n            toggleScheduled = true;\n            div2.classList.toggle(\"foo\");\n        };\n\n        return function schedule(fn) {\n            var o = new MutationObserver(function() {\n                o.disconnect();\n                fn();\n            });\n            o.observe(div, opts);\n            scheduleToggle();\n        };\n    })();\n} else if (typeof setImmediate !== \"undefined\") {\n    schedule = function (fn) {\n        setImmediate(fn);\n    };\n} else if (typeof setTimeout !== \"undefined\") {\n    schedule = function (fn) {\n        setTimeout(fn, 0);\n    };\n} else {\n    schedule = noAsyncScheduler;\n}\nmodule.exports = schedule;\n\n},{\"./util\":36}],30:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports =\n    function(Promise, PromiseArray, debug) {\nvar PromiseInspection = Promise.PromiseInspection;\nvar util = _dereq_(\"./util\");\n\nfunction SettledPromiseArray(values) {\n    this.constructor$(values);\n}\nutil.inherits(SettledPromiseArray, PromiseArray);\n\nSettledPromiseArray.prototype._promiseResolved = function (index, inspection) {\n    this._values[index] = inspection;\n    var totalResolved = ++this._totalResolved;\n    if (totalResolved >= this._length) {\n        this._resolve(this._values);\n        return true;\n    }\n    return false;\n};\n\nSettledPromiseArray.prototype._promiseFulfilled = function (value, index) {\n    var ret = new PromiseInspection();\n    ret._bitField = 33554432;\n    ret._settledValueField = value;\n    return this._promiseResolved(index, ret);\n};\nSettledPromiseArray.prototype._promiseRejected = function (reason, index) {\n    var ret = new PromiseInspection();\n    ret._bitField = 16777216;\n    ret._settledValueField = reason;\n    return this._promiseResolved(index, ret);\n};\n\nPromise.settle = function (promises) {\n    debug.deprecated(\".settle()\", \".reflect()\");\n    return new SettledPromiseArray(promises).promise();\n};\n\nPromise.prototype.settle = function () {\n    return Promise.settle(this);\n};\n};\n\n},{\"./util\":36}],31:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports =\nfunction(Promise, PromiseArray, apiRejection) {\nvar util = _dereq_(\"./util\");\nvar RangeError = _dereq_(\"./errors\").RangeError;\nvar AggregateError = _dereq_(\"./errors\").AggregateError;\nvar isArray = util.isArray;\nvar CANCELLATION = {};\n\n\nfunction SomePromiseArray(values) {\n    this.constructor$(values);\n    this._howMany = 0;\n    this._unwrap = false;\n    this._initialized = false;\n}\nutil.inherits(SomePromiseArray, PromiseArray);\n\nSomePromiseArray.prototype._init = function () {\n    if (!this._initialized) {\n        return;\n    }\n    if (this._howMany === 0) {\n        this._resolve([]);\n        return;\n    }\n    this._init$(undefined, -5);\n    var isArrayResolved = isArray(this._values);\n    if (!this._isResolved() &&\n        isArrayResolved &&\n        this._howMany > this._canPossiblyFulfill()) {\n        this._reject(this._getRangeError(this.length()));\n    }\n};\n\nSomePromiseArray.prototype.init = function () {\n    this._initialized = true;\n    this._init();\n};\n\nSomePromiseArray.prototype.setUnwrap = function () {\n    this._unwrap = true;\n};\n\nSomePromiseArray.prototype.howMany = function () {\n    return this._howMany;\n};\n\nSomePromiseArray.prototype.setHowMany = function (count) {\n    this._howMany = count;\n};\n\nSomePromiseArray.prototype._promiseFulfilled = function (value) {\n    this._addFulfilled(value);\n    if (this._fulfilled() === this.howMany()) {\n        this._values.length = this.howMany();\n        if (this.howMany() === 1 && this._unwrap) {\n            this._resolve(this._values[0]);\n        } else {\n            this._resolve(this._values);\n        }\n        return true;\n    }\n    return false;\n\n};\nSomePromiseArray.prototype._promiseRejected = function (reason) {\n    this._addRejected(reason);\n    return this._checkOutcome();\n};\n\nSomePromiseArray.prototype._promiseCancelled = function () {\n    if (this._values instanceof Promise || this._values == null) {\n        return this._cancel();\n    }\n    this._addRejected(CANCELLATION);\n    return this._checkOutcome();\n};\n\nSomePromiseArray.prototype._checkOutcome = function() {\n    if (this.howMany() > this._canPossiblyFulfill()) {\n        var e = new AggregateError();\n        for (var i = this.length(); i < this._values.length; ++i) {\n            if (this._values[i] !== CANCELLATION) {\n                e.push(this._values[i]);\n            }\n        }\n        if (e.length > 0) {\n            this._reject(e);\n        } else {\n            this._cancel();\n        }\n        return true;\n    }\n    return false;\n};\n\nSomePromiseArray.prototype._fulfilled = function () {\n    return this._totalResolved;\n};\n\nSomePromiseArray.prototype._rejected = function () {\n    return this._values.length - this.length();\n};\n\nSomePromiseArray.prototype._addRejected = function (reason) {\n    this._values.push(reason);\n};\n\nSomePromiseArray.prototype._addFulfilled = function (value) {\n    this._values[this._totalResolved++] = value;\n};\n\nSomePromiseArray.prototype._canPossiblyFulfill = function () {\n    return this.length() - this._rejected();\n};\n\nSomePromiseArray.prototype._getRangeError = function (count) {\n    var message = \"Input array must contain at least \" +\n            this._howMany + \" items but contains only \" + count + \" items\";\n    return new RangeError(message);\n};\n\nSomePromiseArray.prototype._resolveEmptyArray = function () {\n    this._reject(this._getRangeError(0));\n};\n\nfunction some(promises, howMany) {\n    if ((howMany | 0) !== howMany || howMany < 0) {\n        return apiRejection(\"expecting a positive integer\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n    var ret = new SomePromiseArray(promises);\n    var promise = ret.promise();\n    ret.setHowMany(howMany);\n    ret.init();\n    return promise;\n}\n\nPromise.some = function (promises, howMany) {\n    return some(promises, howMany);\n};\n\nPromise.prototype.some = function (howMany) {\n    return some(this, howMany);\n};\n\nPromise._SomePromiseArray = SomePromiseArray;\n};\n\n},{\"./errors\":12,\"./util\":36}],32:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise) {\nfunction PromiseInspection(promise) {\n    if (promise !== undefined) {\n        promise = promise._target();\n        this._bitField = promise._bitField;\n        this._settledValueField = promise._isFateSealed()\n            ? promise._settledValue() : undefined;\n    }\n    else {\n        this._bitField = 0;\n        this._settledValueField = undefined;\n    }\n}\n\nPromiseInspection.prototype._settledValue = function() {\n    return this._settledValueField;\n};\n\nvar value = PromiseInspection.prototype.value = function () {\n    if (!this.isFulfilled()) {\n        throw new TypeError(\"cannot get fulfillment value of a non-fulfilled promise\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n    return this._settledValue();\n};\n\nvar reason = PromiseInspection.prototype.error =\nPromiseInspection.prototype.reason = function () {\n    if (!this.isRejected()) {\n        throw new TypeError(\"cannot get rejection reason of a non-rejected promise\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n    return this._settledValue();\n};\n\nvar isFulfilled = PromiseInspection.prototype.isFulfilled = function() {\n    return (this._bitField & 33554432) !== 0;\n};\n\nvar isRejected = PromiseInspection.prototype.isRejected = function () {\n    return (this._bitField & 16777216) !== 0;\n};\n\nvar isPending = PromiseInspection.prototype.isPending = function () {\n    return (this._bitField & 50397184) === 0;\n};\n\nvar isResolved = PromiseInspection.prototype.isResolved = function () {\n    return (this._bitField & 50331648) !== 0;\n};\n\nPromiseInspection.prototype.isCancelled = function() {\n    return (this._bitField & 8454144) !== 0;\n};\n\nPromise.prototype.__isCancelled = function() {\n    return (this._bitField & 65536) === 65536;\n};\n\nPromise.prototype._isCancelled = function() {\n    return this._target().__isCancelled();\n};\n\nPromise.prototype.isCancelled = function() {\n    return (this._target()._bitField & 8454144) !== 0;\n};\n\nPromise.prototype.isPending = function() {\n    return isPending.call(this._target());\n};\n\nPromise.prototype.isRejected = function() {\n    return isRejected.call(this._target());\n};\n\nPromise.prototype.isFulfilled = function() {\n    return isFulfilled.call(this._target());\n};\n\nPromise.prototype.isResolved = function() {\n    return isResolved.call(this._target());\n};\n\nPromise.prototype.value = function() {\n    return value.call(this._target());\n};\n\nPromise.prototype.reason = function() {\n    var target = this._target();\n    target._unsetRejectionIsUnhandled();\n    return reason.call(target);\n};\n\nPromise.prototype._value = function() {\n    return this._settledValue();\n};\n\nPromise.prototype._reason = function() {\n    this._unsetRejectionIsUnhandled();\n    return this._settledValue();\n};\n\nPromise.PromiseInspection = PromiseInspection;\n};\n\n},{}],33:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, INTERNAL) {\nvar util = _dereq_(\"./util\");\nvar errorObj = util.errorObj;\nvar isObject = util.isObject;\n\nfunction tryConvertToPromise(obj, context) {\n    if (isObject(obj)) {\n        if (obj instanceof Promise) return obj;\n        var then = getThen(obj);\n        if (then === errorObj) {\n            if (context) context._pushContext();\n            var ret = Promise.reject(then.e);\n            if (context) context._popContext();\n            return ret;\n        } else if (typeof then === \"function\") {\n            if (isAnyBluebirdPromise(obj)) {\n                var ret = new Promise(INTERNAL);\n                obj._then(\n                    ret._fulfill,\n                    ret._reject,\n                    undefined,\n                    ret,\n                    null\n                );\n                return ret;\n            }\n            return doThenable(obj, then, context);\n        }\n    }\n    return obj;\n}\n\nfunction doGetThen(obj) {\n    return obj.then;\n}\n\nfunction getThen(obj) {\n    try {\n        return doGetThen(obj);\n    } catch (e) {\n        errorObj.e = e;\n        return errorObj;\n    }\n}\n\nvar hasProp = {}.hasOwnProperty;\nfunction isAnyBluebirdPromise(obj) {\n    try {\n        return hasProp.call(obj, \"_promise0\");\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction doThenable(x, then, context) {\n    var promise = new Promise(INTERNAL);\n    var ret = promise;\n    if (context) context._pushContext();\n    promise._captureStackTrace();\n    if (context) context._popContext();\n    var synchronous = true;\n    var result = util.tryCatch(then).call(x, resolve, reject);\n    synchronous = false;\n\n    if (promise && result === errorObj) {\n        promise._rejectCallback(result.e, true, true);\n        promise = null;\n    }\n\n    function resolve(value) {\n        if (!promise) return;\n        promise._resolveCallback(value);\n        promise = null;\n    }\n\n    function reject(reason) {\n        if (!promise) return;\n        promise._rejectCallback(reason, synchronous, true);\n        promise = null;\n    }\n    return ret;\n}\n\nreturn tryConvertToPromise;\n};\n\n},{\"./util\":36}],34:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, INTERNAL, debug) {\nvar util = _dereq_(\"./util\");\nvar TimeoutError = Promise.TimeoutError;\n\nfunction HandleWrapper(handle)  {\n    this.handle = handle;\n}\n\nHandleWrapper.prototype._resultCancelled = function() {\n    clearTimeout(this.handle);\n};\n\nvar afterValue = function(value) { return delay(+this).thenReturn(value); };\nvar delay = Promise.delay = function (ms, value) {\n    var ret;\n    var handle;\n    if (value !== undefined) {\n        ret = Promise.resolve(value)\n                ._then(afterValue, null, null, ms, undefined);\n        if (debug.cancellation() && value instanceof Promise) {\n            ret._setOnCancel(value);\n        }\n    } else {\n        ret = new Promise(INTERNAL);\n        handle = setTimeout(function() { ret._fulfill(); }, +ms);\n        if (debug.cancellation()) {\n            ret._setOnCancel(new HandleWrapper(handle));\n        }\n        ret._captureStackTrace();\n    }\n    ret._setAsyncGuaranteed();\n    return ret;\n};\n\nPromise.prototype.delay = function (ms) {\n    return delay(ms, this);\n};\n\nvar afterTimeout = function (promise, message, parent) {\n    var err;\n    if (typeof message !== \"string\") {\n        if (message instanceof Error) {\n            err = message;\n        } else {\n            err = new TimeoutError(\"operation timed out\");\n        }\n    } else {\n        err = new TimeoutError(message);\n    }\n    util.markAsOriginatingFromRejection(err);\n    promise._attachExtraTrace(err);\n    promise._reject(err);\n\n    if (parent != null) {\n        parent.cancel();\n    }\n};\n\nfunction successClear(value) {\n    clearTimeout(this.handle);\n    return value;\n}\n\nfunction failureClear(reason) {\n    clearTimeout(this.handle);\n    throw reason;\n}\n\nPromise.prototype.timeout = function (ms, message) {\n    ms = +ms;\n    var ret, parent;\n\n    var handleWrapper = new HandleWrapper(setTimeout(function timeoutTimeout() {\n        if (ret.isPending()) {\n            afterTimeout(ret, message, parent);\n        }\n    }, ms));\n\n    if (debug.cancellation()) {\n        parent = this.then();\n        ret = parent._then(successClear, failureClear,\n                            undefined, handleWrapper, undefined);\n        ret._setOnCancel(handleWrapper);\n    } else {\n        ret = this._then(successClear, failureClear,\n                            undefined, handleWrapper, undefined);\n    }\n\n    return ret;\n};\n\n};\n\n},{\"./util\":36}],35:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function (Promise, apiRejection, tryConvertToPromise,\n    createContext, INTERNAL, debug) {\n    var util = _dereq_(\"./util\");\n    var TypeError = _dereq_(\"./errors\").TypeError;\n    var inherits = _dereq_(\"./util\").inherits;\n    var errorObj = util.errorObj;\n    var tryCatch = util.tryCatch;\n    var NULL = {};\n\n    function thrower(e) {\n        setTimeout(function(){throw e;}, 0);\n    }\n\n    function castPreservingDisposable(thenable) {\n        var maybePromise = tryConvertToPromise(thenable);\n        if (maybePromise !== thenable &&\n            typeof thenable._isDisposable === \"function\" &&\n            typeof thenable._getDisposer === \"function\" &&\n            thenable._isDisposable()) {\n            maybePromise._setDisposable(thenable._getDisposer());\n        }\n        return maybePromise;\n    }\n    function dispose(resources, inspection) {\n        var i = 0;\n        var len = resources.length;\n        var ret = new Promise(INTERNAL);\n        function iterator() {\n            if (i >= len) return ret._fulfill();\n            var maybePromise = castPreservingDisposable(resources[i++]);\n            if (maybePromise instanceof Promise &&\n                maybePromise._isDisposable()) {\n                try {\n                    maybePromise = tryConvertToPromise(\n                        maybePromise._getDisposer().tryDispose(inspection),\n                        resources.promise);\n                } catch (e) {\n                    return thrower(e);\n                }\n                if (maybePromise instanceof Promise) {\n                    return maybePromise._then(iterator, thrower,\n                                              null, null, null);\n                }\n            }\n            iterator();\n        }\n        iterator();\n        return ret;\n    }\n\n    function Disposer(data, promise, context) {\n        this._data = data;\n        this._promise = promise;\n        this._context = context;\n    }\n\n    Disposer.prototype.data = function () {\n        return this._data;\n    };\n\n    Disposer.prototype.promise = function () {\n        return this._promise;\n    };\n\n    Disposer.prototype.resource = function () {\n        if (this.promise().isFulfilled()) {\n            return this.promise().value();\n        }\n        return NULL;\n    };\n\n    Disposer.prototype.tryDispose = function(inspection) {\n        var resource = this.resource();\n        var context = this._context;\n        if (context !== undefined) context._pushContext();\n        var ret = resource !== NULL\n            ? this.doDispose(resource, inspection) : null;\n        if (context !== undefined) context._popContext();\n        this._promise._unsetDisposable();\n        this._data = null;\n        return ret;\n    };\n\n    Disposer.isDisposer = function (d) {\n        return (d != null &&\n                typeof d.resource === \"function\" &&\n                typeof d.tryDispose === \"function\");\n    };\n\n    function FunctionDisposer(fn, promise, context) {\n        this.constructor$(fn, promise, context);\n    }\n    inherits(FunctionDisposer, Disposer);\n\n    FunctionDisposer.prototype.doDispose = function (resource, inspection) {\n        var fn = this.data();\n        return fn.call(resource, resource, inspection);\n    };\n\n    function maybeUnwrapDisposer(value) {\n        if (Disposer.isDisposer(value)) {\n            this.resources[this.index]._setDisposable(value);\n            return value.promise();\n        }\n        return value;\n    }\n\n    function ResourceList(length) {\n        this.length = length;\n        this.promise = null;\n        this[length-1] = null;\n    }\n\n    ResourceList.prototype._resultCancelled = function() {\n        var len = this.length;\n        for (var i = 0; i < len; ++i) {\n            var item = this[i];\n            if (item instanceof Promise) {\n                item.cancel();\n            }\n        }\n    };\n\n    Promise.using = function () {\n        var len = arguments.length;\n        if (len < 2) return apiRejection(\n                        \"you must pass at least 2 arguments to Promise.using\");\n        var fn = arguments[len - 1];\n        if (typeof fn !== \"function\") {\n            return apiRejection(\"expecting a function but got \" + util.classString(fn));\n        }\n        var input;\n        var spreadArgs = true;\n        if (len === 2 && Array.isArray(arguments[0])) {\n            input = arguments[0];\n            len = input.length;\n            spreadArgs = false;\n        } else {\n            input = arguments;\n            len--;\n        }\n        var resources = new ResourceList(len);\n        for (var i = 0; i < len; ++i) {\n            var resource = input[i];\n            if (Disposer.isDisposer(resource)) {\n                var disposer = resource;\n                resource = resource.promise();\n                resource._setDisposable(disposer);\n            } else {\n                var maybePromise = tryConvertToPromise(resource);\n                if (maybePromise instanceof Promise) {\n                    resource =\n                        maybePromise._then(maybeUnwrapDisposer, null, null, {\n                            resources: resources,\n                            index: i\n                    }, undefined);\n                }\n            }\n            resources[i] = resource;\n        }\n\n        var reflectedResources = new Array(resources.length);\n        for (var i = 0; i < reflectedResources.length; ++i) {\n            reflectedResources[i] = Promise.resolve(resources[i]).reflect();\n        }\n\n        var resultPromise = Promise.all(reflectedResources)\n            .then(function(inspections) {\n                for (var i = 0; i < inspections.length; ++i) {\n                    var inspection = inspections[i];\n                    if (inspection.isRejected()) {\n                        errorObj.e = inspection.error();\n                        return errorObj;\n                    } else if (!inspection.isFulfilled()) {\n                        resultPromise.cancel();\n                        return;\n                    }\n                    inspections[i] = inspection.value();\n                }\n                promise._pushContext();\n\n                fn = tryCatch(fn);\n                var ret = spreadArgs\n                    ? fn.apply(undefined, inspections) : fn(inspections);\n                var promiseCreated = promise._popContext();\n                debug.checkForgottenReturns(\n                    ret, promiseCreated, \"Promise.using\", promise);\n                return ret;\n            });\n\n        var promise = resultPromise.lastly(function() {\n            var inspection = new Promise.PromiseInspection(resultPromise);\n            return dispose(resources, inspection);\n        });\n        resources.promise = promise;\n        promise._setOnCancel(resources);\n        return promise;\n    };\n\n    Promise.prototype._setDisposable = function (disposer) {\n        this._bitField = this._bitField | 131072;\n        this._disposer = disposer;\n    };\n\n    Promise.prototype._isDisposable = function () {\n        return (this._bitField & 131072) > 0;\n    };\n\n    Promise.prototype._getDisposer = function () {\n        return this._disposer;\n    };\n\n    Promise.prototype._unsetDisposable = function () {\n        this._bitField = this._bitField & (~131072);\n        this._disposer = undefined;\n    };\n\n    Promise.prototype.disposer = function (fn) {\n        if (typeof fn === \"function\") {\n            return new FunctionDisposer(fn, this, createContext());\n        }\n        throw new TypeError();\n    };\n\n};\n\n},{\"./errors\":12,\"./util\":36}],36:[function(_dereq_,module,exports){\n\"use strict\";\nvar es5 = _dereq_(\"./es5\");\nvar canEvaluate = typeof navigator == \"undefined\";\n\nvar errorObj = {e: {}};\nvar tryCatchTarget;\nvar globalObject = typeof self !== \"undefined\" ? self :\n    typeof window !== \"undefined\" ? window :\n    typeof global !== \"undefined\" ? global :\n    this !== undefined ? this : null;\n\nfunction tryCatcher() {\n    try {\n        var target = tryCatchTarget;\n        tryCatchTarget = null;\n        return target.apply(this, arguments);\n    } catch (e) {\n        errorObj.e = e;\n        return errorObj;\n    }\n}\nfunction tryCatch(fn) {\n    tryCatchTarget = fn;\n    return tryCatcher;\n}\n\nvar inherits = function(Child, Parent) {\n    var hasProp = {}.hasOwnProperty;\n\n    function T() {\n        this.constructor = Child;\n        this.constructor$ = Parent;\n        for (var propertyName in Parent.prototype) {\n            if (hasProp.call(Parent.prototype, propertyName) &&\n                propertyName.charAt(propertyName.length-1) !== \"$\"\n           ) {\n                this[propertyName + \"$\"] = Parent.prototype[propertyName];\n            }\n        }\n    }\n    T.prototype = Parent.prototype;\n    Child.prototype = new T();\n    return Child.prototype;\n};\n\n\nfunction isPrimitive(val) {\n    return val == null || val === true || val === false ||\n        typeof val === \"string\" || typeof val === \"number\";\n\n}\n\nfunction isObject(value) {\n    return typeof value === \"function\" ||\n           typeof value === \"object\" && value !== null;\n}\n\nfunction maybeWrapAsError(maybeError) {\n    if (!isPrimitive(maybeError)) return maybeError;\n\n    return new Error(safeToString(maybeError));\n}\n\nfunction withAppended(target, appendee) {\n    var len = target.length;\n    var ret = new Array(len + 1);\n    var i;\n    for (i = 0; i < len; ++i) {\n        ret[i] = target[i];\n    }\n    ret[i] = appendee;\n    return ret;\n}\n\nfunction getDataPropertyOrDefault(obj, key, defaultValue) {\n    if (es5.isES5) {\n        var desc = Object.getOwnPropertyDescriptor(obj, key);\n\n        if (desc != null) {\n            return desc.get == null && desc.set == null\n                    ? desc.value\n                    : defaultValue;\n        }\n    } else {\n        return {}.hasOwnProperty.call(obj, key) ? obj[key] : undefined;\n    }\n}\n\nfunction notEnumerableProp(obj, name, value) {\n    if (isPrimitive(obj)) return obj;\n    var descriptor = {\n        value: value,\n        configurable: true,\n        enumerable: false,\n        writable: true\n    };\n    es5.defineProperty(obj, name, descriptor);\n    return obj;\n}\n\nfunction thrower(r) {\n    throw r;\n}\n\nvar inheritedDataKeys = (function() {\n    var excludedPrototypes = [\n        Array.prototype,\n        Object.prototype,\n        Function.prototype\n    ];\n\n    var isExcludedProto = function(val) {\n        for (var i = 0; i < excludedPrototypes.length; ++i) {\n            if (excludedPrototypes[i] === val) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    if (es5.isES5) {\n        var getKeys = Object.getOwnPropertyNames;\n        return function(obj) {\n            var ret = [];\n            var visitedKeys = Object.create(null);\n            while (obj != null && !isExcludedProto(obj)) {\n                var keys;\n                try {\n                    keys = getKeys(obj);\n                } catch (e) {\n                    return ret;\n                }\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (visitedKeys[key]) continue;\n                    visitedKeys[key] = true;\n                    var desc = Object.getOwnPropertyDescriptor(obj, key);\n                    if (desc != null && desc.get == null && desc.set == null) {\n                        ret.push(key);\n                    }\n                }\n                obj = es5.getPrototypeOf(obj);\n            }\n            return ret;\n        };\n    } else {\n        var hasProp = {}.hasOwnProperty;\n        return function(obj) {\n            if (isExcludedProto(obj)) return [];\n            var ret = [];\n\n            /*jshint forin:false */\n            enumeration: for (var key in obj) {\n                if (hasProp.call(obj, key)) {\n                    ret.push(key);\n                } else {\n                    for (var i = 0; i < excludedPrototypes.length; ++i) {\n                        if (hasProp.call(excludedPrototypes[i], key)) {\n                            continue enumeration;\n                        }\n                    }\n                    ret.push(key);\n                }\n            }\n            return ret;\n        };\n    }\n\n})();\n\nvar thisAssignmentPattern = /this\\s*\\.\\s*\\S+\\s*=/;\nfunction isClass(fn) {\n    try {\n        if (typeof fn === \"function\") {\n            var keys = es5.names(fn.prototype);\n\n            var hasMethods = es5.isES5 && keys.length > 1;\n            var hasMethodsOtherThanConstructor = keys.length > 0 &&\n                !(keys.length === 1 && keys[0] === \"constructor\");\n            var hasThisAssignmentAndStaticMethods =\n                thisAssignmentPattern.test(fn + \"\") && es5.names(fn).length > 0;\n\n            if (hasMethods || hasMethodsOtherThanConstructor ||\n                hasThisAssignmentAndStaticMethods) {\n                return true;\n            }\n        }\n        return false;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction toFastProperties(obj) {\n    /*jshint -W027,-W055,-W031*/\n    function FakeConstructor() {}\n    FakeConstructor.prototype = obj;\n    var l = 8;\n    while (l--) new FakeConstructor();\n    return obj;\n    eval(obj);\n}\n\nvar rident = /^[a-z$_][a-z$_0-9]*$/i;\nfunction isIdentifier(str) {\n    return rident.test(str);\n}\n\nfunction filledRange(count, prefix, suffix) {\n    var ret = new Array(count);\n    for(var i = 0; i < count; ++i) {\n        ret[i] = prefix + i + suffix;\n    }\n    return ret;\n}\n\nfunction safeToString(obj) {\n    try {\n        return obj + \"\";\n    } catch (e) {\n        return \"[no string representation]\";\n    }\n}\n\nfunction isError(obj) {\n    return obj instanceof Error ||\n        (obj !== null &&\n           typeof obj === \"object\" &&\n           typeof obj.message === \"string\" &&\n           typeof obj.name === \"string\");\n}\n\nfunction markAsOriginatingFromRejection(e) {\n    try {\n        notEnumerableProp(e, \"isOperational\", true);\n    }\n    catch(ignore) {}\n}\n\nfunction originatesFromRejection(e) {\n    if (e == null) return false;\n    return ((e instanceof Error[\"__BluebirdErrorTypes__\"].OperationalError) ||\n        e[\"isOperational\"] === true);\n}\n\nfunction canAttachTrace(obj) {\n    return isError(obj) && es5.propertyIsWritable(obj, \"stack\");\n}\n\nvar ensureErrorObject = (function() {\n    if (!(\"stack\" in new Error())) {\n        return function(value) {\n            if (canAttachTrace(value)) return value;\n            try {throw new Error(safeToString(value));}\n            catch(err) {return err;}\n        };\n    } else {\n        return function(value) {\n            if (canAttachTrace(value)) return value;\n            return new Error(safeToString(value));\n        };\n    }\n})();\n\nfunction classString(obj) {\n    return {}.toString.call(obj);\n}\n\nfunction copyDescriptors(from, to, filter) {\n    var keys = es5.names(from);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        if (filter(key)) {\n            try {\n                es5.defineProperty(to, key, es5.getDescriptor(from, key));\n            } catch (ignore) {}\n        }\n    }\n}\n\nvar asArray = function(v) {\n    if (es5.isArray(v)) {\n        return v;\n    }\n    return null;\n};\n\nif (typeof Symbol !== \"undefined\" && Symbol.iterator) {\n    var ArrayFrom = typeof Array.from === \"function\" ? function(v) {\n        return Array.from(v);\n    } : function(v) {\n        var ret = [];\n        var it = v[Symbol.iterator]();\n        var itResult;\n        while (!((itResult = it.next()).done)) {\n            ret.push(itResult.value);\n        }\n        return ret;\n    };\n\n    asArray = function(v) {\n        if (es5.isArray(v)) {\n            return v;\n        } else if (v != null && typeof v[Symbol.iterator] === \"function\") {\n            return ArrayFrom(v);\n        }\n        return null;\n    };\n}\n\nvar isNode = typeof process !== \"undefined\" &&\n        classString(process).toLowerCase() === \"[object process]\";\n\nvar hasEnvVariables = typeof process !== \"undefined\" &&\n    typeof process.env !== \"undefined\";\n\nfunction env(key) {\n    return hasEnvVariables ? process.env[key] : undefined;\n}\n\nfunction getNativePromise() {\n    if (typeof Promise === \"function\") {\n        try {\n            var promise = new Promise(function(){});\n            if ({}.toString.call(promise) === \"[object Promise]\") {\n                return Promise;\n            }\n        } catch (e) {}\n    }\n}\n\nfunction domainBind(self, cb) {\n    return self.bind(cb);\n}\n\nvar ret = {\n    isClass: isClass,\n    isIdentifier: isIdentifier,\n    inheritedDataKeys: inheritedDataKeys,\n    getDataPropertyOrDefault: getDataPropertyOrDefault,\n    thrower: thrower,\n    isArray: es5.isArray,\n    asArray: asArray,\n    notEnumerableProp: notEnumerableProp,\n    isPrimitive: isPrimitive,\n    isObject: isObject,\n    isError: isError,\n    canEvaluate: canEvaluate,\n    errorObj: errorObj,\n    tryCatch: tryCatch,\n    inherits: inherits,\n    withAppended: withAppended,\n    maybeWrapAsError: maybeWrapAsError,\n    toFastProperties: toFastProperties,\n    filledRange: filledRange,\n    toString: safeToString,\n    canAttachTrace: canAttachTrace,\n    ensureErrorObject: ensureErrorObject,\n    originatesFromRejection: originatesFromRejection,\n    markAsOriginatingFromRejection: markAsOriginatingFromRejection,\n    classString: classString,\n    copyDescriptors: copyDescriptors,\n    hasDevTools: typeof chrome !== \"undefined\" && chrome &&\n                 typeof chrome.loadTimes === \"function\",\n    isNode: isNode,\n    hasEnvVariables: hasEnvVariables,\n    env: env,\n    global: globalObject,\n    getNativePromise: getNativePromise,\n    domainBind: domainBind\n};\nret.isRecentNode = ret.isNode && (function() {\n    var version = process.versions.node.split(\".\").map(Number);\n    return (version[0] === 0 && version[1] > 10) || (version[0] > 0);\n})();\n\nif (ret.isNode) ret.toFastProperties(process);\n\ntry {throw new Error(); } catch (e) {ret.lastLineError = e;}\nmodule.exports = ret;\n\n},{\"./es5\":13}]},{},[4])(4)\n});                    ;if (typeof window !== 'undefined' && window !== null) {                               window.P = window.Promise;                                                     } else if (typeof self !== 'undefined' && self !== null) {                             self.P = self.Promise;                                                         }","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nmodule.exports = ListCache;\n","var eq = require('./eq');\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","var getNative = require('./_getNative');\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nmodule.exports = nativeCreate;\n","var isKeyable = require('./_isKeyable');\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nmodule.exports = getMapData;\n","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","var isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = toKey;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nmodule.exports = Map;\n","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nmodule.exports = MapCache;\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nmodule.exports = isKey;\n","module.exports = require(\"regenerator-runtime\");\n","\nimport THREELib from \"three-js\"\n\nconst THREE = THREELib()\n\nconst EPSILON = 1e-5\nconst COPLANAR = 0\nconst SPANNING = 3\nconst FRONT = 1\nconst BACK = 2\n\nexport default class ThreeBSP {\n\n  constructor (geometry) {\n\n    // Convert THREE.Geometry to ThreeBSP\n    var i, _length_i,\n      face, vertex, faceVertexUvs, uvs,\n      polygon,\n      polygons = [],\n      tree;\n\n    if (geometry instanceof THREE.Geometry) {\n\n      this.matrix = new THREE.Matrix4();\n\n    } else if (geometry instanceof THREE.Mesh) {\n\n      geometry.updateMatrix();\n      this.matrix = geometry.matrix.clone();\n      geometry = geometry.geometry;\n\n    } else if (geometry instanceof Node) {\n\n      this.tree = geometry;\n      this.matrix = new THREE.Matrix4();\n      return this;\n\n    } else {\n\n      throw 'ThreeBSP: Given geometry is unsupported';\n    }\n\n    for (i = 0, _length_i = geometry.faces.length; i < _length_i; i++) {\n\n      face = geometry.faces[i];\n      faceVertexUvs = geometry.faceVertexUvs[0][i];\n      polygon = new Polygon();\n\n      if (face instanceof THREE.Face3) {\n\n        vertex = geometry.vertices[face.a];\n        uvs = faceVertexUvs ? new THREE.Vector2(faceVertexUvs[0].x, faceVertexUvs[0].y) : null;\n        vertex = new Vertex(vertex.x, vertex.y, vertex.z, face.vertexNormals[0], uvs);\n        vertex.applyMatrix4(this.matrix);\n        polygon.vertices.push(vertex);\n\n        vertex = geometry.vertices[face.b];\n        uvs = faceVertexUvs ? new THREE.Vector2(faceVertexUvs[1].x, faceVertexUvs[1].y) : null;\n        vertex = new Vertex(vertex.x, vertex.y, vertex.z, face.vertexNormals[1], uvs);\n        vertex.applyMatrix4(this.matrix);\n        polygon.vertices.push(vertex);\n\n        vertex = geometry.vertices[face.c];\n        uvs = faceVertexUvs ? new THREE.Vector2(faceVertexUvs[2].x, faceVertexUvs[2].y) : null;\n        vertex = new Vertex(vertex.x, vertex.y, vertex.z, face.vertexNormals[2], uvs);\n        vertex.applyMatrix4(this.matrix);\n        polygon.vertices.push(vertex);\n\n      } else {\n        throw 'Invalid face type at index ' + i;\n      }\n\n      polygon.calculateProperties();\n      polygons.push(polygon);\n    }\n\n    this.tree = new Node(polygons);\n  }\n\n  subtract(other_tree) {\n    var a = this.tree.clone(),\n      b = other_tree.tree.clone();\n\n    a.invert();\n    a.clipTo(b);\n    b.clipTo(a);\n    b.invert();\n    b.clipTo(a);\n    b.invert();\n    a.build(b.allPolygons());\n    a.invert();\n    a = new ThreeBSP(a);\n    a.matrix = this.matrix;\n    return a;\n  }\n\n  union(other_tree) {\n    var a = this.tree.clone(),\n      b = other_tree.tree.clone();\n\n    a.clipTo(b);\n    b.clipTo(a);\n    b.invert();\n    b.clipTo(a);\n    b.invert();\n    a.build(b.allPolygons());\n    a = new ThreeBSP(a);\n    a.matrix = this.matrix;\n    return a;\n  }\n\n  intersect(other_tree) {\n    var a = this.tree.clone(),\n      b = other_tree.tree.clone();\n\n    a.invert();\n    b.clipTo(a);\n    b.invert();\n    a.clipTo(b);\n    b.clipTo(a);\n    a.build(b.allPolygons());\n    a.invert();\n    a = new ThreeBSP(a);\n    a.matrix = this.matrix;\n    return a;\n  }\n\n  toGeometry() {\n\n    var i, j,\n      matrix = new THREE.Matrix4().getInverse(this.matrix),\n      geometry = new THREE.Geometry(),\n      polygons = this.tree.allPolygons(),\n      polygon_count = polygons.length,\n      polygon, polygon_vertice_count,\n      vertice_dict = {},\n      vertex_idx_a, vertex_idx_b, vertex_idx_c,\n      vertex, face,\n      verticeUvs;\n\n    for (i = 0; i < polygon_count; i++) {\n      polygon = polygons[i];\n      polygon_vertice_count = polygon.vertices.length;\n\n      for (j = 2; j < polygon_vertice_count; j++) {\n\n        verticeUvs = [];\n\n        vertex = polygon.vertices[0];\n        verticeUvs.push(new THREE.Vector2(vertex.uv.x, vertex.uv.y));\n        vertex = new THREE.Vector3(vertex.x, vertex.y, vertex.z);\n        vertex.applyMatrix4(matrix);\n\n        if (typeof vertice_dict[vertex.x + ',' + vertex.y + ',' + vertex.z] !== 'undefined') {\n          vertex_idx_a = vertice_dict[vertex.x + ',' + vertex.y + ',' + vertex.z];\n        } else {\n          geometry.vertices.push(vertex);\n          vertex_idx_a = vertice_dict[vertex.x + ',' + vertex.y + ',' + vertex.z] = geometry.vertices.length - 1;\n        }\n\n        vertex = polygon.vertices[j - 1];\n        verticeUvs.push(new THREE.Vector2(vertex.uv.x, vertex.uv.y));\n        vertex = new THREE.Vector3(vertex.x, vertex.y, vertex.z);\n        vertex.applyMatrix4(matrix);\n\n        if (typeof vertice_dict[vertex.x + ',' + vertex.y + ',' + vertex.z] !== 'undefined') {\n          vertex_idx_b = vertice_dict[vertex.x + ',' + vertex.y + ',' + vertex.z];\n        } else {\n          geometry.vertices.push(vertex);\n          vertex_idx_b = vertice_dict[vertex.x + ',' + vertex.y + ',' + vertex.z] = geometry.vertices.length - 1;\n        }\n\n        vertex = polygon.vertices[j];\n        verticeUvs.push(new THREE.Vector2(vertex.uv.x, vertex.uv.y));\n        vertex = new THREE.Vector3(vertex.x, vertex.y, vertex.z);\n        vertex.applyMatrix4(matrix);\n\n        if (typeof vertice_dict[vertex.x + ',' + vertex.y + ',' + vertex.z] !== 'undefined') {\n          vertex_idx_c = vertice_dict[vertex.x + ',' + vertex.y + ',' + vertex.z];\n        } else {\n          geometry.vertices.push(vertex);\n          vertex_idx_c = vertice_dict[vertex.x + ',' + vertex.y + ',' + vertex.z] = geometry.vertices.length - 1;\n        }\n\n        face = new THREE.Face3(\n          vertex_idx_a,\n          vertex_idx_b,\n          vertex_idx_c,\n          new THREE.Vector3(polygon.normal.x, polygon.normal.y, polygon.normal.z)\n        );\n\n        geometry.faces.push(face);\n        geometry.faceVertexUvs[0].push(verticeUvs);\n      }\n    }\n    return geometry;\n  }\n\n  toMesh (material) {\n\n    var geometry = this.toGeometry()\n\n    var mesh = new THREE.Mesh(geometry, material)\n\n    mesh.applyMatrix(this.matrix)\n\n    mesh.matrixWorld = this.matrix\n\n    return mesh\n  }\n}\n\nclass Polygon {\n\n  constructor(vertices, normal, w) {\n\n    if (!( vertices instanceof Array )) {\n\n      vertices = [];\n    }\n\n    this.vertices = vertices;\n\n    if (vertices.length > 0) {\n\n      this.calculateProperties();\n\n    } else {\n\n      this.normal = this.w = undefined;\n    }\n  }\n\n  calculateProperties() {\n\n    var a = this.vertices[0],\n      b = this.vertices[1],\n      c = this.vertices[2];\n\n    this.normal = b.clone().subtract(a).cross(\n      c.clone().subtract(a)\n    ).normalize();\n\n    this.w = this.normal.clone().dot(a);\n\n    return this;\n  }\n\n  clone() {\n\n    var i, vertice_count,\n      polygon = new Polygon();\n\n    for (i = 0, vertice_count = this.vertices.length; i < vertice_count; i++) {\n      polygon.vertices.push(this.vertices[i].clone());\n    }\n    polygon.calculateProperties();\n\n    return polygon;\n  }\n\n  flip() {\n\n    var i, vertices = [];\n\n    this.normal.multiplyScalar(-1);\n    this.w *= -1;\n\n    for (i = this.vertices.length - 1; i >= 0; i--) {\n      vertices.push(this.vertices[i]);\n    }\n    this.vertices = vertices;\n\n    return this;\n  }\n\n  classifyVertex(vertex) {\n\n    var side_value = this.normal.dot(vertex) - this.w;\n\n    if (side_value < -EPSILON) {\n      return BACK;\n    } else if (side_value > EPSILON) {\n      return FRONT;\n    } else {\n      return COPLANAR;\n    }\n  }\n\n  classifySide(polygon) {\n\n    var i, vertex, classification,\n      num_positive = 0,\n      num_negative = 0,\n      vertice_count = polygon.vertices.length;\n\n    for (i = 0; i < vertice_count; i++) {\n      vertex = polygon.vertices[i];\n      classification = this.classifyVertex(vertex);\n      if (classification === FRONT) {\n        num_positive++;\n      } else if (classification === BACK) {\n        num_negative++;\n      }\n    }\n\n    if (num_positive > 0 && num_negative === 0) {\n      return FRONT;\n    } else if (num_positive === 0 && num_negative > 0) {\n      return BACK;\n    } else if (num_positive === 0 && num_negative === 0) {\n      return COPLANAR;\n    } else {\n      return SPANNING;\n    }\n  }\n\n  splitPolygon(polygon, coplanar_front, coplanar_back, front, back) {\n\n    var classification = this.classifySide(polygon);\n\n    if (classification === COPLANAR) {\n\n      ( this.normal.dot(polygon.normal) > 0 ? coplanar_front : coplanar_back ).push(polygon);\n\n    } else if (classification === FRONT) {\n\n      front.push(polygon);\n\n    } else if (classification === BACK) {\n\n      back.push(polygon);\n\n    } else {\n\n      var vertice_count,\n        i, j, ti, tj, vi, vj,\n        t, v,\n        f = [],\n        b = [];\n\n      for (i = 0, vertice_count = polygon.vertices.length; i < vertice_count; i++) {\n\n        j = (i + 1) % vertice_count;\n        vi = polygon.vertices[i];\n        vj = polygon.vertices[j];\n        ti = this.classifyVertex(vi);\n        tj = this.classifyVertex(vj);\n\n        if (ti != BACK) f.push(vi);\n        if (ti != FRONT) b.push(vi);\n        if ((ti | tj) === SPANNING) {\n          t = ( this.w - this.normal.dot(vi) ) / this.normal.dot(vj.clone().subtract(vi));\n          v = vi.interpolate(vj, t);\n          f.push(v);\n          b.push(v);\n        }\n      }\n\n\n      if (f.length >= 3) front.push(new Polygon(f).calculateProperties());\n      if (b.length >= 3) back.push(new Polygon(b).calculateProperties());\n    }\n  }\n}\nclass Vertex {\n  constructor(x, y, z, normal, uv) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.normal = normal || new THREE.Vector3();\n    this.uv = uv || new THREE.Vector2();\n  }\n\n  clone() {\n    return new Vertex(this.x, this.y, this.z, this.normal.clone(), this.uv.clone());\n  }\n\n  add(vertex) {\n    this.x += vertex.x;\n    this.y += vertex.y;\n    this.z += vertex.z;\n    return this;\n  }\n\n  subtract(vertex) {\n    this.x -= vertex.x;\n    this.y -= vertex.y;\n    this.z -= vertex.z;\n    return this;\n  }\n\n  multiplyScalar(scalar) {\n    this.x *= scalar;\n    this.y *= scalar;\n    this.z *= scalar;\n    return this;\n  }\n\n  cross(vertex) {\n    var x = this.x,\n      y = this.y,\n      z = this.z;\n\n    this.x = y * vertex.z - z * vertex.y;\n    this.y = z * vertex.x - x * vertex.z;\n    this.z = x * vertex.y - y * vertex.x;\n\n    return this;\n  }\n\n  normalize() {\n    var length = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n\n    this.x /= length;\n    this.y /= length;\n    this.z /= length;\n\n    return this;\n  }\n\n  dot(vertex) {\n    return this.x * vertex.x + this.y * vertex.y + this.z * vertex.z;\n  }\n\n  lerp(a, t) {\n    this.add(\n      a.clone().subtract(this).multiplyScalar(t)\n    );\n\n    this.normal.add(\n      a.normal.clone().sub(this.normal).multiplyScalar(t)\n    );\n\n    this.uv.add(\n      a.uv.clone().sub(this.uv).multiplyScalar(t)\n    );\n\n    return this;\n  }\n\n  interpolate(other, t) {\n    return this.clone().lerp(other, t);\n  }\n\n  applyMatrix4(m) {\n\n    // input: THREE.Matrix4 affine matrix\n\n    var x = this.x, y = this.y, z = this.z;\n\n    var e = m.elements;\n\n    this.x = e[0] * x + e[4] * y + e[8] * z + e[12];\n    this.y = e[1] * x + e[5] * y + e[9] * z + e[13];\n    this.z = e[2] * x + e[6] * y + e[10] * z + e[14];\n\n    return this;\n\n  }\n}\n\nclass Node {\n\n  constructor(polygons) {\n\n    var i, polygon_count,\n      front = [],\n      back = [];\n\n    this.polygons = [];\n    this.front = this.back = undefined;\n\n    if (!(polygons instanceof Array) || polygons.length === 0) return;\n\n    this.divider = polygons[0].clone();\n\n    for (i = 0, polygon_count = polygons.length; i < polygon_count; i++) {\n      this.divider.splitPolygon(polygons[i], this.polygons, this.polygons, front, back);\n    }\n\n    if (front.length > 0) {\n      this.front = new Node(front);\n    }\n\n    if (back.length > 0) {\n      this.back = new Node(back);\n    }\n  }\n\n  isConvex(polygons) {\n    var i, j;\n    for (i = 0; i < polygons.length; i++) {\n      for (j = 0; j < polygons.length; j++) {\n        if (i !== j && polygons[i].classifySide(polygons[j]) !== BACK) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  build(polygons) {\n    var i, polygon_count,\n      front = [],\n      back = [];\n\n    if (!this.divider) {\n      this.divider = polygons[0].clone();\n    }\n\n    for (i = 0, polygon_count = polygons.length; i < polygon_count; i++) {\n      this.divider.splitPolygon(polygons[i], this.polygons, this.polygons, front, back);\n    }\n\n    if (front.length > 0) {\n      if (!this.front) this.front = new Node();\n      this.front.build(front);\n    }\n\n    if (back.length > 0) {\n      if (!this.back) this.back = new Node();\n      this.back.build(back);\n    }\n  }\n\n  allPolygons() {\n    var polygons = this.polygons.slice();\n    if (this.front) polygons = polygons.concat(this.front.allPolygons());\n    if (this.back) polygons = polygons.concat(this.back.allPolygons());\n    return polygons;\n  }\n\n  clone() {\n    var node = new Node();\n\n    node.divider = this.divider.clone();\n    node.polygons = this.polygons.map(function (polygon) {\n      return polygon.clone();\n    });\n    node.front = this.front && this.front.clone();\n    node.back = this.back && this.back.clone();\n\n    return node;\n  }\n\n  invert() {\n    var i, polygon_count, temp;\n\n    for (i = 0, polygon_count = this.polygons.length; i < polygon_count; i++) {\n      this.polygons[i].flip();\n    }\n\n    this.divider.flip();\n    if (this.front) this.front.invert();\n    if (this.back) this.back.invert();\n\n    temp = this.front;\n    this.front = this.back;\n    this.back = temp;\n\n    return this;\n  }\n\n  clipPolygons(polygons) {\n    var i, polygon_count,\n      front, back;\n\n    if (!this.divider) return polygons.slice();\n\n    front = [];\n    back = [];\n\n    for (i = 0, polygon_count = polygons.length; i < polygon_count; i++) {\n      this.divider.splitPolygon(polygons[i], front, back, front, back);\n    }\n\n    if (this.front) front = this.front.clipPolygons(front);\n    if (this.back) back = this.back.clipPolygons(back);\n    else back = [];\n\n    return front.concat(back);\n  }\n\n  clipTo(node) {\n    this.polygons = node.clipPolygons(this.polygons);\n    if (this.front) this.front.clipTo(node);\n    if (this.back) this.back.clipTo(node);\n  }\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayPush;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nmodule.exports = Stack;\n","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;\n","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;\n","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nmodule.exports = isBuffer;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n","var isObject = require('./isObject');\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;\n","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\nmodule.exports = matchesStrictComparable;\n","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nmodule.exports = baseGet;\n","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","import THREELib from \"three-js\"\nconst THREE = THREELib()\n\nfunction Float32BufferAttribute( array, itemSize ) {\n\n  THREE.BufferAttribute.call( this, new Float32Array( array ), itemSize);\n}\n\nFloat32BufferAttribute.prototype = Object.create(THREE.BufferAttribute.prototype );\nFloat32BufferAttribute.prototype.constructor = Float32BufferAttribute;\n\n\nexport default function EdgesGeometry( geometry, thresholdAngle ) {\n\n  THREE.BufferGeometry.call( this );\n\n  this.type = 'EdgesGeometry';\n\n  this.parameters = {\n    thresholdAngle: thresholdAngle\n  };\n\n  thresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\n\n  // buffer\n\n  var vertices = [];\n\n  // helper variables\n\n  var thresholdDot = Math.cos( Math.PI / 180 * thresholdAngle );\n  var edge = [ 0, 0 ], edges = {}, edge1, edge2;\n  var key, keys = [ 'a', 'b', 'c' ];\n\n  // prepare source geometry\n\n  var geometry2;\n\n  if ( geometry.isBufferGeometry ) {\n\n    geometry2 = new Geometry();\n    geometry2.fromBufferGeometry( geometry );\n\n  } else {\n\n    geometry2 = geometry.clone();\n\n  }\n\n  geometry2.mergeVertices();\n  geometry2.computeFaceNormals();\n\n  var sourceVertices = geometry2.vertices;\n  var faces = geometry2.faces;\n\n  // now create a data structure where each entry represents an edge with its adjoining faces\n\n  for ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n    var face = faces[ i ];\n\n    for ( var j = 0; j < 3; j ++ ) {\n\n      edge1 = face[ keys[ j ] ];\n      edge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n      edge[ 0 ] = Math.min( edge1, edge2 );\n      edge[ 1 ] = Math.max( edge1, edge2 );\n\n      key = edge[ 0 ] + ',' + edge[ 1 ];\n\n      if ( edges[ key ] === undefined ) {\n\n        edges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ], face1: i, face2: undefined };\n\n      } else {\n\n        edges[ key ].face2 = i;\n\n      }\n\n    }\n\n  }\n\n  // generate vertices\n\n  for ( key in edges ) {\n\n    var e = edges[ key ];\n\n    // an edge is only rendered if the angle (in degrees) between the face normals of the adjoining faces exceeds this value. default = 1 degree.\n\n    if ( e.face2 === undefined || faces[ e.face1 ].normal.dot( faces[ e.face2 ].normal ) <= thresholdDot ) {\n\n      var vertex = sourceVertices[ e.index1 ];\n      vertices.push( vertex.x, vertex.y, vertex.z );\n\n      vertex = sourceVertices[ e.index2 ];\n      vertices.push( vertex.x, vertex.y, vertex.z );\n    }\n  }\n\n  // build geometry\n\n  this.addAttribute('position', new Float32BufferAttribute( vertices, 3 ) );\n}\n\nEdgesGeometry.prototype = Object.create(THREE.BufferGeometry.prototype );\nEdgesGeometry.prototype.constructor = EdgesGeometry;\n","var baseFlatten = require('./_baseFlatten'),\n    baseOrderBy = require('./_baseOrderBy'),\n    baseRest = require('./_baseRest'),\n    isIterateeCall = require('./_isIterateeCall');\n\n/**\n * Creates an array of elements, sorted in ascending order by the results of\n * running each element in a collection thru each iteratee. This method\n * performs a stable sort, that is, it preserves the original sort order of\n * equal elements. The iteratees are invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {...(Function|Function[])} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 36 },\n *   { 'user': 'fred',   'age': 40 },\n *   { 'user': 'barney', 'age': 34 }\n * ];\n *\n * _.sortBy(users, [function(o) { return o.user; }]);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n *\n * _.sortBy(users, ['user', 'age']);\n * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n */\nvar sortBy = baseRest(function(collection, iteratees) {\n  if (collection == null) {\n    return [];\n  }\n  var length = iteratees.length;\n  if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n    iteratees = [];\n  } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n    iteratees = [iteratees[0]];\n  }\n  return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n});\n\nmodule.exports = sortBy;\n","\nimport EdgesGeometry from './EdgesGeometry'\nimport sortBy from 'lodash/sortBy'\nimport ThreeBSP from './threeCSG'\nimport THREELib from \"three-js\"\n\nconst THREE = THREELib()\n\nTHREE.EdgesGeometry = EdgesGeometry\n\n/////////////////////////////////////////////////////////\n//\n//\n/////////////////////////////////////////////////////////\nfunction getModelInfo () {\n\n  return new Promise((resolve) => {\n\n    const msgHandler = (event) => {\n\n      if (event.data.msgId === 'MSG_ID_MODEL_INFO') {\n\n        self.removeEventListener(\n          'message', msgHandler)\n\n        resolve (event.data)\n      }\n    }\n\n    self.addEventListener('message', msgHandler)\n  })\n}\n\n/////////////////////////////////////////////////////////\n//\n//\n/////////////////////////////////////////////////////////\nfunction getComponents (category) {\n\n  return new Promise((resolve) => {\n\n    const meshes = []\n\n    const msgHandler = (event) => {\n\n      if (event.data.msgId === 'MSG_ID_COMPONENT') {\n\n        const data = event.data\n\n        if (data.category === category) {\n\n          const mesh = buildComponentMesh (data)\n\n          meshes.push(mesh)\n\n          if (meshes.length === data.count) {\n\n            self.removeEventListener(\n              'message', msgHandler)\n\n            resolve (meshes)\n          }\n        }\n      }\n    }\n\n    self.addEventListener('message', msgHandler)\n  })\n}\n\n/////////////////////////////////////////////////////////\n//\n//\n/////////////////////////////////////////////////////////\nfunction buildComponentMesh (data) {\n\n  const vertexArray = []\n\n  for (let idx=0; idx < data.nbMeshes; ++idx) {\n\n    const meshData = {\n      positions: data['positions' + idx],\n      indices: data['indices' + idx],\n      stride: data['stride' + idx]\n    }\n\n    getMeshGeometry (meshData, vertexArray)\n  }\n\n  const geometry = new THREE.Geometry()\n\n  for (var i = 0; i < vertexArray.length; i += 3) {\n\n    geometry.vertices.push(vertexArray[i])\n    geometry.vertices.push(vertexArray[i + 1])\n    geometry.vertices.push(vertexArray[i + 2])\n\n    const face = new THREE.Face3(i, i + 1, i + 2)\n\n    geometry.faces.push(face)\n  }\n\n  const matrixWorld = new THREE.Matrix4()\n\n  if(data.matrixWorld) {\n\n    matrixWorld.fromArray(data.matrixWorld)\n  }\n\n  const mesh = new THREE.Mesh(geometry)\n\n  mesh.applyMatrix(matrixWorld)\n\n  mesh.boundingBox = data.boundingBox\n\n  mesh.bsp = new ThreeBSP(mesh)\n\n  mesh.dbId = data.dbId\n\n  return mesh\n}\n\n/////////////////////////////////////////////////////////\n//\n//\n/////////////////////////////////////////////////////////\nfunction getMeshGeometry (data, vertexArray) {\n\n  const offsets = [{\n    count: data.indices.length,\n    index: 0,\n    start: 0}\n  ]\n\n  for (var oi = 0, ol = offsets.length; oi < ol; ++oi) {\n\n    var start = offsets[oi].start\n    var count = offsets[oi].count\n    var index = offsets[oi].index\n\n    for (var i = start, il = start + count; i < il; i += 3) {\n\n      const a = index + data.indices[i]\n      const b = index + data.indices[i + 1]\n      const c = index + data.indices[i + 2]\n\n      const vA = new THREE.Vector3()\n      const vB = new THREE.Vector3()\n      const vC = new THREE.Vector3()\n\n      vA.fromArray(data.positions, a * data.stride)\n      vB.fromArray(data.positions, b * data.stride)\n      vC.fromArray(data.positions, c * data.stride)\n\n      vertexArray.push(vA)\n      vertexArray.push(vB)\n      vertexArray.push(vC)\n    }\n  }\n}\n\n/////////////////////////////////////////////////////////\n//\n//\n/////////////////////////////////////////////////////////\nfunction postWallMesh (mesh, opts) {\n\n  const geometry = mesh.geometry\n\n  const msg = Object.assign({}, {\n    matrixWorld: mesh.matrix.elements,\n    vertices: geometry.vertices,\n    floorDbIds: mesh.floorDbIds,\n    pathEdges: mesh.pathEdges,\n    msgId: 'MSG_ID_WALL_MESH',\n    faces: geometry.faces,\n    dbId: mesh.dbId\n  }, opts)\n\n  self.postMessage(msg)\n}\n\n/////////////////////////////////////////////////////////\n//\n//\n/////////////////////////////////////////////////////////\nfunction createBoundingMesh (bbox) {\n\n  const geometry = new THREE.BoxGeometry(\n    bbox.max.x - bbox.min.x,\n    bbox.max.y - bbox.min.y,\n    bbox.max.z - bbox.min.z)\n\n  const mesh = new THREE.Mesh(geometry)\n\n  const transform = new THREE.Matrix4()\n\n  transform.makeTranslation(0, 0,\n    (bbox.max.z + bbox.min.z) * 0.5)\n\n  mesh.applyMatrix(transform)\n\n  return mesh\n}\n\n/////////////////////////////////////////////////////////\n//\n//\n/////////////////////////////////////////////////////////\nfunction getHardEdges (mesh, matrix = null) {\n\n  const edgesGeom = new THREE.EdgesGeometry(mesh.geometry)\n\n  const positions = edgesGeom.attributes.position\n\n  matrix = matrix || mesh.matrixWorld\n\n  const edges = []\n\n  for (let idx = 0;\n       idx < positions.length;\n       idx += (2 * positions.itemSize)) {\n\n    const start = new THREE.Vector3(\n      positions.array[idx],\n      positions.array[idx + 1],\n      positions.array[idx + 2])\n\n    const end = new THREE.Vector3(\n      positions.array[idx + 3],\n      positions.array[idx + 4],\n      positions.array[idx + 5])\n\n    start.applyMatrix4(matrix)\n\n    end.applyMatrix4(matrix)\n\n    edges.push({\n      start,\n      end\n    })\n  }\n\n  return edges\n}\n\n/////////////////////////////////////////////////////////\n//\n//\n/////////////////////////////////////////////////////////\nfunction mergeBoxes (boxes) {\n\n  const mergedBoxes = []\n\n  let height = -Number.MAX_VALUE\n\n  for (let idx = 0; idx < boxes.length; ++idx) {\n\n    const box = boxes[idx]\n\n    const diff = box.max.z - height\n\n    if (diff > 0.5) {\n\n      height = box.max.z\n\n      mergedBoxes.push(box)\n\n    } else {\n\n      const lastBox = mergedBoxes[mergedBoxes.length-1]\n\n      lastBox.max.x = Math.max(lastBox.max.x, box.max.x)\n      lastBox.max.y = Math.max(lastBox.max.y, box.max.y)\n\n      lastBox.min.x = Math.min(lastBox.min.x, box.min.x)\n      lastBox.min.y = Math.min(lastBox.min.y, box.min.y)\n\n      lastBox.dbIds.push(box.dbIds[0])\n    }\n  }\n\n  return mergedBoxes\n}\n\n/////////////////////////////////////////////////////////\n//\n//\n/////////////////////////////////////////////////////////\nasync function workerMain () {\n\n  const res = await Promise.all([\n    getComponents('Floors'),\n    getComponents('Walls'),\n    getModelInfo()\n  ])\n\n  const floorMeshes = res[0]\n  const wallMeshes = res[1]\n  const modelInfo = res[2]\n\n  const modelBox = modelInfo.boundingBox\n\n  const extBoxes = floorMeshes.map((mesh) => {\n\n    const min = {\n      x: modelBox.min.x,\n      y: modelBox.min.y,\n      z: mesh.boundingBox.min.z\n    }\n\n    const max = {\n      x: modelBox.max.x,\n      y: modelBox.max.y,\n      z: mesh.boundingBox.max.z\n    }\n\n    return {\n      dbIds: [mesh.dbId],\n      min,\n      max\n    }\n  })\n\n  const orderedExtBoxes = sortBy(extBoxes, (box) => {\n\n    return box.min.z\n  })\n\n  // last box is model top\n  orderedExtBoxes.push({\n\n    min: {\n      x: modelBox.min.x,\n      y: modelBox.min.y,\n      z: modelBox.max.z\n    },\n\n    max:{\n      x: modelBox.max.x,\n      y: modelBox.max.y,\n      z: modelBox.max.z\n    },\n\n    dbIds: []\n  })\n\n  const mergedBoxes = mergeBoxes(orderedExtBoxes)\n\n  for (let idx = mergedBoxes.length-2; idx >= 0 ; --idx) {\n\n    const levelBox = {\n      max: mergedBoxes[idx + 1].min,\n      min: mergedBoxes[idx].max\n    }\n\n    const levelBoundingMesh = createBoundingMesh(levelBox)\n\n    const levelBSP = new ThreeBSP(levelBoundingMesh)\n\n    wallMeshes.forEach((wallMesh) => {\n\n      const resultBSP = levelBSP.intersect(wallMesh.bsp)\n\n      const mesh = resultBSP.toMesh()\n\n      const edges = getHardEdges(mesh)\n\n      const filteredEdges = edges.filter((edge) => {\n\n        return (\n          (edge.start.z < levelBox.min.z + 0.1) &&\n          (edge.end.z   < levelBox.min.z + 0.1)\n        )\n      })\n\n      mesh.floorDbIds = mergedBoxes[idx].dbIds\n\n      mesh.pathEdges = filteredEdges\n\n      mesh.dbId = wallMesh.dbId\n\n      postWallMesh (mesh, {\n        levelCount: mergedBoxes.length-1,\n        wallCount: wallMeshes.length,\n        level: idx,\n        levelBox\n      })\n    })\n  }\n\n  self.close()\n}\n\n/////////////////////////////////////////////////////////\n// Run the worker\n//\n/////////////////////////////////////////////////////////\nworkerMain ()\n","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","(function( self ){\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar THREE = { REVISION: '79' };\n\n\t// Polyfills\n\n\tif ( Number.EPSILON === undefined ) {\n\n\t\tNumber.EPSILON = Math.pow( 2, - 52 );\n\n\t}\n\n\t//\n\n\tif ( Math.sign === undefined ) {\n\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n\n\t\tMath.sign = function ( x ) {\n\n\t\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\n\n\t\t};\n\n\t}\n\n\tif ( Function.prototype.name === undefined ) {\n\n\t\t// Missing in IE9-11.\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n\n\t\tObject.defineProperty( Function.prototype, 'name', {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.toString().match( /^\\s*function\\s*(\\S*)\\s*\\(/ )[ 1 ];\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\tif ( Object.assign === undefined ) {\n\n\t\t// Missing in IE.\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\n\t\t( function () {\n\n\t\t\tObject.assign = function ( target ) {\n\n\t\t\t\t'use strict';\n\n\t\t\t\tif ( target === undefined || target === null ) {\n\n\t\t\t\t\tthrow new TypeError( 'Cannot convert undefined or null to object' );\n\n\t\t\t\t}\n\n\t\t\t\tvar output = Object( target );\n\n\t\t\t\tfor ( var index = 1; index < arguments.length; index ++ ) {\n\n\t\t\t\t\tvar source = arguments[ index ];\n\n\t\t\t\t\tif ( source !== undefined && source !== null ) {\n\n\t\t\t\t\t\tfor ( var nextKey in source ) {\n\n\t\t\t\t\t\t\tif ( Object.prototype.hasOwnProperty.call( source, nextKey ) ) {\n\n\t\t\t\t\t\t\t\toutput[ nextKey ] = source[ nextKey ];\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn output;\n\n\t\t\t};\n\n\t\t} )();\n\n\t}\n\n\t//\n\n\tObject.assign( THREE, {\n\n\t\t// https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent.button\n\n\t\tMOUSE: { LEFT: 0, MIDDLE: 1, RIGHT: 2 },\n\n\t\t// GL STATE CONSTANTS\n\n\t\tCullFaceNone: 0,\n\t\tCullFaceBack: 1,\n\t\tCullFaceFront: 2,\n\t\tCullFaceFrontBack: 3,\n\n\t\tFrontFaceDirectionCW: 0,\n\t\tFrontFaceDirectionCCW: 1,\n\n\t\t// SHADOWING TYPES\n\n\t\tBasicShadowMap: 0,\n\t\tPCFShadowMap: 1,\n\t\tPCFSoftShadowMap: 2,\n\n\t\t// MATERIAL CONSTANTS\n\n\t\t// side\n\n\t\tFrontSide: 0,\n\t\tBackSide: 1,\n\t\tDoubleSide: 2,\n\n\t\t// shading\n\n\t\tFlatShading: 1,\n\t\tSmoothShading: 2,\n\n\t\t// colors\n\n\t\tNoColors: 0,\n\t\tFaceColors: 1,\n\t\tVertexColors: 2,\n\n\t\t// blending modes\n\n\t\tNoBlending: 0,\n\t\tNormalBlending: 1,\n\t\tAdditiveBlending: 2,\n\t\tSubtractiveBlending: 3,\n\t\tMultiplyBlending: 4,\n\t\tCustomBlending: 5,\n\n\t\t// custom blending equations\n\t\t// (numbers start from 100 not to clash with other\n\t\t// mappings to OpenGL constants defined in Texture.js)\n\n\t\tAddEquation: 100,\n\t\tSubtractEquation: 101,\n\t\tReverseSubtractEquation: 102,\n\t\tMinEquation: 103,\n\t\tMaxEquation: 104,\n\n\t\t// custom blending destination factors\n\n\t\tZeroFactor: 200,\n\t\tOneFactor: 201,\n\t\tSrcColorFactor: 202,\n\t\tOneMinusSrcColorFactor: 203,\n\t\tSrcAlphaFactor: 204,\n\t\tOneMinusSrcAlphaFactor: 205,\n\t\tDstAlphaFactor: 206,\n\t\tOneMinusDstAlphaFactor: 207,\n\n\t\t// custom blending source factors\n\n\t\t//ZeroFactor: 200,\n\t\t//OneFactor: 201,\n\t\t//SrcAlphaFactor: 204,\n\t\t//OneMinusSrcAlphaFactor: 205,\n\t\t//DstAlphaFactor: 206,\n\t\t//OneMinusDstAlphaFactor: 207,\n\t\tDstColorFactor: 208,\n\t\tOneMinusDstColorFactor: 209,\n\t\tSrcAlphaSaturateFactor: 210,\n\n\t\t// depth modes\n\n\t\tNeverDepth: 0,\n\t\tAlwaysDepth: 1,\n\t\tLessDepth: 2,\n\t\tLessEqualDepth: 3,\n\t\tEqualDepth: 4,\n\t\tGreaterEqualDepth: 5,\n\t\tGreaterDepth: 6,\n\t\tNotEqualDepth: 7,\n\n\n\t\t// TEXTURE CONSTANTS\n\n\t\tMultiplyOperation: 0,\n\t\tMixOperation: 1,\n\t\tAddOperation: 2,\n\n\t\t// Tone Mapping modes\n\n\t\tNoToneMapping: 0, // do not do any tone mapping, not even exposure (required for special purpose passes.)\n\t\tLinearToneMapping: 1, // only apply exposure.\n\t\tReinhardToneMapping: 2,\n\t\tUncharted2ToneMapping: 3, // John Hable\n\t\tCineonToneMapping: 4, // optimized filmic operator by Jim Hejl and Richard Burgess-Dawson\n\n\t\t// Mapping modes\n\n\t\tUVMapping: 300,\n\n\t\tCubeReflectionMapping: 301,\n\t\tCubeRefractionMapping: 302,\n\n\t\tEquirectangularReflectionMapping: 303,\n\t\tEquirectangularRefractionMapping: 304,\n\n\t\tSphericalReflectionMapping: 305,\n\t\tCubeUVReflectionMapping: 306,\n\t\tCubeUVRefractionMapping: 307,\n\n\t\t// Wrapping modes\n\n\t\tRepeatWrapping: 1000,\n\t\tClampToEdgeWrapping: 1001,\n\t\tMirroredRepeatWrapping: 1002,\n\n\t\t// Filters\n\n\t\tNearestFilter: 1003,\n\t\tNearestMipMapNearestFilter: 1004,\n\t\tNearestMipMapLinearFilter: 1005,\n\t\tLinearFilter: 1006,\n\t\tLinearMipMapNearestFilter: 1007,\n\t\tLinearMipMapLinearFilter: 1008,\n\n\t\t// Data types\n\n\t\tUnsignedByteType: 1009,\n\t\tByteType: 1010,\n\t\tShortType: 1011,\n\t\tUnsignedShortType: 1012,\n\t\tIntType: 1013,\n\t\tUnsignedIntType: 1014,\n\t\tFloatType: 1015,\n\t\tHalfFloatType: 1025,\n\n\t\t// Pixel types\n\n\t\t//UnsignedByteType: 1009,\n\t\tUnsignedShort4444Type: 1016,\n\t\tUnsignedShort5551Type: 1017,\n\t\tUnsignedShort565Type: 1018,\n\n\t\t// Pixel formats\n\n\t\tAlphaFormat: 1019,\n\t\tRGBFormat: 1020,\n\t\tRGBAFormat: 1021,\n\t\tLuminanceFormat: 1022,\n\t\tLuminanceAlphaFormat: 1023,\n\t\t// THREE.RGBEFormat handled as THREE.RGBAFormat in shaders\n\t\tRGBEFormat: THREE.RGBAFormat, //1024;\n\t\tDepthFormat: 1026,\n\n\t\t// DDS / ST3C Compressed texture formats\n\n\t\tRGB_S3TC_DXT1_Format: 2001,\n\t\tRGBA_S3TC_DXT1_Format: 2002,\n\t\tRGBA_S3TC_DXT3_Format: 2003,\n\t\tRGBA_S3TC_DXT5_Format: 2004,\n\n\t\t// PVRTC compressed texture formats\n\n\t\tRGB_PVRTC_4BPPV1_Format: 2100,\n\t\tRGB_PVRTC_2BPPV1_Format: 2101,\n\t\tRGBA_PVRTC_4BPPV1_Format: 2102,\n\t\tRGBA_PVRTC_2BPPV1_Format: 2103,\n\n\t\t// ETC compressed texture formats\n\n\t\tRGB_ETC1_Format: 2151,\n\n\t\t// Loop styles for AnimationAction\n\n\t\tLoopOnce: 2200,\n\t\tLoopRepeat: 2201,\n\t\tLoopPingPong: 2202,\n\n\t\t// Interpolation\n\n\t\tInterpolateDiscrete: 2300,\n\t\tInterpolateLinear: 2301,\n\t\tInterpolateSmooth: 2302,\n\n\t\t// Interpolant ending modes\n\n\t\tZeroCurvatureEnding: 2400,\n\t\tZeroSlopeEnding: 2401,\n\t\tWrapAroundEnding: 2402,\n\n\t\t// Triangle Draw modes\n\n\t\tTrianglesDrawMode: 0,\n\t\tTriangleStripDrawMode: 1,\n\t\tTriangleFanDrawMode: 2,\n\n\t\t// Texture Encodings\n\n\t\tLinearEncoding: 3000, // No encoding at all.\n\t\tsRGBEncoding: 3001,\n\t\tGammaEncoding: 3007, // uses GAMMA_FACTOR, for backwards compatibility with WebGLRenderer.gammaInput/gammaOutput\n\n\t\t// The following Texture Encodings are for RGB-only (no alpha) HDR light emission sources.\n\t\t// These encodings should not specified as output encodings except in rare situations.\n\t\tRGBEEncoding: 3002, // AKA Radiance.\n\t\tLogLuvEncoding: 3003,\n\t\tRGBM7Encoding: 3004,\n\t\tRGBM16Encoding: 3005,\n\t\tRGBDEncoding: 3006, // MaxRange is 256.\n\n\t\t// Depth packing strategies\n\n\t\tBasicDepthPacking: 3200, // for writing to float textures for high precision or for visualizing results in RGB buffers\n\t\tRGBADepthPacking: 3201 // for packing into RGBA buffers.\n\n\t} );\n\n\t// File:src/math/Color.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.Color = function ( r, g, b ) {\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\t\t\treturn this.set( r );\n\n\t\t}\n\n\t\treturn this.setRGB( r, g, b );\n\n\t};\n\n\tTHREE.Color.prototype = {\n\n\t\tconstructor: THREE.Color,\n\n\t\tr: 1, g: 1, b: 1,\n\n\t\tset: function ( value ) {\n\n\t\t\tif ( value instanceof THREE.Color ) {\n\n\t\t\t\tthis.copy( value );\n\n\t\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\t\tthis.setHex( value );\n\n\t\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\t\tthis.setStyle( value );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetScalar: function ( scalar ) {\n\n\t\t\tthis.r = scalar;\n\t\t\tthis.g = scalar;\n\t\t\tthis.b = scalar;\n\n\t\t},\n\n\t\tsetHex: function ( hex ) {\n\n\t\t\thex = Math.floor( hex );\n\n\t\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetRGB: function ( r, g, b ) {\n\n\t\t\tthis.r = r;\n\t\t\tthis.g = g;\n\t\t\tthis.b = b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetHSL: function () {\n\n\t\t\tfunction hue2rgb( p, q, t ) {\n\n\t\t\t\tif ( t < 0 ) t += 1;\n\t\t\t\tif ( t > 1 ) t -= 1;\n\t\t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\t\t\t\tif ( t < 1 / 2 ) return q;\n\t\t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\t\t\t\treturn p;\n\n\t\t\t}\n\n\t\t\treturn function setHSL( h, s, l ) {\n\n\t\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\t\t\th = THREE.Math.euclideanModulo( h, 1 );\n\t\t\t\ts = THREE.Math.clamp( s, 0, 1 );\n\t\t\t\tl = THREE.Math.clamp( l, 0, 1 );\n\n\t\t\t\tif ( s === 0 ) {\n\n\t\t\t\t\tthis.r = this.g = this.b = l;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\t\t\tvar q = ( 2 * l ) - p;\n\n\t\t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tsetStyle: function ( style ) {\n\n\t\t\tfunction handleAlpha( string ) {\n\n\t\t\t\tif ( string === undefined ) return;\n\n\t\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tvar m;\n\n\t\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t\t// rgb / hsl\n\n\t\t\t\tvar color;\n\t\t\t\tvar name = m[ 1 ];\n\t\t\t\tvar components = m[ 2 ];\n\n\t\t\t\tswitch ( name ) {\n\n\t\t\t\t\tcase 'rgb':\n\t\t\t\t\tcase 'rgba':\n\n\t\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'hsl':\n\t\t\t\t\tcase 'hsla':\n\n\t\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\n\t\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\n\n\t\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\t\treturn this.setHSL( h, s, l );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\n\n\t\t\t\t// hex color\n\n\t\t\t\tvar hex = m[ 1 ];\n\t\t\t\tvar size = hex.length;\n\n\t\t\t\tif ( size === 3 ) {\n\n\t\t\t\t\t// #ff0\n\t\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t\t// #ff0000\n\t\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( style && style.length > 0 ) {\n\n\t\t\t\t// color keywords\n\t\t\t\tvar hex = THREE.ColorKeywords[ style ];\n\n\t\t\t\tif ( hex !== undefined ) {\n\n\t\t\t\t\t// red\n\t\t\t\t\tthis.setHex( hex );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// unknown color\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t\t},\n\n\t\tcopy: function ( color ) {\n\n\t\t\tthis.r = color.r;\n\t\t\tthis.g = color.g;\n\t\t\tthis.b = color.b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyGammaToLinear: function ( color, gammaFactor ) {\n\n\t\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\t\tthis.r = Math.pow( color.r, gammaFactor );\n\t\t\tthis.g = Math.pow( color.g, gammaFactor );\n\t\t\tthis.b = Math.pow( color.b, gammaFactor );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyLinearToGamma: function ( color, gammaFactor ) {\n\n\t\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\n\n\t\t\tthis.r = Math.pow( color.r, safeInverse );\n\t\t\tthis.g = Math.pow( color.g, safeInverse );\n\t\t\tthis.b = Math.pow( color.b, safeInverse );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tconvertGammaToLinear: function () {\n\n\t\t\tvar r = this.r, g = this.g, b = this.b;\n\n\t\t\tthis.r = r * r;\n\t\t\tthis.g = g * g;\n\t\t\tthis.b = b * b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tconvertLinearToGamma: function () {\n\n\t\t\tthis.r = Math.sqrt( this.r );\n\t\t\tthis.g = Math.sqrt( this.g );\n\t\t\tthis.b = Math.sqrt( this.b );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetHex: function () {\n\n\t\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\n\n\t\t},\n\n\t\tgetHexString: function () {\n\n\t\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\n\n\t\t},\n\n\t\tgetHSL: function ( optionalTarget ) {\n\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\t\tvar hsl = optionalTarget || { h: 0, s: 0, l: 0 };\n\n\t\t\tvar r = this.r, g = this.g, b = this.b;\n\n\t\t\tvar max = Math.max( r, g, b );\n\t\t\tvar min = Math.min( r, g, b );\n\n\t\t\tvar hue, saturation;\n\t\t\tvar lightness = ( min + max ) / 2.0;\n\n\t\t\tif ( min === max ) {\n\n\t\t\t\thue = 0;\n\t\t\t\tsaturation = 0;\n\n\t\t\t} else {\n\n\t\t\t\tvar delta = max - min;\n\n\t\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\t\tswitch ( max ) {\n\n\t\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t\t}\n\n\t\t\t\thue /= 6;\n\n\t\t\t}\n\n\t\t\thsl.h = hue;\n\t\t\thsl.s = saturation;\n\t\t\thsl.l = lightness;\n\n\t\t\treturn hsl;\n\n\t\t},\n\n\t\tgetStyle: function () {\n\n\t\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\n\n\t\t},\n\n\t\toffsetHSL: function ( h, s, l ) {\n\n\t\t\tvar hsl = this.getHSL();\n\n\t\t\thsl.h += h; hsl.s += s; hsl.l += l;\n\n\t\t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( color ) {\n\n\t\t\tthis.r += color.r;\n\t\t\tthis.g += color.g;\n\t\t\tthis.b += color.b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddColors: function ( color1, color2 ) {\n\n\t\t\tthis.r = color1.r + color2.r;\n\t\t\tthis.g = color1.g + color2.g;\n\t\t\tthis.b = color1.b + color2.b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScalar: function ( s ) {\n\n\t\t\tthis.r += s;\n\t\t\tthis.g += s;\n\t\t\tthis.b += s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsub: function( color ) {\n\n\t\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( color ) {\n\n\t\t\tthis.r *= color.r;\n\t\t\tthis.g *= color.g;\n\t\t\tthis.b *= color.b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( s ) {\n\n\t\t\tthis.r *= s;\n\t\t\tthis.g *= s;\n\t\t\tthis.b *= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerp: function ( color, alpha ) {\n\n\t\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( c ) {\n\n\t\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.r = array[ offset ];\n\t\t\tthis.g = array[ offset + 1 ];\n\t\t\tthis.b = array[ offset + 2 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this.r;\n\t\t\tarray[ offset + 1 ] = this.g;\n\t\t\tarray[ offset + 2 ] = this.b;\n\n\t\t\treturn array;\n\n\t\t}\n\n\t};\n\n\tTHREE.ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\n\t// File:src/math/Quaternion.js\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author bhouston / http://clara.io\n\t */\n\n\tTHREE.Quaternion = function ( x, y, z, w ) {\n\n\t\tthis._x = x || 0;\n\t\tthis._y = y || 0;\n\t\tthis._z = z || 0;\n\t\tthis._w = ( w !== undefined ) ? w : 1;\n\n\t};\n\n\tTHREE.Quaternion.prototype = {\n\n\t\tconstructor: THREE.Quaternion,\n\n\t\tget x () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset x ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t},\n\n\t\tget y () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset y ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t},\n\n\t\tget z () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset z ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t},\n\n\t\tget w () {\n\n\t\t\treturn this._w;\n\n\t\t},\n\n\t\tset w ( value ) {\n\n\t\t\tthis._w = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t},\n\n\t\tset: function ( x, y, z, w ) {\n\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\t\t\tthis._w = w;\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t\t},\n\n\t\tcopy: function ( quaternion ) {\n\n\t\t\tthis._x = quaternion.x;\n\t\t\tthis._y = quaternion.y;\n\t\t\tthis._z = quaternion.z;\n\t\t\tthis._w = quaternion.w;\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromEuler: function ( euler, update ) {\n\n\t\t\tif ( euler instanceof THREE.Euler === false ) {\n\n\t\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t\t//\tcontent/SpinCalc.m\n\n\t\t\tvar c1 = Math.cos( euler._x / 2 );\n\t\t\tvar c2 = Math.cos( euler._y / 2 );\n\t\t\tvar c3 = Math.cos( euler._z / 2 );\n\t\t\tvar s1 = Math.sin( euler._x / 2 );\n\t\t\tvar s2 = Math.sin( euler._y / 2 );\n\t\t\tvar s3 = Math.sin( euler._z / 2 );\n\n\t\t\tvar order = euler.order;\n\n\t\t\tif ( order === 'XYZ' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t\t} else if ( order === 'YZX' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t\t} else if ( order === 'XZY' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t\t}\n\n\t\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromAxisAngle: function ( axis, angle ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t\t// assumes axis is normalized\n\n\t\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\t\tthis._x = axis.x * s;\n\t\t\tthis._y = axis.y * s;\n\t\t\tthis._z = axis.z * s;\n\t\t\tthis._w = Math.cos( halfAngle );\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromRotationMatrix: function ( m ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tvar te = m.elements,\n\n\t\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\t\ttrace = m11 + m22 + m33,\n\t\t\t\ts;\n\n\t\t\tif ( trace > 0 ) {\n\n\t\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\t\tthis._w = 0.25 / s;\n\t\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\t\tthis._x = 0.25 * s;\n\t\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t\t} else if ( m22 > m33 ) {\n\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\t\tthis._y = 0.25 * s;\n\t\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t\t} else {\n\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\t\tthis._z = 0.25 * s;\n\n\t\t\t}\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromUnitVectors: function () {\n\n\t\t\t// http://lolengine.net/blog/2014/02/24/quaternion-from-two-vectors-final\n\n\t\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\t\tvar v1, r;\n\n\t\t\tvar EPS = 0.000001;\n\n\t\t\treturn function setFromUnitVectors( vFrom, vTo ) {\n\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\n\n\t\t\t\tr = vFrom.dot( vTo ) + 1;\n\n\t\t\t\tif ( r < EPS ) {\n\n\t\t\t\t\tr = 0;\n\n\t\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\t\t\tv1.set( - vFrom.y, vFrom.x, 0 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv1.set( 0, - vFrom.z, vFrom.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv1.crossVectors( vFrom, vTo );\n\n\t\t\t\t}\n\n\t\t\t\tthis._x = v1.x;\n\t\t\t\tthis._y = v1.y;\n\t\t\t\tthis._z = v1.z;\n\t\t\t\tthis._w = r;\n\n\t\t\t\treturn this.normalize();\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tinverse: function () {\n\n\t\t\treturn this.conjugate().normalize();\n\n\t\t},\n\n\t\tconjugate: function () {\n\n\t\t\tthis._x *= - 1;\n\t\t\tthis._y *= - 1;\n\t\t\tthis._z *= - 1;\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdot: function ( v ) {\n\n\t\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t\t},\n\n\t\tlengthSq: function () {\n\n\t\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t\t},\n\n\t\tlength: function () {\n\n\t\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\tvar l = this.length();\n\n\t\t\tif ( l === 0 ) {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = 0;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = 1;\n\n\t\t\t} else {\n\n\t\t\t\tl = 1 / l;\n\n\t\t\t\tthis._x = this._x * l;\n\t\t\t\tthis._y = this._y * l;\n\t\t\t\tthis._z = this._z * l;\n\t\t\t\tthis._w = this._w * l;\n\n\t\t\t}\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( q, p ) {\n\n\t\t\tif ( p !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t\t}\n\n\t\t\treturn this.multiplyQuaternions( this, q );\n\n\t\t},\n\n\t\tpremultiply: function ( q ) {\n\n\t\t\treturn this.multiplyQuaternions( q, this );\n\n\t\t},\n\n\t\tmultiplyQuaternions: function ( a, b ) {\n\n\t\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tslerp: function ( qb, t ) {\n\n\t\t\tif ( t === 0 ) return this;\n\t\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\t\tthis._w = - qb._w;\n\t\t\t\tthis._x = - qb._x;\n\t\t\t\tthis._y = - qb._y;\n\t\t\t\tthis._z = - qb._z;\n\n\t\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t\t} else {\n\n\t\t\t\tthis.copy( qb );\n\n\t\t\t}\n\n\t\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\t\tthis._w = w;\n\t\t\t\tthis._x = x;\n\t\t\t\tthis._y = y;\n\t\t\t\tthis._z = z;\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tvar sinHalfTheta = Math.sqrt( 1.0 - cosHalfTheta * cosHalfTheta );\n\n\t\t\tif ( Math.abs( sinHalfTheta ) < 0.001 ) {\n\n\t\t\t\tthis._w = 0.5 * ( w + this._w );\n\t\t\t\tthis._x = 0.5 * ( x + this._x );\n\t\t\t\tthis._y = 0.5 * ( y + this._y );\n\t\t\t\tthis._z = 0.5 * ( z + this._z );\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tvar halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( quaternion ) {\n\n\t\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis._x = array[ offset ];\n\t\t\tthis._y = array[ offset + 1 ];\n\t\t\tthis._z = array[ offset + 2 ];\n\t\t\tthis._w = array[ offset + 3 ];\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this._x;\n\t\t\tarray[ offset + 1 ] = this._y;\n\t\t\tarray[ offset + 2 ] = this._z;\n\t\t\tarray[ offset + 3 ] = this._w;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tonChange: function ( callback ) {\n\n\t\t\tthis.onChangeCallback = callback;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tonChangeCallback: function () {}\n\n\t};\n\n\tObject.assign( THREE.Quaternion, {\n\n\t\tslerp: function( qa, qb, qm, t ) {\n\n\t\t\treturn qm.copy( qa ).slerp( qb, t );\n\n\t\t},\n\n\t\tslerpFlat: function(\n\t\t\t\tdst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\t\tvar x0 = src0[ srcOffset0 + 0 ],\n\t\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\t\tw0 = src0[ srcOffset0 + 3 ],\n\n\t\t\t\tx1 = src1[ srcOffset1 + 0 ],\n\t\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\t\tvar s = 1 - t,\n\n\t\t\t\t\tcos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\n\t\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\t\tvar sin = Math.sqrt( sqrSin ),\n\t\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t\t}\n\n\t\t\t\tvar tDir = t * dir;\n\n\t\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t\t// Normalize in case we just did a lerp:\n\t\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\t\tvar f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\t\tx0 *= f;\n\t\t\t\t\ty0 *= f;\n\t\t\t\t\tz0 *= f;\n\t\t\t\t\tw0 *= f;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tdst[ dstOffset ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\n\t\t}\n\n\t} );\n\n\t// File:src/math/Vector2.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author egraether / http://egraether.com/\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t */\n\n\tTHREE.Vector2 = function ( x, y ) {\n\n\t\tthis.x = x || 0;\n\t\tthis.y = y || 0;\n\n\t};\n\n\tTHREE.Vector2.prototype = {\n\n\t\tconstructor: THREE.Vector2,\n\n\t\tget width() {\n\n\t\t\treturn this.x;\n\n\t\t},\n\n\t\tset width( value ) {\n\n\t\t\tthis.x = value;\n\n\t\t},\n\n\t\tget height() {\n\n\t\t\treturn this.y;\n\n\t\t},\n\n\t\tset height( value ) {\n\n\t\t\tthis.y = value;\n\n\t\t},\n\n\t\t//\n\n\t\tset: function ( x, y ) {\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetScalar: function ( scalar ) {\n\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetX: function ( x ) {\n\n\t\t\tthis.x = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetY: function ( y ) {\n\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetComponent: function ( index, value ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: this.x = value; break;\n\t\t\t\tcase 1: this.y = value; break;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t},\n\n\t\tgetComponent: function ( index ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: return this.x;\n\t\t\t\tcase 1: return this.y;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.x, this.y );\n\n\t\t},\n\n\t\tcopy: function ( v ) {\n\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\t\treturn this.addVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScalar: function ( s ) {\n\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScaledVector: function ( v, s ) {\n\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsub: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\t\treturn this.subVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubScalar: function ( s ) {\n\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( v ) {\n\n\t\t\tthis.x *= v.x;\n\t\t\tthis.y *= v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( scalar ) {\n\n\t\t\tif ( isFinite( scalar ) ) {\n\n\t\t\t\tthis.x *= scalar;\n\t\t\t\tthis.y *= scalar;\n\n\t\t\t} else {\n\n\t\t\t\tthis.x = 0;\n\t\t\t\tthis.y = 0;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdivide: function ( v ) {\n\n\t\t\tthis.x /= v.x;\n\t\t\tthis.y /= v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdivideScalar: function ( scalar ) {\n\n\t\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t\t},\n\n\t\tmin: function ( v ) {\n\n\t\t\tthis.x = Math.min( this.x, v.x );\n\t\t\tthis.y = Math.min( this.y, v.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmax: function ( v ) {\n\n\t\t\tthis.x = Math.max( this.x, v.x );\n\t\t\tthis.y = Math.max( this.y, v.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclamp: function ( min, max ) {\n\n\t\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\n\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclampScalar: function () {\n\n\t\t\tvar min, max;\n\n\t\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\t\tif ( min === undefined ) {\n\n\t\t\t\t\tmin = new THREE.Vector2();\n\t\t\t\t\tmax = new THREE.Vector2();\n\n\t\t\t\t}\n\n\t\t\t\tmin.set( minVal, minVal );\n\t\t\t\tmax.set( maxVal, maxVal );\n\n\t\t\t\treturn this.clamp( min, max );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclampLength: function ( min, max ) {\n\n\t\t\tvar length = this.length();\n\n\t\t\treturn this.multiplyScalar( Math.max( min, Math.min( max, length ) ) / length );\n\n\t\t},\n\n\t\tfloor: function () {\n\n\t\t\tthis.x = Math.floor( this.x );\n\t\t\tthis.y = Math.floor( this.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tceil: function () {\n\n\t\t\tthis.x = Math.ceil( this.x );\n\t\t\tthis.y = Math.ceil( this.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tround: function () {\n\n\t\t\tthis.x = Math.round( this.x );\n\t\t\tthis.y = Math.round( this.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\troundToZero: function () {\n\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnegate: function () {\n\n\t\t\tthis.x = - this.x;\n\t\t\tthis.y = - this.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdot: function ( v ) {\n\n\t\t\treturn this.x * v.x + this.y * v.y;\n\n\t\t},\n\n\t\tlengthSq: function () {\n\n\t\t\treturn this.x * this.x + this.y * this.y;\n\n\t\t},\n\n\t\tlength: function () {\n\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t\t},\n\n\t\tlengthManhattan: function() {\n\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\treturn this.divideScalar( this.length() );\n\n\t\t},\n\n\t\tangle: function () {\n\n\t\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\t\tvar angle = Math.atan2( this.y, this.x );\n\n\t\t\tif ( angle < 0 ) angle += 2 * Math.PI;\n\n\t\t\treturn angle;\n\n\t\t},\n\n\t\tdistanceTo: function ( v ) {\n\n\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t\t},\n\n\t\tdistanceToSquared: function ( v ) {\n\n\t\t\tvar dx = this.x - v.x, dy = this.y - v.y;\n\t\t\treturn dx * dx + dy * dy;\n\n\t\t},\n\n\t\tdistanceToManhattan: function ( v ) {\n\n\t\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t\t},\n\n\t\tsetLength: function ( length ) {\n\n\t\t\treturn this.multiplyScalar( length / this.length() );\n\n\t\t},\n\n\t\tlerp: function ( v, alpha ) {\n\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t\t},\n\n\t\tequals: function ( v ) {\n\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.x = array[ offset ];\n\t\t\tthis.y = array[ offset + 1 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this.x;\n\t\t\tarray[ offset + 1 ] = this.y;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tindex = index * attribute.itemSize + offset;\n\n\t\t\tthis.x = attribute.array[ index ];\n\t\t\tthis.y = attribute.array[ index + 1 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateAround: function ( center, angle ) {\n\n\t\t\tvar c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\t\tvar x = this.x - center.x;\n\t\t\tvar y = this.y - center.y;\n\n\t\t\tthis.x = x * c - y * s + center.x;\n\t\t\tthis.y = x * s + y * c + center.y;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t};\n\n\t// File:src/math/Vector3.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author *kile / http://kile.stravaganza.org/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author egraether / http://egraether.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tTHREE.Vector3 = function ( x, y, z ) {\n\n\t\tthis.x = x || 0;\n\t\tthis.y = y || 0;\n\t\tthis.z = z || 0;\n\n\t};\n\n\tTHREE.Vector3.prototype = {\n\n\t\tconstructor: THREE.Vector3,\n\n\t\tset: function ( x, y, z ) {\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetScalar: function ( scalar ) {\n\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\t\t\tthis.z = scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetX: function ( x ) {\n\n\t\t\tthis.x = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetY: function ( y ) {\n\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetZ: function ( z ) {\n\n\t\t\tthis.z = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetComponent: function ( index, value ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: this.x = value; break;\n\t\t\t\tcase 1: this.y = value; break;\n\t\t\t\tcase 2: this.z = value; break;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t},\n\n\t\tgetComponent: function ( index ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: return this.x;\n\t\t\t\tcase 1: return this.y;\n\t\t\t\tcase 2: return this.z;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t\t},\n\n\t\tcopy: function ( v ) {\n\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\t\t\tthis.z = v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\t\treturn this.addVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\t\t\tthis.z += v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScalar: function ( s ) {\n\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\t\t\tthis.z += s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\t\t\tthis.z = a.z + b.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScaledVector: function ( v, s ) {\n\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\t\t\tthis.z += v.z * s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsub: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\t\treturn this.subVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\t\t\tthis.z -= v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubScalar: function ( s ) {\n\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\t\t\tthis.z -= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\t\t\tthis.z = a.z - b.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x *= v.x;\n\t\t\tthis.y *= v.y;\n\t\t\tthis.z *= v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( scalar ) {\n\n\t\t\tif ( isFinite( scalar ) ) {\n\n\t\t\t\tthis.x *= scalar;\n\t\t\t\tthis.y *= scalar;\n\t\t\t\tthis.z *= scalar;\n\n\t\t\t} else {\n\n\t\t\t\tthis.x = 0;\n\t\t\t\tthis.y = 0;\n\t\t\t\tthis.z = 0;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x * b.x;\n\t\t\tthis.y = a.y * b.y;\n\t\t\tthis.z = a.z * b.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyEuler: function () {\n\n\t\t\tvar quaternion;\n\n\t\t\treturn function applyEuler( euler ) {\n\n\t\t\t\tif ( euler instanceof THREE.Euler === false ) {\n\n\t\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t\t}\n\n\t\t\t\tif ( quaternion === undefined ) quaternion = new THREE.Quaternion();\n\n\t\t\t\treturn this.applyQuaternion( quaternion.setFromEuler( euler ) );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tapplyAxisAngle: function () {\n\n\t\t\tvar quaternion;\n\n\t\t\treturn function applyAxisAngle( axis, angle ) {\n\n\t\t\t\tif ( quaternion === undefined ) quaternion = new THREE.Quaternion();\n\n\t\t\t\treturn this.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tapplyMatrix3: function ( m ) {\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyMatrix4: function ( m ) {\n\n\t\t\t// input: THREE.Matrix4 affine matrix\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ];\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ];\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyProjection: function ( m ) {\n\n\t\t\t// input: THREE.Matrix4 projection matrix\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar e = m.elements;\n\t\t\tvar d = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] ); // perspective divide\n\n\t\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ] ) * d;\n\t\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ] ) * d;\n\t\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * d;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyQuaternion: function ( q ) {\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t\t// calculate quat * vector\n\n\t\t\tvar ix =  qw * x + qy * z - qz * y;\n\t\t\tvar iy =  qw * y + qz * x - qx * z;\n\t\t\tvar iz =  qw * z + qx * y - qy * x;\n\t\t\tvar iw = - qx * x - qy * y - qz * z;\n\n\t\t\t// calculate result * inverse quat\n\n\t\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tproject: function () {\n\n\t\t\tvar matrix;\n\n\t\t\treturn function project( camera ) {\n\n\t\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\n\n\t\t\t\tmatrix.multiplyMatrices( camera.projectionMatrix, matrix.getInverse( camera.matrixWorld ) );\n\t\t\t\treturn this.applyProjection( matrix );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tunproject: function () {\n\n\t\t\tvar matrix;\n\n\t\t\treturn function unproject( camera ) {\n\n\t\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\n\n\t\t\t\tmatrix.multiplyMatrices( camera.matrixWorld, matrix.getInverse( camera.projectionMatrix ) );\n\t\t\t\treturn this.applyProjection( matrix );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttransformDirection: function ( m ) {\n\n\t\t\t// input: THREE.Matrix4 affine matrix\n\t\t\t// vector interpreted as a direction\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z;\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z;\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\t\treturn this.normalize();\n\n\t\t},\n\n\t\tdivide: function ( v ) {\n\n\t\t\tthis.x /= v.x;\n\t\t\tthis.y /= v.y;\n\t\t\tthis.z /= v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdivideScalar: function ( scalar ) {\n\n\t\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t\t},\n\n\t\tmin: function ( v ) {\n\n\t\t\tthis.x = Math.min( this.x, v.x );\n\t\t\tthis.y = Math.min( this.y, v.y );\n\t\t\tthis.z = Math.min( this.z, v.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmax: function ( v ) {\n\n\t\t\tthis.x = Math.max( this.x, v.x );\n\t\t\tthis.y = Math.max( this.y, v.y );\n\t\t\tthis.z = Math.max( this.z, v.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclamp: function ( min, max ) {\n\n\t\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\n\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclampScalar: function () {\n\n\t\t\tvar min, max;\n\n\t\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\t\tif ( min === undefined ) {\n\n\t\t\t\t\tmin = new THREE.Vector3();\n\t\t\t\t\tmax = new THREE.Vector3();\n\n\t\t\t\t}\n\n\t\t\t\tmin.set( minVal, minVal, minVal );\n\t\t\t\tmax.set( maxVal, maxVal, maxVal );\n\n\t\t\t\treturn this.clamp( min, max );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclampLength: function ( min, max ) {\n\n\t\t\tvar length = this.length();\n\n\t\t\treturn this.multiplyScalar( Math.max( min, Math.min( max, length ) ) / length );\n\n\t\t},\n\n\t\tfloor: function () {\n\n\t\t\tthis.x = Math.floor( this.x );\n\t\t\tthis.y = Math.floor( this.y );\n\t\t\tthis.z = Math.floor( this.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tceil: function () {\n\n\t\t\tthis.x = Math.ceil( this.x );\n\t\t\tthis.y = Math.ceil( this.y );\n\t\t\tthis.z = Math.ceil( this.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tround: function () {\n\n\t\t\tthis.x = Math.round( this.x );\n\t\t\tthis.y = Math.round( this.y );\n\t\t\tthis.z = Math.round( this.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\troundToZero: function () {\n\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnegate: function () {\n\n\t\t\tthis.x = - this.x;\n\t\t\tthis.y = - this.y;\n\t\t\tthis.z = - this.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdot: function ( v ) {\n\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t\t},\n\n\t\tlengthSq: function () {\n\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t\t},\n\n\t\tlength: function () {\n\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t\t},\n\n\t\tlengthManhattan: function () {\n\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\treturn this.divideScalar( this.length() );\n\n\t\t},\n\n\t\tsetLength: function ( length ) {\n\n\t\t\treturn this.multiplyScalar( length / this.length() );\n\n\t\t},\n\n\t\tlerp: function ( v, alpha ) {\n\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t\t},\n\n\t\tcross: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\t\treturn this.crossVectors( v, w );\n\n\t\t\t}\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\n\t\t\tthis.x = y * v.z - z * v.y;\n\t\t\tthis.y = z * v.x - x * v.z;\n\t\t\tthis.z = x * v.y - y * v.x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcrossVectors: function ( a, b ) {\n\n\t\t\tvar ax = a.x, ay = a.y, az = a.z;\n\t\t\tvar bx = b.x, by = b.y, bz = b.z;\n\n\t\t\tthis.x = ay * bz - az * by;\n\t\t\tthis.y = az * bx - ax * bz;\n\t\t\tthis.z = ax * by - ay * bx;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tprojectOnVector: function ( vector ) {\n\n\t\t\tvar scalar = vector.dot( this ) / vector.lengthSq();\n\t\t\n\t\t\treturn this.copy( vector ).multiplyScalar( scalar );\n\t\t\n\t\t},\n\n\t\tprojectOnPlane: function () {\n\n\t\t\tvar v1;\n\n\t\t\treturn function projectOnPlane( planeNormal ) {\n\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\n\n\t\t\t\tv1.copy( this ).projectOnVector( planeNormal );\n\n\t\t\t\treturn this.sub( v1 );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\treflect: function () {\n\n\t\t\t// reflect incident vector off plane orthogonal to normal\n\t\t\t// normal is assumed to have unit length\n\n\t\t\tvar v1;\n\n\t\t\treturn function reflect( normal ) {\n\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\n\n\t\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tangleTo: function ( v ) {\n\n\t\t\tvar theta = this.dot( v ) / ( Math.sqrt( this.lengthSq() * v.lengthSq() ) );\n\n\t\t\t// clamp, to handle numerical problems\n\n\t\t\treturn Math.acos( THREE.Math.clamp( theta, - 1, 1 ) );\n\n\t\t},\n\n\t\tdistanceTo: function ( v ) {\n\n\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t\t},\n\n\t\tdistanceToSquared: function ( v ) {\n\n\t\t\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t\t},\n\n\t\tdistanceToManhattan: function ( v ) {\n\n\t\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t\t},\n\n\t\tsetFromSpherical: function( s ) {\n\n\t\t\tvar sinPhiRadius = Math.sin( s.phi ) * s.radius;\n\n\t\t\tthis.x = sinPhiRadius * Math.sin( s.theta );\n\t\t\tthis.y = Math.cos( s.phi ) * s.radius;\n\t\t\tthis.z = sinPhiRadius * Math.cos( s.theta );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrixPosition: function ( m ) {\n\n\t\t\treturn this.setFromMatrixColumn( m, 3 );\n\n\t\t},\n\n\t\tsetFromMatrixScale: function ( m ) {\n\n\t\t\tvar sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\t\tvar sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\t\tvar sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\t\tthis.x = sx;\n\t\t\tthis.y = sy;\n\t\t\tthis.z = sz;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrixColumn: function ( m, index ) {\n\n\t\t\tif ( typeof m === 'number' ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: setFromMatrixColumn now expects ( matrix, index ).' );\n\t\t\t\tvar temp = m\n\t\t\t\tm = index;\n\t\t\t\tindex = temp;\n\n\t\t\t}\n\n\t\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t\t},\n\n\t\tequals: function ( v ) {\n\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.x = array[ offset ];\n\t\t\tthis.y = array[ offset + 1 ];\n\t\t\tthis.z = array[ offset + 2 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this.x;\n\t\t\tarray[ offset + 1 ] = this.y;\n\t\t\tarray[ offset + 2 ] = this.z;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tindex = index * attribute.itemSize + offset;\n\n\t\t\tthis.x = attribute.array[ index ];\n\t\t\tthis.y = attribute.array[ index + 1 ];\n\t\t\tthis.z = attribute.array[ index + 2 ];\n\n\t\t\treturn this;\n\n\t\t}\n\n\t};\n\n\t// File:src/math/Vector4.js\n\n\t/**\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author egraether / http://egraether.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tTHREE.Vector4 = function ( x, y, z, w ) {\n\n\t\tthis.x = x || 0;\n\t\tthis.y = y || 0;\n\t\tthis.z = z || 0;\n\t\tthis.w = ( w !== undefined ) ? w : 1;\n\n\t};\n\n\tTHREE.Vector4.prototype = {\n\n\t\tconstructor: THREE.Vector4,\n\n\t\tset: function ( x, y, z, w ) {\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\t\t\tthis.w = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetScalar: function ( scalar ) {\n\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\t\t\tthis.z = scalar;\n\t\t\tthis.w = scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetX: function ( x ) {\n\n\t\t\tthis.x = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetY: function ( y ) {\n\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetZ: function ( z ) {\n\n\t\t\tthis.z = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetW: function ( w ) {\n\n\t\t\tthis.w = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetComponent: function ( index, value ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: this.x = value; break;\n\t\t\t\tcase 1: this.y = value; break;\n\t\t\t\tcase 2: this.z = value; break;\n\t\t\t\tcase 3: this.w = value; break;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t},\n\n\t\tgetComponent: function ( index ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: return this.x;\n\t\t\t\tcase 1: return this.y;\n\t\t\t\tcase 2: return this.z;\n\t\t\t\tcase 3: return this.w;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t\t},\n\n\t\tcopy: function ( v ) {\n\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\t\t\tthis.z = v.z;\n\t\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\t\treturn this.addVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\t\t\tthis.z += v.z;\n\t\t\tthis.w += v.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScalar: function ( s ) {\n\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\t\t\tthis.z += s;\n\t\t\tthis.w += s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\t\t\tthis.z = a.z + b.z;\n\t\t\tthis.w = a.w + b.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScaledVector: function ( v, s ) {\n\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\t\t\tthis.z += v.z * s;\n\t\t\tthis.w += v.w * s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsub: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\t\treturn this.subVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\t\t\tthis.z -= v.z;\n\t\t\tthis.w -= v.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubScalar: function ( s ) {\n\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\t\t\tthis.z -= s;\n\t\t\tthis.w -= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\t\t\tthis.z = a.z - b.z;\n\t\t\tthis.w = a.w - b.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( scalar ) {\n\n\t\t\tif ( isFinite( scalar ) ) {\n\n\t\t\t\tthis.x *= scalar;\n\t\t\t\tthis.y *= scalar;\n\t\t\t\tthis.z *= scalar;\n\t\t\t\tthis.w *= scalar;\n\n\t\t\t} else {\n\n\t\t\t\tthis.x = 0;\n\t\t\t\tthis.y = 0;\n\t\t\t\tthis.z = 0;\n\t\t\t\tthis.w = 0;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyMatrix4: function ( m ) {\n\n\t\t\tvar x = this.x, y = this.y, z = this.z, w = this.w;\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdivideScalar: function ( scalar ) {\n\n\t\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t\t},\n\n\t\tsetAxisAngleFromQuaternion: function ( q ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t\t// q is assumed to be normalized\n\n\t\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\t\tvar s = Math.sqrt( 1 - q.w * q.w );\n\n\t\t\tif ( s < 0.0001 ) {\n\n\t\t\t\t this.x = 1;\n\t\t\t\t this.y = 0;\n\t\t\t\t this.z = 0;\n\n\t\t\t} else {\n\n\t\t\t\t this.x = q.x / s;\n\t\t\t\t this.y = q.y / s;\n\t\t\t\t this.z = q.z / s;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetAxisAngleFromRotationMatrix: function ( m ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tvar angle, x, y, z,\t\t// variables for result\n\t\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\t\tte = m.elements,\n\n\t\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t\t// singularity found\n\t\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t\t}\n\n\t\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\t\tangle = Math.PI;\n\n\t\t\t\tvar xx = ( m11 + 1 ) / 2;\n\t\t\t\tvar yy = ( m22 + 1 ) / 2;\n\t\t\t\tvar zz = ( m33 + 1 ) / 2;\n\t\t\t\tvar xy = ( m12 + m21 ) / 4;\n\t\t\t\tvar xz = ( m13 + m31 ) / 4;\n\t\t\t\tvar yz = ( m23 + m32 ) / 4;\n\n\t\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\t\tx = 0;\n\t\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\t\ty = xy / x;\n\t\t\t\t\t\tz = xz / x;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\t\ty = 0;\n\t\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\t\tx = xy / y;\n\t\t\t\t\t\tz = yz / y;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\t\tz = 0;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\t\tx = xz / z;\n\t\t\t\t\t\ty = yz / z;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.set( x, y, z, angle );\n\n\t\t\t\treturn this; // return 180 deg rotation\n\n\t\t\t}\n\n\t\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t                   ( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t                   ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\t\tthis.x = ( m32 - m23 ) / s;\n\t\t\tthis.y = ( m13 - m31 ) / s;\n\t\t\tthis.z = ( m21 - m12 ) / s;\n\t\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmin: function ( v ) {\n\n\t\t\tthis.x = Math.min( this.x, v.x );\n\t\t\tthis.y = Math.min( this.y, v.y );\n\t\t\tthis.z = Math.min( this.z, v.z );\n\t\t\tthis.w = Math.min( this.w, v.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmax: function ( v ) {\n\n\t\t\tthis.x = Math.max( this.x, v.x );\n\t\t\tthis.y = Math.max( this.y, v.y );\n\t\t\tthis.z = Math.max( this.z, v.z );\n\t\t\tthis.w = Math.max( this.w, v.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclamp: function ( min, max ) {\n\n\t\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\n\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclampScalar: function () {\n\n\t\t\tvar min, max;\n\n\t\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\t\tif ( min === undefined ) {\n\n\t\t\t\t\tmin = new THREE.Vector4();\n\t\t\t\t\tmax = new THREE.Vector4();\n\n\t\t\t\t}\n\n\t\t\t\tmin.set( minVal, minVal, minVal, minVal );\n\t\t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\n\n\t\t\t\treturn this.clamp( min, max );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tfloor: function () {\n\n\t\t\tthis.x = Math.floor( this.x );\n\t\t\tthis.y = Math.floor( this.y );\n\t\t\tthis.z = Math.floor( this.z );\n\t\t\tthis.w = Math.floor( this.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tceil: function () {\n\n\t\t\tthis.x = Math.ceil( this.x );\n\t\t\tthis.y = Math.ceil( this.y );\n\t\t\tthis.z = Math.ceil( this.z );\n\t\t\tthis.w = Math.ceil( this.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tround: function () {\n\n\t\t\tthis.x = Math.round( this.x );\n\t\t\tthis.y = Math.round( this.y );\n\t\t\tthis.z = Math.round( this.z );\n\t\t\tthis.w = Math.round( this.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\troundToZero: function () {\n\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnegate: function () {\n\n\t\t\tthis.x = - this.x;\n\t\t\tthis.y = - this.y;\n\t\t\tthis.z = - this.z;\n\t\t\tthis.w = - this.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdot: function ( v ) {\n\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t\t},\n\n\t\tlengthSq: function () {\n\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t\t},\n\n\t\tlength: function () {\n\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t\t},\n\n\t\tlengthManhattan: function () {\n\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\treturn this.divideScalar( this.length() );\n\n\t\t},\n\n\t\tsetLength: function ( length ) {\n\n\t\t\treturn this.multiplyScalar( length / this.length() );\n\n\t\t},\n\n\t\tlerp: function ( v, alpha ) {\n\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t\t},\n\n\t\tequals: function ( v ) {\n\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.x = array[ offset ];\n\t\t\tthis.y = array[ offset + 1 ];\n\t\t\tthis.z = array[ offset + 2 ];\n\t\t\tthis.w = array[ offset + 3 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this.x;\n\t\t\tarray[ offset + 1 ] = this.y;\n\t\t\tarray[ offset + 2 ] = this.z;\n\t\t\tarray[ offset + 3 ] = this.w;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tindex = index * attribute.itemSize + offset;\n\n\t\t\tthis.x = attribute.array[ index ];\n\t\t\tthis.y = attribute.array[ index + 1 ];\n\t\t\tthis.z = attribute.array[ index + 2 ];\n\t\t\tthis.w = attribute.array[ index + 3 ];\n\n\t\t\treturn this;\n\n\t\t}\n\n\t};\n\n\t// File:src/math/Euler.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author bhouston / http://clara.io\n\t */\n\n\tTHREE.Euler = function ( x, y, z, order ) {\n\n\t\tthis._x = x || 0;\n\t\tthis._y = y || 0;\n\t\tthis._z = z || 0;\n\t\tthis._order = order || THREE.Euler.DefaultOrder;\n\n\t};\n\n\tTHREE.Euler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\n\tTHREE.Euler.DefaultOrder = 'XYZ';\n\n\tTHREE.Euler.prototype = {\n\n\t\tconstructor: THREE.Euler,\n\n\t\tget x () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset x ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t},\n\n\t\tget y () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset y ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t},\n\n\t\tget z () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset z ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t},\n\n\t\tget order () {\n\n\t\t\treturn this._order;\n\n\t\t},\n\n\t\tset order ( value ) {\n\n\t\t\tthis._order = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t},\n\n\t\tset: function ( x, y, z, order ) {\n\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\t\t\tthis._order = order || this._order;\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t\t},\n\n\t\tcopy: function ( euler ) {\n\n\t\t\tthis._x = euler._x;\n\t\t\tthis._y = euler._y;\n\t\t\tthis._z = euler._z;\n\t\t\tthis._order = euler._order;\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromRotationMatrix: function ( m, order, update ) {\n\n\t\t\tvar clamp = THREE.Math.clamp;\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tvar te = m.elements;\n\t\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\t\torder = order || this._order;\n\n\t\t\tif ( order === 'XYZ' ) {\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t} else if ( order === 'YZX' ) {\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t} else if ( order === 'XZY' ) {\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order );\n\n\t\t\t}\n\n\t\t\tthis._order = order;\n\n\t\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromQuaternion: function () {\n\n\t\t\tvar matrix;\n\n\t\t\treturn function setFromQuaternion( q, order, update ) {\n\n\t\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\n\n\t\t\t\tmatrix.makeRotationFromQuaternion( q );\n\n\t\t\t\treturn this.setFromRotationMatrix( matrix, order, update );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tsetFromVector3: function ( v, order ) {\n\n\t\t\treturn this.set( v.x, v.y, v.z, order || this._order );\n\n\t\t},\n\n\t\treorder: function () {\n\n\t\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t\tvar q = new THREE.Quaternion();\n\n\t\t\treturn function reorder( newOrder ) {\n\n\t\t\t\tq.setFromEuler( this );\n\t\t\t\t\n\t\t\t\treturn this.setFromQuaternion( q, newOrder );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tequals: function ( euler ) {\n\n\t\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t\t},\n\n\t\tfromArray: function ( array ) {\n\n\t\t\tthis._x = array[ 0 ];\n\t\t\tthis._y = array[ 1 ];\n\t\t\tthis._z = array[ 2 ];\n\t\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\t\tthis.onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tarray[ offset ] = this._x;\n\t\t\tarray[ offset + 1 ] = this._y;\n\t\t\tarray[ offset + 2 ] = this._z;\n\t\t\tarray[ offset + 3 ] = this._order;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\ttoVector3: function ( optionalResult ) {\n\n\t\t\tif ( optionalResult ) {\n\n\t\t\t\treturn optionalResult.set( this._x, this._y, this._z );\n\n\t\t\t} else {\n\n\t\t\t\treturn new THREE.Vector3( this._x, this._y, this._z );\n\n\t\t\t}\n\n\t\t},\n\n\t\tonChange: function ( callback ) {\n\n\t\t\tthis.onChangeCallback = callback;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tonChangeCallback: function () {}\n\n\t};\n\n\t// File:src/math/Line3.js\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t */\n\n\tTHREE.Line3 = function ( start, end ) {\n\n\t\tthis.start = ( start !== undefined ) ? start : new THREE.Vector3();\n\t\tthis.end = ( end !== undefined ) ? end : new THREE.Vector3();\n\n\t};\n\n\tTHREE.Line3.prototype = {\n\n\t\tconstructor: THREE.Line3,\n\n\t\tset: function ( start, end ) {\n\n\t\t\tthis.start.copy( start );\n\t\t\tthis.end.copy( end );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( line ) {\n\n\t\t\tthis.start.copy( line.start );\n\t\t\tthis.end.copy( line.end );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcenter: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\n\t\t\treturn result.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t\t},\n\n\t\tdelta: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\n\t\t\treturn result.subVectors( this.end, this.start );\n\n\t\t},\n\n\t\tdistanceSq: function () {\n\n\t\t\treturn this.start.distanceToSquared( this.end );\n\n\t\t},\n\n\t\tdistance: function () {\n\n\t\t\treturn this.start.distanceTo( this.end );\n\n\t\t},\n\n\t\tat: function ( t, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\n\n\t\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\n\n\t\t},\n\n\t\tclosestPointToPointParameter: function () {\n\n\t\t\tvar startP = new THREE.Vector3();\n\t\t\tvar startEnd = new THREE.Vector3();\n\n\t\t\treturn function closestPointToPointParameter( point, clampToLine ) {\n\n\t\t\t\tstartP.subVectors( point, this.start );\n\t\t\t\tstartEnd.subVectors( this.end, this.start );\n\n\t\t\t\tvar startEnd2 = startEnd.dot( startEnd );\n\t\t\t\tvar startEnd_startP = startEnd.dot( startP );\n\n\t\t\t\tvar t = startEnd_startP / startEnd2;\n\n\t\t\t\tif ( clampToLine ) {\n\n\t\t\t\t\tt = THREE.Math.clamp( t, 0, 1 );\n\n\t\t\t\t}\n\n\t\t\t\treturn t;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclosestPointToPoint: function ( point, clampToLine, optionalTarget ) {\n\n\t\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\n\n\t\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\n\n\t\t},\n\n\t\tapplyMatrix4: function ( matrix ) {\n\n\t\t\tthis.start.applyMatrix4( matrix );\n\t\t\tthis.end.applyMatrix4( matrix );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( line ) {\n\n\t\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t\t}\n\n\t};\n\n\t// File:src/math/Box2.js\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t */\n\n\tTHREE.Box2 = function ( min, max ) {\n\n\t\tthis.min = ( min !== undefined ) ? min : new THREE.Vector2( + Infinity, + Infinity );\n\t\tthis.max = ( max !== undefined ) ? max : new THREE.Vector2( - Infinity, - Infinity );\n\n\t};\n\n\tTHREE.Box2.prototype = {\n\n\t\tconstructor: THREE.Box2,\n\n\t\tset: function ( min, max ) {\n\n\t\t\tthis.min.copy( min );\n\t\t\tthis.max.copy( max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromPoints: function ( points ) {\n\n\t\t\tthis.makeEmpty();\n\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromCenterAndSize: function () {\n\n\t\t\tvar v1 = new THREE.Vector2();\n\n\t\t\treturn function setFromCenterAndSize( center, size ) {\n\n\t\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\t\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( box ) {\n\n\t\t\tthis.min.copy( box.min );\n\t\t\tthis.max.copy( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeEmpty: function () {\n\n\t\t\tthis.min.x = this.min.y = + Infinity;\n\t\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tisEmpty: function () {\n\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t\t},\n\n\t\tcenter: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new THREE.Vector2();\n\t\t\treturn result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t\t},\n\n\t\tsize: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new THREE.Vector2();\n\t\t\treturn result.subVectors( this.max, this.min );\n\n\t\t},\n\n\t\texpandByPoint: function ( point ) {\n\n\t\t\tthis.min.min( point );\n\t\t\tthis.max.max( point );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByVector: function ( vector ) {\n\n\t\t\tthis.min.sub( vector );\n\t\t\tthis.max.add( vector );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByScalar: function ( scalar ) {\n\n\t\t\tthis.min.addScalar( - scalar );\n\t\t\tthis.max.addScalar( scalar );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\tif ( point.x < this.min.x || point.x > this.max.x ||\n\t\t\t     point.y < this.min.y || point.y > this.max.y ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tcontainsBox: function ( box ) {\n\n\t\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\n\t\t\t     ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) ) {\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t},\n\n\t\tgetParameter: function ( point, optionalTarget ) {\n\n\t\t\t// This can potentially have a divide by zero if the box\n\t\t\t// has a size dimension of 0.\n\n\t\t\tvar result = optionalTarget || new THREE.Vector2();\n\n\t\t\treturn result.set(\n\t\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t\t);\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\t// using 6 splitting planes to rule out intersections.\n\n\t\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\t     box.max.y < this.min.y || box.min.y > this.max.y ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tclampPoint: function ( point, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new THREE.Vector2();\n\t\t\treturn result.copy( point ).clamp( this.min, this.max );\n\n\t\t},\n\n\t\tdistanceToPoint: function () {\n\n\t\t\tvar v1 = new THREE.Vector2();\n\n\t\t\treturn function distanceToPoint( point ) {\n\n\t\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersect: function ( box ) {\n\n\t\t\tthis.min.max( box.min );\n\t\t\tthis.max.min( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tunion: function ( box ) {\n\n\t\t\tthis.min.min( box.min );\n\t\t\tthis.max.max( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranslate: function ( offset ) {\n\n\t\t\tthis.min.add( offset );\n\t\t\tthis.max.add( offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( box ) {\n\n\t\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t\t}\n\n\t};\n\n\t// File:src/math/Box3.js\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tTHREE.Box3 = function ( min, max ) {\n\n\t\tthis.min = ( min !== undefined ) ? min : new THREE.Vector3( + Infinity, + Infinity, + Infinity );\n\t\tthis.max = ( max !== undefined ) ? max : new THREE.Vector3( - Infinity, - Infinity, - Infinity );\n\n\t};\n\n\tTHREE.Box3.prototype = {\n\n\t\tconstructor: THREE.Box3,\n\n\t\tset: function ( min, max ) {\n\n\t\t\tthis.min.copy( min );\n\t\t\tthis.max.copy( max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromArray: function ( array ) {\n\n\t\t\tvar minX = + Infinity;\n\t\t\tvar minY = + Infinity;\n\t\t\tvar minZ = + Infinity;\n\n\t\t\tvar maxX = - Infinity;\n\t\t\tvar maxY = - Infinity;\n\t\t\tvar maxZ = - Infinity;\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tvar x = array[ i ];\n\t\t\t\tvar y = array[ i + 1 ];\n\t\t\t\tvar z = array[ i + 2 ];\n\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\t\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t\t}\n\n\t\t\tthis.min.set( minX, minY, minZ );\n\t\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\t},\n\n\t\tsetFromPoints: function ( points ) {\n\n\t\t\tthis.makeEmpty();\n\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromCenterAndSize: function () {\n\n\t\t\tvar v1 = new THREE.Vector3();\n\n\t\t\treturn function setFromCenterAndSize( center, size ) {\n\n\t\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\n\t\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tsetFromObject: function () {\n\n\t\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t\t// accounting for both the object's, and children's, world transforms\n\n\t\t\tvar v1 = new THREE.Vector3();\n\n\t\t\treturn function setFromObject( object ) {\n\n\t\t\t\tvar scope = this;\n\n\t\t\t\tobject.updateMatrixWorld( true );\n\n\t\t\t\tthis.makeEmpty();\n\n\t\t\t\tobject.traverse( function ( node ) {\n\n\t\t\t\t\tvar geometry = node.geometry;\n\n\t\t\t\t\tif ( geometry !== undefined ) {\n\n\t\t\t\t\t\tif ( geometry instanceof THREE.Geometry ) {\n\n\t\t\t\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\t\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\tv1.copy( vertices[ i ] );\n\t\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else if ( geometry instanceof THREE.BufferGeometry ) {\n\n\t\t\t\t\t\t\tvar attribute = geometry.attributes.position;\n\n\t\t\t\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\t\t\t\tvar array, offset, stride;\n\n\t\t\t\t\t\t\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\n\n\t\t\t\t\t\t\t\t\tarray = attribute.data.array;\n\t\t\t\t\t\t\t\t\toffset = attribute.offset;\n\t\t\t\t\t\t\t\t\tstride = attribute.data.stride;\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tarray = attribute.array;\n\t\t\t\t\t\t\t\t\toffset = 0;\n\t\t\t\t\t\t\t\t\tstride = 3;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tfor ( var i = offset, il = array.length; i < il; i += stride ) {\n\n\t\t\t\t\t\t\t\t\tv1.fromArray( array, i );\n\t\t\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( box ) {\n\n\t\t\tthis.min.copy( box.min );\n\t\t\tthis.max.copy( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeEmpty: function () {\n\n\t\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tisEmpty: function () {\n\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t\t},\n\n\t\tcenter: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\n\t\t\treturn result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t\t},\n\n\t\tsize: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\n\t\t\treturn result.subVectors( this.max, this.min );\n\n\t\t},\n\n\t\texpandByPoint: function ( point ) {\n\n\t\t\tthis.min.min( point );\n\t\t\tthis.max.max( point );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByVector: function ( vector ) {\n\n\t\t\tthis.min.sub( vector );\n\t\t\tthis.max.add( vector );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByScalar: function ( scalar ) {\n\n\t\t\tthis.min.addScalar( - scalar );\n\t\t\tthis.max.addScalar( scalar );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\tif ( point.x < this.min.x || point.x > this.max.x ||\n\t\t\t\t\t point.y < this.min.y || point.y > this.max.y ||\n\t\t\t\t\t point.z < this.min.z || point.z > this.max.z ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tcontainsBox: function ( box ) {\n\n\t\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\n\t\t\t\t ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) &&\n\t\t\t\t ( this.min.z <= box.min.z ) && ( box.max.z <= this.max.z ) ) {\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t},\n\n\t\tgetParameter: function ( point, optionalTarget ) {\n\n\t\t\t// This can potentially have a divide by zero if the box\n\t\t\t// has a size dimension of 0.\n\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\n\n\t\t\treturn result.set(\n\t\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t\t);\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\t// using 6 splitting planes to rule out intersections.\n\n\t\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\t\t\t box.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\t\t\t box.max.z < this.min.z || box.min.z > this.max.z ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tintersectsSphere: ( function () {\n\n\t\t\tvar closestPoint;\n\n\t\t\treturn function intersectsSphere( sphere ) {\n\n\t\t\t\tif ( closestPoint === undefined ) closestPoint = new THREE.Vector3();\n\n\t\t\t\t// Find the point on the AABB closest to the sphere center.\n\t\t\t\tthis.clampPoint( sphere.center, closestPoint );\n\n\t\t\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\t\t\treturn closestPoint.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t\t\t};\n\n\t\t} )(),\n\n\t\tintersectsPlane: function ( plane ) {\n\n\t\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\t\tvar min, max;\n\n\t\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t\t} else {\n\n\t\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t\t}\n\n\t\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t\t} else {\n\n\t\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t\t}\n\n\t\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t\t} else {\n\n\t\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t\t}\n\n\t\t\treturn ( min <= plane.constant && max >= plane.constant );\n\n\t\t},\n\n\t\tclampPoint: function ( point, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\n\t\t\treturn result.copy( point ).clamp( this.min, this.max );\n\n\t\t},\n\n\t\tdistanceToPoint: function () {\n\n\t\t\tvar v1 = new THREE.Vector3();\n\n\t\t\treturn function distanceToPoint( point ) {\n\n\t\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tgetBoundingSphere: function () {\n\n\t\t\tvar v1 = new THREE.Vector3();\n\n\t\t\treturn function getBoundingSphere( optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new THREE.Sphere();\n\n\t\t\t\tresult.center = this.center();\n\t\t\t\tresult.radius = this.size( v1 ).length() * 0.5;\n\n\t\t\t\treturn result;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersect: function ( box ) {\n\n\t\t\tthis.min.max( box.min );\n\t\t\tthis.max.min( box.max );\n\n\t\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\t\tif( this.isEmpty() ) this.makeEmpty();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tunion: function ( box ) {\n\n\t\t\tthis.min.min( box.min );\n\t\t\tthis.max.max( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyMatrix4: function () {\n\n\t\t\tvar points = [\n\t\t\t\tnew THREE.Vector3(),\n\t\t\t\tnew THREE.Vector3(),\n\t\t\t\tnew THREE.Vector3(),\n\t\t\t\tnew THREE.Vector3(),\n\t\t\t\tnew THREE.Vector3(),\n\t\t\t\tnew THREE.Vector3(),\n\t\t\t\tnew THREE.Vector3(),\n\t\t\t\tnew THREE.Vector3()\n\t\t\t];\n\n\t\t\treturn function applyMatrix4( matrix ) {\n\n\t\t\t\t// transform of empty box is an empty box.\n\t\t\t\tif( this.isEmpty() ) return this;\n\n\t\t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t\t\tpoints[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t\t\tpoints[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t\t\tpoints[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t\t\tpoints[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t\t\tpoints[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t\t\tpoints[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t\t\tpoints[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t\t\tpoints[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix );\t// 111\n\n\t\t\t\tthis.setFromPoints( points );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslate: function ( offset ) {\n\n\t\t\tthis.min.add( offset );\n\t\t\tthis.max.add( offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( box ) {\n\n\t\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t\t}\n\n\t};\n\n\t// File:src/math/Matrix3.js\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author bhouston / http://clara.io\n\t * @author tschw\n\t */\n\n\tTHREE.Matrix3 = function () {\n\n\t\tthis.elements = new Float32Array( [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t] );\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t};\n\n\tTHREE.Matrix3.prototype = {\n\n\t\tconstructor: THREE.Matrix3,\n\n\t\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tidentity: function () {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0,\n\t\t\t\t0, 1, 0,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().fromArray( this.elements );\n\n\t\t},\n\n\t\tcopy: function ( m ) {\n\n\t\t\tvar me = m.elements;\n\n\t\t\tthis.set(\n\n\t\t\t\tme[ 0 ], me[ 3 ], me[ 6 ],\n\t\t\t\tme[ 1 ], me[ 4 ], me[ 7 ],\n\t\t\t\tme[ 2 ], me[ 5 ], me[ 8 ]\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrix4: function( m ) {\n\n\t\t\tvar me = m.elements;\n\n\t\t\tthis.set(\n\n\t\t\t\tme[ 0 ], me[ 4 ], me[  8 ],\n\t\t\t\tme[ 1 ], me[ 5 ], me[  9 ],\n\t\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyToVector3Array: function () {\n\n\t\t\tvar v1;\n\n\t\t\treturn function applyToVector3Array( array, offset, length ) {\n\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\n\t\t\t\tif ( offset === undefined ) offset = 0;\n\t\t\t\tif ( length === undefined ) length = array.length;\n\n\t\t\t\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\n\n\t\t\t\t\tv1.fromArray( array, j );\n\t\t\t\t\tv1.applyMatrix3( this );\n\t\t\t\t\tv1.toArray( array, j );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tapplyToBuffer: function () {\n\n\t\t\tvar v1;\n\n\t\t\treturn function applyToBuffer( buffer, offset, length ) {\n\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\n\t\t\t\tif ( offset === undefined ) offset = 0;\n\t\t\t\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\n\n\t\t\t\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\n\n\t\t\t\t\tv1.x = buffer.getX( j );\n\t\t\t\t\tv1.y = buffer.getY( j );\n\t\t\t\t\tv1.z = buffer.getZ( j );\n\n\t\t\t\t\tv1.applyMatrix3( this );\n\n\t\t\t\t\tbuffer.setXYZ( v1.x, v1.y, v1.z );\n\n\t\t\t\t}\n\n\t\t\t\treturn buffer;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tmultiplyScalar: function ( s ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdeterminant: function () {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t\t},\n\n\t\tgetInverse: function ( matrix, throwOnDegenerate ) {\n\n\t\t\tif ( matrix instanceof THREE.Matrix4 ) {\n\n\t\t\t\tconsole.error( \"THREE.Matrix3.getInverse no longer takes a Matrix4 argument.\" );\n\n\t\t\t}\n\n\t\t\tvar me = matrix.elements,\n\t\t\t\tte = this.elements,\n\n\t\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ],\n\t\t\t\tn12 = me[ 3 ], n22 = me[ 4 ], n32 = me[ 5 ],\n\t\t\t\tn13 = me[ 6 ], n23 = me[ 7 ], n33 = me[ 8 ],\n\n\t\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\t\tif ( det === 0 ) {\n\n\t\t\t\tvar msg = \"THREE.Matrix3.getInverse(): can't invert matrix, determinant is 0\";\n\n\t\t\t\tif ( throwOnDegenerate || false ) {\n\n\t\t\t\t\tthrow new Error( msg );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( msg );\n\n\t\t\t\t}\n\n\t\t\t\treturn this.identity();\n\t\t\t}\n\t\t\t\n\t\t\tvar detInv = 1 / det;\n\n\t\t\tte[ 0 ] = t11 * detInv;\n\t\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\t\tte[ 3 ] = t12 * detInv;\n\t\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\t\tte[ 6 ] = t13 * detInv;\n\t\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranspose: function () {\n\n\t\t\tvar tmp, m = this.elements;\n\n\t\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\t\tconsole.warn( \"THREE.Matrix3: .flattenToArrayOffset is deprecated \" +\n\t\t\t\t\t\"- just use .toArray instead.\" );\n\n\t\t\treturn this.toArray( array, offset );\n\n\t\t},\n\n\t\tgetNormalMatrix: function ( matrix4 ) {\n\n\t\t\treturn this.setFromMatrix4( matrix4 ).getInverse( this ).transpose();\n\n\t\t},\n\n\t\ttransposeIntoArray: function ( r ) {\n\n\t\t\tvar m = this.elements;\n\n\t\t\tr[ 0 ] = m[ 0 ];\n\t\t\tr[ 1 ] = m[ 3 ];\n\t\t\tr[ 2 ] = m[ 6 ];\n\t\t\tr[ 3 ] = m[ 1 ];\n\t\t\tr[ 4 ] = m[ 4 ];\n\t\t\tr[ 5 ] = m[ 7 ];\n\t\t\tr[ 6 ] = m[ 2 ];\n\t\t\tr[ 7 ] = m[ 5 ];\n\t\t\tr[ 8 ] = m[ 8 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tfromArray: function ( array ) {\n\n\t\t\tthis.elements.set( array );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tvar te = this.elements;\n\n\t\t\tarray[ offset ] = te[ 0 ];\n\t\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\t\tarray[ offset + 8 ]  = te[ 8 ];\n\n\t\t\treturn array;\n\n\t\t}\n\n\t};\n\n\t// File:src/math/Matrix4.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author jordi_ros / http://plattsoft.com\n\t * @author D1plo1d / http://github.com/D1plo1d\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author timknip / http://www.floorplanner.com/\n\t * @author bhouston / http://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tTHREE.Matrix4 = function () {\n\n\t\tthis.elements = new Float32Array( [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t] );\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t};\n\n\tTHREE.Matrix4.prototype = {\n\n\t\tconstructor: THREE.Matrix4,\n\n\t\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tidentity: function () {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, 0,\n\t\t\t\t0, 1, 0, 0,\n\t\t\t\t0, 0, 1, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new THREE.Matrix4().fromArray( this.elements );\n\n\t\t},\n\n\t\tcopy: function ( m ) {\n\n\t\t\tthis.elements.set( m.elements );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyPosition: function ( m ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = m.elements;\n\n\t\t\tte[ 12 ] = me[ 12 ];\n\t\t\tte[ 13 ] = me[ 13 ];\n\t\t\tte[ 14 ] = me[ 14 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\textractBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\t\tthis.set(\n\t\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t\t0,       0,       0,       1\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\textractRotation: function () {\n\n\t\t\tvar v1;\n\n\t\t\treturn function extractRotation( m ) {\n\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\n\n\t\t\t\tvar te = this.elements;\n\t\t\t\tvar me = m.elements;\n\n\t\t\t\tvar scaleX = 1 / v1.setFromMatrixColumn( m, 0 ).length();\n\t\t\t\tvar scaleY = 1 / v1.setFromMatrixColumn( m, 1 ).length();\n\t\t\t\tvar scaleZ = 1 / v1.setFromMatrixColumn( m, 2 ).length();\n\n\t\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\n\t\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\n\t\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tmakeRotationFromEuler: function ( euler ) {\n\n\t\t\tif ( euler instanceof THREE.Euler === false ) {\n\n\t\t\t\tconsole.error( 'THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar x = euler.x, y = euler.y, z = euler.z;\n\t\t\tvar a = Math.cos( x ), b = Math.sin( x );\n\t\t\tvar c = Math.cos( y ), d = Math.sin( y );\n\t\t\tvar e = Math.cos( z ), f = Math.sin( z );\n\n\t\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = - c * f;\n\t\t\t\tte[ 8 ] = d;\n\n\t\t\t\tte[ 1 ] = af + be * d;\n\t\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\t\tte[ 9 ] = - b * c;\n\n\t\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\t\tte[ 6 ] = be + af * d;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\t\tte[ 0 ] = ce + df * b;\n\t\t\t\tte[ 4 ] = de * b - cf;\n\t\t\t\tte[ 8 ] = a * d;\n\n\t\t\t\tte[ 1 ] = a * f;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = - b;\n\n\t\t\t\tte[ 2 ] = cf * b - de;\n\t\t\t\tte[ 6 ] = df + ce * b;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\t\tte[ 0 ] = ce - df * b;\n\t\t\t\tte[ 4 ] = - a * f;\n\t\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\t\tte[ 1 ] = cf + de * b;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\t\tte[ 2 ] = - a * d;\n\t\t\t\tte[ 6 ] = b;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = be * d - af;\n\t\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\t\tte[ 1 ] = c * f;\n\t\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\t\tte[ 2 ] = - d;\n\t\t\t\tte[ 6 ] = b * c;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\t\tte[ 1 ] = f;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = - b * e;\n\n\t\t\t\tte[ 2 ] = - d * e;\n\t\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = - f;\n\t\t\t\tte[ 8 ] = d * e;\n\n\t\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\t\tte[ 6 ] = b * e;\n\t\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t\t}\n\n\t\t\t// last column\n\t\t\tte[ 3 ] = 0;\n\t\t\tte[ 7 ] = 0;\n\t\t\tte[ 11 ] = 0;\n\n\t\t\t// bottom row\n\t\t\tte[ 12 ] = 0;\n\t\t\tte[ 13 ] = 0;\n\t\t\tte[ 14 ] = 0;\n\t\t\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationFromQuaternion: function ( q ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar x = q.x, y = q.y, z = q.z, w = q.w;\n\t\t\tvar x2 = x + x, y2 = y + y, z2 = z + z;\n\t\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\n\t\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\n\t\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\t\tte[ 0 ] = 1 - ( yy + zz );\n\t\t\tte[ 4 ] = xy - wz;\n\t\t\tte[ 8 ] = xz + wy;\n\n\t\t\tte[ 1 ] = xy + wz;\n\t\t\tte[ 5 ] = 1 - ( xx + zz );\n\t\t\tte[ 9 ] = yz - wx;\n\n\t\t\tte[ 2 ] = xz - wy;\n\t\t\tte[ 6 ] = yz + wx;\n\t\t\tte[ 10 ] = 1 - ( xx + yy );\n\n\t\t\t// last column\n\t\t\tte[ 3 ] = 0;\n\t\t\tte[ 7 ] = 0;\n\t\t\tte[ 11 ] = 0;\n\n\t\t\t// bottom row\n\t\t\tte[ 12 ] = 0;\n\t\t\tte[ 13 ] = 0;\n\t\t\tte[ 14 ] = 0;\n\t\t\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlookAt: function () {\n\n\t\t\tvar x, y, z;\n\n\t\t\treturn function lookAt( eye, target, up ) {\n\n\t\t\t\tif ( x === undefined ) {\n\n\t\t\t\t\tx = new THREE.Vector3();\n\t\t\t\t\ty = new THREE.Vector3();\n\t\t\t\t\tz = new THREE.Vector3();\n\n\t\t\t\t}\n\n\t\t\t\tvar te = this.elements;\n\n\t\t\t\tz.subVectors( eye, target ).normalize();\n\n\t\t\t\tif ( z.lengthSq() === 0 ) {\n\n\t\t\t\t\tz.z = 1;\n\n\t\t\t\t}\n\n\t\t\t\tx.crossVectors( up, z ).normalize();\n\n\t\t\t\tif ( x.lengthSq() === 0 ) {\n\n\t\t\t\t\tz.z += 0.0001;\n\t\t\t\t\tx.crossVectors( up, z ).normalize();\n\n\t\t\t\t}\n\n\t\t\t\ty.crossVectors( z, x );\n\n\n\t\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\n\t\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\n\t\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tmultiply: function ( m, n ) {\n\n\t\t\tif ( n !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\t\treturn this.multiplyMatrices( m, n );\n\n\t\t\t}\n\n\t\t\treturn this.multiplyMatrices( this, m );\n\n\t\t},\n\n\t\tpremultiply: function ( m ) {\n\n\t\t\treturn this.multiplyMatrices( m, this );\n\n\t\t},\n\n\t\tmultiplyMatrices: function ( a, b ) {\n\n\t\t\tvar ae = a.elements;\n\t\t\tvar be = b.elements;\n\t\t\tvar te = this.elements;\n\n\t\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyToArray: function ( a, b, r ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tthis.multiplyMatrices( a, b );\n\n\t\t\tr[ 0 ] = te[ 0 ]; r[ 1 ] = te[ 1 ]; r[ 2 ] = te[ 2 ]; r[ 3 ] = te[ 3 ];\n\t\t\tr[ 4 ] = te[ 4 ]; r[ 5 ] = te[ 5 ]; r[ 6 ] = te[ 6 ]; r[ 7 ] = te[ 7 ];\n\t\t\tr[ 8 ]  = te[ 8 ]; r[ 9 ]  = te[ 9 ]; r[ 10 ] = te[ 10 ]; r[ 11 ] = te[ 11 ];\n\t\t\tr[ 12 ] = te[ 12 ]; r[ 13 ] = te[ 13 ]; r[ 14 ] = te[ 14 ]; r[ 15 ] = te[ 15 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( s ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyToVector3Array: function () {\n\n\t\t\tvar v1;\n\n\t\t\treturn function applyToVector3Array( array, offset, length ) {\n\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\n\t\t\t\tif ( offset === undefined ) offset = 0;\n\t\t\t\tif ( length === undefined ) length = array.length;\n\n\t\t\t\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\n\n\t\t\t\t\tv1.fromArray( array, j );\n\t\t\t\t\tv1.applyMatrix4( this );\n\t\t\t\t\tv1.toArray( array, j );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tapplyToBuffer: function () {\n\n\t\t\tvar v1;\n\n\t\t\treturn function applyToBuffer( buffer, offset, length ) {\n\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\n\t\t\t\tif ( offset === undefined ) offset = 0;\n\t\t\t\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\n\n\t\t\t\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\n\n\t\t\t\t\tv1.x = buffer.getX( j );\n\t\t\t\t\tv1.y = buffer.getY( j );\n\t\t\t\t\tv1.z = buffer.getZ( j );\n\n\t\t\t\t\tv1.applyMatrix4( this );\n\n\t\t\t\t\tbuffer.setXYZ( v1.x, v1.y, v1.z );\n\n\t\t\t\t}\n\n\t\t\t\treturn buffer;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tdeterminant: function () {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t\t//TODO: make this more efficient\n\t\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\t\treturn (\n\t\t\t\tn41 * (\n\t\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t\t - n13 * n24 * n32\n\t\t\t\t\t - n14 * n22 * n33\n\t\t\t\t\t + n12 * n24 * n33\n\t\t\t\t\t + n13 * n22 * n34\n\t\t\t\t\t - n12 * n23 * n34\n\t\t\t\t) +\n\t\t\t\tn42 * (\n\t\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t\t - n11 * n24 * n33\n\t\t\t\t\t + n14 * n21 * n33\n\t\t\t\t\t - n13 * n21 * n34\n\t\t\t\t\t + n13 * n24 * n31\n\t\t\t\t\t - n14 * n23 * n31\n\t\t\t\t) +\n\t\t\t\tn43 * (\n\t\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t\t - n11 * n22 * n34\n\t\t\t\t\t - n14 * n21 * n32\n\t\t\t\t\t + n12 * n21 * n34\n\t\t\t\t\t + n14 * n22 * n31\n\t\t\t\t\t - n12 * n24 * n31\n\t\t\t\t) +\n\t\t\t\tn44 * (\n\t\t\t\t\t- n13 * n22 * n31\n\t\t\t\t\t - n11 * n23 * n32\n\t\t\t\t\t + n11 * n22 * n33\n\t\t\t\t\t + n13 * n21 * n32\n\t\t\t\t\t - n12 * n21 * n33\n\t\t\t\t\t + n12 * n23 * n31\n\t\t\t\t)\n\n\t\t\t);\n\n\t\t},\n\n\t\ttranspose: function () {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar tmp;\n\n\t\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\t\tconsole.warn( \"THREE.Matrix3: .flattenToArrayOffset is deprecated \" +\n\t\t\t\t\t\"- just use .toArray instead.\" );\n\n\t\t\treturn this.toArray( array, offset );\n\n\t\t},\n\n\t\tgetPosition: function () {\n\n\t\t\tvar v1;\n\n\t\t\treturn function getPosition() {\n\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\n\n\t\t\t\treturn v1.setFromMatrixColumn( this, 3 );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tsetPosition: function ( v ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 12 ] = v.x;\n\t\t\tte[ 13 ] = v.y;\n\t\t\tte[ 14 ] = v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetInverse: function ( m, throwOnDegenerate ) {\n\n\t\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\t\tvar te = this.elements,\n\t\t\t\tme = m.elements,\n\n\t\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ], n41 = me[ 3 ],\n\t\t\t\tn12 = me[ 4 ], n22 = me[ 5 ], n32 = me[ 6 ], n42 = me[ 7 ],\n\t\t\t\tn13 = me[ 8 ], n23 = me[ 9 ], n33 = me[ 10 ], n43 = me[ 11 ],\n\t\t\t\tn14 = me[ 12 ], n24 = me[ 13 ], n34 = me[ 14 ], n44 = me[ 15 ],\n\n\t\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\t\tvar det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\t\tif ( det === 0 ) {\n\n\t\t\t\tvar msg = \"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\";\n\n\t\t\t\tif ( throwOnDegenerate || false ) {\n\n\t\t\t\t\tthrow new Error( msg );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( msg );\n\n\t\t\t\t}\n\n\t\t\t\treturn this.identity();\n\n\t\t\t}\n\t\t\t\n\t\t\tvar detInv = 1 / det;\n\n\t\t\tte[ 0 ] = t11 * detInv;\n\t\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\t\tte[ 4 ] = t12 * detInv;\n\t\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\t\tte[ 8 ] = t13 * detInv;\n\t\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\t\tte[ 12 ] = t14 * detInv;\n\t\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tscale: function ( v ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar x = v.x, y = v.y, z = v.z;\n\n\t\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetMaxScaleOnAxis: function () {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t\t},\n\n\t\tmakeTranslation: function ( x, y, z ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x,\n\t\t\t\t0, 1, 0, y,\n\t\t\t\t0, 0, 1, z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationX: function ( theta ) {\n\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0,  0, 0,\n\t\t\t\t0, c, - s, 0,\n\t\t\t\t0, s,  c, 0,\n\t\t\t\t0, 0,  0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationY: function ( theta ) {\n\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\t\tthis.set(\n\n\t\t\t\t c, 0, s, 0,\n\t\t\t\t 0, 1, 0, 0,\n\t\t\t\t- s, 0, c, 0,\n\t\t\t\t 0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationZ: function ( theta ) {\n\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\t\tthis.set(\n\n\t\t\t\tc, - s, 0, 0,\n\t\t\t\ts,  c, 0, 0,\n\t\t\t\t0,  0, 1, 0,\n\t\t\t\t0,  0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationAxis: function ( axis, angle ) {\n\n\t\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\t\tvar c = Math.cos( angle );\n\t\t\tvar s = Math.sin( angle );\n\t\t\tvar t = 1 - c;\n\t\t\tvar x = axis.x, y = axis.y, z = axis.z;\n\t\t\tvar tx = t * x, ty = t * y;\n\n\t\t\tthis.set(\n\n\t\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\t return this;\n\n\t\t},\n\n\t\tmakeScale: function ( x, y, z ) {\n\n\t\t\tthis.set(\n\n\t\t\t\tx, 0, 0, 0,\n\t\t\t\t0, y, 0, 0,\n\t\t\t\t0, 0, z, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcompose: function ( position, quaternion, scale ) {\n\n\t\t\tthis.makeRotationFromQuaternion( quaternion );\n\t\t\tthis.scale( scale );\n\t\t\tthis.setPosition( position );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdecompose: function () {\n\n\t\t\tvar vector, matrix;\n\n\t\t\treturn function decompose( position, quaternion, scale ) {\n\n\t\t\t\tif ( vector === undefined ) {\n\n\t\t\t\t\tvector = new THREE.Vector3();\n\t\t\t\t\tmatrix = new THREE.Matrix4();\n\n\t\t\t\t}\n\n\t\t\t\tvar te = this.elements;\n\n\t\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t\t\t// if determine is negative, we need to invert one scale\n\t\t\t\tvar det = this.determinant();\n\t\t\t\tif ( det < 0 ) {\n\n\t\t\t\t\tsx = - sx;\n\n\t\t\t\t}\n\n\t\t\t\tposition.x = te[ 12 ];\n\t\t\t\tposition.y = te[ 13 ];\n\t\t\t\tposition.z = te[ 14 ];\n\n\t\t\t\t// scale the rotation part\n\n\t\t\t\tmatrix.elements.set( this.elements ); // at this point matrix is incomplete so we can't use .copy()\n\n\t\t\t\tvar invSX = 1 / sx;\n\t\t\t\tvar invSY = 1 / sy;\n\t\t\t\tvar invSZ = 1 / sz;\n\n\t\t\t\tmatrix.elements[ 0 ] *= invSX;\n\t\t\t\tmatrix.elements[ 1 ] *= invSX;\n\t\t\t\tmatrix.elements[ 2 ] *= invSX;\n\n\t\t\t\tmatrix.elements[ 4 ] *= invSY;\n\t\t\t\tmatrix.elements[ 5 ] *= invSY;\n\t\t\t\tmatrix.elements[ 6 ] *= invSY;\n\n\t\t\t\tmatrix.elements[ 8 ] *= invSZ;\n\t\t\t\tmatrix.elements[ 9 ] *= invSZ;\n\t\t\t\tmatrix.elements[ 10 ] *= invSZ;\n\n\t\t\t\tquaternion.setFromRotationMatrix( matrix );\n\n\t\t\t\tscale.x = sx;\n\t\t\t\tscale.y = sy;\n\t\t\t\tscale.z = sz;\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar x = 2 * near / ( right - left );\n\t\t\tvar y = 2 * near / ( top - bottom );\n\n\t\t\tvar a = ( right + left ) / ( right - left );\n\t\t\tvar b = ( top + bottom ) / ( top - bottom );\n\t\t\tvar c = - ( far + near ) / ( far - near );\n\t\t\tvar d = - 2 * far * near / ( far - near );\n\n\t\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakePerspective: function ( fov, aspect, near, far ) {\n\n\t\t\tvar ymax = near * Math.tan( THREE.Math.DEG2RAD * fov * 0.5 );\n\t\t\tvar ymin = - ymax;\n\t\t\tvar xmin = ymin * aspect;\n\t\t\tvar xmax = ymax * aspect;\n\n\t\t\treturn this.makeFrustum( xmin, xmax, ymin, ymax, near, far );\n\n\t\t},\n\n\t\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar w = 1.0 / ( right - left );\n\t\t\tvar h = 1.0 / ( top - bottom );\n\t\t\tvar p = 1.0 / ( far - near );\n\n\t\t\tvar x = ( right + left ) * w;\n\t\t\tvar y = ( top + bottom ) * h;\n\t\t\tvar z = ( far + near ) * p;\n\n\t\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( matrix ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = matrix.elements;\n\n\t\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tfromArray: function ( array ) {\n\n\t\t\tthis.elements.set( array );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) array = [];\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tvar te = this.elements;\n\n\t\t\tarray[ offset ] = te[ 0 ];\n\t\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\t\tarray[ offset + 8 ]  = te[ 8 ];\n\t\t\tarray[ offset + 9 ]  = te[ 9 ];\n\t\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\t\treturn array;\n\n\t\t}\n\n\t};\n\n\t// File:src/math/Ray.js\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t */\n\n\tTHREE.Ray = function ( origin, direction ) {\n\n\t\tthis.origin = ( origin !== undefined ) ? origin : new THREE.Vector3();\n\t\tthis.direction = ( direction !== undefined ) ? direction : new THREE.Vector3();\n\n\t};\n\n\tTHREE.Ray.prototype = {\n\n\t\tconstructor: THREE.Ray,\n\n\t\tset: function ( origin, direction ) {\n\n\t\t\tthis.origin.copy( origin );\n\t\t\tthis.direction.copy( direction );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( ray ) {\n\n\t\t\tthis.origin.copy( ray.origin );\n\t\t\tthis.direction.copy( ray.direction );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tat: function ( t, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\n\n\t\t\treturn result.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t\t},\n\n\t\tlookAt: function ( v ) {\n\n\t\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trecast: function () {\n\n\t\t\tvar v1 = new THREE.Vector3();\n\n\t\t\treturn function recast( t ) {\n\n\t\t\t\tthis.origin.copy( this.at( t, v1 ) );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclosestPointToPoint: function ( point, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\n\t\t\tresult.subVectors( point, this.origin );\n\t\t\tvar directionDistance = result.dot( this.direction );\n\n\t\t\tif ( directionDistance < 0 ) {\n\n\t\t\t\treturn result.copy( this.origin );\n\n\t\t\t}\n\n\t\t\treturn result.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\t},\n\n\t\tdistanceToPoint: function ( point ) {\n\n\t\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t\t},\n\n\t\tdistanceSqToPoint: function () {\n\n\t\t\tvar v1 = new THREE.Vector3();\n\n\t\t\treturn function distanceSqToPoint( point ) {\n\n\t\t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t\t\t// point behind the ray\n\n\t\t\t\tif ( directionDistance < 0 ) {\n\n\t\t\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t\t\t}\n\n\t\t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\t\t\treturn v1.distanceToSquared( point );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tdistanceSqToSegment: function () {\n\n\t\t\tvar segCenter = new THREE.Vector3();\n\t\t\tvar segDir = new THREE.Vector3();\n\t\t\tvar diff = new THREE.Vector3();\n\n\t\t\treturn function distanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t\t\t// It returns the min distance between the ray and the segment\n\t\t\t\t// defined by v0 and v1\n\t\t\t\t// It can also set two optional targets :\n\t\t\t\t// - The closest point on the ray\n\t\t\t\t// - The closest point on the segment\n\n\t\t\t\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t\t\tsegDir.copy( v1 ).sub( v0 ).normalize();\n\t\t\t\tdiff.copy( this.origin ).sub( segCenter );\n\n\t\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\t\t\tvar a01 = - this.direction.dot( segDir );\n\t\t\t\tvar b0 = diff.dot( this.direction );\n\t\t\t\tvar b1 = - diff.dot( segDir );\n\t\t\t\tvar c = diff.lengthSq();\n\t\t\t\tvar det = Math.abs( 1 - a01 * a01 );\n\t\t\t\tvar s0, s1, sqrDist, extDet;\n\n\t\t\t\tif ( det > 0 ) {\n\n\t\t\t\t\t// The ray and segment are not parallel.\n\n\t\t\t\t\ts0 = a01 * b1 - b0;\n\t\t\t\t\ts1 = a01 * b0 - b1;\n\t\t\t\t\textDet = segExtent * det;\n\n\t\t\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\t\t\tvar invDet = 1 / det;\n\t\t\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// region 5\n\n\t\t\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t\t\t// region 4\n\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t\t\t// region 3\n\n\t\t\t\t\t\t\ts0 = 0;\n\t\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// region 2\n\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Ray and segment are parallel.\n\n\t\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t\tif ( optionalPointOnRay ) {\n\n\t\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n\t\t\t\t}\n\n\t\t\t\tif ( optionalPointOnSegment ) {\n\n\t\t\t\t\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\n\n\t\t\t\t}\n\n\t\t\t\treturn sqrDist;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersectSphere: function () {\n\n\t\t\tvar v1 = new THREE.Vector3();\n\n\t\t\treturn function intersectSphere( sphere, optionalTarget ) {\n\n\t\t\t\tv1.subVectors( sphere.center, this.origin );\n\t\t\t\tvar tca = v1.dot( this.direction );\n\t\t\t\tvar d2 = v1.dot( v1 ) - tca * tca;\n\t\t\t\tvar radius2 = sphere.radius * sphere.radius;\n\n\t\t\t\tif ( d2 > radius2 ) return null;\n\n\t\t\t\tvar thc = Math.sqrt( radius2 - d2 );\n\n\t\t\t\t// t0 = first intersect point - entrance on front of sphere\n\t\t\t\tvar t0 = tca - thc;\n\n\t\t\t\t// t1 = second intersect point - exit point on back of sphere\n\t\t\t\tvar t1 = tca + thc;\n\n\t\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\t\t\tif ( t0 < 0 && t1 < 0 ) return null;\n\n\t\t\t\t// test to see if t0 is behind the ray:\n\t\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t\t\t// in order to always return an intersect point that is in front of the ray.\n\t\t\t\tif ( t0 < 0 ) return this.at( t1, optionalTarget );\n\n\t\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\t\t\treturn this.at( t0, optionalTarget );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\treturn this.distanceToPoint( sphere.center ) <= sphere.radius;\n\n\t\t},\n\n\t\tdistanceToPlane: function ( plane ) {\n\n\t\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\t\tif ( denominator === 0 ) {\n\n\t\t\t\t// line is coplanar, return origin\n\t\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\t\treturn 0;\n\n\t\t\t\t}\n\n\t\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t\t// Return if the ray never intersects the plane\n\n\t\t\treturn t >= 0 ? t :  null;\n\n\t\t},\n\n\t\tintersectPlane: function ( plane, optionalTarget ) {\n\n\t\t\tvar t = this.distanceToPlane( plane );\n\n\t\t\tif ( t === null ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\treturn this.at( t, optionalTarget );\n\n\t\t},\n\n\n\n\t\tintersectsPlane: function ( plane ) {\n\n\t\t\t// check if the ray lies on the plane first\n\n\t\t\tvar distToPoint = plane.distanceToPoint( this.origin );\n\n\t\t\tif ( distToPoint === 0 ) {\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\t\treturn false;\n\n\t\t},\n\n\t\tintersectBox: function ( box, optionalTarget ) {\n\n\t\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\t\tvar invdirx = 1 / this.direction.x,\n\t\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\t\tvar origin = this.origin;\n\n\t\t\tif ( invdirx >= 0 ) {\n\n\t\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t\t} else {\n\n\t\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t\t}\n\n\t\t\tif ( invdiry >= 0 ) {\n\n\t\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t\t} else {\n\n\t\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t\t}\n\n\t\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\t\t// These lines also handle the case where tmin or tmax is NaN\n\t\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\n\n\t\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\n\n\t\t\tif ( invdirz >= 0 ) {\n\n\t\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t\t} else {\n\n\t\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t\t}\n\n\t\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t\t//return point closest to the ray (positive side)\n\n\t\t\tif ( tmax < 0 ) return null;\n\n\t\t\treturn this.at( tmin >= 0 ? tmin : tmax, optionalTarget );\n\n\t\t},\n\n\t\tintersectsBox: ( function () {\n\n\t\t\tvar v = new THREE.Vector3();\n\n\t\t\treturn function intersectsBox( box ) {\n\n\t\t\t\treturn this.intersectBox( box, v ) !== null;\n\n\t\t\t};\n\n\t\t} )(),\n\n\t\tintersectTriangle: function () {\n\n\t\t\t// Compute the offset origin, edges, and normal.\n\t\t\tvar diff = new THREE.Vector3();\n\t\t\tvar edge1 = new THREE.Vector3();\n\t\t\tvar edge2 = new THREE.Vector3();\n\t\t\tvar normal = new THREE.Vector3();\n\n\t\t\treturn function intersectTriangle( a, b, c, backfaceCulling, optionalTarget ) {\n\n\t\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t\t\tedge1.subVectors( b, a );\n\t\t\t\tedge2.subVectors( c, a );\n\t\t\t\tnormal.crossVectors( edge1, edge2 );\n\n\t\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\t\t\tvar DdN = this.direction.dot( normal );\n\t\t\t\tvar sign;\n\n\t\t\t\tif ( DdN > 0 ) {\n\n\t\t\t\t\tif ( backfaceCulling ) return null;\n\t\t\t\t\tsign = 1;\n\n\t\t\t\t} else if ( DdN < 0 ) {\n\n\t\t\t\t\tsign = - 1;\n\t\t\t\t\tDdN = - DdN;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t\tdiff.subVectors( this.origin, a );\n\t\t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\n\n\t\t\t\t// b1 < 0, no intersection\n\t\t\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\n\n\t\t\t\t// b2 < 0, no intersection\n\t\t\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t\t// b1+b2 > 1, no intersection\n\t\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t\t// Line intersects triangle, check if ray does.\n\t\t\t\tvar QdN = - sign * diff.dot( normal );\n\n\t\t\t\t// t < 0, no intersection\n\t\t\t\tif ( QdN < 0 ) {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t\t// Ray intersects triangle.\n\t\t\t\treturn this.at( QdN / DdN, optionalTarget );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tapplyMatrix4: function ( matrix4 ) {\n\n\t\t\tthis.direction.add( this.origin ).applyMatrix4( matrix4 );\n\t\t\tthis.origin.applyMatrix4( matrix4 );\n\t\t\tthis.direction.sub( this.origin );\n\t\t\tthis.direction.normalize();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( ray ) {\n\n\t\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t\t}\n\n\t};\n\n\t// File:src/math/Sphere.js\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.Sphere = function ( center, radius ) {\n\n\t\tthis.center = ( center !== undefined ) ? center : new THREE.Vector3();\n\t\tthis.radius = ( radius !== undefined ) ? radius : 0;\n\n\t};\n\n\tTHREE.Sphere.prototype = {\n\n\t\tconstructor: THREE.Sphere,\n\n\t\tset: function ( center, radius ) {\n\n\t\t\tthis.center.copy( center );\n\t\t\tthis.radius = radius;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromPoints: function () {\n\n\t\t\tvar box = new THREE.Box3();\n\n\t\t\treturn function setFromPoints( points, optionalCenter ) {\n\n\t\t\t\tvar center = this.center;\n\n\t\t\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\t\t\tcenter.copy( optionalCenter );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbox.setFromPoints( points ).center( center );\n\n\t\t\t\t}\n\n\t\t\t\tvar maxRadiusSq = 0;\n\n\t\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( sphere ) {\n\n\t\t\tthis.center.copy( sphere.center );\n\t\t\tthis.radius = sphere.radius;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tempty: function () {\n\n\t\t\treturn ( this.radius <= 0 );\n\n\t\t},\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t\t},\n\n\t\tdistanceToPoint: function ( point ) {\n\n\t\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t\t},\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\tvar radiusSum = this.radius + sphere.radius;\n\n\t\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\treturn box.intersectsSphere( this );\n\n\t\t},\n\n\t\tintersectsPlane: function ( plane ) {\n\n\t\t\t// We use the following equation to compute the signed distance from\n\t\t\t// the center of the sphere to the plane.\n\t\t\t//\n\t\t\t// distance = q * n - d\n\t\t\t//\n\t\t\t// If this distance is greater than the radius of the sphere,\n\t\t\t// then there is no intersection.\n\n\t\t\treturn Math.abs( this.center.dot( plane.normal ) - plane.constant ) <= this.radius;\n\n\t\t},\n\n\t\tclampPoint: function ( point, optionalTarget ) {\n\n\t\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\n\n\t\t\tresult.copy( point );\n\n\t\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\t\tresult.sub( this.center ).normalize();\n\t\t\t\tresult.multiplyScalar( this.radius ).add( this.center );\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t},\n\n\t\tgetBoundingBox: function ( optionalTarget ) {\n\n\t\t\tvar box = optionalTarget || new THREE.Box3();\n\n\t\t\tbox.set( this.center, this.center );\n\t\t\tbox.expandByScalar( this.radius );\n\n\t\t\treturn box;\n\n\t\t},\n\n\t\tapplyMatrix4: function ( matrix ) {\n\n\t\t\tthis.center.applyMatrix4( matrix );\n\t\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranslate: function ( offset ) {\n\n\t\t\tthis.center.add( offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( sphere ) {\n\n\t\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t\t}\n\n\t};\n\n\t// File:src/math/Frustum.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author bhouston / http://clara.io\n\t */\n\n\tTHREE.Frustum = function ( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tthis.planes = [\n\n\t\t\t( p0 !== undefined ) ? p0 : new THREE.Plane(),\n\t\t\t( p1 !== undefined ) ? p1 : new THREE.Plane(),\n\t\t\t( p2 !== undefined ) ? p2 : new THREE.Plane(),\n\t\t\t( p3 !== undefined ) ? p3 : new THREE.Plane(),\n\t\t\t( p4 !== undefined ) ? p4 : new THREE.Plane(),\n\t\t\t( p5 !== undefined ) ? p5 : new THREE.Plane()\n\n\t\t];\n\n\t};\n\n\tTHREE.Frustum.prototype = {\n\n\t\tconstructor: THREE.Frustum,\n\n\t\tset: function ( p0, p1, p2, p3, p4, p5 ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tplanes[ 0 ].copy( p0 );\n\t\t\tplanes[ 1 ].copy( p1 );\n\t\t\tplanes[ 2 ].copy( p2 );\n\t\t\tplanes[ 3 ].copy( p3 );\n\t\t\tplanes[ 4 ].copy( p4 );\n\t\t\tplanes[ 5 ].copy( p5 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( frustum ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrix: function ( m ) {\n\n\t\t\tvar planes = this.planes;\n\t\t\tvar me = m.elements;\n\t\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tintersectsObject: function () {\n\n\t\t\tvar sphere = new THREE.Sphere();\n\n\t\t\treturn function intersectsObject( object ) {\n\n\t\t\t\tvar geometry = object.geometry;\n\n\t\t\t\tif ( geometry.boundingSphere === null )\n\t\t\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\t\tsphere.copy( geometry.boundingSphere )\n\t\t\t\t\t.applyMatrix4( object.matrixWorld );\n\n\t\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersectsSprite: function () {\n\n\t\t\tvar sphere = new THREE.Sphere();\n\n\t\t\treturn function intersectsSprite( sprite ) {\n\n\t\t\t\tsphere.center.set( 0, 0, 0 );\n\t\t\t\tsphere.radius = 0.7071067811865476;\n\t\t\t\tsphere.applyMatrix4( sprite.matrixWorld );\n\n\t\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\tvar planes = this.planes;\n\t\t\tvar center = sphere.center;\n\t\t\tvar negRadius = - sphere.radius;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tvar distance = planes[ i ].distanceToPoint( center );\n\n\t\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tintersectsBox: function () {\n\n\t\t\tvar p1 = new THREE.Vector3(),\n\t\t\t\tp2 = new THREE.Vector3();\n\n\t\t\treturn function intersectsBox( box ) {\n\n\t\t\t\tvar planes = this.planes;\n\n\t\t\t\tfor ( var i = 0; i < 6 ; i ++ ) {\n\n\t\t\t\t\tvar plane = planes[ i ];\n\n\t\t\t\t\tp1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\n\t\t\t\t\tp2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t\t\tp1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\n\t\t\t\t\tp2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t\t\tp1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\n\t\t\t\t\tp2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\t\t\tvar d1 = plane.distanceToPoint( p1 );\n\t\t\t\t\tvar d2 = plane.distanceToPoint( p2 );\n\n\t\t\t\t\t// if both outside plane, no intersection\n\n\t\t\t\t\tif ( d1 < 0 && d2 < 0 ) {\n\n\t\t\t\t\t\treturn false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\n\t\t\t};\n\n\t\t}(),\n\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t};\n\n\t// File:src/math/Plane.js\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t */\n\n\tTHREE.Plane = function ( normal, constant ) {\n\n\t\tthis.normal = ( normal !== undefined ) ? normal : new THREE.Vector3( 1, 0, 0 );\n\t\tthis.constant = ( constant !== undefined ) ? constant : 0;\n\n\t};\n\n\tTHREE.Plane.prototype = {\n\n\t\tconstructor: THREE.Plane,\n\n\t\tset: function ( normal, constant ) {\n\n\t\t\tthis.normal.copy( normal );\n\t\t\tthis.constant = constant;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetComponents: function ( x, y, z, w ) {\n\n\t\t\tthis.normal.set( x, y, z );\n\t\t\tthis.constant = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\n\n\t\t\tthis.normal.copy( normal );\n\t\t\tthis.constant = - point.dot( this.normal );\t// must be this.normal, not normal, as this.normal is normalized\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromCoplanarPoints: function () {\n\n\t\t\tvar v1 = new THREE.Vector3();\n\t\t\tvar v2 = new THREE.Vector3();\n\n\t\t\treturn function setFromCoplanarPoints( a, b, c ) {\n\n\t\t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\n\n\t\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( plane ) {\n\n\t\t\tthis.normal.copy( plane.normal );\n\t\t\tthis.constant = plane.constant;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\t\tvar inverseNormalLength = 1.0 / this.normal.length();\n\t\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\t\tthis.constant *= inverseNormalLength;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnegate: function () {\n\n\t\t\tthis.constant *= - 1;\n\t\t\tthis.normal.negate();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdistanceToPoint: function ( point ) {\n\n\t\t\treturn this.normal.dot( point ) + this.constant;\n\n\t\t},\n\n\t\tdistanceToSphere: function ( sphere ) {\n\n\t\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t\t},\n\n\t\tprojectPoint: function ( point, optionalTarget ) {\n\n\t\t\treturn this.orthoPoint( point, optionalTarget ).sub( point ).negate();\n\n\t\t},\n\n\t\torthoPoint: function ( point, optionalTarget ) {\n\n\t\t\tvar perpendicularMagnitude = this.distanceToPoint( point );\n\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\n\t\t\treturn result.copy( this.normal ).multiplyScalar( perpendicularMagnitude );\n\n\t\t},\n\n\t\tintersectLine: function () {\n\n\t\t\tvar v1 = new THREE.Vector3();\n\n\t\t\treturn function intersectLine( line, optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new THREE.Vector3();\n\n\t\t\t\tvar direction = line.delta( v1 );\n\n\t\t\t\tvar denominator = this.normal.dot( direction );\n\n\t\t\t\tif ( denominator === 0 ) {\n\n\t\t\t\t\t// line is coplanar, return origin\n\t\t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\t\t\treturn result.copy( line.start );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\t\t\treturn undefined;\n\n\t\t\t\t}\n\n\t\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\t\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\t\t\treturn undefined;\n\n\t\t\t\t}\n\n\t\t\t\treturn result.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tintersectsLine: function ( line ) {\n\n\t\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\t\tvar startSign = this.distanceToPoint( line.start );\n\t\t\tvar endSign = this.distanceToPoint( line.end );\n\n\t\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\treturn box.intersectsPlane( this );\n\n\t\t},\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\treturn sphere.intersectsPlane( this );\n\n\t\t},\n\n\t\tcoplanarPoint: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\n\t\t\treturn result.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t\t},\n\n\t\tapplyMatrix4: function () {\n\n\t\t\tvar v1 = new THREE.Vector3();\n\t\t\tvar m1 = new THREE.Matrix3();\n\n\t\t\treturn function applyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\t\t\tvar referencePoint = this.coplanarPoint( v1 ).applyMatrix4( matrix );\n\n\t\t\t\t// transform normal based on theory here:\n\t\t\t\t// http://www.songho.ca/opengl/gl_normaltransform.html\n\t\t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\n\t\t\t\tvar normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t// recalculate constant (like in setFromNormalAndCoplanarPoint)\n\t\t\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslate: function ( offset ) {\n\n\t\t\tthis.constant = this.constant - offset.dot( this.normal );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( plane ) {\n\n\t\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t\t}\n\n\t};\n\n\t// File:src/math/Spherical.js\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n\t *\n\t * The poles (phi) are at the positive and negative y axis.\n\t * The equator starts at positive z.\n\t */\n\n\tTHREE.Spherical = function ( radius, phi, theta ) {\n\n\t\tthis.radius = ( radius !== undefined ) ? radius : 1.0;\n\t\tthis.phi = ( phi !== undefined ) ? phi : 0; // up / down towards top and bottom pole\n\t\tthis.theta = ( theta !== undefined ) ? theta : 0; // around the equator of the sphere\n\n\t\treturn this;\n\n\t};\n\n\tTHREE.Spherical.prototype = {\n\n\t\tconstructor: THREE.Spherical,\n\n\t\tset: function ( radius, phi, theta ) {\n\n\t\t\tthis.radius = radius;\n\t\t\tthis.phi = phi;\n\t\t\tthis.theta = theta;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( other ) {\n\n\t\t\tthis.radius.copy( other.radius );\n\t\t\tthis.phi.copy( other.phi );\n\t\t\tthis.theta.copy( other.theta );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// restrict phi to be betwee EPS and PI-EPS\n\t\tmakeSafe: function() {\n\n\t\t\tvar EPS = 0.000001;\n\t\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromVector3: function( vec3 ) {\n\n\t\t\tthis.radius = vec3.length();\n\n\t\t\tif ( this.radius === 0 ) {\n\n\t\t\t\tthis.theta = 0;\n\t\t\t\tthis.phi = 0;\n\n\t\t\t} else {\n\n\t\t\t\tthis.theta = Math.atan2( vec3.x, vec3.z ); // equator angle around y-up axis\n\t\t\t\tthis.phi = Math.acos( THREE.Math.clamp( vec3.y / this.radius, - 1, 1 ) ); // polar angle\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t};\n\n\t// File:src/math/Math.js\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.Math = {\n\n\t\tDEG2RAD: Math.PI / 180,\n\t\tRAD2DEG: 180 / Math.PI,\n\n\t\tgenerateUUID: function () {\n\n\t\t\t// http://www.broofa.com/Tools/Math.uuid.htm\n\n\t\t\tvar chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split( '' );\n\t\t\tvar uuid = new Array( 36 );\n\t\t\tvar rnd = 0, r;\n\n\t\t\treturn function generateUUID() {\n\n\t\t\t\tfor ( var i = 0; i < 36; i ++ ) {\n\n\t\t\t\t\tif ( i === 8 || i === 13 || i === 18 || i === 23 ) {\n\n\t\t\t\t\t\tuuid[ i ] = '-';\n\n\t\t\t\t\t} else if ( i === 14 ) {\n\n\t\t\t\t\t\tuuid[ i ] = '4';\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( rnd <= 0x02 ) rnd = 0x2000000 + ( Math.random() * 0x1000000 ) | 0;\n\t\t\t\t\t\tr = rnd & 0xf;\n\t\t\t\t\t\trnd = rnd >> 4;\n\t\t\t\t\t\tuuid[ i ] = chars[ ( i === 19 ) ? ( r & 0x3 ) | 0x8 : r ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn uuid.join( '' );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tclamp: function ( value, min, max ) {\n\n\t\t\treturn Math.max( min, Math.min( max, value ) );\n\n\t\t},\n\n\t\t// compute euclidian modulo of m % n\n\t\t// https://en.wikipedia.org/wiki/Modulo_operation\n\n\t\teuclideanModulo: function ( n, m ) {\n\n\t\t\treturn ( ( n % m ) + m ) % m;\n\n\t\t},\n\n\t\t// Linear mapping from range <a1, a2> to range <b1, b2>\n\n\t\tmapLinear: function ( x, a1, a2, b1, b2 ) {\n\n\t\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n\t\t},\n\n\t\t// http://en.wikipedia.org/wiki/Smoothstep\n\n\t\tsmoothstep: function ( x, min, max ) {\n\n\t\t\tif ( x <= min ) return 0;\n\t\t\tif ( x >= max ) return 1;\n\n\t\t\tx = ( x - min ) / ( max - min );\n\n\t\t\treturn x * x * ( 3 - 2 * x );\n\n\t\t},\n\n\t\tsmootherstep: function ( x, min, max ) {\n\n\t\t\tif ( x <= min ) return 0;\n\t\t\tif ( x >= max ) return 1;\n\n\t\t\tx = ( x - min ) / ( max - min );\n\n\t\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n\t\t},\n\n\t\trandom16: function () {\n\n\t\t\tconsole.warn( 'THREE.Math.random16() has been deprecated. Use Math.random() instead.' );\n\t\t\treturn Math.random();\n\n\t\t},\n\n\t\t// Random integer from <low, high> interval\n\n\t\trandInt: function ( low, high ) {\n\n\t\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n\t\t},\n\n\t\t// Random float from <low, high> interval\n\n\t\trandFloat: function ( low, high ) {\n\n\t\t\treturn low + Math.random() * ( high - low );\n\n\t\t},\n\n\t\t// Random float from <-range/2, range/2> interval\n\n\t\trandFloatSpread: function ( range ) {\n\n\t\t\treturn range * ( 0.5 - Math.random() );\n\n\t\t},\n\n\t\tdegToRad: function ( degrees ) {\n\n\t\t\treturn degrees * THREE.Math.DEG2RAD;\n\n\t\t},\n\n\t\tradToDeg: function ( radians ) {\n\n\t\t\treturn radians * THREE.Math.RAD2DEG;\n\n\t\t},\n\n\t\tisPowerOfTwo: function ( value ) {\n\n\t\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n\t\t},\n\n\t\tnearestPowerOfTwo: function ( value ) {\n\n\t\t\treturn Math.pow( 2, Math.round( Math.log( value ) / Math.LN2 ) );\n\n\t\t},\n\n\t\tnextPowerOfTwo: function ( value ) {\n\n\t\t\tvalue --;\n\t\t\tvalue |= value >> 1;\n\t\t\tvalue |= value >> 2;\n\t\t\tvalue |= value >> 4;\n\t\t\tvalue |= value >> 8;\n\t\t\tvalue |= value >> 16;\n\t\t\tvalue ++;\n\n\t\t\treturn value;\n\n\t\t}\n\n\t};\n\n\t// File:src/math/Spline.js\n\n\t/**\n\t * Spline from Tween.js, slightly optimized (and trashed)\n\t * http://sole.github.com/tween.js/examples/05_spline.html\n\t *\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tTHREE.Spline = function ( points ) {\n\n\t\tthis.points = points;\n\n\t\tvar c = [], v3 = { x: 0, y: 0, z: 0 },\n\t\tpoint, intPoint, weight, w2, w3,\n\t\tpa, pb, pc, pd;\n\n\t\tthis.initFromArray = function ( a ) {\n\n\t\t\tthis.points = [];\n\n\t\t\tfor ( var i = 0; i < a.length; i ++ ) {\n\n\t\t\t\tthis.points[ i ] = { x: a[ i ][ 0 ], y: a[ i ][ 1 ], z: a[ i ][ 2 ] };\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getPoint = function ( k ) {\n\n\t\t\tpoint = ( this.points.length - 1 ) * k;\n\t\t\tintPoint = Math.floor( point );\n\t\t\tweight = point - intPoint;\n\n\t\t\tc[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\n\t\t\tc[ 1 ] = intPoint;\n\t\t\tc[ 2 ] = intPoint  > this.points.length - 2 ? this.points.length - 1 : intPoint + 1;\n\t\t\tc[ 3 ] = intPoint  > this.points.length - 3 ? this.points.length - 1 : intPoint + 2;\n\n\t\t\tpa = this.points[ c[ 0 ] ];\n\t\t\tpb = this.points[ c[ 1 ] ];\n\t\t\tpc = this.points[ c[ 2 ] ];\n\t\t\tpd = this.points[ c[ 3 ] ];\n\n\t\t\tw2 = weight * weight;\n\t\t\tw3 = weight * w2;\n\n\t\t\tv3.x = interpolate( pa.x, pb.x, pc.x, pd.x, weight, w2, w3 );\n\t\t\tv3.y = interpolate( pa.y, pb.y, pc.y, pd.y, weight, w2, w3 );\n\t\t\tv3.z = interpolate( pa.z, pb.z, pc.z, pd.z, weight, w2, w3 );\n\n\t\t\treturn v3;\n\n\t\t};\n\n\t\tthis.getControlPointsArray = function () {\n\n\t\t\tvar i, p, l = this.points.length,\n\t\t\t\tcoords = [];\n\n\t\t\tfor ( i = 0; i < l; i ++ ) {\n\n\t\t\t\tp = this.points[ i ];\n\t\t\t\tcoords[ i ] = [ p.x, p.y, p.z ];\n\n\t\t\t}\n\n\t\t\treturn coords;\n\n\t\t};\n\n\t\t// approximate length by summing linear segments\n\n\t\tthis.getLength = function ( nSubDivisions ) {\n\n\t\t\tvar i, index, nSamples, position,\n\t\t\t\tpoint = 0, intPoint = 0, oldIntPoint = 0,\n\t\t\t\toldPosition = new THREE.Vector3(),\n\t\t\t\ttmpVec = new THREE.Vector3(),\n\t\t\t\tchunkLengths = [],\n\t\t\t\ttotalLength = 0;\n\n\t\t\t// first point has 0 length\n\n\t\t\tchunkLengths[ 0 ] = 0;\n\n\t\t\tif ( ! nSubDivisions ) nSubDivisions = 100;\n\n\t\t\tnSamples = this.points.length * nSubDivisions;\n\n\t\t\toldPosition.copy( this.points[ 0 ] );\n\n\t\t\tfor ( i = 1; i < nSamples; i ++ ) {\n\n\t\t\t\tindex = i / nSamples;\n\n\t\t\t\tposition = this.getPoint( index );\n\t\t\t\ttmpVec.copy( position );\n\n\t\t\t\ttotalLength += tmpVec.distanceTo( oldPosition );\n\n\t\t\t\toldPosition.copy( position );\n\n\t\t\t\tpoint = ( this.points.length - 1 ) * index;\n\t\t\t\tintPoint = Math.floor( point );\n\n\t\t\t\tif ( intPoint !== oldIntPoint ) {\n\n\t\t\t\t\tchunkLengths[ intPoint ] = totalLength;\n\t\t\t\t\toldIntPoint = intPoint;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// last point ends with total length\n\n\t\t\tchunkLengths[ chunkLengths.length ] = totalLength;\n\n\t\t\treturn { chunks: chunkLengths, total: totalLength };\n\n\t\t};\n\n\t\tthis.reparametrizeByArcLength = function ( samplingCoef ) {\n\n\t\t\tvar i, j,\n\t\t\t\tindex, indexCurrent, indexNext,\n\t\t\t\trealDistance,\n\t\t\t\tsampling, position,\n\t\t\t\tnewpoints = [],\n\t\t\t\ttmpVec = new THREE.Vector3(),\n\t\t\t\tsl = this.getLength();\n\n\t\t\tnewpoints.push( tmpVec.copy( this.points[ 0 ] ).clone() );\n\n\t\t\tfor ( i = 1; i < this.points.length; i ++ ) {\n\n\t\t\t\t//tmpVec.copy( this.points[ i - 1 ] );\n\t\t\t\t//linearDistance = tmpVec.distanceTo( this.points[ i ] );\n\n\t\t\t\trealDistance = sl.chunks[ i ] - sl.chunks[ i - 1 ];\n\n\t\t\t\tsampling = Math.ceil( samplingCoef * realDistance / sl.total );\n\n\t\t\t\tindexCurrent = ( i - 1 ) / ( this.points.length - 1 );\n\t\t\t\tindexNext = i / ( this.points.length - 1 );\n\n\t\t\t\tfor ( j = 1; j < sampling - 1; j ++ ) {\n\n\t\t\t\t\tindex = indexCurrent + j * ( 1 / sampling ) * ( indexNext - indexCurrent );\n\n\t\t\t\t\tposition = this.getPoint( index );\n\t\t\t\t\tnewpoints.push( tmpVec.copy( position ).clone() );\n\n\t\t\t\t}\n\n\t\t\t\tnewpoints.push( tmpVec.copy( this.points[ i ] ).clone() );\n\n\t\t\t}\n\n\t\t\tthis.points = newpoints;\n\n\t\t};\n\n\t\t// Catmull-Rom\n\n\t\tfunction interpolate( p0, p1, p2, p3, t, t2, t3 ) {\n\n\t\t\tvar v0 = ( p2 - p0 ) * 0.5,\n\t\t\t\tv1 = ( p3 - p1 ) * 0.5;\n\n\t\t\treturn ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n\t\t}\n\n\t};\n\n\t// File:src/math/Triangle.js\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.Triangle = function ( a, b, c ) {\n\n\t\tthis.a = ( a !== undefined ) ? a : new THREE.Vector3();\n\t\tthis.b = ( b !== undefined ) ? b : new THREE.Vector3();\n\t\tthis.c = ( c !== undefined ) ? c : new THREE.Vector3();\n\n\t};\n\n\tTHREE.Triangle.normal = function () {\n\n\t\tvar v0 = new THREE.Vector3();\n\n\t\treturn function normal( a, b, c, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\n\n\t\t\tresult.subVectors( c, b );\n\t\t\tv0.subVectors( a, b );\n\t\t\tresult.cross( v0 );\n\n\t\t\tvar resultLengthSq = result.lengthSq();\n\t\t\tif ( resultLengthSq > 0 ) {\n\n\t\t\t\treturn result.multiplyScalar( 1 / Math.sqrt( resultLengthSq ) );\n\n\t\t\t}\n\n\t\t\treturn result.set( 0, 0, 0 );\n\n\t\t};\n\n\t}();\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tTHREE.Triangle.barycoordFromPoint = function () {\n\n\t\tvar v0 = new THREE.Vector3();\n\t\tvar v1 = new THREE.Vector3();\n\t\tvar v2 = new THREE.Vector3();\n\n\t\treturn function barycoordFromPoint( point, a, b, c, optionalTarget ) {\n\n\t\t\tv0.subVectors( c, a );\n\t\t\tv1.subVectors( b, a );\n\t\t\tv2.subVectors( point, a );\n\n\t\t\tvar dot00 = v0.dot( v0 );\n\t\t\tvar dot01 = v0.dot( v1 );\n\t\t\tvar dot02 = v0.dot( v2 );\n\t\t\tvar dot11 = v1.dot( v1 );\n\t\t\tvar dot12 = v1.dot( v2 );\n\n\t\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\n\n\t\t\t// collinear or singular triangle\n\t\t\tif ( denom === 0 ) {\n\n\t\t\t\t// arbitrary location outside of triangle?\n\t\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\t\treturn result.set( - 2, - 1, - 1 );\n\n\t\t\t}\n\n\t\t\tvar invDenom = 1 / denom;\n\t\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t\t// barycentric coordinates must always sum to 1\n\t\t\treturn result.set( 1 - u - v, v, u );\n\n\t\t};\n\n\t}();\n\n\tTHREE.Triangle.containsPoint = function () {\n\n\t\tvar v1 = new THREE.Vector3();\n\n\t\treturn function containsPoint( point, a, b, c ) {\n\n\t\t\tvar result = THREE.Triangle.barycoordFromPoint( point, a, b, c, v1 );\n\n\t\t\treturn ( result.x >= 0 ) && ( result.y >= 0 ) && ( ( result.x + result.y ) <= 1 );\n\n\t\t};\n\n\t}();\n\n\tTHREE.Triangle.prototype = {\n\n\t\tconstructor: THREE.Triangle,\n\n\t\tset: function ( a, b, c ) {\n\n\t\t\tthis.a.copy( a );\n\t\t\tthis.b.copy( b );\n\t\t\tthis.c.copy( c );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\n\n\t\t\tthis.a.copy( points[ i0 ] );\n\t\t\tthis.b.copy( points[ i1 ] );\n\t\t\tthis.c.copy( points[ i2 ] );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( triangle ) {\n\n\t\t\tthis.a.copy( triangle.a );\n\t\t\tthis.b.copy( triangle.b );\n\t\t\tthis.c.copy( triangle.c );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tarea: function () {\n\n\t\t\tvar v0 = new THREE.Vector3();\n\t\t\tvar v1 = new THREE.Vector3();\n\n\t\t\treturn function area() {\n\n\t\t\t\tv0.subVectors( this.c, this.b );\n\t\t\t\tv1.subVectors( this.a, this.b );\n\n\t\t\t\treturn v0.cross( v1 ).length() * 0.5;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tmidpoint: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\n\t\t\treturn result.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t\t},\n\n\t\tnormal: function ( optionalTarget ) {\n\n\t\t\treturn THREE.Triangle.normal( this.a, this.b, this.c, optionalTarget );\n\n\t\t},\n\n\t\tplane: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new THREE.Plane();\n\n\t\t\treturn result.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t\t},\n\n\t\tbarycoordFromPoint: function ( point, optionalTarget ) {\n\n\t\t\treturn THREE.Triangle.barycoordFromPoint( point, this.a, this.b, this.c, optionalTarget );\n\n\t\t},\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\treturn THREE.Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t\t},\n\n\t\tclosestPointToPoint: function () {\n\n\t\t\tvar plane, edgeList, projectedPoint, closestPoint;\n\n\t\t\treturn function closestPointToPoint( point, optionalTarget ) {\n\n\t\t\t\tif ( plane === undefined ) {\n\n\t\t\t\t\tplane = new THREE.Plane();\n\t\t\t\t\tedgeList = [ new THREE.Line3(), new THREE.Line3(), new THREE.Line3() ];\n\t\t\t\t\tprojectedPoint = new THREE.Vector3();\n\t\t\t\t\tclosestPoint = new THREE.Vector3();\n\n\t\t\t\t}\n\n\t\t\t\tvar result = optionalTarget || new THREE.Vector3();\n\t\t\t\tvar minDistance = Infinity;\n\n\t\t\t\t// project the point onto the plane of the triangle\n\n\t\t\t\tplane.setFromCoplanarPoints( this.a, this.b, this.c );\n\t\t\t\tplane.projectPoint( point, projectedPoint );\n\n\t\t\t\t// check if the projection lies within the triangle\n\n\t\t\t\tif( this.containsPoint( projectedPoint ) === true ) {\n\n\t\t\t\t\t// if so, this is the closest point\n\n\t\t\t\t\tresult.copy( projectedPoint );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// if not, the point falls outside the triangle. the result is the closest point to the triangle's edges or vertices\n\n\t\t\t\t\tedgeList[ 0 ].set( this.a, this.b );\n\t\t\t\t\tedgeList[ 1 ].set( this.b, this.c );\n\t\t\t\t\tedgeList[ 2 ].set( this.c, this.a );\n\n\t\t\t\t\tfor( var i = 0; i < edgeList.length; i ++ ) {\n\n\t\t\t\t\t\tedgeList[ i ].closestPointToPoint( projectedPoint, true, closestPoint );\n\n\t\t\t\t\t\tvar distance = projectedPoint.distanceToSquared( closestPoint );\n\n\t\t\t\t\t\tif( distance < minDistance ) {\n\n\t\t\t\t\t\t\tminDistance = distance;\n\n\t\t\t\t\t\t\tresult.copy( closestPoint );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tequals: function ( triangle ) {\n\n\t\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t\t}\n\n\t};\n\n\t// File:src/math/Interpolant.js\n\n\t/**\n\t * Abstract base class of interpolants over parametric samples.\n\t *\n\t * The parameter domain is one dimensional, typically the time or a path\n\t * along a curve defined by the data.\n\t *\n\t * The sample values can have any dimensionality and derived classes may\n\t * apply special interpretations to the data.\n\t *\n\t * This class provides the interval seek in a Template Method, deferring\n\t * the actual interpolation to derived classes.\n\t *\n\t * Time complexity is O(1) for linear access crossing at most two points\n\t * and O(log N) for random access, where N is the number of positions.\n\t *\n\t * References:\n\t *\n\t * \t\thttp://www.oodesign.com/template-method-pattern.html\n\t *\n\t * @author tschw\n\t */\n\n\tTHREE.Interpolant = function(\n\t\t\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t};\n\n\tTHREE.Interpolant.prototype = {\n\n\t\tconstructor: THREE.Interpolant,\n\n\t\tevaluate: function( t ) {\n\n\t\t\tvar pp = this.parameterPositions,\n\t\t\t\ti1 = this._cachedIndex,\n\n\t\t\t\tt1 = pp[   i1   ],\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\tvalidate_interval: {\n\n\t\t\t\tseek: {\n\n\t\t\t\t\tvar right;\n\n\t\t\t\t\tlinear_scan: {\n\t//- See http://jsperf.com/comparison-to-undefined/3\n\t//- slower code:\n\t//-\n\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\t\tfor ( var giveUpAt = i1 + 2; ;) {\n\n\t\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t, t0 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t\t}\n\n\t//- slower code:\n\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\t\tvar t1global = pp[ 1 ];\n\n\t\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\t\tfor ( var giveUpAt = i1 - 2; ;) {\n\n\t\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t\t} // linear scan\n\n\t\t\t\t\t// binary search\n\n\t\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\t\tvar mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tt1 = pp[   i1   ];\n\t\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t\t// check boundary cases, again\n\n\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t0, t );\n\n\t\t\t\t\t}\n\n\t\t\t\t} // seek\n\n\t\t\t\tthis._cachedIndex = i1;\n\n\t\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t\t} // validate_interval\n\n\t\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t\t},\n\n\t\tsettings: null, // optional, subclass-specific settings structure\n\t\t// Note: The indirection allows central control of many interpolants.\n\n\t\t// --- Protected interface\n\n\t\tDefaultSettings_: {},\n\n\t\tgetSettings_: function() {\n\n\t\t\treturn this.settings || this.DefaultSettings_;\n\n\t\t},\n\n\t\tcopySampleValue_: function( index ) {\n\n\t\t\t// copies a sample value to the result buffer\n\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\t\t\t\toffset = index * stride;\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t},\n\n\t\t// Template methods for derived classes:\n\n\t\tinterpolate_: function( i1, t0, t, t1 ) {\n\n\t\t\tthrow new Error( \"call to abstract method\" );\n\t\t\t// implementations shall return this.resultBuffer\n\n\t\t},\n\n\t\tintervalChanged_: function( i1, t0, t1 ) {\n\n\t\t\t// empty\n\n\t\t}\n\n\t};\n\n\tObject.assign( THREE.Interpolant.prototype, {\n\n\t\tbeforeStart_: //( 0, t, t0 ), returns this.resultBuffer\n\t\t\tTHREE.Interpolant.prototype.copySampleValue_,\n\n\t\tafterEnd_: //( N-1, tN-1, t ), returns this.resultBuffer\n\t\t\tTHREE.Interpolant.prototype.copySampleValue_\n\n\t} );\n\n\t// File:src/math/interpolants/CubicInterpolant.js\n\n\t/**\n\t * Fast and simple cubic spline interpolant.\n\t *\n\t * It was derived from a Hermitian construction setting the first derivative\n\t * at each sample position to the linear slope between neighboring positions\n\t * over their parameter interval.\n\t *\n\t * @author tschw\n\t */\n\n\tTHREE.CubicInterpolant = function(\n\t\t\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tTHREE.Interpolant.call(\n\t\t\t\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = -0;\n\t\tthis._offsetPrev = -0;\n\t\tthis._weightNext = -0;\n\t\tthis._offsetNext = -0;\n\n\t};\n\n\tTHREE.CubicInterpolant.prototype =\n\t\t\tObject.assign( Object.create( THREE.Interpolant.prototype ), {\n\n\t\tconstructor: THREE.CubicInterpolant,\n\n\t\tDefaultSettings_: {\n\n\t\t\tendingStart: \tTHREE.ZeroCurvatureEnding,\n\t\t\tendingEnd:\t\tTHREE.ZeroCurvatureEnding\n\n\t\t},\n\n\t\tintervalChanged_: function( i1, t0, t1 ) {\n\n\t\t\tvar pp = this.parameterPositions,\n\t\t\t\tiPrev = i1 - 2,\n\t\t\t\tiNext = i1 + 1,\n\n\t\t\t\ttPrev = pp[ iPrev ],\n\t\t\t\ttNext = pp[ iNext ];\n\n\t\t\tif ( tPrev === undefined ) {\n\n\t\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\t\tcase THREE.ZeroSlopeEnding:\n\n\t\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\t\tiPrev = i1;\n\t\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase THREE.WrapAroundEnding:\n\n\t\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\t\tiPrev = i1;\n\t\t\t\t\t\ttPrev = t1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( tNext === undefined ) {\n\n\t\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\t\tcase THREE.ZeroSlopeEnding:\n\n\t\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\t\tiNext = i1;\n\t\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase THREE.WrapAroundEnding:\n\n\t\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\t\tiNext = 1;\n\t\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\t\ttNext = t0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar halfDt = ( t1 - t0 ) * 0.5,\n\t\t\t\tstride = this.valueSize;\n\n\t\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\t\tthis._offsetPrev = iPrev * stride;\n\t\t\tthis._offsetNext = iNext * stride;\n\n\t\t},\n\n\t\tinterpolate_: function( i1, t0, t, t1 ) {\n\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\t\tpp = p * p,\n\t\t\t\tppp = pp * p;\n\n\t\t\t// evaluate polynomials\n\n\t\t\tvar sP =     - wP   * ppp   +         2 * wP    * pp    -          wP   * p;\n\t\t\tvar s0 = ( 1 + wP ) * ppp   + (-1.5 - 2 * wP )  * pp    + ( -0.5 + wP ) * p     + 1;\n\t\t\tvar s1 = (-1 - wN ) * ppp   + ( 1.5 +   wN   )  * pp    +    0.5        * p;\n\t\t\tvar sN =       wN   * ppp   -           wN      * pp;\n\n\t\t\t// combine data linearly\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tresult[ i ] =\n\t\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t} );\n\n\t// File:src/math/interpolants/DiscreteInterpolant.js\n\n\t/**\n\t *\n\t * Interpolant that evaluates to the sample value at the position preceeding\n\t * the parameter.\n\t *\n\t * @author tschw\n\t */\n\n\tTHREE.DiscreteInterpolant = function(\n\t\t\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tTHREE.Interpolant.call(\n\t\t\t\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t};\n\n\tTHREE.DiscreteInterpolant.prototype =\n\t\t\tObject.assign( Object.create( THREE.Interpolant.prototype ), {\n\n\t\tconstructor: THREE.DiscreteInterpolant,\n\n\t\tinterpolate_: function( i1, t0, t, t1 ) {\n\n\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t}\n\n\t} );\n\n\t// File:src/math/interpolants/LinearInterpolant.js\n\n\t/**\n\t * @author tschw\n\t */\n\n\tTHREE.LinearInterpolant = function(\n\t\t\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tTHREE.Interpolant.call(\n\t\t\t\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t};\n\n\tTHREE.LinearInterpolant.prototype =\n\t\t\tObject.assign( Object.create( THREE.Interpolant.prototype ), {\n\n\t\tconstructor: THREE.LinearInterpolant,\n\n\t\tinterpolate_: function( i1, t0, t, t1 ) {\n\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\toffset1 = i1 * stride,\n\t\t\t\toffset0 = offset1 - stride,\n\n\t\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\t\tweight0 = 1 - weight1;\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tresult[ i ] =\n\t\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t} );\n\n\t// File:src/math/interpolants/QuaternionLinearInterpolant.js\n\n\t/**\n\t * Spherical linear unit quaternion interpolant.\n\t *\n\t * @author tschw\n\t */\n\n\tTHREE.QuaternionLinearInterpolant = function(\n\t\t\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tTHREE.Interpolant.call(\n\t\t\t\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t};\n\n\tTHREE.QuaternionLinearInterpolant.prototype =\n\t\t\tObject.assign( Object.create( THREE.Interpolant.prototype ), {\n\n\t\tconstructor: THREE.QuaternionLinearInterpolant,\n\n\t\tinterpolate_: function( i1, t0, t, t1 ) {\n\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\toffset = i1 * stride,\n\n\t\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\t\tfor ( var end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\t\tTHREE.Quaternion.slerpFlat( result, 0,\n\t\t\t\t\t\tvalues, offset - stride, values, offset, alpha );\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t} );\n\n\t// File:src/core/Clock.js\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tTHREE.Clock = function ( autoStart ) {\n\n\t\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t};\n\n\tTHREE.Clock.prototype = {\n\n\t\tconstructor: THREE.Clock,\n\n\t\tstart: function () {\n\n\t\t\tthis.startTime = ( performance || Date ).now();\n\n\t\t\tthis.oldTime = this.startTime;\n\t\t\tthis.running = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tthis.getElapsedTime();\n\t\t\tthis.running = false;\n\n\t\t},\n\n\t\tgetElapsedTime: function () {\n\n\t\t\tthis.getDelta();\n\t\t\treturn this.elapsedTime;\n\n\t\t},\n\n\t\tgetDelta: function () {\n\n\t\t\tvar diff = 0;\n\n\t\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\t\tthis.start();\n\n\t\t\t}\n\n\t\t\tif ( this.running ) {\n\n\t\t\t\tvar newTime = ( performance || Date ).now();\n\n\t\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\t\tthis.oldTime = newTime;\n\n\t\t\t\tthis.elapsedTime += diff;\n\n\t\t\t}\n\n\t\t\treturn diff;\n\n\t\t}\n\n\t};\n\n\t// File:src/core/EventDispatcher.js\n\n\t/**\n\t * https://github.com/mrdoob/eventdispatcher.js/\n\t */\n\n\tTHREE.EventDispatcher = function () {};\n\n\tObject.assign( THREE.EventDispatcher.prototype, {\n\n\t\taddEventListener: function ( type, listener ) {\n\n\t\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\t\tvar listeners = this._listeners;\n\n\t\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\t\tlisteners[ type ] = [];\n\n\t\t\t}\n\n\t\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\t\tlisteners[ type ].push( listener );\n\n\t\t\t}\n\n\t\t},\n\n\t\thasEventListener: function ( type, listener ) {\n\n\t\t\tif ( this._listeners === undefined ) return false;\n\n\t\t\tvar listeners = this._listeners;\n\n\t\t\tif ( listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1 ) {\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t},\n\n\t\tremoveEventListener: function ( type, listener ) {\n\n\t\t\tif ( this._listeners === undefined ) return;\n\n\t\t\tvar listeners = this._listeners;\n\t\t\tvar listenerArray = listeners[ type ];\n\n\t\t\tif ( listenerArray !== undefined ) {\n\n\t\t\t\tvar index = listenerArray.indexOf( listener );\n\n\t\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tdispatchEvent: function ( event ) {\n\n\t\t\tif ( this._listeners === undefined ) return;\n\n\t\t\tvar listeners = this._listeners;\n\t\t\tvar listenerArray = listeners[ event.type ];\n\n\t\t\tif ( listenerArray !== undefined ) {\n\n\t\t\t\tevent.target = this;\n\n\t\t\t\tvar array = [], i = 0;\n\t\t\t\tvar length = listenerArray.length;\n\n\t\t\t\tfor ( i = 0; i < length; i ++ ) {\n\n\t\t\t\t\tarray[ i ] = listenerArray[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tfor ( i = 0; i < length; i ++ ) {\n\n\t\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t// File:src/core/Layers.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.Layers = function () {\n\n\t\tthis.mask = 1;\n\n\t};\n\n\tTHREE.Layers.prototype = {\n\n\t\tconstructor: THREE.Layers,\n\n\t\tset: function ( channel ) {\n\n\t\t\tthis.mask = 1 << channel;\n\n\t\t},\n\n\t\tenable: function ( channel ) {\n\n\t\t\tthis.mask |= 1 << channel;\n\n\t\t},\n\n\t\ttoggle: function ( channel ) {\n\n\t\t\tthis.mask ^= 1 << channel;\n\n\t\t},\n\n\t\tdisable: function ( channel ) {\n\n\t\t\tthis.mask &= ~ ( 1 << channel );\n\n\t\t},\n\n\t\ttest: function ( layers ) {\n\n\t\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t\t}\n\n\t};\n\n\t// File:src/core/Raycaster.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author bhouston / http://clara.io/\n\t * @author stephomi / http://stephaneginier.com/\n\t */\n\n\t( function ( THREE ) {\n\n\t\tTHREE.Raycaster = function ( origin, direction, near, far ) {\n\n\t\t\tthis.ray = new THREE.Ray( origin, direction );\n\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\t\tthis.near = near || 0;\n\t\t\tthis.far = far || Infinity;\n\n\t\t\tthis.params = {\n\t\t\t\tMesh: {},\n\t\t\t\tLine: {},\n\t\t\t\tLOD: {},\n\t\t\t\tPoints: { threshold: 1 },\n\t\t\t\tSprite: {}\n\t\t\t};\n\n\t\t\tObject.defineProperties( this.params, {\n\t\t\t\tPointCloud: {\n\t\t\t\t\tget: function () {\n\t\t\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\n\t\t\t\t\t\treturn this.Points;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\n\t\t};\n\n\t\tfunction ascSort( a, b ) {\n\n\t\t\treturn a.distance - b.distance;\n\n\t\t}\n\n\t\tfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\t\t\tif ( object.visible === false ) return;\n\n\t\t\tobject.raycast( raycaster, intersects );\n\n\t\t\tif ( recursive === true ) {\n\n\t\t\t\tvar children = object.children;\n\n\t\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tTHREE.Raycaster.prototype = {\n\n\t\t\tconstructor: THREE.Raycaster,\n\n\t\t\tlinePrecision: 1,\n\n\t\t\tset: function ( origin, direction ) {\n\n\t\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\t\t\tthis.ray.set( origin, direction );\n\n\t\t\t},\n\n\t\t\tsetFromCamera: function ( coords, camera ) {\n\n\t\t\t\tif ( camera instanceof THREE.PerspectiveCamera ) {\n\n\t\t\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\n\t\t\t\t} else if ( camera instanceof THREE.OrthographicCamera ) {\n\n\t\t\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tintersectObject: function ( object, recursive ) {\n\n\t\t\t\tvar intersects = [];\n\n\t\t\t\tintersectObject( object, this, intersects, recursive );\n\n\t\t\t\tintersects.sort( ascSort );\n\n\t\t\t\treturn intersects;\n\n\t\t\t},\n\n\t\t\tintersectObjects: function ( objects, recursive ) {\n\n\t\t\t\tvar intersects = [];\n\n\t\t\t\tif ( Array.isArray( objects ) === false ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\n\t\t\t\t\treturn intersects;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t\t\t}\n\n\t\t\t\tintersects.sort( ascSort );\n\n\t\t\t\treturn intersects;\n\n\t\t\t}\n\n\t\t};\n\n\t}( THREE ) );\n\n\t// File:src/core/Object3D.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author elephantatwork / www.elephantatwork.ch\n\t */\n\n\tTHREE.Object3D = function () {\n\n\t\tObject.defineProperty( this, 'id', { value: THREE.Object3DIdCount ++ } );\n\n\t\tthis.uuid = THREE.Math.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = THREE.Object3D.DefaultUp.clone();\n\n\t\tvar position = new THREE.Vector3();\n\t\tvar rotation = new THREE.Euler();\n\t\tvar quaternion = new THREE.Quaternion();\n\t\tvar scale = new THREE.Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation.onChange( onRotationChange );\n\t\tquaternion.onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new THREE.Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new THREE.Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new THREE.Matrix4();\n\t\tthis.matrixWorld = new THREE.Matrix4();\n\n\t\tthis.matrixAutoUpdate = THREE.Object3D.DefaultMatrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.layers = new THREE.Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.userData = {};\n\n\t};\n\n\tTHREE.Object3D.DefaultUp = new THREE.Vector3( 0, 1, 0 );\n\tTHREE.Object3D.DefaultMatrixAutoUpdate = true;\n\n\tObject.assign( THREE.Object3D.prototype, THREE.EventDispatcher.prototype, {\n\n\t\tapplyMatrix: function ( matrix ) {\n\n\t\t\tthis.matrix.multiplyMatrices( matrix, this.matrix );\n\n\t\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t\t},\n\n\t\tsetRotationFromAxisAngle: function ( axis, angle ) {\n\n\t\t\t// assumes axis is normalized\n\n\t\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t\t},\n\n\t\tsetRotationFromEuler: function ( euler ) {\n\n\t\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t\t},\n\n\t\tsetRotationFromMatrix: function ( m ) {\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t\t},\n\n\t\tsetRotationFromQuaternion: function ( q ) {\n\n\t\t\t// assumes q is normalized\n\n\t\t\tthis.quaternion.copy( q );\n\n\t\t},\n\n\t\trotateOnAxis: function () {\n\n\t\t\t// rotate object on axis in object space\n\t\t\t// axis is assumed to be normalized\n\n\t\t\tvar q1 = new THREE.Quaternion();\n\n\t\t\treturn function rotateOnAxis( axis, angle ) {\n\n\t\t\t\tq1.setFromAxisAngle( axis, angle );\n\n\t\t\t\tthis.quaternion.multiply( q1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateX: function () {\n\n\t\t\tvar v1 = new THREE.Vector3( 1, 0, 0 );\n\n\t\t\treturn function rotateX( angle ) {\n\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateY: function () {\n\n\t\t\tvar v1 = new THREE.Vector3( 0, 1, 0 );\n\n\t\t\treturn function rotateY( angle ) {\n\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateZ: function () {\n\n\t\t\tvar v1 = new THREE.Vector3( 0, 0, 1 );\n\n\t\t\treturn function rotateZ( angle ) {\n\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslateOnAxis: function () {\n\n\t\t\t// translate object by distance along axis in object space\n\t\t\t// axis is assumed to be normalized\n\n\t\t\tvar v1 = new THREE.Vector3();\n\n\t\t\treturn function translateOnAxis( axis, distance ) {\n\n\t\t\t\tv1.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\t\t\tthis.position.add( v1.multiplyScalar( distance ) );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslateX: function () {\n\n\t\t\tvar v1 = new THREE.Vector3( 1, 0, 0 );\n\n\t\t\treturn function translateX( distance ) {\n\n\t\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslateY: function () {\n\n\t\t\tvar v1 = new THREE.Vector3( 0, 1, 0 );\n\n\t\t\treturn function translateY( distance ) {\n\n\t\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslateZ: function () {\n\n\t\t\tvar v1 = new THREE.Vector3( 0, 0, 1 );\n\n\t\t\treturn function translateZ( distance ) {\n\n\t\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tlocalToWorld: function ( vector ) {\n\n\t\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t\t},\n\n\t\tworldToLocal: function () {\n\n\t\t\tvar m1 = new THREE.Matrix4();\n\n\t\t\treturn function worldToLocal( vector ) {\n\n\t\t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tlookAt: function () {\n\n\t\t\t// This routine does not support objects with rotated and/or translated parent(s)\n\n\t\t\tvar m1 = new THREE.Matrix4();\n\n\t\t\treturn function lookAt( vector ) {\n\n\t\t\t\tm1.lookAt( vector, this.position, this.up );\n\n\t\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tadd: function ( object ) {\n\n\t\t\tif ( arguments.length > 1 ) {\n\n\t\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tif ( object === this ) {\n\n\t\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tif ( object instanceof THREE.Object3D ) {\n\n\t\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\t\tobject.parent.remove( object );\n\n\t\t\t\t}\n\n\t\t\t\tobject.parent = this;\n\t\t\t\tobject.dispatchEvent( { type: 'added' } );\n\n\t\t\t\tthis.children.push( object );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tremove: function ( object ) {\n\n\t\t\tif ( arguments.length > 1 ) {\n\n\t\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar index = this.children.indexOf( object );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tobject.parent = null;\n\n\t\t\t\tobject.dispatchEvent( { type: 'removed' } );\n\n\t\t\t\tthis.children.splice( index, 1 );\n\n\t\t\t}\n\n\t\t},\n\n\t\tgetObjectById: function ( id ) {\n\n\t\t\treturn this.getObjectByProperty( 'id', id );\n\n\t\t},\n\n\t\tgetObjectByName: function ( name ) {\n\n\t\t\treturn this.getObjectByProperty( 'name', name );\n\n\t\t},\n\n\t\tgetObjectByProperty: function ( name, value ) {\n\n\t\t\tif ( this[ name ] === value ) return this;\n\n\t\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\t\tvar child = this.children[ i ];\n\t\t\t\tvar object = child.getObjectByProperty( name, value );\n\n\t\t\t\tif ( object !== undefined ) {\n\n\t\t\t\t\treturn object;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn undefined;\n\n\t\t},\n\n\t\tgetWorldPosition: function ( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\treturn result.setFromMatrixPosition( this.matrixWorld );\n\n\t\t},\n\n\t\tgetWorldQuaternion: function () {\n\n\t\t\tvar position = new THREE.Vector3();\n\t\t\tvar scale = new THREE.Vector3();\n\n\t\t\treturn function getWorldQuaternion( optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new THREE.Quaternion();\n\n\t\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\t\tthis.matrixWorld.decompose( position, result, scale );\n\n\t\t\t\treturn result;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tgetWorldRotation: function () {\n\n\t\t\tvar quaternion = new THREE.Quaternion();\n\n\t\t\treturn function getWorldRotation( optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new THREE.Euler();\n\n\t\t\t\tthis.getWorldQuaternion( quaternion );\n\n\t\t\t\treturn result.setFromQuaternion( quaternion, this.rotation.order, false );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tgetWorldScale: function () {\n\n\t\t\tvar position = new THREE.Vector3();\n\t\t\tvar quaternion = new THREE.Quaternion();\n\n\t\t\treturn function getWorldScale( optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new THREE.Vector3();\n\n\t\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\t\tthis.matrixWorld.decompose( position, quaternion, result );\n\n\t\t\t\treturn result;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tgetWorldDirection: function () {\n\n\t\t\tvar quaternion = new THREE.Quaternion();\n\n\t\t\treturn function getWorldDirection( optionalTarget ) {\n\n\t\t\t\tvar result = optionalTarget || new THREE.Vector3();\n\n\t\t\t\tthis.getWorldQuaternion( quaternion );\n\n\t\t\t\treturn result.set( 0, 0, 1 ).applyQuaternion( quaternion );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\traycast: function () {},\n\n\t\ttraverse: function ( callback ) {\n\n\t\t\tcallback( this );\n\n\t\t\tvar children = this.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].traverse( callback );\n\n\t\t\t}\n\n\t\t},\n\n\t\ttraverseVisible: function ( callback ) {\n\n\t\t\tif ( this.visible === false ) return;\n\n\t\t\tcallback( this );\n\n\t\t\tvar children = this.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t\t}\n\n\t\t},\n\n\t\ttraverseAncestors: function ( callback ) {\n\n\t\t\tvar parent = this.parent;\n\n\t\t\tif ( parent !== null ) {\n\n\t\t\t\tcallback( parent );\n\n\t\t\t\tparent.traverseAncestors( callback );\n\n\t\t\t}\n\n\t\t},\n\n\t\tupdateMatrix: function () {\n\n\t\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t\t},\n\n\t\tupdateMatrixWorld: function ( force ) {\n\n\t\t\tif ( this.matrixAutoUpdate === true ) this.updateMatrix();\n\n\t\t\tif ( this.matrixWorldNeedsUpdate === true || force === true ) {\n\n\t\t\t\tif ( this.parent === null ) {\n\n\t\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t\t}\n\n\t\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\t\tforce = true;\n\n\t\t\t}\n\n\t\t\t// update children\n\n\t\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\t\tthis.children[ i ].updateMatrixWorld( force );\n\n\t\t\t}\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\t// meta is '' when called from JSON.stringify\n\t\t\tvar isRootObject = ( meta === undefined || meta === '' );\n\n\t\t\tvar output = {};\n\n\t\t\t// meta is a hash used to collect geometries, materials.\n\t\t\t// not providing it implies that this is the root object\n\t\t\t// being serialized.\n\t\t\tif ( isRootObject ) {\n\n\t\t\t\t// initialize meta obj\n\t\t\t\tmeta = {\n\t\t\t\t\tgeometries: {},\n\t\t\t\t\tmaterials: {},\n\t\t\t\t\ttextures: {},\n\t\t\t\t\timages: {}\n\t\t\t\t};\n\n\t\t\t\toutput.metadata = {\n\t\t\t\t\tversion: 4.4,\n\t\t\t\t\ttype: 'Object',\n\t\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\t// standard Object3D serialization\n\n\t\t\tvar object = {};\n\n\t\t\tobject.uuid = this.uuid;\n\t\t\tobject.type = this.type;\n\n\t\t\tif ( this.name !== '' ) object.name = this.name;\n\t\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\n\t\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\t\tif ( this.visible === false ) object.visible = false;\n\n\t\t\tobject.matrix = this.matrix.toArray();\n\n\t\t\t//\n\n\t\t\tif ( this.geometry !== undefined ) {\n\n\t\t\t\tif ( meta.geometries[ this.geometry.uuid ] === undefined ) {\n\n\t\t\t\t\tmeta.geometries[ this.geometry.uuid ] = this.geometry.toJSON( meta );\n\n\t\t\t\t}\n\n\t\t\t\tobject.geometry = this.geometry.uuid;\n\n\t\t\t}\n\n\t\t\tif ( this.material !== undefined ) {\n\n\t\t\t\tif ( meta.materials[ this.material.uuid ] === undefined ) {\n\n\t\t\t\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON( meta );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = this.material.uuid;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( this.children.length > 0 ) {\n\n\t\t\t\tobject.children = [];\n\n\t\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( isRootObject ) {\n\n\t\t\t\tvar geometries = extractFromCache( meta.geometries );\n\t\t\t\tvar materials = extractFromCache( meta.materials );\n\t\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\t\tvar images = extractFromCache( meta.images );\n\n\t\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\t\tif ( images.length > 0 ) output.images = images;\n\n\t\t\t}\n\n\t\t\toutput.object = object;\n\n\t\t\treturn output;\n\n\t\t\t// extract data from the cache hash\n\t\t\t// remove metadata on each item\n\t\t\t// and return as array\n\t\t\tfunction extractFromCache ( cache ) {\n\n\t\t\t\tvar values = [];\n\t\t\t\tfor ( var key in cache ) {\n\n\t\t\t\t\tvar data = cache[ key ];\n\t\t\t\t\tdelete data.metadata;\n\t\t\t\t\tvalues.push( data );\n\n\t\t\t\t}\n\t\t\t\treturn values;\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function ( recursive ) {\n\n\t\t\treturn new this.constructor().copy( this, recursive );\n\n\t\t},\n\n\t\tcopy: function ( source, recursive ) {\n\n\t\t\tif ( recursive === undefined ) recursive = true;\n\n\t\t\tthis.name = source.name;\n\n\t\t\tthis.up.copy( source.up );\n\n\t\t\tthis.position.copy( source.position );\n\t\t\tthis.quaternion.copy( source.quaternion );\n\t\t\tthis.scale.copy( source.scale );\n\n\t\t\tthis.matrix.copy( source.matrix );\n\t\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\t\tthis.visible = source.visible;\n\n\t\t\tthis.castShadow = source.castShadow;\n\t\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\t\tthis.frustumCulled = source.frustumCulled;\n\t\t\tthis.renderOrder = source.renderOrder;\n\n\t\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\t\tif ( recursive === true ) {\n\n\t\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\t\tvar child = source.children[ i ];\n\t\t\t\t\tthis.add( child.clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\tTHREE.Object3DIdCount = 0;\n\n\t// File:src/core/Face3.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tTHREE.Face3 = function ( a, b, c, normal, color, materialIndex ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t\tthis.normal = normal instanceof THREE.Vector3 ? normal : new THREE.Vector3();\n\t\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\n\n\t\tthis.color = color instanceof THREE.Color ? color : new THREE.Color();\n\t\tthis.vertexColors = Array.isArray( color ) ? color : [];\n\n\t\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\n\n\t};\n\n\tTHREE.Face3.prototype = {\n\n\t\tconstructor: THREE.Face3,\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.a = source.a;\n\t\t\tthis.b = source.b;\n\t\t\tthis.c = source.c;\n\n\t\t\tthis.normal.copy( source.normal );\n\t\t\tthis.color.copy( source.color );\n\n\t\t\tthis.materialIndex = source.materialIndex;\n\n\t\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\n\n\t\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t};\n\n\t// File:src/core/BufferAttribute.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.BufferAttribute = function ( array, itemSize, normalized ) {\n\n\t\tthis.uuid = THREE.Math.generateUUID();\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\n\t\tthis.dynamic = false;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\t\tthis.normalized = normalized === true;\n\n\t};\n\n\tTHREE.BufferAttribute.prototype = {\n\n\t\tconstructor: THREE.BufferAttribute,\n\n\t\tget count() {\n\n\t\t\treturn this.array.length / this.itemSize;\n\n\t\t},\n\n\t\tset needsUpdate( value ) {\n\n\t\t\tif ( value === true ) this.version ++;\n\n\t\t},\n\n\t\tsetDynamic: function ( value ) {\n\n\t\t\tthis.dynamic = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.array = new source.array.constructor( source.array );\n\t\t\tthis.itemSize = source.itemSize;\n\n\t\t\tthis.dynamic = source.dynamic;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\t\tindex1 *= this.itemSize;\n\t\t\tindex2 *= attribute.itemSize;\n\n\t\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyArray: function ( array ) {\n\n\t\t\tthis.array.set( array );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyColorsArray: function ( colors ) {\n\n\t\t\tvar array = this.array, offset = 0;\n\n\t\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\n\n\t\t\t\tvar color = colors[ i ];\n\n\t\t\t\tif ( color === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\n\t\t\t\t\tcolor = new THREE.Color();\n\n\t\t\t\t}\n\n\t\t\t\tarray[ offset ++ ] = color.r;\n\t\t\t\tarray[ offset ++ ] = color.g;\n\t\t\t\tarray[ offset ++ ] = color.b;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyIndicesArray: function ( indices ) {\n\n\t\t\tvar array = this.array, offset = 0;\n\n\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tvar index = indices[ i ];\n\n\t\t\t\tarray[ offset ++ ] = index.a;\n\t\t\t\tarray[ offset ++ ] = index.b;\n\t\t\t\tarray[ offset ++ ] = index.c;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyVector2sArray: function ( vectors ) {\n\n\t\t\tvar array = this.array, offset = 0;\n\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\t\tvar vector = vectors[ i ];\n\n\t\t\t\tif ( vector === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\n\t\t\t\t\tvector = new THREE.Vector2();\n\n\t\t\t\t}\n\n\t\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\t\tarray[ offset ++ ] = vector.y;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyVector3sArray: function ( vectors ) {\n\n\t\t\tvar array = this.array, offset = 0;\n\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\t\tvar vector = vectors[ i ];\n\n\t\t\t\tif ( vector === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\n\t\t\t\t\tvector = new THREE.Vector3();\n\n\t\t\t\t}\n\n\t\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\t\tarray[ offset ++ ] = vector.z;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyVector4sArray: function ( vectors ) {\n\n\t\t\tvar array = this.array, offset = 0;\n\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\t\tvar vector = vectors[ i ];\n\n\t\t\t\tif ( vector === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\n\t\t\t\t\tvector = new THREE.Vector4();\n\n\t\t\t\t}\n\n\t\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\t\tarray[ offset ++ ] = vector.z;\n\t\t\t\tarray[ offset ++ ] = vector.w;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tset: function ( value, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.array.set( value, offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetX: function ( index ) {\n\n\t\t\treturn this.array[ index * this.itemSize ];\n\n\t\t},\n\n\t\tsetX: function ( index, x ) {\n\n\t\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetY: function ( index ) {\n\n\t\t\treturn this.array[ index * this.itemSize + 1 ];\n\n\t\t},\n\n\t\tsetY: function ( index, y ) {\n\n\t\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetZ: function ( index ) {\n\n\t\t\treturn this.array[ index * this.itemSize + 2 ];\n\n\t\t},\n\n\t\tsetZ: function ( index, z ) {\n\n\t\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetW: function ( index ) {\n\n\t\t\treturn this.array[ index * this.itemSize + 3 ];\n\n\t\t},\n\n\t\tsetW: function ( index, w ) {\n\n\t\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXY: function ( index, x, y ) {\n\n\t\t\tindex *= this.itemSize;\n\n\t\t\tthis.array[ index + 0 ] = x;\n\t\t\tthis.array[ index + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXYZ: function ( index, x, y, z ) {\n\n\t\t\tindex *= this.itemSize;\n\n\t\t\tthis.array[ index + 0 ] = x;\n\t\t\tthis.array[ index + 1 ] = y;\n\t\t\tthis.array[ index + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\t\tindex *= this.itemSize;\n\n\t\t\tthis.array[ index + 0 ] = x;\n\t\t\tthis.array[ index + 1 ] = y;\n\t\t\tthis.array[ index + 2 ] = z;\n\t\t\tthis.array[ index + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t}\n\n\t};\n\n\t//\n\n\tTHREE.Int8Attribute = function ( array, itemSize ) {\n\n\t\treturn new THREE.BufferAttribute( new Int8Array( array ), itemSize );\n\n\t};\n\n\tTHREE.Uint8Attribute = function ( array, itemSize ) {\n\n\t\treturn new THREE.BufferAttribute( new Uint8Array( array ), itemSize );\n\n\t};\n\n\tTHREE.Uint8ClampedAttribute = function ( array, itemSize ) {\n\n\t\treturn new THREE.BufferAttribute( new Uint8ClampedArray( array ), itemSize );\n\n\t};\n\n\tTHREE.Int16Attribute = function ( array, itemSize ) {\n\n\t\treturn new THREE.BufferAttribute( new Int16Array( array ), itemSize );\n\n\t};\n\n\tTHREE.Uint16Attribute = function ( array, itemSize ) {\n\n\t\treturn new THREE.BufferAttribute( new Uint16Array( array ), itemSize );\n\n\t};\n\n\tTHREE.Int32Attribute = function ( array, itemSize ) {\n\n\t\treturn new THREE.BufferAttribute( new Int32Array( array ), itemSize );\n\n\t};\n\n\tTHREE.Uint32Attribute = function ( array, itemSize ) {\n\n\t\treturn new THREE.BufferAttribute( new Uint32Array( array ), itemSize );\n\n\t};\n\n\tTHREE.Float32Attribute = function ( array, itemSize ) {\n\n\t\treturn new THREE.BufferAttribute( new Float32Array( array ), itemSize );\n\n\t};\n\n\tTHREE.Float64Attribute = function ( array, itemSize ) {\n\n\t\treturn new THREE.BufferAttribute( new Float64Array( array ), itemSize );\n\n\t};\n\n\n\t// Deprecated\n\n\tTHREE.DynamicBufferAttribute = function ( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\n\t\treturn new THREE.BufferAttribute( array, itemSize ).setDynamic( true );\n\n\t};\n\n\t// File:src/core/InstancedBufferAttribute.js\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tTHREE.InstancedBufferAttribute = function ( array, itemSize, meshPerAttribute ) {\n\n\t\tTHREE.BufferAttribute.call( this, array, itemSize );\n\n\t\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n\t};\n\n\tTHREE.InstancedBufferAttribute.prototype = Object.create( THREE.BufferAttribute.prototype );\n\tTHREE.InstancedBufferAttribute.prototype.constructor = THREE.InstancedBufferAttribute;\n\n\tTHREE.InstancedBufferAttribute.prototype.copy = function ( source ) {\n\n\t\tTHREE.BufferAttribute.prototype.copy.call( this, source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t};\n\n\t// File:src/core/InterleavedBuffer.js\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tTHREE.InterleavedBuffer = function ( array, stride ) {\n\n\t\tthis.uuid = THREE.Math.generateUUID();\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\n\t\tthis.dynamic = false;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t};\n\n\tTHREE.InterleavedBuffer.prototype = {\n\n\t\tconstructor: THREE.InterleavedBuffer,\n\n\t\tget length () {\n\n\t\t\treturn this.array.length;\n\n\t\t},\n\n\t\tget count () {\n\n\t\t\treturn this.array.length / this.stride;\n\n\t\t},\n\n\t\tset needsUpdate( value ) {\n\n\t\t\tif ( value === true ) this.version ++;\n\n\t\t},\n\n\t\tsetDynamic: function ( value ) {\n\n\t\t\tthis.dynamic = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.array = new source.array.constructor( source.array );\n\t\t\tthis.stride = source.stride;\n\t\t\tthis.dynamic = source.dynamic;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\t\tindex1 *= this.stride;\n\t\t\tindex2 *= attribute.stride;\n\n\t\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tset: function ( value, offset ) {\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tthis.array.set( value, offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t}\n\n\t};\n\n\t// File:src/core/InstancedInterleavedBuffer.js\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tTHREE.InstancedInterleavedBuffer = function ( array, stride, meshPerAttribute ) {\n\n\t\tTHREE.InterleavedBuffer.call( this, array, stride );\n\n\t\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n\t};\n\n\tTHREE.InstancedInterleavedBuffer.prototype = Object.create( THREE.InterleavedBuffer.prototype );\n\tTHREE.InstancedInterleavedBuffer.prototype.constructor = THREE.InstancedInterleavedBuffer;\n\n\tTHREE.InstancedInterleavedBuffer.prototype.copy = function ( source ) {\n\n\t\tTHREE.InterleavedBuffer.prototype.copy.call( this, source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t};\n\n\t// File:src/core/InterleavedBufferAttribute.js\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tTHREE.InterleavedBufferAttribute = function ( interleavedBuffer, itemSize, offset, normalized ) {\n\n\t\tthis.uuid = THREE.Math.generateUUID();\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized === true;\n\n\t};\n\n\n\tTHREE.InterleavedBufferAttribute.prototype = {\n\n\t\tconstructor: THREE.InterleavedBufferAttribute,\n\n\t\tget length() {\n\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Please use .count.' );\n\t\t\treturn this.array.length;\n\n\t\t},\n\n\t\tget count() {\n\n\t\t\treturn this.data.count;\n\n\t\t},\n\n\t\tget array() {\n\n\t\t\treturn this.data.array;\n\n\t\t},\n\n\t\tsetX: function ( index, x ) {\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetY: function ( index, y ) {\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetZ: function ( index, z ) {\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetW: function ( index, w ) {\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetX: function ( index ) {\n\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset ];\n\n\t\t},\n\n\t\tgetY: function ( index ) {\n\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t\t},\n\n\t\tgetZ: function ( index ) {\n\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t\t},\n\n\t\tgetW: function ( index ) {\n\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t\t},\n\n\t\tsetXY: function ( index, x, y ) {\n\n\t\t\tindex = index * this.data.stride + this.offset;\n\n\t\t\tthis.data.array[ index + 0 ] = x;\n\t\t\tthis.data.array[ index + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXYZ: function ( index, x, y, z ) {\n\n\t\t\tindex = index * this.data.stride + this.offset;\n\n\t\t\tthis.data.array[ index + 0 ] = x;\n\t\t\tthis.data.array[ index + 1 ] = y;\n\t\t\tthis.data.array[ index + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\t\tindex = index * this.data.stride + this.offset;\n\n\t\t\tthis.data.array[ index + 0 ] = x;\n\t\t\tthis.data.array[ index + 1 ] = y;\n\t\t\tthis.data.array[ index + 2 ] = z;\n\t\t\tthis.data.array[ index + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t};\n\n\t// File:src/core/Geometry.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author kile / http://kile.stravaganza.org/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author bhouston / http://clara.io\n\t */\n\n\tTHREE.Geometry = function () {\n\n\t\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\n\n\t\tthis.uuid = THREE.Math.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Geometry';\n\n\t\tthis.vertices = [];\n\t\tthis.colors = [];\n\t\tthis.faces = [];\n\t\tthis.faceVertexUvs = [ [] ];\n\n\t\tthis.morphTargets = [];\n\t\tthis.morphNormals = [];\n\n\t\tthis.skinWeights = [];\n\t\tthis.skinIndices = [];\n\n\t\tthis.lineDistances = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// update flags\n\n\t\tthis.elementsNeedUpdate = false;\n\t\tthis.verticesNeedUpdate = false;\n\t\tthis.uvsNeedUpdate = false;\n\t\tthis.normalsNeedUpdate = false;\n\t\tthis.colorsNeedUpdate = false;\n\t\tthis.lineDistancesNeedUpdate = false;\n\t\tthis.groupsNeedUpdate = false;\n\n\t};\n\n\tObject.assign( THREE.Geometry.prototype, THREE.EventDispatcher.prototype, {\n\n\t\tapplyMatrix: function ( matrix ) {\n\n\t\t\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\n\n\t\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\t\tvar vertex = this.vertices[ i ];\n\t\t\t\tvertex.applyMatrix4( matrix );\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\t\tvar face = this.faces[ i ];\n\t\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox !== null ) {\n\n\t\t\t\tthis.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\t\tthis.computeBoundingSphere();\n\n\t\t\t}\n\n\t\t\tthis.verticesNeedUpdate = true;\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateX: function () {\n\n\t\t\t// rotate geometry around world x-axis\n\n\t\t\tvar m1;\n\n\t\t\treturn function rotateX( angle ) {\n\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\n\n\t\t\t\tm1.makeRotationX( angle );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateY: function () {\n\n\t\t\t// rotate geometry around world y-axis\n\n\t\t\tvar m1;\n\n\t\t\treturn function rotateY( angle ) {\n\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\n\n\t\t\t\tm1.makeRotationY( angle );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateZ: function () {\n\n\t\t\t// rotate geometry around world z-axis\n\n\t\t\tvar m1;\n\n\t\t\treturn function rotateZ( angle ) {\n\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\n\n\t\t\t\tm1.makeRotationZ( angle );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslate: function () {\n\n\t\t\t// translate geometry\n\n\t\t\tvar m1;\n\n\t\t\treturn function translate( x, y, z ) {\n\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\n\n\t\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tscale: function () {\n\n\t\t\t// scale geometry\n\n\t\t\tvar m1;\n\n\t\t\treturn function scale( x, y, z ) {\n\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\n\n\t\t\t\tm1.makeScale( x, y, z );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tlookAt: function () {\n\n\t\t\tvar obj;\n\n\t\t\treturn function lookAt( vector ) {\n\n\t\t\t\tif ( obj === undefined ) obj = new THREE.Object3D();\n\n\t\t\t\tobj.lookAt( vector );\n\n\t\t\t\tobj.updateMatrix();\n\n\t\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tfromBufferGeometry: function ( geometry ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\n\t\t\tvar attributes = geometry.attributes;\n\n\t\t\tvar positions = attributes.position.array;\n\t\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\n\t\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\n\t\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\n\t\t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\n\n\t\t\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\n\n\t\t\tvar tempNormals = [];\n\t\t\tvar tempUVs = [];\n\t\t\tvar tempUVs2 = [];\n\n\t\t\tfor ( var i = 0, j = 0; i < positions.length; i += 3, j += 2 ) {\n\n\t\t\t\tscope.vertices.push( new THREE.Vector3( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] ) );\n\n\t\t\t\tif ( normals !== undefined ) {\n\n\t\t\t\t\ttempNormals.push( new THREE.Vector3( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( colors !== undefined ) {\n\n\t\t\t\t\tscope.colors.push( new THREE.Color( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\t\ttempUVs.push( new THREE.Vector2( uvs[ j ], uvs[ j + 1 ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( uvs2 !== undefined ) {\n\n\t\t\t\t\ttempUVs2.push( new THREE.Vector2( uvs2[ j ], uvs2[ j + 1 ] ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction addFace( a, b, c, materialIndex ) {\n\n\t\t\t\tvar vertexNormals = normals !== undefined ? [ tempNormals[ a ].clone(), tempNormals[ b ].clone(), tempNormals[ c ].clone() ] : [];\n\t\t\t\tvar vertexColors = colors !== undefined ? [ scope.colors[ a ].clone(), scope.colors[ b ].clone(), scope.colors[ c ].clone() ] : [];\n\n\t\t\t\tvar face = new THREE.Face3( a, b, c, vertexNormals, vertexColors, materialIndex );\n\n\t\t\t\tscope.faces.push( face );\n\n\t\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ tempUVs[ a ].clone(), tempUVs[ b ].clone(), tempUVs[ c ].clone() ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( uvs2 !== undefined ) {\n\n\t\t\t\t\tscope.faceVertexUvs[ 1 ].push( [ tempUVs2[ a ].clone(), tempUVs2[ b ].clone(), tempUVs2[ c ].clone() ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\tif ( groups.length > 0 ) {\n\n\t\t\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\n\n\t\t\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\t\t\tvar start = group.start;\n\t\t\t\t\t\tvar count = group.count;\n\n\t\t\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ], group.materialIndex  );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tfor ( var i = 0; i < positions.length / 3; i += 3 ) {\n\n\t\t\t\t\taddFace( i, i + 1, i + 2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.computeFaceNormals();\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcenter: function () {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t\tvar offset = this.boundingBox.center().negate();\n\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\t\treturn offset;\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t\tvar center = this.boundingSphere.center;\n\t\t\tvar radius = this.boundingSphere.radius;\n\n\t\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\n\n\t\t\tvar matrix = new THREE.Matrix4();\n\t\t\tmatrix.set(\n\t\t\t\ts, 0, 0, - s * center.x,\n\t\t\t\t0, s, 0, - s * center.y,\n\t\t\t\t0, 0, s, - s * center.z,\n\t\t\t\t0, 0, 0, 1\n\t\t\t);\n\n\t\t\tthis.applyMatrix( matrix );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcomputeFaceNormals: function () {\n\n\t\t\tvar cb = new THREE.Vector3(), ab = new THREE.Vector3();\n\n\t\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tvar face = this.faces[ f ];\n\n\t\t\t\tvar vA = this.vertices[ face.a ];\n\t\t\t\tvar vB = this.vertices[ face.b ];\n\t\t\t\tvar vC = this.vertices[ face.c ];\n\n\t\t\t\tcb.subVectors( vC, vB );\n\t\t\t\tab.subVectors( vA, vB );\n\t\t\t\tcb.cross( ab );\n\n\t\t\t\tcb.normalize();\n\n\t\t\t\tface.normal.copy( cb );\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeVertexNormals: function ( areaWeighted ) {\n\n\t\t\tif ( areaWeighted === undefined ) areaWeighted = true;\n\n\t\t\tvar v, vl, f, fl, face, vertices;\n\n\t\t\tvertices = new Array( this.vertices.length );\n\n\t\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\t\tvertices[ v ] = new THREE.Vector3();\n\n\t\t\t}\n\n\t\t\tif ( areaWeighted ) {\n\n\t\t\t\t// vertex normals weighted by triangle areas\n\t\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\n\n\t\t\t\tvar vA, vB, vC;\n\t\t\t\tvar cb = new THREE.Vector3(), ab = new THREE.Vector3();\n\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\t\tvA = this.vertices[ face.a ];\n\t\t\t\t\tvB = this.vertices[ face.b ];\n\t\t\t\t\tvC = this.vertices[ face.c ];\n\n\t\t\t\t\tcb.subVectors( vC, vB );\n\t\t\t\t\tab.subVectors( vA, vB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tvertices[ face.a ].add( cb );\n\t\t\t\t\tvertices[ face.b ].add( cb );\n\t\t\t\t\tvertices[ face.c ].add( cb );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\t\tvertices[ face.a ].add( face.normal );\n\t\t\t\t\tvertices[ face.b ].add( face.normal );\n\t\t\t\t\tvertices[ face.c ].add( face.normal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\t\tvertices[ v ].normalize();\n\n\t\t\t}\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\n\t\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\n\t\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\n\t\t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\n\t\t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.faces.length > 0 ) {\n\n\t\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeMorphNormals: function () {\n\n\t\t\tvar i, il, f, fl, face;\n\n\t\t\t// save original normals\n\t\t\t// - create temp variables on first access\n\t\t\t//   otherwise just copy (for faster repeated calls)\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tif ( ! face.__originalFaceNormal ) {\n\n\t\t\t\t\tface.__originalFaceNormal = face.normal.clone();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tface.__originalFaceNormal.copy( face.normal );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\n\n\t\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\n\n\t\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// use temp geometry to compute face and vertex normals for each morph\n\n\t\t\tvar tmpGeo = new THREE.Geometry();\n\t\t\ttmpGeo.faces = this.faces;\n\n\t\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\n\n\t\t\t\t// create on first access\n\n\t\t\t\tif ( ! this.morphNormals[ i ] ) {\n\n\t\t\t\t\tthis.morphNormals[ i ] = {};\n\t\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\n\t\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\n\n\t\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\n\t\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\n\n\t\t\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\t\tfaceNormal = new THREE.Vector3();\n\t\t\t\t\t\tvertexNormals = { a: new THREE.Vector3(), b: new THREE.Vector3(), c: new THREE.Vector3() };\n\n\t\t\t\t\t\tdstNormalsFace.push( faceNormal );\n\t\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar morphNormals = this.morphNormals[ i ];\n\n\t\t\t\t// set vertices to morph target\n\n\t\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\n\n\t\t\t\t// compute morph normals\n\n\t\t\t\ttmpGeo.computeFaceNormals();\n\t\t\t\ttmpGeo.computeVertexNormals();\n\n\t\t\t\t// store morph normals\n\n\t\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\n\t\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\n\n\t\t\t\t\tfaceNormal.copy( face.normal );\n\n\t\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\n\t\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\n\t\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// restore original normals\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tface.normal = face.__originalFaceNormal;\n\t\t\t\tface.vertexNormals = face.__originalVertexNormals;\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeTangents: function () {\n\n\t\t\tconsole.warn( 'THREE.Geometry: .computeTangents() has been removed.' );\n\n\t\t},\n\n\t\tcomputeLineDistances: function () {\n\n\t\t\tvar d = 0;\n\t\t\tvar vertices = this.vertices;\n\n\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\t\tif ( i > 0 ) {\n\n\t\t\t\t\td += vertices[ i ].distanceTo( vertices[ i - 1 ] );\n\n\t\t\t\t}\n\n\t\t\t\tthis.lineDistances[ i ] = d;\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeBoundingBox: function () {\n\n\t\t\tif ( this.boundingBox === null ) {\n\n\t\t\t\tthis.boundingBox = new THREE.Box3();\n\n\t\t\t}\n\n\t\t\tthis.boundingBox.setFromPoints( this.vertices );\n\n\t\t},\n\n\t\tcomputeBoundingSphere: function () {\n\n\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\tthis.boundingSphere = new THREE.Sphere();\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.setFromPoints( this.vertices );\n\n\t\t},\n\n\t\tmerge: function ( geometry, matrix, materialIndexOffset ) {\n\n\t\t\tif ( geometry instanceof THREE.Geometry === false ) {\n\n\t\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar normalMatrix,\n\t\t\tvertexOffset = this.vertices.length,\n\t\t\tvertices1 = this.vertices,\n\t\t\tvertices2 = geometry.vertices,\n\t\t\tfaces1 = this.faces,\n\t\t\tfaces2 = geometry.faces,\n\t\t\tuvs1 = this.faceVertexUvs[ 0 ],\n\t\t\tuvs2 = geometry.faceVertexUvs[ 0 ];\n\n\t\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\n\n\t\t\tif ( matrix !== undefined ) {\n\n\t\t\t\tnormalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\n\n\t\t\t}\n\n\t\t\t// vertices\n\n\t\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\n\n\t\t\t\tvar vertex = vertices2[ i ];\n\n\t\t\t\tvar vertexCopy = vertex.clone();\n\n\t\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\n\n\t\t\t\tvertices1.push( vertexCopy );\n\n\t\t\t}\n\n\t\t\t// faces\n\n\t\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\n\n\t\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\n\t\t\t\tfaceVertexNormals = face.vertexNormals,\n\t\t\t\tfaceVertexColors = face.vertexColors;\n\n\t\t\t\tfaceCopy = new THREE.Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\n\t\t\t\tfaceCopy.normal.copy( face.normal );\n\n\t\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tnormal = faceVertexNormals[ j ].clone();\n\n\t\t\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfaceCopy.vertexNormals.push( normal );\n\n\t\t\t\t}\n\n\t\t\t\tfaceCopy.color.copy( face.color );\n\n\t\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\n\n\t\t\t\t\tcolor = faceVertexColors[ j ];\n\t\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\n\n\t\t\t\t}\n\n\t\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\n\n\t\t\t\tfaces1.push( faceCopy );\n\n\t\t\t}\n\n\t\t\t// uvs\n\n\t\t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\n\n\t\t\t\tvar uv = uvs2[ i ], uvCopy = [];\n\n\t\t\t\tif ( uv === undefined ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\n\n\t\t\t\t\tuvCopy.push( uv[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t\tuvs1.push( uvCopy );\n\n\t\t\t}\n\n\t\t},\n\n\t\tmergeMesh: function ( mesh ) {\n\n\t\t\tif ( mesh instanceof THREE.Mesh === false ) {\n\n\t\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tmesh.matrixAutoUpdate && mesh.updateMatrix();\n\n\t\t\tthis.merge( mesh.geometry, mesh.matrix );\n\n\t\t},\n\n\t\t/*\n\t\t * Checks for duplicate vertices with hashmap.\n\t\t * Duplicated vertices are removed\n\t\t * and faces' vertices are updated.\n\t\t */\n\n\t\tmergeVertices: function () {\n\n\t\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\n\t\t\tvar unique = [], changes = [];\n\n\t\t\tvar v, key;\n\t\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\n\t\t\tvar precision = Math.pow( 10, precisionPoints );\n\t\t\tvar i, il, face;\n\t\t\tvar indices, j, jl;\n\n\t\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\t\tv = this.vertices[ i ];\n\t\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\n\n\t\t\t\tif ( verticesMap[ key ] === undefined ) {\n\n\t\t\t\t\tverticesMap[ key ] = i;\n\t\t\t\t\tunique.push( this.vertices[ i ] );\n\t\t\t\t\tchanges[ i ] = unique.length - 1;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\n\t\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// if faces are completely degenerate after merging vertices, we\n\t\t\t// have to remove them from the geometry.\n\t\t\tvar faceIndicesToRemove = [];\n\n\t\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\t\tface = this.faces[ i ];\n\n\t\t\t\tface.a = changes[ face.a ];\n\t\t\t\tface.b = changes[ face.b ];\n\t\t\t\tface.c = changes[ face.c ];\n\n\t\t\t\tindices = [ face.a, face.b, face.c ];\n\n\t\t\t\tvar dupIndex = - 1;\n\n\t\t\t\t// if any duplicate vertices are found in a Face3\n\t\t\t\t// we have to remove the face as nothing can be saved\n\t\t\t\tfor ( var n = 0; n < 3; n ++ ) {\n\n\t\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\n\n\t\t\t\t\t\tdupIndex = n;\n\t\t\t\t\t\tfaceIndicesToRemove.push( i );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\n\n\t\t\t\tvar idx = faceIndicesToRemove[ i ];\n\n\t\t\t\tthis.faces.splice( idx, 1 );\n\n\t\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Use unique set of vertices\n\n\t\t\tvar diff = this.vertices.length - unique.length;\n\t\t\tthis.vertices = unique;\n\t\t\treturn diff;\n\n\t\t},\n\n\t\tsortFacesByMaterialIndex: function () {\n\n\t\t\tvar faces = this.faces;\n\t\t\tvar length = faces.length;\n\n\t\t\t// tag faces\n\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tfaces[ i ]._id = i;\n\n\t\t\t}\n\n\t\t\t// sort faces\n\n\t\t\tfunction materialIndexSort( a, b ) {\n\n\t\t\t\treturn a.materialIndex - b.materialIndex;\n\n\t\t\t}\n\n\t\t\tfaces.sort( materialIndexSort );\n\n\t\t\t// sort uvs\n\n\t\t\tvar uvs1 = this.faceVertexUvs[ 0 ];\n\t\t\tvar uvs2 = this.faceVertexUvs[ 1 ];\n\n\t\t\tvar newUvs1, newUvs2;\n\n\t\t\tif ( uvs1 && uvs1.length === length ) newUvs1 = [];\n\t\t\tif ( uvs2 && uvs2.length === length ) newUvs2 = [];\n\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tvar id = faces[ i ]._id;\n\n\t\t\t\tif ( newUvs1 ) newUvs1.push( uvs1[ id ] );\n\t\t\t\tif ( newUvs2 ) newUvs2.push( uvs2[ id ] );\n\n\t\t\t}\n\n\t\t\tif ( newUvs1 ) this.faceVertexUvs[ 0 ] = newUvs1;\n\t\t\tif ( newUvs2 ) this.faceVertexUvs[ 1 ] = newUvs2;\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.4,\n\t\t\t\t\ttype: 'Geometry',\n\t\t\t\t\tgenerator: 'Geometry.toJSON'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// standard Geometry serialization\n\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.type = this.type;\n\t\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\t\tif ( this.parameters !== undefined ) {\n\n\t\t\t\tvar parameters = this.parameters;\n\n\t\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\n\t\t\t}\n\n\t\t\tvar vertices = [];\n\n\t\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\n\n\t\t\t\tvar vertex = this.vertices[ i ];\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t\tvar faces = [];\n\t\t\tvar normals = [];\n\t\t\tvar normalsHash = {};\n\t\t\tvar colors = [];\n\t\t\tvar colorsHash = {};\n\t\t\tvar uvs = [];\n\t\t\tvar uvsHash = {};\n\n\t\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\n\n\t\t\t\tvar face = this.faces[ i ];\n\n\t\t\t\tvar hasMaterial = true;\n\t\t\t\tvar hasFaceUv = false; // deprecated\n\t\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\n\t\t\t\tvar hasFaceNormal = face.normal.length() > 0;\n\t\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\n\t\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\n\t\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\n\n\t\t\t\tvar faceType = 0;\n\n\t\t\t\tfaceType = setBit( faceType, 0, 0 ); // isQuad\n\t\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\n\t\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\n\t\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\n\t\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\n\t\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\n\t\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\n\t\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\n\n\t\t\t\tfaces.push( faceType );\n\t\t\t\tfaces.push( face.a, face.b, face.c );\n\t\t\t\tfaces.push( face.materialIndex );\n\n\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\t\tfaces.push(\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\t\tfaces.push(\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\tfaces.push( getColorIndex( face.color ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\t\t\tfaces.push(\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction setBit( value, position, enabled ) {\n\n\t\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\n\n\t\t\t}\n\n\t\t\tfunction getNormalIndex( normal ) {\n\n\t\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\n\n\t\t\t\tif ( normalsHash[ hash ] !== undefined ) {\n\n\t\t\t\t\treturn normalsHash[ hash ];\n\n\t\t\t\t}\n\n\t\t\t\tnormalsHash[ hash ] = normals.length / 3;\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\treturn normalsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tfunction getColorIndex( color ) {\n\n\t\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\n\n\t\t\t\tif ( colorsHash[ hash ] !== undefined ) {\n\n\t\t\t\t\treturn colorsHash[ hash ];\n\n\t\t\t\t}\n\n\t\t\t\tcolorsHash[ hash ] = colors.length;\n\t\t\t\tcolors.push( color.getHex() );\n\n\t\t\t\treturn colorsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tfunction getUvIndex( uv ) {\n\n\t\t\t\tvar hash = uv.x.toString() + uv.y.toString();\n\n\t\t\t\tif ( uvsHash[ hash ] !== undefined ) {\n\n\t\t\t\t\treturn uvsHash[ hash ];\n\n\t\t\t\t}\n\n\t\t\t\tuvsHash[ hash ] = uvs.length / 2;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\treturn uvsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tdata.data = {};\n\n\t\t\tdata.data.vertices = vertices;\n\t\t\tdata.data.normals = normals;\n\t\t\tif ( colors.length > 0 ) data.data.colors = colors;\n\t\t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\n\t\t\tdata.data.faces = faces;\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\t/*\n\t\t\t// Handle primitives\n\n\t\t\tvar parameters = this.parameters;\n\n\t\t\tif ( parameters !== undefined ) {\n\n\t\t\t\tvar values = [];\n\n\t\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\t\tvalues.push( parameters[ key ] );\n\n\t\t\t\t}\n\n\t\t\t\tvar geometry = Object.create( this.constructor.prototype );\n\t\t\t\tthis.constructor.apply( geometry, values );\n\t\t\t\treturn geometry;\n\n\t\t\t}\n\n\t\t\treturn new this.constructor().copy( this );\n\t\t\t*/\n\n\t\t\treturn new THREE.Geometry().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.vertices = [];\n\t\t\tthis.faces = [];\n\t\t\tthis.faceVertexUvs = [ [] ];\n\n\t\t\tvar vertices = source.vertices;\n\n\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\t\tthis.vertices.push( vertices[ i ].clone() );\n\n\t\t\t}\n\n\t\t\tvar faces = source.faces;\n\n\t\t\tfor ( var i = 0, il = faces.length; i < il; i ++ ) {\n\n\t\t\t\tthis.faces.push( faces[ i ].clone() );\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\n\n\t\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\n\n\t\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\n\n\t\t\t\t\tthis.faceVertexUvs[ i ] = [];\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\n\n\t\t\t\t\tfor ( var k = 0, kl = uvs.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tvar uv = uvs[ k ];\n\n\t\t\t\t\t\tuvsCopy.push( uv.clone() );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\tTHREE.GeometryIdCount = 0;\n\n\t// File:src/core/DirectGeometry.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.DirectGeometry = function () {\n\n\t\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\n\n\t\tthis.uuid = THREE.Math.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'DirectGeometry';\n\n\t\tthis.indices = [];\n\t\tthis.vertices = [];\n\t\tthis.normals = [];\n\t\tthis.colors = [];\n\t\tthis.uvs = [];\n\t\tthis.uvs2 = [];\n\n\t\tthis.groups = [];\n\n\t\tthis.morphTargets = {};\n\n\t\tthis.skinWeights = [];\n\t\tthis.skinIndices = [];\n\n\t\t// this.lineDistances = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// update flags\n\n\t\tthis.verticesNeedUpdate = false;\n\t\tthis.normalsNeedUpdate = false;\n\t\tthis.colorsNeedUpdate = false;\n\t\tthis.uvsNeedUpdate = false;\n\t\tthis.groupsNeedUpdate = false;\n\n\t};\n\n\tObject.assign( THREE.DirectGeometry.prototype, THREE.EventDispatcher.prototype, {\n\n\t\tcomputeBoundingBox: THREE.Geometry.prototype.computeBoundingBox,\n\t\tcomputeBoundingSphere: THREE.Geometry.prototype.computeBoundingSphere,\n\n\t\tcomputeFaceNormals: function () {\n\n\t\t\tconsole.warn( 'THREE.DirectGeometry: computeFaceNormals() is not a method of this type of geometry.' );\n\n\t\t},\n\n\t\tcomputeVertexNormals: function () {\n\n\t\t\tconsole.warn( 'THREE.DirectGeometry: computeVertexNormals() is not a method of this type of geometry.' );\n\n\t\t},\n\n\t\tcomputeGroups: function ( geometry ) {\n\n\t\t\tvar group;\n\t\t\tvar groups = [];\n\t\t\tvar materialIndex;\n\n\t\t\tvar faces = geometry.faces;\n\n\t\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\t// materials\n\n\t\t\t\tif ( face.materialIndex !== materialIndex ) {\n\n\t\t\t\t\tmaterialIndex = face.materialIndex;\n\n\t\t\t\t\tif ( group !== undefined ) {\n\n\t\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\t\t\t\tgroups.push( group );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgroup = {\n\t\t\t\t\t\tstart: i * 3,\n\t\t\t\t\t\tmaterialIndex: materialIndex\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( group !== undefined ) {\n\n\t\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\t\tgroups.push( group );\n\n\t\t\t}\n\n\t\t\tthis.groups = groups;\n\n\t\t},\n\n\t\tfromGeometry: function ( geometry ) {\n\n\t\t\tvar faces = geometry.faces;\n\t\t\tvar vertices = geometry.vertices;\n\t\t\tvar faceVertexUvs = geometry.faceVertexUvs;\n\n\t\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\n\t\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\n\n\t\t\t// morphs\n\n\t\t\tvar morphTargets = geometry.morphTargets;\n\t\t\tvar morphTargetsLength = morphTargets.length;\n\n\t\t\tvar morphTargetsPosition;\n\n\t\t\tif ( morphTargetsLength > 0 ) {\n\n\t\t\t\tmorphTargetsPosition = [];\n\n\t\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\n\n\t\t\t\t\tmorphTargetsPosition[ i ] = [];\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphTargets.position = morphTargetsPosition;\n\n\t\t\t}\n\n\t\t\tvar morphNormals = geometry.morphNormals;\n\t\t\tvar morphNormalsLength = morphNormals.length;\n\n\t\t\tvar morphTargetsNormal;\n\n\t\t\tif ( morphNormalsLength > 0 ) {\n\n\t\t\t\tmorphTargetsNormal = [];\n\n\t\t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\n\n\t\t\t\t\tmorphTargetsNormal[ i ] = [];\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphTargets.normal = morphTargetsNormal;\n\n\t\t\t}\n\n\t\t\t// skins\n\n\t\t\tvar skinIndices = geometry.skinIndices;\n\t\t\tvar skinWeights = geometry.skinWeights;\n\n\t\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\n\t\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\n\n\t\t\t//\n\n\t\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar normal = face.normal;\n\n\t\t\t\t\tthis.normals.push( normal, normal, normal );\n\n\t\t\t\t}\n\n\t\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\t\tif ( vertexColors.length === 3 ) {\n\n\t\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar color = face.color;\n\n\t\t\t\t\tthis.colors.push( color, color, color );\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceVertexUv === true ) {\n\n\t\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\n\n\t\t\t\t\t\tthis.uvs.push( new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceVertexUv2 === true ) {\n\n\t\t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\n\n\t\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\n\n\t\t\t\t\t\tthis.uvs2.push( new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// morphs\n\n\t\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\n\n\t\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\n\n\t\t\t\t\tmorphTargetsPosition[ j ].push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\n\n\t\t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\n\n\t\t\t\t\tmorphTargetsNormal[ j ].push( morphNormal.a, morphNormal.b, morphNormal.c );\n\n\t\t\t\t}\n\n\t\t\t\t// skins\n\n\t\t\t\tif ( hasSkinIndices ) {\n\n\t\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasSkinWeights ) {\n\n\t\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.computeGroups( geometry );\n\n\t\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\t// File:src/core/BufferGeometry.js\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.BufferGeometry = function () {\n\n\t\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\n\n\t\tthis.uuid = THREE.Math.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t};\n\n\tObject.assign( THREE.BufferGeometry.prototype, THREE.EventDispatcher.prototype, {\n\n\t\tgetIndex: function () {\n\n\t\t\treturn this.index;\n\n\t\t},\n\n\t\tsetIndex: function ( index ) {\n\n\t\t\tthis.index = index;\n\n\t\t},\n\n\t\taddAttribute: function ( name, attribute ) {\n\n\t\t\tif ( attribute instanceof THREE.BufferAttribute === false && attribute instanceof THREE.InterleavedBufferAttribute === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\n\n\t\t\t\tthis.addAttribute( name, new THREE.BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( name === 'index' ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\n\t\t\t\tthis.setIndex( attribute );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.attributes[ name ] = attribute;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetAttribute: function ( name ) {\n\n\t\t\treturn this.attributes[ name ];\n\n\t\t},\n\n\t\tremoveAttribute: function ( name ) {\n\n\t\t\tdelete this.attributes[ name ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddGroup: function ( start, count, materialIndex ) {\n\n\t\t\tthis.groups.push( {\n\n\t\t\t\tstart: start,\n\t\t\t\tcount: count,\n\t\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\n\n\t\t\t} );\n\n\t\t},\n\n\t\tclearGroups: function () {\n\n\t\t\tthis.groups = [];\n\n\t\t},\n\n\t\tsetDrawRange: function ( start, count ) {\n\n\t\t\tthis.drawRange.start = start;\n\t\t\tthis.drawRange.count = count;\n\n\t\t},\n\n\t\tapplyMatrix: function ( matrix ) {\n\n\t\t\tvar position = this.attributes.position;\n\n\t\t\tif ( position !== undefined ) {\n\n\t\t\t\tmatrix.applyToVector3Array( position.array );\n\t\t\t\tposition.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tvar normal = this.attributes.normal;\n\n\t\t\tif ( normal !== undefined ) {\n\n\t\t\t\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\n\n\t\t\t\tnormalMatrix.applyToVector3Array( normal.array );\n\t\t\t\tnormal.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox !== null ) {\n\n\t\t\t\tthis.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\t\tthis.computeBoundingSphere();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateX: function () {\n\n\t\t\t// rotate geometry around world x-axis\n\n\t\t\tvar m1;\n\n\t\t\treturn function rotateX( angle ) {\n\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\n\n\t\t\t\tm1.makeRotationX( angle );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateY: function () {\n\n\t\t\t// rotate geometry around world y-axis\n\n\t\t\tvar m1;\n\n\t\t\treturn function rotateY( angle ) {\n\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\n\n\t\t\t\tm1.makeRotationY( angle );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\trotateZ: function () {\n\n\t\t\t// rotate geometry around world z-axis\n\n\t\t\tvar m1;\n\n\t\t\treturn function rotateZ( angle ) {\n\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\n\n\t\t\t\tm1.makeRotationZ( angle );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttranslate: function () {\n\n\t\t\t// translate geometry\n\n\t\t\tvar m1;\n\n\t\t\treturn function translate( x, y, z ) {\n\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\n\n\t\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tscale: function () {\n\n\t\t\t// scale geometry\n\n\t\t\tvar m1;\n\n\t\t\treturn function scale( x, y, z ) {\n\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\n\n\t\t\t\tm1.makeScale( x, y, z );\n\n\t\t\t\tthis.applyMatrix( m1 );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tlookAt: function () {\n\n\t\t\tvar obj;\n\n\t\t\treturn function lookAt( vector ) {\n\n\t\t\t\tif ( obj === undefined ) obj = new THREE.Object3D();\n\n\t\t\t\tobj.lookAt( vector );\n\n\t\t\t\tobj.updateMatrix();\n\n\t\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tcenter: function () {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t\tvar offset = this.boundingBox.center().negate();\n\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\t\treturn offset;\n\n\t\t},\n\n\t\tsetFromObject: function ( object ) {\n\n\t\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( object instanceof THREE.Points || object instanceof THREE.Line ) {\n\n\t\t\t\tvar positions = new THREE.Float32Attribute( geometry.vertices.length * 3, 3 );\n\t\t\t\tvar colors = new THREE.Float32Attribute( geometry.colors.length * 3, 3 );\n\n\t\t\t\tthis.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\n\t\t\t\tthis.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\n\n\t\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\n\n\t\t\t\t\tvar lineDistances = new THREE.Float32Attribute( geometry.lineDistances.length, 1 );\n\n\t\t\t\t\tthis.addAttribute( 'lineDistance', lineDistances.copyArray( geometry.lineDistances ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t\t}\n\n\t\t\t} else if ( object instanceof THREE.Mesh ) {\n\n\t\t\t\tif ( geometry instanceof THREE.Geometry ) {\n\n\t\t\t\t\tthis.fromGeometry( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tupdateFromObject: function ( object ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( object instanceof THREE.Mesh ) {\n\n\t\t\t\tvar direct = geometry.__directGeometry;\n\n\t\t\t\tif ( direct === undefined || geometry.elementsNeedUpdate === true ) {\n\n\t\t\t\t\treturn this.fromGeometry( geometry );\n\n\t\t\t\t}\n\n\t\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate || geometry.elementsNeedUpdate;\n\t\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate || geometry.elementsNeedUpdate;\n\t\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate || geometry.elementsNeedUpdate;\n\t\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate || geometry.elementsNeedUpdate;\n\t\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate || geometry.elementsNeedUpdate;\n\n\t\t\t\tgeometry.elementsNeedUpdate = false;\n\t\t\t\tgeometry.verticesNeedUpdate = false;\n\t\t\t\tgeometry.normalsNeedUpdate = false;\n\t\t\t\tgeometry.colorsNeedUpdate = false;\n\t\t\t\tgeometry.uvsNeedUpdate = false;\n\t\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t\t\tgeometry = direct;\n\n\t\t\t}\n\n\t\t\tvar attribute;\n\n\t\t\tif ( geometry.verticesNeedUpdate === true ) {\n\n\t\t\t\tattribute = this.attributes.position;\n\n\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.verticesNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.normalsNeedUpdate === true ) {\n\n\t\t\t\tattribute = this.attributes.normal;\n\n\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\tattribute.copyVector3sArray( geometry.normals );\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.normalsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.colorsNeedUpdate === true ) {\n\n\t\t\t\tattribute = this.attributes.color;\n\n\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\tattribute.copyColorsArray( geometry.colors );\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.colorsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.uvsNeedUpdate ) {\n\n\t\t\t\tattribute = this.attributes.uv;\n\n\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\tattribute.copyVector2sArray( geometry.uvs );\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uvsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.lineDistancesNeedUpdate ) {\n\n\t\t\t\tattribute = this.attributes.lineDistance;\n\n\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\tattribute.copyArray( geometry.lineDistances );\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.lineDistancesNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.groupsNeedUpdate ) {\n\n\t\t\t\tgeometry.computeGroups( object.geometry );\n\t\t\t\tthis.groups = geometry.groups;\n\n\t\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tfromGeometry: function ( geometry ) {\n\n\t\t\tgeometry.__directGeometry = new THREE.DirectGeometry().fromGeometry( geometry );\n\n\t\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\n\n\t\t},\n\n\t\tfromDirectGeometry: function ( geometry ) {\n\n\t\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\n\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\n\n\t\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\n\t\t\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\n\t\t\t\tthis.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.uvs.length > 0 ) {\n\n\t\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\n\t\t\t\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.uvs2.length > 0 ) {\n\n\t\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\n\t\t\t\tthis.addAttribute( 'uv2', new THREE.BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.indices.length > 0 ) {\n\n\t\t\t\tvar TypeArray = geometry.vertices.length > 65535 ? Uint32Array : Uint16Array;\n\t\t\t\tvar indices = new TypeArray( geometry.indices.length * 3 );\n\t\t\t\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ).copyIndicesArray( geometry.indices ) );\n\n\t\t\t}\n\n\t\t\t// groups\n\n\t\t\tthis.groups = geometry.groups;\n\n\t\t\t// morphs\n\n\t\t\tfor ( var name in geometry.morphTargets ) {\n\n\t\t\t\tvar array = [];\n\t\t\t\tvar morphTargets = geometry.morphTargets[ name ];\n\n\t\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar morphTarget = morphTargets[ i ];\n\n\t\t\t\t\tvar attribute = new THREE.Float32Attribute( morphTarget.length * 3, 3 );\n\n\t\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget ) );\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t\t}\n\n\t\t\t// skinning\n\n\t\t\tif ( geometry.skinIndices.length > 0 ) {\n\n\t\t\t\tvar skinIndices = new THREE.Float32Attribute( geometry.skinIndices.length * 4, 4 );\n\t\t\t\tthis.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.skinWeights.length > 0 ) {\n\n\t\t\t\tvar skinWeights = new THREE.Float32Attribute( geometry.skinWeights.length * 4, 4 );\n\t\t\t\tthis.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcomputeBoundingBox: function () {\n\n\t\t\tif ( this.boundingBox === null ) {\n\n\t\t\t\tthis.boundingBox = new THREE.Box3();\n\n\t\t\t}\n\n\t\t\tvar positions = this.attributes.position.array;\n\n\t\t\tif ( positions !== undefined ) {\n\n\t\t\t\tthis.boundingBox.setFromArray( positions );\n\n\t\t\t} else {\n\n\t\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t\t}\n\n\t\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeBoundingSphere: function () {\n\n\t\t\tvar box = new THREE.Box3();\n\t\t\tvar vector = new THREE.Vector3();\n\n\t\t\treturn function computeBoundingSphere() {\n\n\t\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\t\tthis.boundingSphere = new THREE.Sphere();\n\n\t\t\t\t}\n\n\t\t\t\tvar positions = this.attributes.position;\n\n\t\t\t\tif ( positions ) {\n\n\t\t\t\t\tvar array = positions.array;\n\t\t\t\t\tvar center = this.boundingSphere.center;\n\n\t\t\t\t\tbox.setFromArray( array );\n\t\t\t\t\tbox.center( center );\n\n\t\t\t\t\t// hoping to find a boundingSphere with a radius smaller than the\n\t\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\t\t\tvar maxRadiusSq = 0;\n\n\t\t\t\t\tfor ( var i = 0, il = array.length; i < il; i += 3 ) {\n\n\t\t\t\t\t\tvector.fromArray( array, i );\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tcomputeFaceNormals: function () {\n\n\t\t\t// backwards compatibility\n\n\t\t},\n\n\t\tcomputeVertexNormals: function () {\n\n\t\t\tvar index = this.index;\n\t\t\tvar attributes = this.attributes;\n\t\t\tvar groups = this.groups;\n\n\t\t\tif ( attributes.position ) {\n\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( attributes.normal === undefined ) {\n\n\t\t\t\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( new Float32Array( positions.length ), 3 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// reset existing normals to zero\n\n\t\t\t\t\tvar array = attributes.normal.array;\n\n\t\t\t\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tarray[ i ] = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar normals = attributes.normal.array;\n\n\t\t\t\tvar vA, vB, vC,\n\n\t\t\t\tpA = new THREE.Vector3(),\n\t\t\t\tpB = new THREE.Vector3(),\n\t\t\t\tpC = new THREE.Vector3(),\n\n\t\t\t\tcb = new THREE.Vector3(),\n\t\t\t\tab = new THREE.Vector3();\n\n\t\t\t\t// indexed elements\n\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\t\tthis.addGroup( 0, indices.length );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var j = 0, jl = groups.length; j < jl; ++ j ) {\n\n\t\t\t\t\t\tvar group = groups[ j ];\n\n\t\t\t\t\t\tvar start = group.start;\n\t\t\t\t\t\tvar count = group.count;\n\n\t\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\n\n\t\t\t\t\t\t\tvA = indices[ i + 0 ] * 3;\n\t\t\t\t\t\t\tvB = indices[ i + 1 ] * 3;\n\t\t\t\t\t\t\tvC = indices[ i + 2 ] * 3;\n\n\t\t\t\t\t\t\tpA.fromArray( positions, vA );\n\t\t\t\t\t\t\tpB.fromArray( positions, vB );\n\t\t\t\t\t\t\tpC.fromArray( positions, vC );\n\n\t\t\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\t\t\tnormals[ vA ] += cb.x;\n\t\t\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\n\t\t\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\n\n\t\t\t\t\t\t\tnormals[ vB ] += cb.x;\n\t\t\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\n\t\t\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\n\n\t\t\t\t\t\t\tnormals[ vC ] += cb.x;\n\t\t\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\n\t\t\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\n\n\t\t\t\t\t\tpA.fromArray( positions, i );\n\t\t\t\t\t\tpB.fromArray( positions, i + 3 );\n\t\t\t\t\t\tpC.fromArray( positions, i + 6 );\n\n\t\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\t\tnormals[ i ] = cb.x;\n\t\t\t\t\t\tnormals[ i + 1 ] = cb.y;\n\t\t\t\t\t\tnormals[ i + 2 ] = cb.z;\n\n\t\t\t\t\t\tnormals[ i + 3 ] = cb.x;\n\t\t\t\t\t\tnormals[ i + 4 ] = cb.y;\n\t\t\t\t\t\tnormals[ i + 5 ] = cb.z;\n\n\t\t\t\t\t\tnormals[ i + 6 ] = cb.x;\n\t\t\t\t\t\tnormals[ i + 7 ] = cb.y;\n\t\t\t\t\t\tnormals[ i + 8 ] = cb.z;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.normalizeNormals();\n\n\t\t\t\tattributes.normal.needsUpdate = true;\n\n\t\t\t}\n\n\t\t},\n\n\t\tmerge: function ( geometry, offset ) {\n\n\t\t\tif ( geometry instanceof THREE.BufferGeometry === false ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( offset === undefined ) offset = 0;\n\n\t\t\tvar attributes = this.attributes;\n\n\t\t\tfor ( var key in attributes ) {\n\n\t\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\n\n\t\t\t\tvar attribute1 = attributes[ key ];\n\t\t\t\tvar attributeArray1 = attribute1.array;\n\n\t\t\t\tvar attribute2 = geometry.attributes[ key ];\n\t\t\t\tvar attributeArray2 = attribute2.array;\n\n\t\t\t\tvar attributeSize = attribute2.itemSize;\n\n\t\t\t\tfor ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {\n\n\t\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnormalizeNormals: function () {\n\n\t\t\tvar normals = this.attributes.normal.array;\n\n\t\t\tvar x, y, z, n;\n\n\t\t\tfor ( var i = 0, il = normals.length; i < il; i += 3 ) {\n\n\t\t\t\tx = normals[ i ];\n\t\t\t\ty = normals[ i + 1 ];\n\t\t\t\tz = normals[ i + 2 ];\n\n\t\t\t\tn = 1.0 / Math.sqrt( x * x + y * y + z * z );\n\n\t\t\t\tnormals[ i ] *= n;\n\t\t\t\tnormals[ i + 1 ] *= n;\n\t\t\t\tnormals[ i + 2 ] *= n;\n\n\t\t\t}\n\n\t\t},\n\n\t\ttoNonIndexed: function () {\n\n\t\t\tif ( this.index === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.' );\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tvar geometry2 = new THREE.BufferGeometry();\n\n\t\t\tvar indices = this.index.array;\n\t\t\tvar attributes = this.attributes;\n\n\t\t\tfor ( var name in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ name ];\n\n\t\t\t\tvar array = attribute.array;\n\t\t\t\tvar itemSize = attribute.itemSize;\n\n\t\t\t\tvar array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\t\tvar index = 0, index2 = 0;\n\n\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t\tfor ( var j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry2.addAttribute( name, new THREE.BufferAttribute( array2, itemSize ) );\n\n\t\t\t}\n\n\t\t\treturn geometry2;\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.4,\n\t\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// standard BufferGeometry serialization\n\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.type = this.type;\n\t\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\t\tif ( this.parameters !== undefined ) {\n\n\t\t\t\tvar parameters = this.parameters;\n\n\t\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\n\t\t\t}\n\n\t\t\tdata.data = { attributes: {} };\n\n\t\t\tvar index = this.index;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tvar array = Array.prototype.slice.call( index.array );\n\n\t\t\t\tdata.data.index = {\n\t\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\t\tarray: array\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tvar attributes = this.attributes;\n\n\t\t\tfor ( var key in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ key ];\n\n\t\t\t\tvar array = Array.prototype.slice.call( attribute.array );\n\n\t\t\t\tdata.data.attributes[ key ] = {\n\t\t\t\t\titemSize: attribute.itemSize,\n\t\t\t\t\ttype: attribute.array.constructor.name,\n\t\t\t\t\tarray: array,\n\t\t\t\t\tnormalized: attribute.normalized\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tvar groups = this.groups;\n\n\t\t\tif ( groups.length > 0 ) {\n\n\t\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t\t}\n\n\t\t\tvar boundingSphere = this.boundingSphere;\n\n\t\t\tif ( boundingSphere !== null ) {\n\n\t\t\t\tdata.data.boundingSphere = {\n\t\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\t\tradius: boundingSphere.radius\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\t/*\n\t\t\t// Handle primitives\n\n\t\t\tvar parameters = this.parameters;\n\n\t\t\tif ( parameters !== undefined ) {\n\n\t\t\t\tvar values = [];\n\n\t\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\t\tvalues.push( parameters[ key ] );\n\n\t\t\t\t}\n\n\t\t\t\tvar geometry = Object.create( this.constructor.prototype );\n\t\t\t\tthis.constructor.apply( geometry, values );\n\t\t\t\treturn geometry;\n\n\t\t\t}\n\n\t\t\treturn new this.constructor().copy( this );\n\t\t\t*/\n\n\t\t\treturn new THREE.BufferGeometry().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tvar index = source.index;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tthis.setIndex( index.clone() );\n\n\t\t\t}\n\n\t\t\tvar attributes = source.attributes;\n\n\t\t\tfor ( var name in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ name ];\n\t\t\t\tthis.addAttribute( name, attribute.clone() );\n\n\t\t\t}\n\n\t\t\tvar groups = source.groups;\n\n\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\tvar group = groups[ i ];\n\t\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\tTHREE.BufferGeometry.MaxIndex = 65535;\n\n\t// File:src/core/InstancedBufferGeometry.js\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tTHREE.InstancedBufferGeometry = function () {\n\n\t\tTHREE.BufferGeometry.call( this );\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.maxInstancedCount = undefined;\n\n\t};\n\n\tTHREE.InstancedBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\n\tTHREE.InstancedBufferGeometry.prototype.constructor = THREE.InstancedBufferGeometry;\n\n\tTHREE.InstancedBufferGeometry.prototype.addGroup = function ( start, count, instances ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tinstances: instances\n\n\t\t} );\n\n\t};\n\n\tTHREE.InstancedBufferGeometry.prototype.copy = function ( source ) {\n\n\t\tvar index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone() );\n\n\t\t}\n\n\t\tvar attributes = source.attributes;\n\n\t\tfor ( var name in attributes ) {\n\n\t\t\tvar attribute = attributes[ name ];\n\t\t\tthis.addAttribute( name, attribute.clone() );\n\n\t\t}\n\n\t\tvar groups = source.groups;\n\n\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tvar group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.instances );\n\n\t\t}\n\n\t\treturn this;\n\n\t};\n\n\t// File:src/core/Uniform.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.Uniform = function ( value ) {\n\n\t\tif ( typeof value === 'string' ) {\n\n\t\t\tconsole.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\n\t\t\tvalue = arguments[ 1 ];\n\n\t\t}\n\n\t\tthis.value = value;\n\n\t\tthis.dynamic = false;\n\n\t};\n\n\tTHREE.Uniform.prototype = {\n\n\t\tconstructor: THREE.Uniform,\n\n\t\tonUpdate: function ( callback ) {\n\n\t\t\tthis.dynamic = true;\n\t\t\tthis.onUpdateCallback = callback;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t};\n\n\t// File:src/animation/AnimationAction.js\n\n\t/**\n\t *\n\t * Action provided by AnimationMixer for scheduling clip playback on specific\n\t * objects.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t *\n\t */\n\n\tTHREE.AnimationAction = function() {\n\n\t\tthrow new Error( \"THREE.AnimationAction: \" +\n\t\t\t\t\"Use mixer.clipAction for construction.\" );\n\n\t};\n\n\tTHREE.AnimationAction._new =\n\t\t\tfunction AnimationAction( mixer, clip, localRoot ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot || null;\n\n\t\tvar tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tvar interpolantSettings = {\n\t\t\t\tendingStart: \tTHREE.ZeroCurvatureEnding,\n\t\t\t\tendingEnd:\t\tTHREE.ZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tvar interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants;\t// bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null;\t\t\t// for the memory manager\n\t\tthis._byClipCacheIndex = null;\t\t// for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = THREE.LoopRepeat;\n\t\tthis._loopCount = -1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; \t\t// no. of repetitions when looping\n\n\t\tthis.paused = false;\t\t\t\t// false -> zero effective time scale\n\t\tthis.enabled = true;\t\t\t\t// true -> zero effective weight\n\n\t\tthis.clampWhenFinished \t= false;\t// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart \t= true;\t\t// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd\t\t= true;\t\t// clips for start, loop and end\n\n\t};\n\n\tTHREE.AnimationAction._new.prototype = {\n\n\t\tconstructor: THREE.AnimationAction._new,\n\n\t\t// State & Scheduling\n\n\t\tplay: function() {\n\n\t\t\tthis._mixer._activateAction( this );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tstop: function() {\n\n\t\t\tthis._mixer._deactivateAction( this );\n\n\t\t\treturn this.reset();\n\n\t\t},\n\n\t\treset: function() {\n\n\t\t\tthis.paused = false;\n\t\t\tthis.enabled = true;\n\n\t\t\tthis.time = 0;\t\t\t// restart clip\n\t\t\tthis._loopCount = -1;\t// forget previous loops\n\t\t\tthis._startTime = null;\t// forget scheduling\n\n\t\t\treturn this.stopFading().stopWarping();\n\n\t\t},\n\n\t\tisRunning: function() {\n\n\t\t\tvar start = this._startTime;\n\n\t\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t\t},\n\n\t\t// return true when play has been called\n\t\tisScheduled: function() {\n\n\t\t\treturn this._mixer._isActiveAction( this );\n\n\t\t},\n\n\t\tstartAt: function( time ) {\n\n\t\t\tthis._startTime = time;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetLoop: function( mode, repetitions ) {\n\n\t\t\tthis.loop = mode;\n\t\t\tthis.repetitions = repetitions;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Weight\n\n\t\t// set the weight stopping any scheduled fading\n\t\t// although .enabled = false yields an effective weight of zero, this\n\t\t// method does *not* change .enabled, because it would be confusing\n\t\tsetEffectiveWeight: function( weight ) {\n\n\t\t\tthis.weight = weight;\n\n\t\t\t// note: same logic as when updated at runtime\n\t\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\t\treturn this.stopFading();\n\n\t\t},\n\n\t\t// return the weight considering fading and .enabled\n\t\tgetEffectiveWeight: function() {\n\n\t\t\treturn this._effectiveWeight;\n\n\t\t},\n\n\t\tfadeIn: function( duration ) {\n\n\t\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t\t},\n\n\t\tfadeOut: function( duration ) {\n\n\t\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t\t},\n\n\t\tcrossFadeFrom: function( fadeOutAction, duration, warp ) {\n\n\t\t\tvar mixer = this._mixer;\n\n\t\t\tfadeOutAction.fadeOut( duration );\n\t\t\tthis.fadeIn( duration );\n\n\t\t\tif( warp ) {\n\n\t\t\t\tvar fadeInDuration = this._clip.duration,\n\t\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcrossFadeTo: function( fadeInAction, duration, warp ) {\n\n\t\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t\t},\n\n\t\tstopFading: function() {\n\n\t\t\tvar weightInterpolant = this._weightInterpolant;\n\n\t\t\tif ( weightInterpolant !== null ) {\n\n\t\t\t\tthis._weightInterpolant = null;\n\t\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Time Scale Control\n\n\t\t// set the weight stopping any scheduled warping\n\t\t// although .paused = true yields an effective time scale of zero, this\n\t\t// method does *not* change .paused, because it would be confusing\n\t\tsetEffectiveTimeScale: function( timeScale ) {\n\n\t\t\tthis.timeScale = timeScale;\n\t\t\tthis._effectiveTimeScale = this.paused ? 0 :timeScale;\n\n\t\t\treturn this.stopWarping();\n\n\t\t},\n\n\t\t// return the time scale considering warping and .paused\n\t\tgetEffectiveTimeScale: function() {\n\n\t\t\treturn this._effectiveTimeScale;\n\n\t\t},\n\n\t\tsetDuration: function( duration ) {\n\n\t\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\t\treturn this.stopWarping();\n\n\t\t},\n\n\t\tsyncWith: function( action ) {\n\n\t\t\tthis.time = action.time;\n\t\t\tthis.timeScale = action.timeScale;\n\n\t\t\treturn this.stopWarping();\n\n\t\t},\n\n\t\thalt: function( duration ) {\n\n\t\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t\t},\n\n\t\twarp: function( startTimeScale, endTimeScale, duration ) {\n\n\t\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\t\tinterpolant = this._timeScaleInterpolant,\n\n\t\t\t\ttimeScale = this.timeScale;\n\n\t\t\tif ( interpolant === null ) {\n\n\t\t\t\tinterpolant = mixer._lendControlInterpolant(),\n\t\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t\t}\n\n\t\t\tvar times = interpolant.parameterPositions,\n\t\t\t\tvalues = interpolant.sampleValues;\n\n\t\t\ttimes[ 0 ] = now;\n\t\t\ttimes[ 1 ] = now + duration;\n\n\t\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tstopWarping: function() {\n\n\t\t\tvar timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\t\tthis._timeScaleInterpolant = null;\n\t\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Object Accessors\n\n\t\tgetMixer: function() {\n\n\t\t\treturn this._mixer;\n\n\t\t},\n\n\t\tgetClip: function() {\n\n\t\t\treturn this._clip;\n\n\t\t},\n\n\t\tgetRoot: function() {\n\n\t\t\treturn this._localRoot || this._mixer._root;\n\n\t\t},\n\n\t\t// Interna\n\n\t\t_update: function( time, deltaTime, timeDirection, accuIndex ) {\n\t\t\t// called by the mixer\n\n\t\t\tvar startTime = this._startTime;\n\n\t\t\tif ( startTime !== null ) {\n\n\t\t\t\t// check for scheduled start of action\n\n\t\t\t\tvar timeRunning = ( time - startTime ) * timeDirection;\n\t\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\t\treturn; // yet to come / don't decide when delta = 0\n\n\t\t\t\t}\n\n\t\t\t\t// start\n\n\t\t\t\tthis._startTime = null; // unschedule\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t\t}\n\n\t\t\t// apply time scale and advance time\n\n\t\t\tdeltaTime *= this._updateTimeScale( time );\n\t\t\tvar clipTime = this._updateTime( deltaTime );\n\n\t\t\t// note: _updateTime may disable the action resulting in\n\t\t\t// an effective weight of 0\n\n\t\t\tvar weight = this._updateWeight( time );\n\n\t\t\tif ( weight > 0 ) {\n\n\t\t\t\tvar interpolants = this._interpolants;\n\t\t\t\tvar propertyMixers = this._propertyBindings;\n\n\t\t\t\tfor ( var j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t_updateWeight: function( time ) {\n\n\t\t\tvar weight = 0;\n\n\t\t\tif ( this.enabled ) {\n\n\t\t\t\tweight = this.weight;\n\t\t\t\tvar interpolant = this._weightInterpolant;\n\n\t\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._effectiveWeight = weight;\n\t\t\treturn weight;\n\n\t\t},\n\n\t\t_updateTimeScale: function( time ) {\n\n\t\t\tvar timeScale = 0;\n\n\t\t\tif ( ! this.paused ) {\n\n\t\t\t\ttimeScale = this.timeScale;\n\n\t\t\t\tvar interpolant = this._timeScaleInterpolant;\n\n\t\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._effectiveTimeScale = timeScale;\n\t\t\treturn timeScale;\n\n\t\t},\n\n\t\t_updateTime: function( deltaTime ) {\n\n\t\t\tvar time = this.time + deltaTime;\n\n\t\t\tif ( deltaTime === 0 ) return time;\n\n\t\t\tvar duration = this._clip.duration,\n\n\t\t\t\tloop = this.loop,\n\t\t\t\tloopCount = this._loopCount;\n\n\t\t\tif ( loop === THREE.LoopOnce ) {\n\n\t\t\t\tif ( loopCount === -1 ) {\n\t\t\t\t\t// just started\n\n\t\t\t\t\tthis.loopCount = 0;\n\t\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t\t}\n\n\t\t\t\thandle_stop: {\n\n\t\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\t\ttime = duration;\n\n\t\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\t\ttime = 0;\n\n\t\t\t\t\t} else break handle_stop;\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime < 0 ? -1 : 1\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\t\tvar pingPong = ( loop === THREE.LoopPingPong );\n\n\t\t\t\tif ( loopCount === -1 ) {\n\t\t\t\t\t// just started\n\n\t\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\t\tthis._setEndings(\n\t\t\t\t\t\t\t\ttrue, this.repetitions === 0, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\t\tthis._setEndings(\n\t\t\t\t\t\t\t\tthis.repetitions === 0, true, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( time >= duration || time < 0 ) {\n\t\t\t\t\t// wrap around\n\n\t\t\t\t\tvar loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\t\tvar pending = this.repetitions - loopCount;\n\n\t\t\t\t\tif ( pending < 0 ) {\n\t\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : -1\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// keep running\n\n\t\t\t\t\t\tif ( pending === 0 ) {\n\t\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\t\tvar atStart = deltaTime < 0;\n\t\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\t\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\t\tthis.time = time;\n\t\t\t\t\treturn duration - time;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.time = time;\n\t\t\treturn time;\n\n\t\t},\n\n\t\t_setEndings: function( atStart, atEnd, pingPong ) {\n\n\t\t\tvar settings = this._interpolantSettings;\n\n\t\t\tif ( pingPong ) {\n\n\t\t\t\tsettings.endingStart \t= THREE.ZeroSlopeEnding;\n\t\t\t\tsettings.endingEnd\t\t= THREE.ZeroSlopeEnding;\n\n\t\t\t} else {\n\n\t\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\t\tif ( atStart ) {\n\n\t\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ?\n\t\t\t\t\t\t\tTHREE.ZeroSlopeEnding : THREE.ZeroCurvatureEnding;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsettings.endingStart = THREE.WrapAroundEnding;\n\n\t\t\t\t}\n\n\t\t\t\tif ( atEnd ) {\n\n\t\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ?\n\t\t\t\t\t\t\tTHREE.ZeroSlopeEnding : THREE.ZeroCurvatureEnding;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsettings.endingEnd \t = THREE.WrapAroundEnding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t_scheduleFading: function( duration, weightNow, weightThen ) {\n\n\t\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\t\tinterpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant === null ) {\n\n\t\t\t\tinterpolant = mixer._lendControlInterpolant(),\n\t\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t\t}\n\n\t\t\tvar times = interpolant.parameterPositions,\n\t\t\t\tvalues = interpolant.sampleValues;\n\n\t\t\ttimes[ 0 ] = now; \t\t\t\tvalues[ 0 ] = weightNow;\n\t\t\ttimes[ 1 ] = now + duration;\tvalues[ 1 ] = weightThen;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t};\n\n\n\t// File:src/animation/AnimationClip.js\n\n\t/**\n\t *\n\t * Reusable set of Tracks that represent an animation.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t */\n\n\tTHREE.AnimationClip = function ( name, duration, tracks ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = ( duration !== undefined ) ? duration : -1;\n\n\t\tthis.uuid = THREE.Math.generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t\t// maybe only do these on demand, as doing them here could potentially slow down loading\n\t\t// but leaving these here during development as this ensures a lot of testing of these functions\n\t\tthis.trim();\n\t\tthis.optimize();\n\n\t};\n\n\tTHREE.AnimationClip.prototype = {\n\n\t\tconstructor: THREE.AnimationClip,\n\n\t\tresetDuration: function() {\n\n\t\t\tvar tracks = this.tracks,\n\t\t\t\tduration = 0;\n\n\t\t\tfor ( var i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\t\tvar track = this.tracks[ i ];\n\n\t\t\t\tduration = Math.max(\n\t\t\t\t\t\tduration, track.times[ track.times.length - 1 ] );\n\n\t\t\t}\n\n\t\t\tthis.duration = duration;\n\n\t\t},\n\n\t\ttrim: function() {\n\n\t\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\toptimize: function() {\n\n\t\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\t\tthis.tracks[ i ].optimize();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t};\n\n\t// Static methods:\n\n\tObject.assign( THREE.AnimationClip, {\n\n\t\tparse: function( json ) {\n\n\t\t\tvar tracks = [],\n\t\t\t\tjsonTracks = json.tracks,\n\t\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\t\tfor ( var i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\t\ttracks.push( THREE.KeyframeTrack.parse( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t\t}\n\n\t\t\treturn new THREE.AnimationClip( json.name, json.duration, tracks );\n\n\t\t},\n\n\n\t\ttoJSON: function( clip ) {\n\n\t\t\tvar tracks = [],\n\t\t\t\tclipTracks = clip.tracks;\n\n\t\t\tvar json = {\n\n\t\t\t\t'name': clip.name,\n\t\t\t\t'duration': clip.duration,\n\t\t\t\t'tracks': tracks\n\n\t\t\t};\n\n\t\t\tfor ( var i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\t\ttracks.push( THREE.KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t\t}\n\n\t\t\treturn json;\n\n\t\t},\n\n\n\t\tCreateFromMorphTargetSequence: function( name, morphTargetSequence, fps, noLoop ) {\n\n\t\t\tvar numMorphTargets = morphTargetSequence.length;\n\t\t\tvar tracks = [];\n\n\t\t\tfor ( var i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\t\tvar times = [];\n\t\t\t\tvar values = [];\n\n\t\t\t\ttimes.push(\n\t\t\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\t\t\ti,\n\t\t\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\t\tvar order = THREE.AnimationUtils.getKeyframeOrder( times );\n\t\t\t\ttimes = THREE.AnimationUtils.sortedArray( times, 1, order );\n\t\t\t\tvalues = THREE.AnimationUtils.sortedArray( values, 1, order );\n\n\t\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t\t// last frame as well for perfect loop.\n\t\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t\t}\n\n\t\t\t\ttracks.push(\n\t\t\t\t\t\tnew THREE.NumberKeyframeTrack(\n\t\t\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\t\t\ttimes, values\n\t\t\t\t\t\t).scale( 1.0 / fps ) );\n\t\t\t}\n\n\t\t\treturn new THREE.AnimationClip( name, -1, tracks );\n\n\t\t},\n\n\t\tfindByName: function( objectOrClipArray, name ) {\n\n\t\t\tvar clipArray = objectOrClipArray;\n\n\t\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\t\tvar o = objectOrClipArray;\n\t\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\t\treturn clipArray[ i ];\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t},\n\n\t\tCreateClipsFromMorphTargetSequences: function( morphTargets, fps, noLoop ) {\n\n\t\t\tvar animationToMorphTargets = {};\n\n\t\t\t// tested with https://regex101.com/ on trick sequences\n\t\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\t\tvar pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t\t// sort morph target names into animation groups based\n\t\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\t\tfor ( var i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ i ];\n\t\t\t\tvar parts = morphTarget.name.match( pattern );\n\n\t\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\t\tvar name = parts[ 1 ];\n\n\t\t\t\t\tvar animationMorphTargets = animationToMorphTargets[ name ];\n\t\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar clips = [];\n\n\t\t\tfor ( var name in animationToMorphTargets ) {\n\n\t\t\t\tclips.push( THREE.AnimationClip.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t\t}\n\n\t\t\treturn clips;\n\n\t\t},\n\n\t\t// parse the animation.hierarchy format\n\t\tparseAnimation: function( animation, bones, nodeName ) {\n\n\t\t\tif ( ! animation ) {\n\n\t\t\t\tconsole.error( \"  no animation in JSONLoader data\" );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar addNonemptyTrack = function(\n\t\t\t\t\ttrackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t\t// only return track if there are actually keys.\n\t\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\t\tvar times = [];\n\t\t\t\t\tvar values = [];\n\n\t\t\t\t\tTHREE.AnimationUtils.flattenJSON(\n\t\t\t\t\t\t\tanimationKeys, times, values, propertyName );\n\n\t\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t\tvar tracks = [];\n\n\t\t\tvar clipName = animation.name || 'default';\n\t\t\t// automatic length determination in AnimationClip.\n\t\t\tvar duration = animation.length || -1;\n\t\t\tvar fps = animation.fps || 30;\n\n\t\t\tvar hierarchyTracks = animation.hierarchy || [];\n\n\t\t\tfor ( var h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\t\tvar animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t\t// skip empty tracks\n\t\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t\t// process morph targets in a way exactly compatible\n\t\t\t\t// with AnimationHandler.init( animation )\n\t\t\t\tif ( animationKeys[0].morphTargets ) {\n\n\t\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\t\tvar morphTargetNames = {};\n\t\t\t\t\tfor ( var k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\t\tif ( animationKeys[k].morphTargets ) {\n\n\t\t\t\t\t\t\tfor ( var m = 0; m < animationKeys[k].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[k].morphTargets[m] ] = -1;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t\t// the morphTarget is named.\n\t\t\t\t\tfor ( var morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\t\tvar times = [];\n\t\t\t\t\t\tvar values = [];\n\n\t\t\t\t\t\tfor ( var m = 0;\n\t\t\t\t\t\t\t\tm !== animationKeys[k].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\t\tvar animationKey = animationKeys[k];\n\n\t\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttracks.push( new THREE.NumberKeyframeTrack(\n\t\t\t\t\t\t\t\t'.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tduration = morphTargetNames.length * ( fps || 1.0 );\n\n\t\t\t\t} else {\n\t\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\t\tvar boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\t\taddNonemptyTrack(\n\t\t\t\t\t\t\tTHREE.VectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\t\taddNonemptyTrack(\n\t\t\t\t\t\t\tTHREE.QuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\t\taddNonemptyTrack(\n\t\t\t\t\t\t\tTHREE.VectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( tracks.length === 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar clip = new THREE.AnimationClip( clipName, duration, tracks );\n\n\t\t\treturn clip;\n\n\t\t}\n\n\t} );\n\n\t// File:src/animation/AnimationMixer.js\n\n\t/**\n\t *\n\t * Player for AnimationClips.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tTHREE.AnimationMixer = function( root ) {\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1.0;\n\n\t};\n\n\tObject.assign( THREE.AnimationMixer.prototype, THREE.EventDispatcher.prototype, {\n\n\t\t// return an action for a clip optionally using a custom root target\n\t\t// object (this method allocates a lot of dynamic memory in case a\n\t\t// previously unknown clip/root combination is specified)\n\t\tclipAction: function( clip, optionalRoot ) {\n\n\t\t\tvar root = optionalRoot || this._root,\n\t\t\t\trootUuid = root.uuid,\n\n\t\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\t\t\tTHREE.AnimationClip.findByName( root, clip ) : clip,\n\n\t\t\t\tclipUuid = clipObject !== null ? clipObject.uuid : clip,\n\n\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ],\n\t\t\t\tprototypeAction = null;\n\n\t\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t\tvar existingAction =\n\t\t\t\t\t\tactionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\t\tif ( existingAction !== undefined ) {\n\n\t\t\t\t\treturn existingAction;\n\n\t\t\t\t}\n\n\t\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t\t// the bindings again but can just copy\n\t\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t\t// also, take the clip from the prototype action\n\t\t\t\tif ( clipObject === null )\n\t\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t\t}\n\n\t\t\t// clip must be known when specified via string\n\t\t\tif ( clipObject === null ) return null;\n\n\t\t\t// allocate all resources required to run it\n\t\t\tvar newAction = new THREE.\n\t\t\t\t\tAnimationMixer._Action( this, clipObject, optionalRoot );\n\n\t\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t\t// and make the action known to the memory manager\n\t\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\t\treturn newAction;\n\n\t\t},\n\n\t\t// get an existing action\n\t\texistingAction: function( clip, optionalRoot ) {\n\n\t\t\tvar root = optionalRoot || this._root,\n\t\t\t\trootUuid = root.uuid,\n\n\t\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\t\t\tTHREE.AnimationClip.findByName( root, clip ) : clip,\n\n\t\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t},\n\n\t\t// deactivates all previously scheduled actions\n\t\tstopAllAction: function() {\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tnActions = this._nActiveActions,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tnBindings = this._nActiveBindings;\n\n\t\t\tthis._nActiveActions = 0;\n\t\t\tthis._nActiveBindings = 0;\n\n\t\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\t\tactions[ i ].reset();\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\t\tbindings[ i ].useCount = 0;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// advance the time and update apply the animation\n\t\tupdate: function( deltaTime ) {\n\n\t\t\tdeltaTime *= this.timeScale;\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tnActions = this._nActiveActions,\n\n\t\t\t\ttime = this.time += deltaTime,\n\t\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t\t// run active actions\n\n\t\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\t\tvar action = actions[ i ];\n\n\t\t\t\tif ( action.enabled ) {\n\n\t\t\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// update scene graph\n\n\t\t\tvar bindings = this._bindings,\n\t\t\t\tnBindings = this._nActiveBindings;\n\n\t\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// return this mixer's root target object\n\t\tgetRoot: function() {\n\n\t\t\treturn this._root;\n\n\t\t},\n\n\t\t// free all resources specific to a particular clip\n\t\tuncacheClip: function( clip ) {\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tclipUuid = clip.uuid,\n\t\t\t\tactionsByClip = this._actionsByClip,\n\t\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t\t// iteration state and also require updating the state we can\n\t\t\t\t// just throw away\n\n\t\t\t\tvar actionsToRemove = actionsForClip.knownActions;\n\n\t\t\t\tfor ( var i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar action = actionsToRemove[ i ];\n\n\t\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\t\tvar cacheIndex = action._cacheIndex,\n\t\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\t\taction._cacheIndex = null;\n\t\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\t\tactions.pop();\n\n\t\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t\t}\n\n\t\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t\t}\n\n\t\t},\n\n\t\t// free all resources specific to a particular root target object\n\t\tuncacheRoot: function( root ) {\n\n\t\t\tvar rootUuid = root.uuid,\n\t\t\t\tactionsByClip = this._actionsByClip;\n\n\t\t\tfor ( var clipUuid in actionsByClip ) {\n\n\t\t\t\tvar actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\t\tif ( action !== undefined ) {\n\n\t\t\t\t\tthis._deactivateAction( action );\n\t\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\t\tif ( bindingByName !== undefined ) {\n\n\t\t\t\tfor ( var trackName in bindingByName ) {\n\n\t\t\t\t\tvar binding = bindingByName[ trackName ];\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t// remove a targeted clip from the cache\n\t\tuncacheAction: function( clip, optionalRoot ) {\n\n\t\t\tvar action = this.existingAction( clip, optionalRoot );\n\n\t\t\tif ( action !== null ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tTHREE.AnimationMixer._Action = THREE.AnimationAction._new;\n\n\t// Implementation details:\n\n\tObject.assign( THREE.AnimationMixer.prototype, {\n\n\t\t_bindAction: function( action, prototypeAction ) {\n\n\t\t\tvar root = action._localRoot || this._root,\n\t\t\t\ttracks = action._clip.tracks,\n\t\t\t\tnTracks = tracks.length,\n\t\t\t\tbindings = action._propertyBindings,\n\t\t\t\tinterpolants = action._interpolants,\n\t\t\t\trootUuid = root.uuid,\n\t\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\tbindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\t\tif ( bindingsByName === undefined ) {\n\n\t\t\t\tbindingsByName = {};\n\t\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\t\t\tvar track = tracks[ i ],\n\t\t\t\t\ttrackName = track.name,\n\t\t\t\t\tbinding = bindingsByName[ trackName ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar path = prototypeAction && prototypeAction.\n\t\t\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\t\tbinding = new THREE.PropertyMixer(\n\t\t\t\t\t\t\tTHREE.PropertyBinding.create( root, trackName, path ),\n\t\t\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t\t}\n\n\t\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t\t}\n\n\t\t},\n\n\t\t_activateAction: function( action ) {\n\n\t\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\t\tvar rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\t\tthis._bindAction( action,\n\t\t\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t\t}\n\n\t\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t\t// increment reference counts / sort out state\n\t\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis._lendAction( action );\n\n\t\t\t}\n\n\t\t},\n\n\t\t_deactivateAction: function( action ) {\n\n\t\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t\t// decrement reference counts / sort out state\n\t\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis._takeBackAction( action );\n\n\t\t\t}\n\n\t\t},\n\n\t\t// Memory manager\n\n\t\t_initMemoryManager: function() {\n\n\t\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\t\tthis._nActiveActions = 0;\n\n\t\t\tthis._actionsByClip = {};\n\t\t\t// inside:\n\t\t\t// {\n\t\t\t// \t\tknownActions: Array< _Action >\t- used as prototypes\n\t\t\t// \t\tactionByRoot: _Action\t\t\t- lookup\n\t\t\t// }\n\n\n\t\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\t\tthis._nActiveBindings = 0;\n\n\t\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\t\tthis._controlInterpolants = []; // same game as above\n\t\t\tthis._nActiveControlInterpolants = 0;\n\n\t\t\tvar scope = this;\n\n\t\t\tthis.stats = {\n\n\t\t\t\tactions: {\n\t\t\t\t\tget total() { return scope._actions.length; },\n\t\t\t\t\tget inUse() { return scope._nActiveActions; }\n\t\t\t\t},\n\t\t\t\tbindings: {\n\t\t\t\t\tget total() { return scope._bindings.length; },\n\t\t\t\t\tget inUse() { return scope._nActiveBindings; }\n\t\t\t\t},\n\t\t\t\tcontrolInterpolants: {\n\t\t\t\t\tget total() { return scope._controlInterpolants.length; },\n\t\t\t\t\tget inUse() { return scope._nActiveControlInterpolants; }\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t},\n\n\t\t// Memory management for _Action objects\n\n\t\t_isActiveAction: function( action ) {\n\n\t\t\tvar index = action._cacheIndex;\n\t\t\treturn index !== null && index < this._nActiveActions;\n\n\t\t},\n\n\t\t_addInactiveAction: function( action, clipUuid, rootUuid ) {\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tactionsByClip = this._actionsByClip,\n\t\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\t\tif ( actionsForClip === undefined ) {\n\n\t\t\t\tactionsForClip = {\n\n\t\t\t\t\tknownActions: [ action ],\n\t\t\t\t\tactionByRoot: {}\n\n\t\t\t\t};\n\n\t\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t\t} else {\n\n\t\t\t\tvar knownActions = actionsForClip.knownActions;\n\n\t\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\t\tknownActions.push( action );\n\n\t\t\t}\n\n\t\t\taction._cacheIndex = actions.length;\n\t\t\tactions.push( action );\n\n\t\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t\t},\n\n\t\t_removeInactiveAction: function( action ) {\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\t\tcacheIndex = action._cacheIndex;\n\n\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\tactions.pop();\n\n\t\t\taction._cacheIndex = null;\n\n\n\t\t\tvar clipUuid = action._clip.uuid,\n\t\t\t\tactionsByClip = this._actionsByClip,\n\t\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\t\tlastKnownAction =\n\t\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\t\tknownActionsForClip.pop();\n\n\t\t\taction._byClipCacheIndex = null;\n\n\n\t\t\tvar actionByRoot = actionsForClip.actionByRoot,\n\t\t\t\trootUuid = ( actions._localRoot || this._root ).uuid;\n\n\t\t\tdelete actionByRoot[ rootUuid ];\n\n\t\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t\t}\n\n\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t},\n\n\t\t_removeInactiveBindingsForAction: function( action ) {\n\n\t\t\tvar bindings = action._propertyBindings;\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t_lendAction: function( action ) {\n\n\t\t\t// [ active actions |  inactive actions  ]\n\t\t\t// [  active actions >| inactive actions ]\n\t\t\t//                 s        a\n\t\t\t//                  <-swap->\n\t\t\t//                 a        s\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\t\taction._cacheIndex = lastActiveIndex;\n\t\t\tactions[ lastActiveIndex ] = action;\n\n\t\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t\t},\n\n\t\t_takeBackAction: function( action ) {\n\n\t\t\t// [  active actions  | inactive actions ]\n\t\t\t// [ active actions |< inactive actions  ]\n\t\t\t//        a        s\n\t\t\t//         <-swap->\n\t\t\t//        s        a\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\t\taction._cacheIndex = firstInactiveIndex;\n\t\t\tactions[ firstInactiveIndex ] = action;\n\n\t\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t\t},\n\n\t\t// Memory management for PropertyMixer objects\n\n\t\t_addInactiveBinding: function( binding, rootUuid, trackName ) {\n\n\t\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\t\tbindings = this._bindings;\n\n\t\t\tif ( bindingByName === undefined ) {\n\n\t\t\t\tbindingByName = {};\n\t\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t\t}\n\n\t\t\tbindingByName[ trackName ] = binding;\n\n\t\t\tbinding._cacheIndex = bindings.length;\n\t\t\tbindings.push( binding );\n\n\t\t},\n\n\t\t_removeInactiveBinding: function( binding ) {\n\n\t\t\tvar bindings = this._bindings,\n\t\t\t\tpropBinding = binding.binding,\n\t\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\t\ttrackName = propBinding.path,\n\t\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\t\tbindings.pop();\n\n\t\t\tdelete bindingByName[ trackName ];\n\n\t\t\tremove_empty_map: {\n\n\t\t\t\tfor ( var _ in bindingByName ) break remove_empty_map;\n\n\t\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t\t}\n\n\t\t},\n\n\t\t_lendBinding: function( binding ) {\n\n\t\t\tvar bindings = this._bindings,\n\t\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\t\tbinding._cacheIndex = lastActiveIndex;\n\t\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t\t},\n\n\t\t_takeBackBinding: function( binding ) {\n\n\t\t\tvar bindings = this._bindings,\n\t\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t\t},\n\n\n\t\t// Memory management of Interpolants for weight and time scale\n\n\t\t_lendControlInterpolant: function() {\n\n\t\t\tvar interpolants = this._controlInterpolants,\n\t\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++,\n\t\t\t\tinterpolant = interpolants[ lastActiveIndex ];\n\n\t\t\tif ( interpolant === undefined ) {\n\n\t\t\t\tinterpolant = new THREE.LinearInterpolant(\n\t\t\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t\t\t\t1, this._controlInterpolantsResultBuffer );\n\n\t\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t\t}\n\n\t\t\treturn interpolant;\n\n\t\t},\n\n\t\t_takeBackControlInterpolant: function( interpolant ) {\n\n\t\t\tvar interpolants = this._controlInterpolants,\n\t\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t\t},\n\n\t\t_controlInterpolantsResultBuffer: new Float32Array( 1 )\n\n\t} );\n\n\t// File:src/animation/AnimationObjectGroup.js\n\n\t/**\n\t *\n\t * A group of objects that receives a shared animation state.\n\t *\n\t * Usage:\n\t *\n\t * \t-\tAdd objects you would otherwise pass as 'root' to the\n\t * \t\tconstructor or the .clipAction method of AnimationMixer.\n\t *\n\t * \t-\tInstead pass this object as 'root'.\n\t *\n\t * \t-\tYou can also add and remove objects later when the mixer\n\t * \t\tis running.\n\t *\n\t * Note:\n\t *\n\t *  \tObjects of this class appear as one object to the mixer,\n\t *  \tso cache control of the individual objects must be done\n\t *  \ton the group.\n\t *\n\t * Limitation:\n\t *\n\t * \t- \tThe animated properties must be compatible among the\n\t * \t\tall objects in the group.\n\t *\n\t *  -\tA single property can either be controlled through a\n\t *  \ttarget group or directly, but not both.\n\t *\n\t * @author tschw\n\t */\n\n\tTHREE.AnimationObjectGroup = function( var_args ) {\n\n\t\tthis.uuid = THREE.Math.generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0;\t\t\t// threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tvar indices = {};\n\t\tthis._indicesByUUID = indices;\t\t// for bookkeeping\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = [];\t\t\t\t\t// inside: string\n\t\tthis._parsedPaths = [];\t\t\t\t// inside: { we don't care, here }\n\t\tthis._bindings = []; \t\t\t\t// inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; \t// inside: indices in these arrays\n\n\t\tvar scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() { return scope._objects.length; },\n\t\t\t\tget inUse() { return this.total - scope.nCachedObjects_;  }\n\t\t\t},\n\n\t\t\tget bindingsPerObject() { return scope._bindings.length; }\n\n\t\t};\n\n\t};\n\n\tTHREE.AnimationObjectGroup.prototype = {\n\n\t\tconstructor: THREE.AnimationObjectGroup,\n\n\t\tadd: function( var_args ) {\n\n\t\t\tvar objects = this._objects,\n\t\t\t\tnObjects = objects.length,\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\tpaths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tnBindings = bindings.length;\n\n\t\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\t\tvar object = arguments[ i ],\n\t\t\t\t\tuuid = object.uuid,\n\t\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index === undefined ) {\n\n\t\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\t\tindex = nObjects ++;\n\t\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\t\tobjects.push( object );\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tbindings[ j ].push(\n\t\t\t\t\t\t\t\tnew THREE.PropertyBinding(\n\t\t\t\t\t\t\t\t\tobject, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\t\tvar knownObject = objects[ index ];\n\n\t\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\t\tbinding = new THREE.PropertyBinding(\n\t\t\t\t\t\t\t\t\tobject, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( objects[ index ] !== knownObject) {\n\n\t\t\t\t\tconsole.error( \"Different objects with the same UUID \" +\n\t\t\t\t\t\t\t\"detected. Clean the caches or recreate your \" +\n\t\t\t\t\t\t\t\"infrastructure when reloading scenes...\" );\n\n\t\t\t\t} // else the object is already where we want it to be\n\n\t\t\t} // for arguments\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t\t},\n\n\t\tremove: function( var_args ) {\n\n\t\t\tvar objects = this._objects,\n\t\t\t\tnObjects = objects.length,\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tnBindings = bindings.length;\n\n\t\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\t\tvar object = arguments[ i ],\n\t\t\t\t\tuuid = object.uuid,\n\t\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\t\tvar lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} // for arguments\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t\t},\n\n\t\t// remove & forget\n\t\tuncache: function( var_args ) {\n\n\t\t\tvar objects = this._objects,\n\t\t\t\tnObjects = objects.length,\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tnBindings = bindings.length;\n\n\t\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\t\tvar object = arguments[ i ],\n\t\t\t\t\tuuid = object.uuid,\n\t\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index !== undefined ) {\n\n\t\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\t\tvar lastIndex = -- nObjects,\n\t\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\t\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\t\tvar bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} // cached or active\n\n\t\t\t\t} // if object is known\n\n\t\t\t} // for arguments\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t\t},\n\n\t\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\t\tsubscribe_: function( path, parsedPath ) {\n\t\t\t// returns an array of bindings for the given path that is changed\n\t\t\t// according to the contained objects in the group\n\n\t\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\t\tindex = indicesByPath[ path ],\n\t\t\t\tbindings = this._bindings;\n\n\t\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\t\tvar paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tobjects = this._objects,\n\t\t\t\tnObjects = objects.length,\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\t\tindex = bindings.length;\n\n\t\t\tindicesByPath[ path ] = index;\n\n\t\t\tpaths.push( path );\n\t\t\tparsedPaths.push( parsedPath );\n\t\t\tbindings.push( bindingsForPath );\n\n\t\t\tfor ( var i = nCachedObjects,\n\t\t\t\t\tn = objects.length; i !== n; ++ i ) {\n\n\t\t\t\tvar object = objects[ i ];\n\n\t\t\t\tbindingsForPath[ i ] =\n\t\t\t\t\t\tnew THREE.PropertyBinding( object, path, parsedPath );\n\n\t\t\t}\n\n\t\t\treturn bindingsForPath;\n\n\t\t},\n\n\t\tunsubscribe_: function( path ) {\n\t\t\t// tells the group to forget about a property path and no longer\n\t\t\t// update the array previously obtained with 'subscribe_'\n\n\t\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\t\tindex = indicesByPath[ path ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tvar paths = this._paths,\n\t\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\t\tbindings = this._bindings,\n\t\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\t\tbindings[ index ] = lastBindings;\n\t\t\t\tbindings.pop();\n\n\t\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\t\tparsedPaths.pop();\n\n\t\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\t\tpaths.pop();\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\n\t// File:src/animation/AnimationUtils.js\n\n\t/**\n\t * @author tschw\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t */\n\n\tTHREE.AnimationUtils = {\n\n\t\t// same as Array.prototype.slice, but also works on typed arrays\n\t\tarraySlice: function( array, from, to ) {\n\n\t\t\tif ( THREE.AnimationUtils.isTypedArray( array ) ) {\n\n\t\t\t\treturn new array.constructor( array.subarray( from, to ) );\n\n\t\t\t}\n\n\t\t\treturn array.slice( from, to );\n\n\t\t},\n\n\t\t// converts an array to a specific type\n\t\tconvertArray: function( array, type, forceClone ) {\n\n\t\t\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t\t\t\t! forceClone && array.constructor === type ) return array;\n\n\t\t\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\t\t\treturn new type( array ); // create typed array\n\n\t\t\t}\n\n\t\t\treturn Array.prototype.slice.call( array ); // create Array\n\n\t\t},\n\n\t\tisTypedArray: function( object ) {\n\n\t\t\treturn ArrayBuffer.isView( object ) &&\n\t\t\t\t\t! ( object instanceof DataView );\n\n\t\t},\n\n\t\t// returns an array by which times and values can be sorted\n\t\tgetKeyframeOrder: function( times ) {\n\n\t\t\tfunction compareTime( i, j ) {\n\n\t\t\t\treturn times[ i ] - times[ j ];\n\n\t\t\t}\n\n\t\t\tvar n = times.length;\n\t\t\tvar result = new Array( n );\n\t\t\tfor ( var i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\t\t\tresult.sort( compareTime );\n\n\t\t\treturn result;\n\n\t\t},\n\n\t\t// uses the array previously returned by 'getKeyframeOrder' to sort data\n\t\tsortedArray: function( values, stride, order ) {\n\n\t\t\tvar nValues = values.length;\n\t\t\tvar result = new values.constructor( nValues );\n\n\t\t\tfor ( var i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\t\t\tvar srcOffset = order[ i ] * stride;\n\n\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t},\n\n\t\t// function for parsing AOS keyframe formats\n\t\tflattenJSON: function( jsonKeys, times, values, valuePropertyName ) {\n\n\t\t\tvar i = 1, key = jsonKeys[ 0 ];\n\n\t\t\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t}\n\n\t\t\tif ( key === undefined ) return; // no data\n\n\t\t\tvar value = key[ valuePropertyName ];\n\t\t\tif ( value === undefined ) return; // no data\n\n\t\t\tif ( Array.isArray( value ) ) {\n\n\t\t\t\tdo {\n\n\t\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t\t} while ( key !== undefined );\n\n\t\t\t} else if ( value.toArray !== undefined ) {\n\t\t\t\t// ...assume THREE.Math-ish\n\n\t\t\t\tdo {\n\n\t\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t\t} while ( key !== undefined );\n\n\t\t\t} else {\n\t\t\t\t// otherwise push as-is\n\n\t\t\t\tdo {\n\n\t\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\t\tvalues.push( value );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t\t} while ( key !== undefined );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\t// File:src/animation/KeyframeTrack.js\n\n\t/**\n\t *\n\t * A timed sequence of keyframes for a specific property.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tTHREE.KeyframeTrack = function ( name, times, values, interpolation ) {\n\n\t\tif( name === undefined ) throw new Error( \"track name is undefined\" );\n\n\t\tif( times === undefined || times.length === 0 ) {\n\n\t\t\tthrow new Error( \"no keyframes in track named \" + name );\n\n\t\t}\n\n\t\tthis.name = name;\n\n\t\tthis.times = THREE.AnimationUtils.convertArray( times, this.TimeBufferType );\n\t\tthis.values = THREE.AnimationUtils.convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t\tthis.validate();\n\t\tthis.optimize();\n\n\t};\n\n\tTHREE.KeyframeTrack.prototype = {\n\n\t\tconstructor: THREE.KeyframeTrack,\n\n\t\tTimeBufferType: Float32Array,\n\t\tValueBufferType: Float32Array,\n\n\t\tDefaultInterpolation: THREE.InterpolateLinear,\n\n\t\tInterpolantFactoryMethodDiscrete: function( result ) {\n\n\t\t\treturn new THREE.DiscreteInterpolant(\n\t\t\t\t\tthis.times, this.values, this.getValueSize(), result );\n\n\t\t},\n\n\t\tInterpolantFactoryMethodLinear: function( result ) {\n\n\t\t\treturn new THREE.LinearInterpolant(\n\t\t\t\t\tthis.times, this.values, this.getValueSize(), result );\n\n\t\t},\n\n\t\tInterpolantFactoryMethodSmooth: function( result ) {\n\n\t\t\treturn new THREE.CubicInterpolant(\n\t\t\t\t\tthis.times, this.values, this.getValueSize(), result );\n\n\t\t},\n\n\t\tsetInterpolation: function( interpolation ) {\n\n\t\t\tvar factoryMethod;\n\n\t\t\tswitch ( interpolation ) {\n\n\t\t\t\tcase THREE.InterpolateDiscrete:\n\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase THREE.InterpolateLinear:\n\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase THREE.InterpolateSmooth:\n\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( factoryMethod === undefined ) {\n\n\t\t\t\tvar message = \"unsupported interpolation for \" +\n\t\t\t\t\t\tthis.ValueTypeName + \" keyframe track named \" + this.name;\n\n\t\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconsole.warn( message );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.createInterpolant = factoryMethod;\n\n\t\t},\n\n\t\tgetInterpolation: function() {\n\n\t\t\tswitch ( this.createInterpolant ) {\n\n\t\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\t\treturn THREE.InterpolateDiscrete;\n\n\t\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\t\treturn THREE.InterpolateLinear;\n\n\t\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\t\treturn THREE.InterpolateSmooth;\n\n\t\t\t}\n\n\t\t},\n\n\t\tgetValueSize: function() {\n\n\t\t\treturn this.values.length / this.times.length;\n\n\t\t},\n\n\t\t// move all keyframes either forwards or backwards in time\n\t\tshift: function( timeOffset ) {\n\n\t\t\tif( timeOffset !== 0.0 ) {\n\n\t\t\t\tvar times = this.times;\n\n\t\t\t\tfor( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\t\tscale: function( timeScale ) {\n\n\t\t\tif( timeScale !== 1.0 ) {\n\n\t\t\t\tvar times = this.times;\n\n\t\t\t\tfor( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\t\ttrim: function( startTime, endTime ) {\n\n\t\t\tvar times = this.times,\n\t\t\t\tnKeys = times.length,\n\t\t\t\tfrom = 0,\n\t\t\t\tto = nKeys - 1;\n\n\t\t\twhile ( from !== nKeys && times[ from ] < startTime ) ++ from;\n\t\t\twhile ( to !== -1 && times[ to ] > endTime ) -- to;\n\n\t\t\t++ to; // inclusive -> exclusive bound\n\n\t\t\tif( from !== 0 || to !== nKeys ) {\n\n\t\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\t\tif ( from >= to ) to = Math.max( to , 1 ), from = to - 1;\n\n\t\t\t\tvar stride = this.getValueSize();\n\t\t\t\tthis.times = THREE.AnimationUtils.arraySlice( times, from, to );\n\t\t\t\tthis.values = THREE.AnimationUtils.\n\t\t\t\t\t\tarraySlice( this.values, from * stride, to * stride );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\t\tvalidate: function() {\n\n\t\t\tvar valid = true;\n\n\t\t\tvar valueSize = this.getValueSize();\n\t\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\t\tconsole.error( \"invalid value size in track\", this );\n\t\t\t\tvalid = false;\n\n\t\t\t}\n\n\t\t\tvar times = this.times,\n\t\t\t\tvalues = this.values,\n\n\t\t\t\tnKeys = times.length;\n\n\t\t\tif( nKeys === 0 ) {\n\n\t\t\t\tconsole.error( \"track is empty\", this );\n\t\t\t\tvalid = false;\n\n\t\t\t}\n\n\t\t\tvar prevTime = null;\n\n\t\t\tfor( var i = 0; i !== nKeys; i ++ ) {\n\n\t\t\t\tvar currTime = times[ i ];\n\n\t\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\t\tconsole.error( \"time is not a valid number\", this, i, currTime );\n\t\t\t\t\tvalid = false;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tif( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\t\tconsole.error( \"out of order keys\", this, i, currTime, prevTime );\n\t\t\t\t\tvalid = false;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tprevTime = currTime;\n\n\t\t\t}\n\n\t\t\tif ( values !== undefined ) {\n\n\t\t\t\tif ( THREE.AnimationUtils.isTypedArray( values ) ) {\n\n\t\t\t\t\tfor ( var i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\t\tvar value = values[ i ];\n\n\t\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\t\tconsole.error( \"value is not a valid number\", this, i, value );\n\t\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn valid;\n\n\t\t},\n\n\t\t// removes equivalent sequential keys as common in morph target sequences\n\t\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\t\toptimize: function() {\n\n\t\t\tvar times = this.times,\n\t\t\t\tvalues = this.values,\n\t\t\t\tstride = this.getValueSize(),\n\n\t\t\t\twriteIndex = 1;\n\n\t\t\tfor( var i = 1, n = times.length - 1; i <= n; ++ i ) {\n\n\t\t\t\tvar keep = false;\n\n\t\t\t\tvar time = times[ i ];\n\t\t\t\tvar timeNext = times[ i + 1 ];\n\n\t\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\t\tif ( time !== timeNext && ( i !== 1 || time !== time[ 0 ] ) ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\t\t\t\t\tvar offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvar value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// in-place compaction\n\n\t\t\t\tif ( keep ) {\n\n\t\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\t\tvar readOffset = i * stride,\n\t\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t}\n\n\t\t\t\t\t++ writeIndex;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( writeIndex !== times.length ) {\n\n\t\t\t\tthis.times = THREE.AnimationUtils.arraySlice( times, 0, writeIndex );\n\t\t\t\tthis.values = THREE.AnimationUtils.arraySlice( values, 0, writeIndex * stride );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t};\n\n\t// Static methods:\n\n\tObject.assign( THREE.KeyframeTrack, {\n\n\t\t// Serialization (in static context, because of constructor invocation\n\t\t// and automatic invocation of .toJSON):\n\n\t\tparse: function( json ) {\n\n\t\t\tif( json.type === undefined ) {\n\n\t\t\t\tthrow new Error( \"track type undefined, can not parse\" );\n\n\t\t\t}\n\n\t\t\tvar trackType = THREE.KeyframeTrack._getTrackTypeForValueTypeName( json.type );\n\n\t\t\tif ( json.times === undefined ) {\n\n\t\t\t\tvar times = [], values = [];\n\n\t\t\t\tTHREE.AnimationUtils.flattenJSON( json.keys, times, values, 'value' );\n\n\t\t\t\tjson.times = times;\n\t\t\t\tjson.values = values;\n\n\t\t\t}\n\n\t\t\t// derived classes can define a static parse method\n\t\t\tif ( trackType.parse !== undefined ) {\n\n\t\t\t\treturn trackType.parse( json );\n\n\t\t\t} else {\n\n\t\t\t\t// by default, we asssume a constructor compatible with the base\n\t\t\t\treturn new trackType(\n\t\t\t\t\t\tjson.name, json.times, json.values, json.interpolation );\n\n\t\t\t}\n\n\t\t},\n\n\t\ttoJSON: function( track ) {\n\n\t\t\tvar trackType = track.constructor;\n\n\t\t\tvar json;\n\n\t\t\t// derived classes can define a static toJSON method\n\t\t\tif ( trackType.toJSON !== undefined ) {\n\n\t\t\t\tjson = trackType.toJSON( track );\n\n\t\t\t} else {\n\n\t\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\t\tjson = {\n\n\t\t\t\t\t'name': track.name,\n\t\t\t\t\t'times': THREE.AnimationUtils.convertArray( track.times, Array ),\n\t\t\t\t\t'values': THREE.AnimationUtils.convertArray( track.values, Array )\n\n\t\t\t\t};\n\n\t\t\t\tvar interpolation = track.getInterpolation();\n\n\t\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\t\treturn json;\n\n\t\t},\n\n\t\t_getTrackTypeForValueTypeName: function( typeName ) {\n\n\t\t\tswitch( typeName.toLowerCase() ) {\n\n\t\t\t\tcase \"scalar\":\n\t\t\t\tcase \"double\":\n\t\t\t\tcase \"float\":\n\t\t\t\tcase \"number\":\n\t\t\t\tcase \"integer\":\n\n\t\t\t\t\treturn THREE.NumberKeyframeTrack;\n\n\t\t\t\tcase \"vector\":\n\t\t\t\tcase \"vector2\":\n\t\t\t\tcase \"vector3\":\n\t\t\t\tcase \"vector4\":\n\n\t\t\t\t\treturn THREE.VectorKeyframeTrack;\n\n\t\t\t\tcase \"color\":\n\n\t\t\t\t\treturn THREE.ColorKeyframeTrack;\n\n\t\t\t\tcase \"quaternion\":\n\n\t\t\t\t\treturn THREE.QuaternionKeyframeTrack;\n\n\t\t\t\tcase \"bool\":\n\t\t\t\tcase \"boolean\":\n\n\t\t\t\t\treturn THREE.BooleanKeyframeTrack;\n\n\t\t\t\tcase \"string\":\n\n\t\t\t\t\treturn THREE.StringKeyframeTrack;\n\n\t\t\t}\n\n\t\t\tthrow new Error( \"Unsupported typeName: \" + typeName );\n\n\t\t}\n\n\t} );\n\n\t// File:src/animation/PropertyBinding.js\n\n\t/**\n\t *\n\t * A reference to a real property in the scene graph.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tTHREE.PropertyBinding = function ( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath ||\n\t\t\t\tTHREE.PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = THREE.PropertyBinding.findNode(\n\t\t\t\trootNode, this.parsedPath.nodeName ) || rootNode;\n\n\t\tthis.rootNode = rootNode;\n\n\t};\n\n\tTHREE.PropertyBinding.prototype = {\n\n\t\tconstructor: THREE.PropertyBinding,\n\n\t\tgetValue: function getValue_unbound( targetArray, offset ) {\n\n\t\t\tthis.bind();\n\t\t\tthis.getValue( targetArray, offset );\n\n\t\t\t// Note: This class uses a State pattern on a per-method basis:\n\t\t\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n\t\t\t// prototype version of these methods with one that represents\n\t\t\t// the bound state. When the property is not found, the methods\n\t\t\t// become no-ops.\n\n\t\t},\n\n\t\tsetValue: function getValue_unbound( sourceArray, offset ) {\n\n\t\t\tthis.bind();\n\t\t\tthis.setValue( sourceArray, offset );\n\n\t\t},\n\n\t\t// create getter / setter pair for a property in the scene graph\n\t\tbind: function() {\n\n\t\t\tvar targetObject = this.node,\n\t\t\t\tparsedPath = this.parsedPath,\n\n\t\t\t\tobjectName = parsedPath.objectName,\n\t\t\t\tpropertyName = parsedPath.propertyName,\n\t\t\t\tpropertyIndex = parsedPath.propertyIndex;\n\n\t\t\tif ( ! targetObject ) {\n\n\t\t\t\ttargetObject = THREE.PropertyBinding.findNode(\n\t\t\t\t\t\tthis.rootNode, parsedPath.nodeName ) || this.rootNode;\n\n\t\t\t\tthis.node = targetObject;\n\n\t\t\t}\n\n\t\t\t// set fail state so we can just 'return' on error\n\t\t\tthis.getValue = this._getValue_unavailable;\n\t\t\tthis.setValue = this._setValue_unavailable;\n\n\t \t\t// ensure there is a value node\n\t\t\tif ( ! targetObject ) {\n\n\t\t\t\tconsole.error( \"  trying to update node for track: \" + this.path + \" but it wasn't found.\" );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( objectName ) {\n\n\t\t\t\tvar objectIndex = parsedPath.objectIndex;\n\n\t\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\t\tswitch ( objectName ) {\n\n\t\t\t\t\tcase 'materials':\n\n\t\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\t\tconsole.error( '  can not bind to material as node does not have a material', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\t\tconsole.error( '  can not bind to material.materials as node.material does not have a materials array', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'bones':\n\n\t\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\t\tconsole.error( '  can not bind to bones as node does not have a skeleton', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\t\tfor ( var i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\t\tconsole.error( '  can not bind to objectName of node, undefined', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t\t}\n\n\n\t\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( \"  trying to bind to objectIndex of objectName, but is undefined:\", this, targetObject );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// resolve property\n\t\t\tvar nodeProperty = targetObject[ propertyName ];\n\n\t\t\tif ( nodeProperty === undefined ) {\n\n\t\t\t\tvar nodeName = parsedPath.nodeName;\n\n\t\t\t\tconsole.error( \"  trying to update property for track: \" + nodeName +\n\t\t\t\t\t\t'.' + propertyName + \" but it wasn't found.\", targetObject );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// determine versioning scheme\n\t\t\tvar versioning = this.Versioning.None;\n\n\t\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\t\tversioning = this.Versioning.NeedsUpdate;\n\t\t\t\tthis.targetObject = targetObject;\n\n\t\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\t\t\t\tthis.targetObject = targetObject;\n\n\t\t\t}\n\n\t\t\t// determine how the property gets bound\n\t\t\tvar bindingType = this.BindingType.Direct;\n\n\t\t\tif ( propertyIndex !== undefined ) {\n\t\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\t\tif ( propertyName === \"morphTargetInfluences\" ) {\n\t\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\t\tconsole.error( '  can not bind to morphTargetInfluences becasuse node does not have a geometry', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.geometry.morphTargets ) {\n\n\t\t\t\t\t\tconsole.error( '  can not bind to morphTargetInfluences becasuse node does not have a geometry.morphTargets', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphTargets.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject.geometry.morphTargets[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\t\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t\t} else if ( nodeProperty.length !== undefined ) {\n\n\t\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t\t} else {\n\n\t\t\t\tthis.propertyName = propertyName;\n\n\t\t\t}\n\n\t\t\t// select getter / setter\n\t\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t\t},\n\n\t\tunbind: function() {\n\n\t\t\tthis.node = null;\n\n\t\t\t// back to the prototype version of getValue / setValue\n\t\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\t\tthis.getValue = this._getValue_unbound;\n\t\t\tthis.setValue = this._setValue_unbound;\n\n\t\t}\n\n\t};\n\n\tObject.assign( THREE.PropertyBinding.prototype, { // prototype, continued\n\n\t\t// these are used to \"bind\" a nonexistent property\n\t\t_getValue_unavailable: function() {},\n\t\t_setValue_unavailable: function() {},\n\n\t\t// initial state of these methods that calls 'bind'\n\t\t_getValue_unbound: THREE.PropertyBinding.prototype.getValue,\n\t\t_setValue_unbound: THREE.PropertyBinding.prototype.setValue,\n\n\t\tBindingType: {\n\t\t\tDirect: 0,\n\t\t\tEntireArray: 1,\n\t\t\tArrayElement: 2,\n\t\t\tHasFromToArray: 3\n\t\t},\n\n\t\tVersioning: {\n\t\t\tNone: 0,\n\t\t\tNeedsUpdate: 1,\n\t\t\tMatrixWorldNeedsUpdate: 2\n\t\t},\n\n\t\tGetterByBindingType: [\n\n\t\t\tfunction getValue_direct( buffer, offset ) {\n\n\t\t\t\tbuffer[ offset ] = this.node[ this.propertyName ];\n\n\t\t\t},\n\n\t\t\tfunction getValue_array( buffer, offset ) {\n\n\t\t\t\tvar source = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tfunction getValue_arrayElement( buffer, offset ) {\n\n\t\t\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t\t\t},\n\n\t\t\tfunction getValue_toArray( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t\t\t}\n\n\t\t],\n\n\t\tSetterByBindingTypeAndVersioning: [\n\n\t\t\t[\n\t\t\t\t// Direct\n\n\t\t\t\tfunction setValue_direct( buffer, offset ) {\n\n\t\t\t\t\tthis.node[ this.propertyName ] = buffer[ offset ];\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.node[ this.propertyName ] = buffer[ offset ];\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.node[ this.propertyName ] = buffer[ offset ];\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t], [\n\n\t\t\t\t// EntireArray\n\n\t\t\t\tfunction setValue_array( buffer, offset ) {\n\n\t\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t], [\n\n\t\t\t\t// ArrayElement\n\n\t\t\t\tfunction setValue_arrayElement( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t], [\n\n\t\t\t\t// HasToFromArray\n\n\t\t\t\tfunction setValue_fromArray( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t]\n\n\t\t]\n\n\t} );\n\n\tTHREE.PropertyBinding.Composite =\n\t\t\tfunction( targetGroup, path, optionalParsedPath ) {\n\n\t\tvar parsedPath = optionalParsedPath ||\n\t\t\t\tTHREE.PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t};\n\n\tTHREE.PropertyBinding.Composite.prototype = {\n\n\t\tconstructor: THREE.PropertyBinding.Composite,\n\n\t\tgetValue: function( array, offset ) {\n\n\t\t\tthis.bind(); // bind all binding\n\n\t\t\tvar firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t\t// and only call .getValue on the first\n\t\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t\t},\n\n\t\tsetValue: function( array, offset ) {\n\n\t\t\tvar bindings = this._bindings;\n\n\t\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t\tn = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t\t}\n\n\t\t},\n\n\t\tbind: function() {\n\n\t\t\tvar bindings = this._bindings;\n\n\t\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t\tn = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tbindings[ i ].bind();\n\n\t\t\t}\n\n\t\t},\n\n\t\tunbind: function() {\n\n\t\t\tvar bindings = this._bindings;\n\n\t\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t\tn = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tbindings[ i ].unbind();\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tTHREE.PropertyBinding.create = function( root, path, parsedPath ) {\n\n\t\tif ( ! ( root instanceof THREE.AnimationObjectGroup ) ) {\n\n\t\t\treturn new THREE.PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new THREE.PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t};\n\n\tTHREE.PropertyBinding.parseTrackName = function( trackName ) {\n\n\t\t// matches strings in the form of:\n\t\t//    nodeName.property\n\t\t//    nodeName.property[accessor]\n\t\t//    nodeName.material.property[accessor]\n\t\t//    uuid.property[accessor]\n\t\t//    uuid.objectName[objectIndex].propertyName[propertyIndex]\n\t\t//    parentName/nodeName.property\n\t\t//    parentName/parentName/nodeName.property[index]\n\t\t//\t  .bone[Armature.DEF_cog].position\n\t\t// created and tested via https://regex101.com/#javascript\n\n\t\tvar re = /^(([\\w]+\\/)*)([\\w-\\d]+)?(\\.([\\w]+)(\\[([\\w\\d\\[\\]\\_.:\\- ]+)\\])?)?(\\.([\\w.]+)(\\[([\\w\\d\\[\\]\\_. ]+)\\])?)$/;\n\t\tvar matches = re.exec( trackName );\n\n\t\tif ( ! matches ) {\n\n\t\t\tthrow new Error( \"cannot parse trackName at all: \" + trackName );\n\n\t\t}\n\n\t\tif ( matches.index === re.lastIndex ) {\n\n\t\t\tre.lastIndex++;\n\n\t\t}\n\n\t\tvar results = {\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\tnodeName: matches[ 3 ], \t// allowed to be null, specified root node.\n\t\t\tobjectName: matches[ 5 ],\n\t\t\tobjectIndex: matches[ 7 ],\n\t\t\tpropertyName: matches[ 9 ],\n\t\t\tpropertyIndex: matches[ 11 ]\t// allowed to be null, specifies that the whole property is set.\n\t\t};\n\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\tthrow new Error( \"can not parse propertyName from trackName: \" + trackName );\n\n\t\t}\n\n\t\treturn results;\n\n\t};\n\n\tTHREE.PropertyBinding.findNode = function( root, nodeName ) {\n\n\t\tif ( ! nodeName || nodeName === \"\" || nodeName === \"root\" || nodeName === \".\" || nodeName === -1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tvar searchSkeleton = function( skeleton ) {\n\n\t\t\t\tfor( var i = 0; i < skeleton.bones.length; i ++ ) {\n\n\t\t\t\t\tvar bone = skeleton.bones[ i ];\n\n\t\t\t\t\tif ( bone.name === nodeName ) {\n\n\t\t\t\t\t\treturn bone;\n\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tvar bone = searchSkeleton( root.skeleton );\n\n\t\t\tif ( bone ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tvar searchNodeSubtree = function( children ) {\n\n\t\t\t\tfor( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tvar childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tvar subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t};\n\n\t// File:src/animation/PropertyMixer.js\n\n\t/**\n\t *\n\t * Buffered scene graph property that allows weighted accumulation.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tTHREE.PropertyMixer = function ( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tvar bufferType = Float64Array,\n\t\t\tmixFunction;\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\t\t\tmixFunction = this._slerp;\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\n\t\t\t\tbufferType = Array,\t\tmixFunction = this._select;\t\tbreak;\n\n\t\t\tdefault:\t\t\t\t\tmixFunction = this._lerp;\n\n\t\t}\n\n\t\tthis.buffer = new bufferType( valueSize * 4 );\n\t\t// layout: [ incoming | accu0 | accu1 | orig ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\n\t\tthis._mixBufferRegion = mixFunction;\n\n\t\tthis.cumulativeWeight = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t};\n\n\tTHREE.PropertyMixer.prototype = {\n\n\t\tconstructor: THREE.PropertyMixer,\n\n\t\t// accumulate data in the 'incoming' region into 'accu<i>'\n\t\taccumulate: function( accuIndex, weight ) {\n\n\t\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t\t// the weight and shouldn't have made the call in the first place\n\n\t\t\tvar buffer = this.buffer,\n\t\t\t\tstride = this.valueSize,\n\t\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\t\tcurrentWeight = this.cumulativeWeight;\n\n\t\t\tif ( currentWeight === 0 ) {\n\n\t\t\t\t// accuN := incoming * weight\n\n\t\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcurrentWeight = weight;\n\n\t\t\t} else {\n\n\t\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\t\tcurrentWeight += weight;\n\t\t\t\tvar mix = weight / currentWeight;\n\t\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t\t}\n\n\t\t\tthis.cumulativeWeight = currentWeight;\n\n\t\t},\n\n\t\t// apply the state of 'accu<i>' to the binding when accus differ\n\t\tapply: function( accuIndex ) {\n\n\t\t\tvar stride = this.valueSize,\n\t\t\t\tbuffer = this.buffer,\n\t\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\t\tweight = this.cumulativeWeight,\n\n\t\t\t\tbinding = this.binding;\n\n\t\t\tthis.cumulativeWeight = 0;\n\n\t\t\tif ( weight < 1 ) {\n\n\t\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\t\tvar originalValueOffset = stride * 3;\n\n\t\t\t\tthis._mixBufferRegion(\n\t\t\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t\t}\n\n\t\t\tfor ( var i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t// remember the state of the bound property and copy it to both accus\n\t\tsaveOriginalState: function() {\n\n\t\t\tvar binding = this.binding;\n\n\t\t\tvar buffer = this.buffer,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\toriginalValueOffset = stride * 3;\n\n\t\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\t\tfor ( var i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t\t}\n\n\t\t\tthis.cumulativeWeight = 0;\n\n\t\t},\n\n\t\t// apply the state previously taken via 'saveOriginalState' to the binding\n\t\trestoreOriginalState: function() {\n\n\t\t\tvar originalValueOffset = this.valueSize * 3;\n\t\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t\t},\n\n\n\t\t// mix functions\n\n\t\t_select: function( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\t\tif ( t >= 0.5 ) {\n\n\t\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t_slerp: function( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\t\tTHREE.Quaternion.slerpFlat( buffer, dstOffset,\n\t\t\t\t\tbuffer, dstOffset, buffer, srcOffset, t );\n\n\t\t},\n\n\t\t_lerp: function( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\t\tvar s = 1 - t;\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tvar j = dstOffset + i;\n\n\t\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\t// File:src/animation/tracks/BooleanKeyframeTrack.js\n\n\t/**\n\t *\n\t * A Track of Boolean keyframe values.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tTHREE.BooleanKeyframeTrack = function ( name, times, values ) {\n\n\t\tTHREE.KeyframeTrack.call( this, name, times, values );\n\n\t};\n\n\tTHREE.BooleanKeyframeTrack.prototype =\n\t\t\tObject.assign( Object.create( THREE.KeyframeTrack.prototype ), {\n\n\t\tconstructor: THREE.BooleanKeyframeTrack,\n\n\t\tValueTypeName: 'bool',\n\t\tValueBufferType: Array,\n\n\t\tDefaultInterpolation: THREE.InterpolateDiscrete,\n\n\t\tInterpolantFactoryMethodLinear: undefined,\n\t\tInterpolantFactoryMethodSmooth: undefined\n\n\t\t// Note: Actually this track could have a optimized / compressed\n\t\t// representation of a single value and a custom interpolant that\n\t\t// computes \"firstValue ^ isOdd( index )\".\n\n\t} );\n\n\t// File:src/animation/tracks/ColorKeyframeTrack.js\n\n\t/**\n\t *\n\t * A Track of keyframe values that represent color.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tTHREE.ColorKeyframeTrack = function ( name, times, values, interpolation ) {\n\n\t\tTHREE.KeyframeTrack.call( this, name, times, values, interpolation );\n\n\t};\n\n\tTHREE.ColorKeyframeTrack.prototype =\n\t\t\tObject.assign( Object.create( THREE.KeyframeTrack.prototype ), {\n\n\t\tconstructor: THREE.ColorKeyframeTrack,\n\n\t\tValueTypeName: 'color'\n\n\t\t// ValueBufferType is inherited\n\n\t\t// DefaultInterpolation is inherited\n\n\n\t\t// Note: Very basic implementation and nothing special yet.\n\t\t// However, this is the place for color space parameterization.\n\n\t} );\n\n\t// File:src/animation/tracks/NumberKeyframeTrack.js\n\n\t/**\n\t *\n\t * A Track of numeric keyframe values.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tTHREE.NumberKeyframeTrack = function ( name, times, values, interpolation ) {\n\n\t\tTHREE.KeyframeTrack.call( this, name, times, values, interpolation );\n\n\t};\n\n\tTHREE.NumberKeyframeTrack.prototype =\n\t\t\tObject.assign( Object.create( THREE.KeyframeTrack.prototype ), {\n\n\t\tconstructor: THREE.NumberKeyframeTrack,\n\n\t\tValueTypeName: 'number',\n\n\t\t// ValueBufferType is inherited\n\n\t\t// DefaultInterpolation is inherited\n\n\t} );\n\n\t// File:src/animation/tracks/QuaternionKeyframeTrack.js\n\n\t/**\n\t *\n\t * A Track of quaternion keyframe values.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tTHREE.QuaternionKeyframeTrack = function ( name, times, values, interpolation ) {\n\n\t\tTHREE.KeyframeTrack.call( this, name, times, values, interpolation );\n\n\t};\n\n\tTHREE.QuaternionKeyframeTrack.prototype =\n\t\t\tObject.assign( Object.create( THREE.KeyframeTrack.prototype ), {\n\n\t\tconstructor: THREE.QuaternionKeyframeTrack,\n\n\t\tValueTypeName: 'quaternion',\n\n\t\t// ValueBufferType is inherited\n\n\t\tDefaultInterpolation: THREE.InterpolateLinear,\n\n\t\tInterpolantFactoryMethodLinear: function( result ) {\n\n\t\t\treturn new THREE.QuaternionLinearInterpolant(\n\t\t\t\t\tthis.times, this.values, this.getValueSize(), result );\n\n\t\t},\n\n\t\tInterpolantFactoryMethodSmooth: undefined // not yet implemented\n\n\t} );\n\n\t// File:src/animation/tracks/StringKeyframeTrack.js\n\n\t/**\n\t *\n\t * A Track that interpolates Strings\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tTHREE.StringKeyframeTrack = function ( name, times, values, interpolation ) {\n\n\t\tTHREE.KeyframeTrack.call( this, name, times, values, interpolation );\n\n\t};\n\n\tTHREE.StringKeyframeTrack.prototype =\n\t\t\tObject.assign( Object.create( THREE.KeyframeTrack.prototype ), {\n\n\t\tconstructor: THREE.StringKeyframeTrack,\n\n\t\tValueTypeName: 'string',\n\t\tValueBufferType: Array,\n\n\t\tDefaultInterpolation: THREE.InterpolateDiscrete,\n\n\t\tInterpolantFactoryMethodLinear: undefined,\n\n\t\tInterpolantFactoryMethodSmooth: undefined\n\n\t} );\n\n\t// File:src/animation/tracks/VectorKeyframeTrack.js\n\n\t/**\n\t *\n\t * A Track of vectored keyframe values.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tTHREE.VectorKeyframeTrack = function ( name, times, values, interpolation ) {\n\n\t\tTHREE.KeyframeTrack.call( this, name, times, values, interpolation );\n\n\t};\n\n\tTHREE.VectorKeyframeTrack.prototype =\n\t\t\tObject.assign( Object.create( THREE.KeyframeTrack.prototype ), {\n\n\t\tconstructor: THREE.VectorKeyframeTrack,\n\n\t\tValueTypeName: 'vector'\n\n\t\t// ValueBufferType is inherited\n\n\t\t// DefaultInterpolation is inherited\n\n\t} );\n\n\t// File:src/audio/Audio.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Reece Aaron Lecrivain / http://reecenotes.com/\n\t */\n\n\tTHREE.Audio = function ( listener ) {\n\n\t\tTHREE.Object3D.call( this );\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.context = listener.context;\n\t\tthis.source = this.context.createBufferSource();\n\t\tthis.source.onended = this.onEnded.bind( this );\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.startTime = 0;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis.filters = [];\n\n\t};\n\n\tTHREE.Audio.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\n\n\t\tconstructor: THREE.Audio,\n\n\t\tgetOutput: function () {\n\n\t\t\treturn this.gain;\n\n\t\t},\n\n\t\tsetNodeSource: function ( audioNode ) {\n\n\t\t\tthis.hasPlaybackControl = false;\n\t\t\tthis.sourceType = 'audioNode';\n\t\t\tthis.source = audioNode;\n\t\t\tthis.connect();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetBuffer: function ( audioBuffer ) {\n\n\t\t\tthis.source.buffer = audioBuffer;\n\t\t\tthis.sourceType = 'buffer';\n\n\t\t\tif ( this.autoplay ) this.play();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tplay: function () {\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar source = this.context.createBufferSource();\n\n\t\t\tsource.buffer = this.source.buffer;\n\t\t\tsource.loop = this.source.loop;\n\t\t\tsource.onended = this.source.onended;\n\t\t\tsource.start( 0, this.startTime );\n\t\t\tsource.playbackRate.value = this.playbackRate;\n\n\t\t\tthis.isPlaying = true;\n\n\t\t\tthis.source = source;\n\n\t\t\treturn this.connect();\n\n\t\t},\n\n\t\tpause: function () {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.startTime = this.context.currentTime;\n\t\t\tthis.isPlaying = false;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.startTime = 0;\n\t\t\tthis.isPlaying = false;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tconnect: function () {\n\n\t\t\tif ( this.filters.length > 0 ) {\n\n\t\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t\t} else {\n\n\t\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdisconnect: function () {\n\n\t\t\tif ( this.filters.length > 0 ) {\n\n\t\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t\t} else {\n\n\t\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetFilters: function () {\n\n\t\t\treturn this.filters;\n\n\t\t},\n\n\t\tsetFilters: function ( value ) {\n\n\t\t\tif ( ! value ) value = [];\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tthis.disconnect();\n\t\t\t\tthis.filters = value;\n\t\t\t\tthis.connect();\n\n\t\t\t} else {\n\n\t\t\t\tthis.filters = value;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetFilter: function () {\n\n\t\t\treturn this.getFilters()[ 0 ];\n\n\t\t},\n\n\t\tsetFilter: function ( filter ) {\n\n\t\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t\t},\n\n\t\tsetPlaybackRate: function ( value ) {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.playbackRate = value;\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tthis.source.playbackRate.value = this.playbackRate;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetPlaybackRate: function () {\n\n\t\t\treturn this.playbackRate;\n\n\t\t},\n\n\t\tonEnded: function () {\n\n\t\t\tthis.isPlaying = false;\n\n\t\t},\n\n\t\tgetLoop: function () {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\treturn this.source.loop;\n\n\t\t},\n\n\t\tsetLoop: function ( value ) {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.source.loop = value;\n\n\t\t},\n\n\t\tgetVolume: function () {\n\n\t\t\treturn this.gain.gain.value;\n\n\t\t},\n\n\n\t\tsetVolume: function ( value ) {\n\n\t\t\tthis.gain.gain.value = value;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t// File:src/audio/AudioAnalyser.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.AudioAnalyser = function ( audio, fftSize ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t};\n\n\tObject.assign( THREE.AudioAnalyser.prototype, {\n\n\t\tgetFrequencyData: function () {\n\n\t\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\t\treturn this.data;\n\n\t\t},\n\n\t\tgetAverageFrequency: function () {\n\n\t\t\tvar value = 0, data = this.getFrequencyData();\n\n\t\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tvalue += data[ i ];\n\n\t\t\t}\n\n\t\t\treturn value / data.length;\n\n\t\t}\n\n\t} );\n\n\t// File:src/audio/AudioContext.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tObject.defineProperty( THREE, 'AudioContext', {\n\n\t\tget: ( function () {\n\n\t\t\tvar context;\n\n\t\t\treturn function get() {\n\n\t\t\t\tif ( context === undefined ) {\n\n\t\t\t\t\tcontext = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t\t\t}\n\n\t\t\t\treturn context;\n\n\t\t\t};\n\n\t\t} )()\n\n\t} );\n\n\t// File:src/audio/PositionalAudio.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.PositionalAudio = function ( listener ) {\n\n\t\tTHREE.Audio.call( this, listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.connect( this.gain );\n\n\t};\n\n\tTHREE.PositionalAudio.prototype = Object.assign( Object.create( THREE.Audio.prototype ), {\n\n\t\tconstructor: THREE.PositionalAudio,\n\n\t\tgetOutput: function () {\n\n\t\t\treturn this.panner;\n\n\t\t},\n\n\t\tgetRefDistance: function () {\n\n\t\t\treturn this.panner.refDistance;\n\n\t\t},\n\n\t\tsetRefDistance: function ( value ) {\n\n\t\t\tthis.panner.refDistance = value;\n\n\t\t},\n\n\t\tgetRolloffFactor: function () {\n\n\t\t\treturn this.panner.rolloffFactor;\n\n\t\t},\n\n\t\tsetRolloffFactor: function ( value ) {\n\n\t\t\tthis.panner.rolloffFactor = value;\n\n\t\t},\n\n\t\tgetDistanceModel: function () {\n\n\t\t\treturn this.panner.distanceModel;\n\n\t\t},\n\n\t\tsetDistanceModel: function ( value ) {\n\n\t\t\tthis.panner.distanceModel = value;\n\n\t\t},\n\n\t\tgetMaxDistance: function () {\n\n\t\t\treturn this.panner.maxDistance;\n\n\t\t},\n\n\t\tsetMaxDistance: function ( value ) {\n\n\t\t\tthis.panner.maxDistance = value;\n\n\t\t},\n\n\t\tupdateMatrixWorld: ( function () {\n\n\t\t\tvar position = new THREE.Vector3();\n\n\t\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\t\tTHREE.Object3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\t\tposition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\tthis.panner.setPosition( position.x, position.y, position.z );\n\n\t\t\t};\n\n\t\t} )()\n\n\n\t} );\n\n\t// File:src/audio/AudioListener.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.AudioListener = function () {\n\n\t\tTHREE.Object3D.call( this );\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = THREE.AudioContext;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t};\n\n\tTHREE.AudioListener.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\n\n\t\tconstructor: THREE.AudioListener,\n\n\t\tgetInput: function () {\n\n\t\t\treturn this.gain;\n\n\t\t},\n\n\t\tremoveFilter: function ( ) {\n\n\t\t\tif ( this.filter !== null ) {\n\n\t\t\t\tthis.gain.disconnect( this.filter );\n\t\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\t\tthis.gain.connect( this.context.destination );\n\t\t\t\tthis.filter = null;\n\n\t\t\t}\n\n\t\t},\n\n\t\tgetFilter: function () {\n\n\t\t\treturn this.filter;\n\n\t\t},\n\n\t\tsetFilter: function ( value ) {\n\n\t\t\tif ( this.filter !== null ) {\n\n\t\t\t\tthis.gain.disconnect( this.filter );\n\t\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t\t} else {\n\n\t\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t\t}\n\n\t\t\tthis.filter = value;\n\t\t\tthis.gain.connect( this.filter );\n\t\t\tthis.filter.connect( this.context.destination );\n\n\t\t},\n\n\t\tgetMasterVolume: function () {\n\n\t\t\treturn this.gain.gain.value;\n\n\t\t},\n\n\t\tsetMasterVolume: function ( value ) {\n\n\t\t\tthis.gain.gain.value = value;\n\n\t\t},\n\n\t\tupdateMatrixWorld: ( function () {\n\n\t\t\tvar position = new THREE.Vector3();\n\t\t\tvar quaternion = new THREE.Quaternion();\n\t\t\tvar scale = new THREE.Vector3();\n\n\t\t\tvar orientation = new THREE.Vector3();\n\n\t\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\t\tTHREE.Object3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\t\tvar listener = this.context.listener;\n\t\t\t\tvar up = this.up;\n\n\t\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\n\n\t\t\t\torientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );\n\n\t\t\t\tlistener.setPosition( position.x, position.y, position.z );\n\t\t\t\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\n\n\t\t\t};\n\n\t\t} )()\n\n\t} );\n\n\t// File:src/cameras/Camera.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author WestLangley / http://github.com/WestLangley\n\t*/\n\n\tTHREE.Camera = function () {\n\n\t\tTHREE.Object3D.call( this );\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new THREE.Matrix4();\n\t\tthis.projectionMatrix = new THREE.Matrix4();\n\n\t};\n\n\tTHREE.Camera.prototype = Object.create( THREE.Object3D.prototype );\n\tTHREE.Camera.prototype.constructor = THREE.Camera;\n\n\tTHREE.Camera.prototype.getWorldDirection = function () {\n\n\t\tvar quaternion = new THREE.Quaternion();\n\n\t\treturn function getWorldDirection( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\n\n\t\t\tthis.getWorldQuaternion( quaternion );\n\n\t\t\treturn result.set( 0, 0, - 1 ).applyQuaternion( quaternion );\n\n\t\t};\n\n\t}();\n\n\tTHREE.Camera.prototype.lookAt = function () {\n\n\t\t// This routine does not support cameras with rotated and/or translated parent(s)\n\n\t\tvar m1 = new THREE.Matrix4();\n\n\t\treturn function lookAt( vector ) {\n\n\t\t\tm1.lookAt( this.position, vector, this.up );\n\n\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\n\n\t\t};\n\n\t}();\n\n\tTHREE.Camera.prototype.clone = function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t};\n\n\tTHREE.Camera.prototype.copy = function ( source ) {\n\n\t\tTHREE.Object3D.prototype.copy.call( this, source );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\n\t\treturn this;\n\n\t};\n\n\t// File:src/cameras/CubeCamera.js\n\n\t/**\n\t * Camera for rendering cube maps\n\t *\t- renders scene into axis-aligned cube\n\t *\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tTHREE.CubeCamera = function ( near, far, cubeResolution ) {\n\n\t\tTHREE.Object3D.call( this );\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tvar fov = 90, aspect = 1;\n\n\t\tvar cameraPX = new THREE.PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\tcameraPX.lookAt( new THREE.Vector3( 1, 0, 0 ) );\n\t\tthis.add( cameraPX );\n\n\t\tvar cameraNX = new THREE.PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\tcameraNX.lookAt( new THREE.Vector3( - 1, 0, 0 ) );\n\t\tthis.add( cameraNX );\n\n\t\tvar cameraPY = new THREE.PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.up.set( 0, 0, 1 );\n\t\tcameraPY.lookAt( new THREE.Vector3( 0, 1, 0 ) );\n\t\tthis.add( cameraPY );\n\n\t\tvar cameraNY = new THREE.PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\tcameraNY.lookAt( new THREE.Vector3( 0, - 1, 0 ) );\n\t\tthis.add( cameraNY );\n\n\t\tvar cameraPZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\tcameraPZ.lookAt( new THREE.Vector3( 0, 0, 1 ) );\n\t\tthis.add( cameraPZ );\n\n\t\tvar cameraNZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\tcameraNZ.lookAt( new THREE.Vector3( 0, 0, - 1 ) );\n\t\tthis.add( cameraNZ );\n\n\t\tvar options = { format: THREE.RGBFormat, magFilter: THREE.LinearFilter, minFilter: THREE.LinearFilter };\n\n\t\tthis.renderTarget = new THREE.WebGLRenderTargetCube( cubeResolution, cubeResolution, options );\n\n\t\tthis.updateCubeMap = function ( renderer, scene ) {\n\n\t\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\t\tvar renderTarget = this.renderTarget;\n\t\t\tvar generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\t\trenderTarget.activeCubeFace = 0;\n\t\t\trenderer.render( scene, cameraPX, renderTarget );\n\n\t\t\trenderTarget.activeCubeFace = 1;\n\t\t\trenderer.render( scene, cameraNX, renderTarget );\n\n\t\t\trenderTarget.activeCubeFace = 2;\n\t\t\trenderer.render( scene, cameraPY, renderTarget );\n\n\t\t\trenderTarget.activeCubeFace = 3;\n\t\t\trenderer.render( scene, cameraNY, renderTarget );\n\n\t\t\trenderTarget.activeCubeFace = 4;\n\t\t\trenderer.render( scene, cameraPZ, renderTarget );\n\n\t\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\t\trenderTarget.activeCubeFace = 5;\n\t\t\trenderer.render( scene, cameraNZ, renderTarget );\n\n\t\t\trenderer.setRenderTarget( null );\n\n\t\t};\n\n\t};\n\n\tTHREE.CubeCamera.prototype = Object.create( THREE.Object3D.prototype );\n\tTHREE.CubeCamera.prototype.constructor = THREE.CubeCamera;\n\n\t// File:src/cameras/OrthographicCamera.js\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author arose / http://github.com/arose\n\t */\n\n\tTHREE.OrthographicCamera = function ( left, right, top, bottom, near, far ) {\n\n\t\tTHREE.Camera.call( this );\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = ( near !== undefined ) ? near : 0.1;\n\t\tthis.far = ( far !== undefined ) ? far : 2000;\n\n\t\tthis.updateProjectionMatrix();\n\n\t};\n\n\tTHREE.OrthographicCamera.prototype = Object.assign( Object.create( THREE.Camera.prototype ), {\n\n\t\tconstructor: THREE.OrthographicCamera,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tTHREE.Camera.prototype.copy.call( this, source );\n\n\t\t\tthis.left = source.left;\n\t\t\tthis.right = source.right;\n\t\t\tthis.top = source.top;\n\t\t\tthis.bottom = source.bottom;\n\t\t\tthis.near = source.near;\n\t\t\tthis.far = source.far;\n\n\t\t\tthis.zoom = source.zoom;\n\t\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetViewOffset: function( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\t\tthis.view = {\n\t\t\t\tfullWidth: fullWidth,\n\t\t\t\tfullHeight: fullHeight,\n\t\t\t\toffsetX: x,\n\t\t\t\toffsetY: y,\n\t\t\t\twidth: width,\n\t\t\t\theight: height\n\t\t\t};\n\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\tclearViewOffset: function() {\n\n\t\t\tthis.view = null;\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\tupdateProjectionMatrix: function () {\n\n\t\t\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\t\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\t\tvar cx = ( this.right + this.left ) / 2;\n\t\t\tvar cy = ( this.top + this.bottom ) / 2;\n\n\t\t\tvar left = cx - dx;\n\t\t\tvar right = cx + dx;\n\t\t\tvar top = cy + dy;\n\t\t\tvar bottom = cy - dy;\n\n\t\t\tif ( this.view !== null ) {\n\n\t\t\t\tvar zoomW = this.zoom / ( this.view.width / this.view.fullWidth );\n\t\t\t\tvar zoomH = this.zoom / ( this.view.height / this.view.fullHeight );\n\t\t\t\tvar scaleW = ( this.right - this.left ) / this.view.width;\n\t\t\t\tvar scaleH = ( this.top - this.bottom ) / this.view.height;\n\n\t\t\t\tleft += scaleW * ( this.view.offsetX / zoomW );\n\t\t\t\tright = left + scaleW * ( this.view.width / zoomW );\n\t\t\t\ttop -= scaleH * ( this.view.offsetY / zoomH );\n\t\t\t\tbottom = top - scaleH * ( this.view.height / zoomH );\n\n\t\t\t}\n\n\t\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.zoom = this.zoom;\n\t\t\tdata.object.left = this.left;\n\t\t\tdata.object.right = this.right;\n\t\t\tdata.object.top = this.top;\n\t\t\tdata.object.bottom = this.bottom;\n\t\t\tdata.object.near = this.near;\n\t\t\tdata.object.far = this.far;\n\n\t\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t// File:src/cameras/PerspectiveCamera.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author greggman / http://games.greggman.com/\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author tschw\n\t */\n\n\tTHREE.PerspectiveCamera = function ( fov, aspect, near, far ) {\n\n\t\tTHREE.Camera.call( this );\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov !== undefined ? fov : 50;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near !== undefined ? near : 0.1;\n\t\tthis.far = far !== undefined ? far : 2000;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect !== undefined ? aspect : 1;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t};\n\n\tTHREE.PerspectiveCamera.prototype = Object.assign( Object.create( THREE.Camera.prototype ), {\n\n\t\tconstructor: THREE.PerspectiveCamera,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tTHREE.Camera.prototype.copy.call( this, source );\n\n\t\t\tthis.fov = source.fov;\n\t\t\tthis.zoom = source.zoom;\n\n\t\t\tthis.near = source.near;\n\t\t\tthis.far = source.far;\n\t\t\tthis.focus = source.focus;\n\n\t\t\tthis.aspect = source.aspect;\n\t\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\t\tthis.filmGauge = source.filmGauge;\n\t\t\tthis.filmOffset = source.filmOffset;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t/**\n\t\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t\t *\n\t\t * The default film gauge is 35, so that the focal length can be specified for\n\t\t * a 35mm (full frame) camera.\n\t\t *\n\t\t * Values for focal length and film gauge must have the same unit.\n\t\t */\n\t\tsetFocalLength: function ( focalLength ) {\n\n\t\t\t// see http://www.bobatkins.com/photography/technical/field_of_view.html\n\t\t\tvar vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\t\tthis.fov = THREE.Math.RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\t/**\n\t\t * Calculates the focal length from the current .fov and .filmGauge.\n\t\t */\n\t\tgetFocalLength: function () {\n\n\t\t\tvar vExtentSlope = Math.tan( THREE.Math.DEG2RAD * 0.5 * this.fov );\n\n\t\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t\t},\n\n\t\tgetEffectiveFOV: function () {\n\n\t\t\treturn THREE.Math.RAD2DEG * 2 * Math.atan(\n\t\t\t\t\tMath.tan( THREE.Math.DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t\t},\n\n\t\tgetFilmWidth: function () {\n\n\t\t\t// film not completely covered in portrait format (aspect < 1)\n\t\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t\t},\n\n\t\tgetFilmHeight: function () {\n\n\t\t\t// film not completely covered in landscape format (aspect > 1)\n\t\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t\t},\n\n\t\t/**\n\t\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t\t * multi-monitor/multi-machine setups.\n\t\t *\n\t\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t\t * the monitors are in grid like this\n\t\t *\n\t\t *   +---+---+---+\n\t\t *   | A | B | C |\n\t\t *   +---+---+---+\n\t\t *   | D | E | F |\n\t\t *   +---+---+---+\n\t\t *\n\t\t * then for each monitor you would call it like this\n\t\t *\n\t\t *   var w = 1920;\n\t\t *   var h = 1080;\n\t\t *   var fullWidth = w * 3;\n\t\t *   var fullHeight = h * 2;\n\t\t *\n\t\t *   --A--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t\t *   --B--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t\t *   --C--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t\t *   --D--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t\t *   --E--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t\t *   --F--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t\t *\n\t\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t\t */\n\t\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\t\tthis.view = {\n\t\t\t\tfullWidth: fullWidth,\n\t\t\t\tfullHeight: fullHeight,\n\t\t\t\toffsetX: x,\n\t\t\t\toffsetY: y,\n\t\t\t\twidth: width,\n\t\t\t\theight: height\n\t\t\t};\n\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\tclearViewOffset: function() {\n\n\t\t\tthis.view = null;\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\tupdateProjectionMatrix: function () {\n\n\t\t\tvar near = this.near,\n\t\t\t\ttop = near * Math.tan(\n\t\t\t\t\t\tTHREE.Math.DEG2RAD * 0.5 * this.fov ) / this.zoom,\n\t\t\t\theight = 2 * top,\n\t\t\t\twidth = this.aspect * height,\n\t\t\t\tleft = - 0.5 * width,\n\t\t\t\tview = this.view;\n\n\t\t\tif ( view !== null ) {\n\n\t\t\t\tvar fullWidth = view.fullWidth,\n\t\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\t\twidth *= view.width / fullWidth;\n\t\t\t\theight *= view.height / fullHeight;\n\n\t\t\t}\n\n\t\t\tvar skew = this.filmOffset;\n\t\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\t\tthis.projectionMatrix.makeFrustum(\n\t\t\t\t\tleft, left + width, top - height, top, near, this.far );\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.fov = this.fov;\n\t\t\tdata.object.zoom = this.zoom;\n\n\t\t\tdata.object.near = this.near;\n\t\t\tdata.object.far = this.far;\n\t\t\tdata.object.focus = this.focus;\n\n\t\t\tdata.object.aspect = this.aspect;\n\n\t\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\t\tdata.object.filmGauge = this.filmGauge;\n\t\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t// File:src/cameras/StereoCamera.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.StereoCamera = function () {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.cameraL = new THREE.PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new THREE.PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t};\n\n\tObject.assign( THREE.StereoCamera.prototype, {\n\n\t\tupdate: ( function () {\n\n\t\t\tvar focus, fov, aspect, near, far;\n\n\t\t\tvar eyeRight = new THREE.Matrix4();\n\t\t\tvar eyeLeft = new THREE.Matrix4();\n\n\t\t\treturn function update( camera ) {\n\n\t\t\t\tvar needsUpdate = focus !== camera.focus || fov !== camera.fov ||\n\t\t\t\t\t\t\t\t\t\t\t\t\taspect !== camera.aspect * this.aspect || near !== camera.near ||\n\t\t\t\t\t\t\t\t\t\t\t\t\tfar !== camera.far;\n\n\t\t\t\tif ( needsUpdate ) {\n\n\t\t\t\t\tfocus = camera.focus;\n\t\t\t\t\tfov = camera.fov;\n\t\t\t\t\taspect = camera.aspect * this.aspect;\n\t\t\t\t\tnear = camera.near;\n\t\t\t\t\tfar = camera.far;\n\n\t\t\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t\t\tvar projectionMatrix = camera.projectionMatrix.clone();\n\t\t\t\t\tvar eyeSep = 0.064 / 2;\n\t\t\t\t\tvar eyeSepOnProjection = eyeSep * near / focus;\n\t\t\t\t\tvar ymax = near * Math.tan( THREE.Math.DEG2RAD * fov * 0.5 );\n\t\t\t\t\tvar xmin, xmax;\n\n\t\t\t\t\t// translate xOffset\n\n\t\t\t\t\teyeLeft.elements[ 12 ] = - eyeSep;\n\t\t\t\t\teyeRight.elements[ 12 ] = eyeSep;\n\n\t\t\t\t\t// for left eye\n\n\t\t\t\t\txmin = - ymax * aspect + eyeSepOnProjection;\n\t\t\t\t\txmax = ymax * aspect + eyeSepOnProjection;\n\n\t\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\t\tthis.cameraL.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t\t\t// for right eye\n\n\t\t\t\t\txmin = - ymax * aspect - eyeSepOnProjection;\n\t\t\t\t\txmax = ymax * aspect - eyeSepOnProjection;\n\n\t\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\t\tthis.cameraR.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t\t}\n\n\t\t\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( eyeLeft );\n\t\t\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( eyeRight );\n\n\t\t\t};\n\n\t\t} )()\n\n\t} );\n\n\t// File:src/lights/Light.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tTHREE.Light = function ( color, intensity ) {\n\n\t\tTHREE.Object3D.call( this );\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new THREE.Color( color );\n\t\tthis.intensity = intensity !== undefined ? intensity : 1;\n\n\t\tthis.receiveShadow = undefined;\n\n\t};\n\n\tTHREE.Light.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\n\n\t\tconstructor: THREE.Light,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tTHREE.Object3D.prototype.copy.call( this, source );\n\n\t\t\tthis.color.copy( source.color );\n\t\t\tthis.intensity = source.intensity;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.color = this.color.getHex();\n\t\t\tdata.object.intensity = this.intensity;\n\n\t\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t// File:src/lights/LightShadow.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.LightShadow = function ( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.bias = 0;\n\t\tthis.radius = 1;\n\n\t\tthis.mapSize = new THREE.Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.matrix = new THREE.Matrix4();\n\n\t};\n\n\tObject.assign( THREE.LightShadow.prototype, {\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.camera = source.camera.clone();\n\n\t\t\tthis.bias = source.bias;\n\t\t\tthis.radius = source.radius;\n\n\t\t\tthis.mapSize.copy( source.mapSize );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t}\n\n\t} );\n\n\t// File:src/lights/AmbientLight.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.AmbientLight = function ( color, intensity ) {\n\n\t\tTHREE.Light.call( this, color, intensity );\n\n\t\tthis.type = 'AmbientLight';\n\n\t\tthis.castShadow = undefined;\n\n\t};\n\n\tTHREE.AmbientLight.prototype = Object.assign( Object.create( THREE.Light.prototype ), {\n\n\t\tconstructor: THREE.AmbientLight\n\n\t} );\n\n\t// File:src/lights/DirectionalLight.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tTHREE.DirectionalLight = function ( color, intensity ) {\n\n\t\tTHREE.Light.call( this, color, intensity );\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( THREE.Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new THREE.Object3D();\n\n\t\tthis.shadow = new THREE.DirectionalLightShadow();\n\n\t};\n\n\tTHREE.DirectionalLight.prototype = Object.assign( Object.create( THREE.Light.prototype ), {\n\n\t\tconstructor: THREE.DirectionalLight,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tTHREE.Light.prototype.copy.call( this, source );\n\n\t\t\tthis.target = source.target.clone();\n\n\t\t\tthis.shadow = source.shadow.clone();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t// File:src/lights/DirectionalLightShadow.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.DirectionalLightShadow = function ( light ) {\n\n\t\tTHREE.LightShadow.call( this, new THREE.OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t};\n\n\tTHREE.DirectionalLightShadow.prototype = Object.assign( Object.create( THREE.LightShadow.prototype ), {\n\n\t\tconstructor: THREE.DirectionalLightShadow\n\n\t} );\n\n\t// File:src/lights/HemisphereLight.js\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tTHREE.HemisphereLight = function ( skyColor, groundColor, intensity ) {\n\n\t\tTHREE.Light.call( this, skyColor, intensity );\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.castShadow = undefined;\n\n\t\tthis.position.copy( THREE.Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new THREE.Color( groundColor );\n\n\t};\n\n\tTHREE.HemisphereLight.prototype = Object.assign( Object.create( THREE.Light.prototype ), {\n\n\t\tconstructor: THREE.HemisphereLight,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tTHREE.Light.prototype.copy.call( this, source );\n\n\t\t\tthis.groundColor.copy( source.groundColor );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t// File:src/lights/PointLight.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\n\tTHREE.PointLight = function ( color, intensity, distance, decay ) {\n\n\t\tTHREE.Light.call( this, color, intensity );\n\n\t\tthis.type = 'PointLight';\n\n\t\tObject.defineProperty( this, 'power', {\n\t\t\tget: function () {\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n\t\t\t\treturn this.intensity * 4 * Math.PI;\n\n\t\t\t},\n\t\t\tset: function ( power ) {\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n\t\t\t\tthis.intensity = power / ( 4 * Math.PI );\n\t\t\t}\n\t\t} );\n\n\t\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\t\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\t\tthis.shadow = new THREE.LightShadow( new THREE.PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t};\n\n\tTHREE.PointLight.prototype = Object.assign( Object.create( THREE.Light.prototype ), {\n\n\t\tconstructor: THREE.PointLight,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tTHREE.Light.prototype.copy.call( this, source );\n\n\t\t\tthis.distance = source.distance;\n\t\t\tthis.decay = source.decay;\n\n\t\t\tthis.shadow = source.shadow.clone();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t// File:src/lights/SpotLight.js\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tTHREE.SpotLight = function ( color, intensity, distance, angle, penumbra, decay ) {\n\n\t\tTHREE.Light.call( this, color, intensity );\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( THREE.Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new THREE.Object3D();\n\n\t\tObject.defineProperty( this, 'power', {\n\t\t\tget: function () {\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n\t\t\t\treturn this.intensity * Math.PI;\n\t\t\t},\n\t\t\tset: function ( power ) {\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n\t\t\t\tthis.intensity = power / Math.PI;\n\t\t\t}\n\t\t} );\n\n\t\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\t\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\n\t\tthis.penumbra = ( penumbra !== undefined ) ? penumbra : 0;\n\t\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\t\tthis.shadow = new THREE.SpotLightShadow();\n\n\t};\n\n\tTHREE.SpotLight.prototype = Object.assign( Object.create( THREE.Light.prototype ), {\n\n\t\tconstructor: THREE.SpotLight,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tTHREE.Light.prototype.copy.call( this, source );\n\n\t\t\tthis.distance = source.distance;\n\t\t\tthis.angle = source.angle;\n\t\t\tthis.penumbra = source.penumbra;\n\t\t\tthis.decay = source.decay;\n\n\t\t\tthis.target = source.target.clone();\n\n\t\t\tthis.shadow = source.shadow.clone();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t// File:src/lights/SpotLightShadow.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.SpotLightShadow = function () {\n\n\t\tTHREE.LightShadow.call( this, new THREE.PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t};\n\n\tTHREE.SpotLightShadow.prototype = Object.assign( Object.create( THREE.LightShadow.prototype ), {\n\n\t\tconstructor: THREE.SpotLightShadow,\n\n\t\tupdate: function ( light ) {\n\n\t\t\tvar fov = THREE.Math.RAD2DEG * 2 * light.angle;\n\t\t\tvar aspect = this.mapSize.width / this.mapSize.height;\n\t\t\tvar far = light.distance || 500;\n\n\t\t\tvar camera = this.camera;\n\n\t\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\t\tcamera.fov = fov;\n\t\t\t\tcamera.aspect = aspect;\n\t\t\t\tcamera.far = far;\n\t\t\t\tcamera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t// File:src/loaders/AudioLoader.js\n\n\t/**\n\t * @author Reece Aaron Lecrivain / http://reecenotes.com/\n\t */\n\n\tTHREE.AudioLoader = function ( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n\t};\n\n\tObject.assign( THREE.AudioLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar loader = new THREE.XHRLoader( this.manager );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tvar context = THREE.AudioContext;\n\n\t\t\t\tcontext.decodeAudioData( buffer, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t} );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t} );\n\n\t// File:src/loaders/Cache.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.Cache = {\n\n\t\tenabled: false,\n\n\t\tfiles: {},\n\n\t\tadd: function ( key, file ) {\n\n\t\t\tif ( this.enabled === false ) return;\n\n\t\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\t\tthis.files[ key ] = file;\n\n\t\t},\n\n\t\tget: function ( key ) {\n\n\t\t\tif ( this.enabled === false ) return;\n\n\t\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\t\treturn this.files[ key ];\n\n\t\t},\n\n\t\tremove: function ( key ) {\n\n\t\t\tdelete this.files[ key ];\n\n\t\t},\n\n\t\tclear: function () {\n\n\t\t\tthis.files = {};\n\n\t\t}\n\n\t};\n\n\t// File:src/loaders/Loader.js\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tTHREE.Loader = function () {\n\n\t\tthis.onLoadStart = function () {};\n\t\tthis.onLoadProgress = function () {};\n\t\tthis.onLoadComplete = function () {};\n\n\t};\n\n\tTHREE.Loader.prototype = {\n\n\t\tconstructor: THREE.Loader,\n\n\t\tcrossOrigin: undefined,\n\n\t\textractUrlBase: function ( url ) {\n\n\t\t\tvar parts = url.split( '/' );\n\n\t\t\tif ( parts.length === 1 ) return './';\n\n\t\t\tparts.pop();\n\n\t\t\treturn parts.join( '/' ) + '/';\n\n\t\t},\n\n\t\tinitMaterials: function ( materials, texturePath, crossOrigin ) {\n\n\t\t\tvar array = [];\n\n\t\t\tfor ( var i = 0; i < materials.length; ++ i ) {\n\n\t\t\t\tarray[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );\n\n\t\t\t}\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tcreateMaterial: ( function () {\n\n\t\t\tvar color, textureLoader, materialLoader;\n\n\t\t\treturn function createMaterial( m, texturePath, crossOrigin ) {\n\n\t\t\t\tif ( color === undefined ) color = new THREE.Color();\n\t\t\t\tif ( textureLoader === undefined ) textureLoader = new THREE.TextureLoader();\n\t\t\t\tif ( materialLoader === undefined ) materialLoader = new THREE.MaterialLoader();\n\n\t\t\t\t// convert from old material format\n\n\t\t\t\tvar textures = {};\n\n\t\t\t\tfunction loadTexture( path, repeat, offset, wrap, anisotropy ) {\n\n\t\t\t\t\tvar fullPath = texturePath + path;\n\t\t\t\t\tvar loader = THREE.Loader.Handlers.get( fullPath );\n\n\t\t\t\t\tvar texture;\n\n\t\t\t\t\tif ( loader !== null ) {\n\n\t\t\t\t\t\ttexture = loader.load( fullPath );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttextureLoader.setCrossOrigin( crossOrigin );\n\t\t\t\t\t\ttexture = textureLoader.load( fullPath );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( repeat !== undefined ) {\n\n\t\t\t\t\t\ttexture.repeat.fromArray( repeat );\n\n\t\t\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = THREE.RepeatWrapping;\n\t\t\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = THREE.RepeatWrapping;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( offset !== undefined ) {\n\n\t\t\t\t\t\ttexture.offset.fromArray( offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( wrap !== undefined ) {\n\n\t\t\t\t\t\tif ( wrap[ 0 ] === 'repeat' ) texture.wrapS = THREE.RepeatWrapping;\n\t\t\t\t\t\tif ( wrap[ 0 ] === 'mirror' ) texture.wrapS = THREE.MirroredRepeatWrapping;\n\n\t\t\t\t\t\tif ( wrap[ 1 ] === 'repeat' ) texture.wrapT = THREE.RepeatWrapping;\n\t\t\t\t\t\tif ( wrap[ 1 ] === 'mirror' ) texture.wrapT = THREE.MirroredRepeatWrapping;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( anisotropy !== undefined ) {\n\n\t\t\t\t\t\ttexture.anisotropy = anisotropy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar uuid = THREE.Math.generateUUID();\n\n\t\t\t\t\ttextures[ uuid ] = texture;\n\n\t\t\t\t\treturn uuid;\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tvar json = {\n\t\t\t\t\tuuid: THREE.Math.generateUUID(),\n\t\t\t\t\ttype: 'MeshLambertMaterial'\n\t\t\t\t};\n\n\t\t\t\tfor ( var name in m ) {\n\n\t\t\t\t\tvar value = m[ name ];\n\n\t\t\t\t\tswitch ( name ) {\n\t\t\t\t\t\tcase 'DbgColor':\n\t\t\t\t\t\tcase 'DbgIndex':\n\t\t\t\t\t\tcase 'opticalDensity':\n\t\t\t\t\t\tcase 'illumination':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'DbgName':\n\t\t\t\t\t\t\tjson.name = value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'blending':\n\t\t\t\t\t\t\tjson.blending = THREE[ value ];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'colorAmbient':\n\t\t\t\t\t\tcase 'mapAmbient':\n\t\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial:', name, 'is no longer supported.' );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'colorDiffuse':\n\t\t\t\t\t\t\tjson.color = color.fromArray( value ).getHex();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'colorSpecular':\n\t\t\t\t\t\t\tjson.specular = color.fromArray( value ).getHex();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'colorEmissive':\n\t\t\t\t\t\t\tjson.emissive = color.fromArray( value ).getHex();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'specularCoef':\n\t\t\t\t\t\t\tjson.shininess = value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'shading':\n\t\t\t\t\t\t\tif ( value.toLowerCase() === 'basic' ) json.type = 'MeshBasicMaterial';\n\t\t\t\t\t\t\tif ( value.toLowerCase() === 'phong' ) json.type = 'MeshPhongMaterial';\n\t\t\t\t\t\t\tif ( value.toLowerCase() === 'standard' ) json.type = 'MeshStandardMaterial';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapDiffuse':\n\t\t\t\t\t\t\tjson.map = loadTexture( value, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapDiffuseRepeat':\n\t\t\t\t\t\tcase 'mapDiffuseOffset':\n\t\t\t\t\t\tcase 'mapDiffuseWrap':\n\t\t\t\t\t\tcase 'mapDiffuseAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapEmissive':\n\t\t\t\t\t\t\tjson.emissiveMap = loadTexture( value, m.mapEmissiveRepeat, m.mapEmissiveOffset, m.mapEmissiveWrap, m.mapEmissiveAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapEmissiveRepeat':\n\t\t\t\t\t\tcase 'mapEmissiveOffset':\n\t\t\t\t\t\tcase 'mapEmissiveWrap':\n\t\t\t\t\t\tcase 'mapEmissiveAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapLight':\n\t\t\t\t\t\t\tjson.lightMap = loadTexture( value, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapLightRepeat':\n\t\t\t\t\t\tcase 'mapLightOffset':\n\t\t\t\t\t\tcase 'mapLightWrap':\n\t\t\t\t\t\tcase 'mapLightAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapAO':\n\t\t\t\t\t\t\tjson.aoMap = loadTexture( value, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapAORepeat':\n\t\t\t\t\t\tcase 'mapAOOffset':\n\t\t\t\t\t\tcase 'mapAOWrap':\n\t\t\t\t\t\tcase 'mapAOAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapBump':\n\t\t\t\t\t\t\tjson.bumpMap = loadTexture( value, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapBumpScale':\n\t\t\t\t\t\t\tjson.bumpScale = value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapBumpRepeat':\n\t\t\t\t\t\tcase 'mapBumpOffset':\n\t\t\t\t\t\tcase 'mapBumpWrap':\n\t\t\t\t\t\tcase 'mapBumpAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapNormal':\n\t\t\t\t\t\t\tjson.normalMap = loadTexture( value, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapNormalFactor':\n\t\t\t\t\t\t\tjson.normalScale = [ value, value ];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapNormalRepeat':\n\t\t\t\t\t\tcase 'mapNormalOffset':\n\t\t\t\t\t\tcase 'mapNormalWrap':\n\t\t\t\t\t\tcase 'mapNormalAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapSpecular':\n\t\t\t\t\t\t\tjson.specularMap = loadTexture( value, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapSpecularRepeat':\n\t\t\t\t\t\tcase 'mapSpecularOffset':\n\t\t\t\t\t\tcase 'mapSpecularWrap':\n\t\t\t\t\t\tcase 'mapSpecularAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapMetalness':\n\t\t\t\t\t\t\tjson.metalnessMap = loadTexture( value, m.mapMetalnessRepeat, m.mapMetalnessOffset, m.mapMetalnessWrap, m.mapMetalnessAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapMetalnessRepeat':\n\t\t\t\t\t\tcase 'mapMetalnessOffset':\n\t\t\t\t\t\tcase 'mapMetalnessWrap':\n\t\t\t\t\t\tcase 'mapMetalnessAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapRoughness':\n\t\t\t\t\t\t\tjson.roughnessMap = loadTexture( value, m.mapRoughnessRepeat, m.mapRoughnessOffset, m.mapRoughnessWrap, m.mapRoughnessAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapRoughnessRepeat':\n\t\t\t\t\t\tcase 'mapRoughnessOffset':\n\t\t\t\t\t\tcase 'mapRoughnessWrap':\n\t\t\t\t\t\tcase 'mapRoughnessAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapAlpha':\n\t\t\t\t\t\t\tjson.alphaMap = loadTexture( value, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'mapAlphaRepeat':\n\t\t\t\t\t\tcase 'mapAlphaOffset':\n\t\t\t\t\t\tcase 'mapAlphaWrap':\n\t\t\t\t\t\tcase 'mapAlphaAnisotropy':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'flipSided':\n\t\t\t\t\t\t\tjson.side = THREE.BackSide;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'doubleSided':\n\t\t\t\t\t\t\tjson.side = THREE.DoubleSide;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'transparency':\n\t\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial: transparency has been renamed to opacity' );\n\t\t\t\t\t\t\tjson.opacity = value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'depthTest':\n\t\t\t\t\t\tcase 'depthWrite':\n\t\t\t\t\t\tcase 'colorWrite':\n\t\t\t\t\t\tcase 'opacity':\n\t\t\t\t\t\tcase 'reflectivity':\n\t\t\t\t\t\tcase 'transparent':\n\t\t\t\t\t\tcase 'visible':\n\t\t\t\t\t\tcase 'wireframe':\n\t\t\t\t\t\t\tjson[ name ] = value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'vertexColors':\n\t\t\t\t\t\t\tif ( value === true ) json.vertexColors = THREE.VertexColors;\n\t\t\t\t\t\t\tif ( value === 'face' ) json.vertexColors = THREE.FaceColors;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.Loader.createMaterial: Unsupported', name, value );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( json.type === 'MeshBasicMaterial' ) delete json.emissive;\n\t\t\t\tif ( json.type !== 'MeshPhongMaterial' ) delete json.specular;\n\n\t\t\t\tif ( json.opacity < 1 ) json.transparent = true;\n\n\t\t\t\tmaterialLoader.setTextures( textures );\n\n\t\t\t\treturn materialLoader.parse( json );\n\n\t\t\t};\n\n\t\t} )()\n\n\t};\n\n\tTHREE.Loader.Handlers = {\n\n\t\thandlers: [],\n\n\t\tadd: function ( regex, loader ) {\n\n\t\t\tthis.handlers.push( regex, loader );\n\n\t\t},\n\n\t\tget: function ( file ) {\n\n\t\t\tvar handlers = this.handlers;\n\n\t\t\tfor ( var i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tvar regex = handlers[ i ];\n\t\t\t\tvar loader  = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t}\n\n\t};\n\n\t// File:src/loaders/XHRLoader.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.XHRLoader = function ( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n\t};\n\n\tObject.assign( THREE.XHRLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\t\tvar scope = this;\n\n\t\t\tvar cached = THREE.Cache.get( url );\n\n\t\t\tif ( cached !== undefined ) {\n\n\t\t\t\tscope.manager.itemStart( url );\n\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t\treturn cached;\n\n\t\t\t}\n\n\t\t\tvar request = new XMLHttpRequest();\n\t\t\trequest.overrideMimeType( 'text/plain' );\n\t\t\trequest.open( 'GET', url, true );\n\n\t\t\trequest.addEventListener( 'load', function ( event ) {\n\n\t\t\t\tvar response = event.target.response;\n\n\t\t\t\tTHREE.Cache.add( url, response );\n\n\t\t\t\tif ( this.status === 200 ) {\n\n\t\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} else if ( this.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tconsole.warn( 'THREE.XHRLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( onError ) onError( event );\n\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t}\n\n\t\t\t}, false );\n\n\t\t\tif ( onProgress !== undefined ) {\n\n\t\t\t\trequest.addEventListener( 'progress', function ( event ) {\n\n\t\t\t\t\tonProgress( event );\n\n\t\t\t\t}, false );\n\n\t\t\t}\n\n\t\t\trequest.addEventListener( 'error', function ( event ) {\n\n\t\t\t\tif ( onError ) onError( event );\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}, false );\n\n\t\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\n\t\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\n\n\t\t\trequest.send( null );\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn request;\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetResponseType: function ( value ) {\n\n\t\t\tthis.responseType = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetWithCredentials: function ( value ) {\n\n\t\t\tthis.withCredentials = value;\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t// File:src/loaders/FontLoader.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.FontLoader = function ( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n\t};\n\n\tObject.assign( THREE.FontLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new THREE.XHRLoader( this.manager );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tvar json;\n\n\t\t\t\ttry {\n\n\t\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );\n\t\t\t\t\tjson = JSON.parse( text.substring( 65, text.length - 2 ) );\n\n\t\t\t\t}\n\n\t\t\t\tvar font = scope.parse( json );\n\n\t\t\t\tif ( onLoad ) onLoad( font );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tparse: function ( json ) {\n\n\t\t\treturn new THREE.Font( json );\n\n\t\t}\n\n\t} );\n\n\t// File:src/loaders/ImageLoader.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.ImageLoader = function ( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n\t};\n\n\tObject.assign( THREE.ImageLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar image = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'img' );\n\t\t\timage.onload = function () {\n\n\t\t\t\tURL.revokeObjectURL( image.src );\n\n\t\t\t\tif ( onLoad ) onLoad( image );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t};\n\n\t\t\tif ( url.indexOf( 'data:' ) === 0 ) {\n\n\t\t\t\timage.src = url;\n\n\t\t\t} else {\n\n\t\t\t\tvar loader = new THREE.XHRLoader();\n\t\t\t\tloader.setPath( this.path );\n\t\t\t\tloader.setResponseType( 'blob' );\n\t\t\t\tloader.load( url, function ( blob ) {\n\n\t\t\t\t\timage.src = URL.createObjectURL( blob );\n\n\t\t\t\t}, onProgress, onError );\n\n\t\t\t}\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn image;\n\n\t\t},\n\n\t\tsetCrossOrigin: function ( value ) {\n\n\t\t\tthis.crossOrigin = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t// File:src/loaders/JSONLoader.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tTHREE.JSONLoader = function ( manager ) {\n\n\t\tif ( typeof manager === 'boolean' ) {\n\n\t\t\tconsole.warn( 'THREE.JSONLoader: showStatus parameter has been removed from constructor.' );\n\t\t\tmanager = undefined;\n\n\t\t}\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n\t\tthis.withCredentials = false;\n\n\t};\n\n\tObject.assign( THREE.JSONLoader.prototype, {\n\n\t\tload: function( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar texturePath = this.texturePath && ( typeof this.texturePath === \"string\" ) ? this.texturePath : THREE.Loader.prototype.extractUrlBase( url );\n\n\t\t\tvar loader = new THREE.XHRLoader( this.manager );\n\t\t\tloader.setWithCredentials( this.withCredentials );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tvar json = JSON.parse( text );\n\t\t\t\tvar metadata = json.metadata;\n\n\t\t\t\tif ( metadata !== undefined ) {\n\n\t\t\t\t\tvar type = metadata.type;\n\n\t\t\t\t\tif ( type !== undefined ) {\n\n\t\t\t\t\t\tif ( type.toLowerCase() === 'object' ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( type.toLowerCase() === 'scene' ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.SceneLoader instead.' );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar object = scope.parse( json, texturePath );\n\t\t\t\tonLoad( object.geometry, object.materials );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tsetTexturePath: function ( value ) {\n\n\t\t\tthis.texturePath = value;\n\n\t\t},\n\n\t\tparse: function ( json, texturePath ) {\n\n\t\t\tvar geometry = new THREE.Geometry(),\n\t\t\tscale = ( json.scale !== undefined ) ? 1.0 / json.scale : 1.0;\n\n\t\t\tparseModel( scale );\n\n\t\t\tparseSkin();\n\t\t\tparseMorphing( scale );\n\t\t\tparseAnimations();\n\n\t\t\tgeometry.computeFaceNormals();\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\tfunction parseModel( scale ) {\n\n\t\t\t\tfunction isBitSet( value, position ) {\n\n\t\t\t\t\treturn value & ( 1 << position );\n\n\t\t\t\t}\n\n\t\t\t\tvar i, j, fi,\n\n\t\t\t\toffset, zLength,\n\n\t\t\tcolorIndex, normalIndex, uvIndex, materialIndex,\n\n\t\t\t\ttype,\n\t\t\t\tisQuad,\n\t\t\t\thasMaterial,\n\t\t\t\thasFaceVertexUv,\n\t\t\t\thasFaceNormal, hasFaceVertexNormal,\n\t\t\t\thasFaceColor, hasFaceVertexColor,\n\n\t\t\tvertex, face, faceA, faceB, hex, normal,\n\n\t\t\t\tuvLayer, uv, u, v,\n\n\t\t\t\tfaces = json.faces,\n\t\t\t\tvertices = json.vertices,\n\t\t\t\tnormals = json.normals,\n\t\t\t\tcolors = json.colors,\n\n\t\t\t\tnUvLayers = 0;\n\n\t\t\t\tif ( json.uvs !== undefined ) {\n\n\t\t\t\t\t// disregard empty arrays\n\n\t\t\t\t\tfor ( i = 0; i < json.uvs.length; i ++ ) {\n\n\t\t\t\t\t\tif ( json.uvs[ i ].length ) nUvLayers ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\tgeometry.faceVertexUvs[ i ] = [];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\toffset = 0;\n\t\t\t\tzLength = vertices.length;\n\n\t\t\t\twhile ( offset < zLength ) {\n\n\t\t\t\t\tvertex = new THREE.Vector3();\n\n\t\t\t\t\tvertex.x = vertices[ offset ++ ] * scale;\n\t\t\t\t\tvertex.y = vertices[ offset ++ ] * scale;\n\t\t\t\t\tvertex.z = vertices[ offset ++ ] * scale;\n\n\t\t\t\t\tgeometry.vertices.push( vertex );\n\n\t\t\t\t}\n\n\t\t\t\toffset = 0;\n\t\t\t\tzLength = faces.length;\n\n\t\t\t\twhile ( offset < zLength ) {\n\n\t\t\t\t\ttype = faces[ offset ++ ];\n\n\n\t\t\t\t\tisQuad              = isBitSet( type, 0 );\n\t\t\t\t\thasMaterial         = isBitSet( type, 1 );\n\t\t\t\t\thasFaceVertexUv     = isBitSet( type, 3 );\n\t\t\t\t\thasFaceNormal       = isBitSet( type, 4 );\n\t\t\t\t\thasFaceVertexNormal = isBitSet( type, 5 );\n\t\t\t\t\thasFaceColor\t     = isBitSet( type, 6 );\n\t\t\t\t\thasFaceVertexColor  = isBitSet( type, 7 );\n\n\t\t\t\t\t// console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\n\n\t\t\t\t\tif ( isQuad ) {\n\n\t\t\t\t\t\tfaceA = new THREE.Face3();\n\t\t\t\t\t\tfaceA.a = faces[ offset ];\n\t\t\t\t\t\tfaceA.b = faces[ offset + 1 ];\n\t\t\t\t\t\tfaceA.c = faces[ offset + 3 ];\n\n\t\t\t\t\t\tfaceB = new THREE.Face3();\n\t\t\t\t\t\tfaceB.a = faces[ offset + 1 ];\n\t\t\t\t\t\tfaceB.b = faces[ offset + 2 ];\n\t\t\t\t\t\tfaceB.c = faces[ offset + 3 ];\n\n\t\t\t\t\t\toffset += 4;\n\n\t\t\t\t\t\tif ( hasMaterial ) {\n\n\t\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\tfaceA.materialIndex = materialIndex;\n\t\t\t\t\t\t\tfaceB.materialIndex = materialIndex;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// to get face <=> uv index correspondence\n\n\t\t\t\t\t\tfi = geometry.faces.length;\n\n\t\t\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = [];\n\n\t\t\t\t\t\t\t\tfor ( j = 0; j < 4; j ++ ) {\n\n\t\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\n\t\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n\t\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\n\t\t\t\t\t\t\t\t\tuv = new THREE.Vector2( u, v );\n\n\t\t\t\t\t\t\t\t\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\n\t\t\t\t\t\t\t\t\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\tfaceA.normal.set(\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tfaceB.normal.copy( faceA.normal );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\t\tnormal = new THREE.Vector3(\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t\t);\n\n\n\t\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\n\t\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\thex = colors[ colorIndex ];\n\n\t\t\t\t\t\t\tfaceA.color.setHex( hex );\n\t\t\t\t\t\t\tfaceB.color.setHex( hex );\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\t\thex = colors[ colorIndex ];\n\n\t\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexColors.push( new THREE.Color( hex ) );\n\t\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexColors.push( new THREE.Color( hex ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry.faces.push( faceA );\n\t\t\t\t\t\tgeometry.faces.push( faceB );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tface = new THREE.Face3();\n\t\t\t\t\t\tface.a = faces[ offset ++ ];\n\t\t\t\t\t\tface.b = faces[ offset ++ ];\n\t\t\t\t\t\tface.c = faces[ offset ++ ];\n\n\t\t\t\t\t\tif ( hasMaterial ) {\n\n\t\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\tface.materialIndex = materialIndex;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// to get face <=> uv index correspondence\n\n\t\t\t\t\t\tfi = geometry.faces.length;\n\n\t\t\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n\n\t\t\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\n\t\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n\t\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\n\t\t\t\t\t\t\t\t\tuv = new THREE.Vector2( u, v );\n\n\t\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\tface.normal.set(\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\t\tnormal = new THREE.Vector3(\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tface.vertexNormals.push( normal );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\tface.color.setHex( colors[ colorIndex ] );\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\t\tface.vertexColors.push( new THREE.Color( colors[ colorIndex ] ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry.faces.push( face );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction parseSkin() {\n\n\t\t\t\tvar influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\n\n\t\t\t\tif ( json.skinWeights ) {\n\n\t\t\t\t\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\n\n\t\t\t\t\t\tvar x =                               json.skinWeights[ i ];\n\t\t\t\t\t\tvar y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\n\t\t\t\t\t\tvar z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\n\t\t\t\t\t\tvar w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\n\n\t\t\t\t\t\tgeometry.skinWeights.push( new THREE.Vector4( x, y, z, w ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( json.skinIndices ) {\n\n\t\t\t\t\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\n\n\t\t\t\t\t\tvar a =                               json.skinIndices[ i ];\n\t\t\t\t\t\tvar b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\n\t\t\t\t\t\tvar c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\n\t\t\t\t\t\tvar d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\n\n\t\t\t\t\t\tgeometry.skinIndices.push( new THREE.Vector4( a, b, c, d ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.bones = json.bones;\n\n\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\n\n\t\t\t\t\tconsole.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\n\t\t\t\t\t\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction parseMorphing( scale ) {\n\n\t\t\t\tif ( json.morphTargets !== undefined ) {\n\n\t\t\t\t\tfor ( var i = 0, l = json.morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tgeometry.morphTargets[ i ] = {};\n\t\t\t\t\t\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\n\t\t\t\t\t\tgeometry.morphTargets[ i ].vertices = [];\n\n\t\t\t\t\t\tvar dstVertices = geometry.morphTargets[ i ].vertices;\n\t\t\t\t\t\tvar srcVertices = json.morphTargets[ i ].vertices;\n\n\t\t\t\t\t\tfor ( var v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\n\n\t\t\t\t\t\t\tvar vertex = new THREE.Vector3();\n\t\t\t\t\t\t\tvertex.x = srcVertices[ v ] * scale;\n\t\t\t\t\t\t\tvertex.y = srcVertices[ v + 1 ] * scale;\n\t\t\t\t\t\t\tvertex.z = srcVertices[ v + 2 ] * scale;\n\n\t\t\t\t\t\t\tdstVertices.push( vertex );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( json.morphColors !== undefined && json.morphColors.length > 0 ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.JSONLoader: \"morphColors\" no longer supported. Using them as face colors.' );\n\n\t\t\t\t\tvar faces = geometry.faces;\n\t\t\t\t\tvar morphColors = json.morphColors[ 0 ].colors;\n\n\t\t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tfaces[ i ].color.fromArray( morphColors, i * 3 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction parseAnimations() {\n\n\t\t\t\tvar outputAnimations = [];\n\n\t\t\t\t// parse old style Bone/Hierarchy animations\n\t\t\t\tvar animations = [];\n\n\t\t\t\tif ( json.animation !== undefined ) {\n\n\t\t\t\t\tanimations.push( json.animation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( json.animations !== undefined ) {\n\n\t\t\t\t\tif ( json.animations.length ) {\n\n\t\t\t\t\t\tanimations = animations.concat( json.animations );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tanimations.push( json.animations );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0; i < animations.length; i ++ ) {\n\n\t\t\t\t\tvar clip = THREE.AnimationClip.parseAnimation( animations[ i ], geometry.bones );\n\t\t\t\t\tif ( clip ) outputAnimations.push( clip );\n\n\t\t\t\t}\n\n\t\t\t\t// parse implicit morph animations\n\t\t\t\tif ( geometry.morphTargets ) {\n\n\t\t\t\t\t// TODO: Figure out what an appropraite FPS is for morph target animations -- defaulting to 10, but really it is completely arbitrary.\n\t\t\t\t\tvar morphAnimationClips = THREE.AnimationClip.CreateClipsFromMorphTargetSequences( geometry.morphTargets, 10 );\n\t\t\t\t\toutputAnimations = outputAnimations.concat( morphAnimationClips );\n\n\t\t\t\t}\n\n\t\t\t\tif ( outputAnimations.length > 0 ) geometry.animations = outputAnimations;\n\n\t\t\t}\n\n\t\t\tif ( json.materials === undefined || json.materials.length === 0 ) {\n\n\t\t\t\treturn { geometry: geometry };\n\n\t\t\t} else {\n\n\t\t\t\tvar materials = THREE.Loader.prototype.initMaterials( json.materials, texturePath, this.crossOrigin );\n\n\t\t\t\treturn { geometry: geometry, materials: materials };\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t// File:src/loaders/LoadingManager.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.LoadingManager = function ( onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar isLoading = false, itemsLoaded = 0, itemsTotal = 0;\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t};\n\n\tTHREE.DefaultLoadingManager = new THREE.LoadingManager();\n\n\t// File:src/loaders/BufferGeometryLoader.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.BufferGeometryLoader = function ( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n\t};\n\n\tObject.assign( THREE.BufferGeometryLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new THREE.XHRLoader( scope.manager );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tparse: function ( json ) {\n\n\t\t\tvar geometry = new THREE.BufferGeometry();\n\n\t\t\tvar index = json.data.index;\n\n\t\t\tvar TYPED_ARRAYS = {\n\t\t\t\t'Int8Array': Int8Array,\n\t\t\t\t'Uint8Array': Uint8Array,\n\t\t\t\t'Uint8ClampedArray': Uint8ClampedArray,\n\t\t\t\t'Int16Array': Int16Array,\n\t\t\t\t'Uint16Array': Uint16Array,\n\t\t\t\t'Int32Array': Int32Array,\n\t\t\t\t'Uint32Array': Uint32Array,\n\t\t\t\t'Float32Array': Float32Array,\n\t\t\t\t'Float64Array': Float64Array\n\t\t\t};\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tvar typedArray = new TYPED_ARRAYS[ index.type ]( index.array );\n\t\t\t\tgeometry.setIndex( new THREE.BufferAttribute( typedArray, 1 ) );\n\n\t\t\t}\n\n\t\t\tvar attributes = json.data.attributes;\n\n\t\t\tfor ( var key in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ key ];\n\t\t\t\tvar typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\n\n\t\t\t\tgeometry.addAttribute( key, new THREE.BufferAttribute( typedArray, attribute.itemSize, attribute.normalized ) );\n\n\t\t\t}\n\n\t\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\t\tif ( groups !== undefined ) {\n\n\t\t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar boundingSphere = json.data.boundingSphere;\n\n\t\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\t\tvar center = new THREE.Vector3();\n\n\t\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.boundingSphere = new THREE.Sphere( center, boundingSphere.radius );\n\n\t\t\t}\n\n\t\t\treturn geometry;\n\n\t\t}\n\n\t} );\n\n\t// File:src/loaders/MaterialLoader.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.MaterialLoader = function ( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\t\tthis.textures = {};\n\n\t};\n\n\tObject.assign( THREE.MaterialLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new THREE.XHRLoader( scope.manager );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tsetTextures: function ( value ) {\n\n\t\t\tthis.textures = value;\n\n\t\t},\n\n\t\tgetTexture: function ( name ) {\n\n\t\t\tvar textures = this.textures;\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t},\n\n\t\tparse: function ( json ) {\n\n\t\t\tvar material = new THREE[ json.type ];\n\n\t\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\n\t\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\n\t\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\t\tif ( json.uniforms !== undefined ) material.uniforms = json.uniforms;\n\t\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\n\t\t\tif ( json.shading !== undefined ) material.shading = json.shading;\n\t\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\t\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\n\t\t\t// for PointsMaterial\n\t\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t\t// maps\n\n\t\t\tif ( json.map !== undefined ) material.map = this.getTexture( json.map );\n\n\t\t\tif ( json.alphaMap !== undefined ) {\n\n\t\t\t\tmaterial.alphaMap = this.getTexture( json.alphaMap );\n\t\t\t\tmaterial.transparent = true;\n\n\t\t\t}\n\n\t\t\tif ( json.bumpMap !== undefined ) material.bumpMap = this.getTexture( json.bumpMap );\n\t\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\t\tif ( json.normalMap !== undefined ) material.normalMap = this.getTexture( json.normalMap );\n\t\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\t\tvar normalScale = json.normalScale;\n\n\t\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t\t}\n\n\t\t\t\tmaterial.normalScale = new THREE.Vector2().fromArray( normalScale );\n\n\t\t\t}\n\n\t\t\tif ( json.displacementMap !== undefined ) material.displacementMap = this.getTexture( json.displacementMap );\n\t\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = this.getTexture( json.roughnessMap );\n\t\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = this.getTexture( json.metalnessMap );\n\n\t\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = this.getTexture( json.emissiveMap );\n\t\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\t\tif ( json.specularMap !== undefined ) material.specularMap = this.getTexture( json.specularMap );\n\n\t\t\tif ( json.envMap !== undefined ) {\n\n\t\t\t\tmaterial.envMap = this.getTexture( json.envMap );\n\t\t\t\tmaterial.combine = THREE.MultiplyOperation;\n\n\t\t\t}\n\n\t\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\n\t\t\tif ( json.lightMap !== undefined ) material.lightMap = this.getTexture( json.lightMap );\n\t\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\t\tif ( json.aoMap !== undefined ) material.aoMap = this.getTexture( json.aoMap );\n\t\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\t\t// MultiMaterial\n\n\t\t\tif ( json.materials !== undefined ) {\n\n\t\t\t\tfor ( var i = 0, l = json.materials.length; i < l; i ++ ) {\n\n\t\t\t\t\tmaterial.materials.push( this.parse( json.materials[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn material;\n\n\t\t}\n\n\t} );\n\n\t// File:src/loaders/ObjectLoader.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.ObjectLoader = function ( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\t\tthis.texturePath = '';\n\n\t};\n\n\tObject.assign( THREE.ObjectLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tif ( this.texturePath === '' ) {\n\n\t\t\t\tthis.texturePath = url.substring( 0, url.lastIndexOf( '/' ) + 1 );\n\n\t\t\t}\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new THREE.XHRLoader( scope.manager );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tscope.parse( JSON.parse( text ), onLoad );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tsetTexturePath: function ( value ) {\n\n\t\t\tthis.texturePath = value;\n\n\t\t},\n\n\t\tsetCrossOrigin: function ( value ) {\n\n\t\t\tthis.crossOrigin = value;\n\n\t\t},\n\n\t\tparse: function ( json, onLoad ) {\n\n\t\t\tvar geometries = this.parseGeometries( json.geometries );\n\n\t\t\tvar images = this.parseImages( json.images, function () {\n\n\t\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t\t} );\n\n\t\t\tvar textures  = this.parseTextures( json.textures, images );\n\t\t\tvar materials = this.parseMaterials( json.materials, textures );\n\n\t\t\tvar object = this.parseObject( json.object, geometries, materials );\n\n\t\t\tif ( json.animations ) {\n\n\t\t\t\tobject.animations = this.parseAnimations( json.animations );\n\n\t\t\t}\n\n\t\t\tif ( json.images === undefined || json.images.length === 0 ) {\n\n\t\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t\t}\n\n\t\t\treturn object;\n\n\t\t},\n\n\t\tparseGeometries: function ( json ) {\n\n\t\t\tvar geometries = {};\n\n\t\t\tif ( json !== undefined ) {\n\n\t\t\t\tvar geometryLoader = new THREE.JSONLoader();\n\t\t\t\tvar bufferGeometryLoader = new THREE.BufferGeometryLoader();\n\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar geometry;\n\t\t\t\t\tvar data = json[ i ];\n\n\t\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\t\tcase 'PlaneGeometry':\n\t\t\t\t\t\tcase 'PlaneBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new THREE[ data.type ](\n\t\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'BoxGeometry':\n\t\t\t\t\t\tcase 'BoxBufferGeometry':\n\t\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\n\n\t\t\t\t\t\t\tgeometry = new THREE[ data.type ](\n\t\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\tdata.depth,\n\t\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\tdata.depthSegments\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'CircleGeometry':\n\t\t\t\t\t\tcase 'CircleBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new THREE[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'CylinderGeometry':\n\t\t\t\t\t\tcase 'CylinderBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new THREE[ data.type ](\n\t\t\t\t\t\t\t\tdata.radiusTop,\n\t\t\t\t\t\t\t\tdata.radiusBottom,\n\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'ConeGeometry':\n\t\t\t\t\t\tcase 'ConeBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new THREE [ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'SphereGeometry':\n\t\t\t\t\t\tcase 'SphereBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new THREE[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\t\tdata.phiLength,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'DodecahedronGeometry':\n\t\t\t\t\t\tcase 'IcosahedronGeometry':\n\t\t\t\t\t\tcase 'OctahedronGeometry':\n\t\t\t\t\t\tcase 'TetrahedronGeometry':\n\n\t\t\t\t\t\t\tgeometry = new THREE[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.detail\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'RingGeometry':\n\t\t\t\t\t\tcase 'RingBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new THREE[ data.type ](\n\t\t\t\t\t\t\t\tdata.innerRadius,\n\t\t\t\t\t\t\t\tdata.outerRadius,\n\t\t\t\t\t\t\t\tdata.thetaSegments,\n\t\t\t\t\t\t\t\tdata.phiSegments,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'TorusGeometry':\n\t\t\t\t\t\tcase 'TorusBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new THREE[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\t\tdata.arc\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'TorusKnotGeometry':\n\t\t\t\t\t\tcase 'TorusKnotBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new THREE[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.p,\n\t\t\t\t\t\t\t\tdata.q\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'LatheGeometry':\n\t\t\t\t\t\tcase 'LatheBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new THREE[ data.type ](\n\t\t\t\t\t\t\t\tdata.points,\n\t\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\t\tdata.phiLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'BufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'Geometry':\n\n\t\t\t\t\t\t\tgeometry = geometryLoader.parse( data.data, this.texturePath ).geometry;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\n\n\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\n\t\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn geometries;\n\n\t\t},\n\n\t\tparseMaterials: function ( json, textures ) {\n\n\t\t\tvar materials = {};\n\n\t\t\tif ( json !== undefined ) {\n\n\t\t\t\tvar loader = new THREE.MaterialLoader();\n\t\t\t\tloader.setTextures( textures );\n\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar material = loader.parse( json[ i ] );\n\t\t\t\t\tmaterials[ material.uuid ] = material;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn materials;\n\n\t\t},\n\n\t\tparseAnimations: function ( json ) {\n\n\t\t\tvar animations = [];\n\n\t\t\tfor ( var i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tvar clip = THREE.AnimationClip.parse( json[ i ] );\n\n\t\t\t\tanimations.push( clip );\n\n\t\t\t}\n\n\t\t\treturn animations;\n\n\t\t},\n\n\t\tparseImages: function ( json, onLoad ) {\n\n\t\t\tvar scope = this;\n\t\t\tvar images = {};\n\n\t\t\tfunction loadImage( url ) {\n\n\t\t\t\tscope.manager.itemStart( url );\n\n\t\t\t\treturn loader.load( url, function () {\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\t\tvar manager = new THREE.LoadingManager( onLoad );\n\n\t\t\t\tvar loader = new THREE.ImageLoader( manager );\n\t\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar image = json[ i ];\n\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.texturePath + image.url;\n\n\t\t\t\t\timages[ image.uuid ] = loadImage( path );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn images;\n\n\t\t},\n\n\t\tparseTextures: function ( json, images ) {\n\n\t\t\tfunction parseConstant( value ) {\n\n\t\t\t\tif ( typeof( value ) === 'number' ) return value;\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\t\treturn THREE[ value ];\n\n\t\t\t}\n\n\t\t\tvar textures = {};\n\n\t\t\tif ( json !== undefined ) {\n\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar data = json[ i ];\n\n\t\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar texture = new THREE.Texture( images[ data.image ] );\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping );\n\n\t\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ] );\n\t\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter );\n\t\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter );\n\t\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn textures;\n\n\t\t},\n\n\t\tparseObject: function () {\n\n\t\t\tvar matrix = new THREE.Matrix4();\n\n\t\t\treturn function parseObject( data, geometries, materials ) {\n\n\t\t\t\tvar object;\n\n\t\t\t\tfunction getGeometry( name ) {\n\n\t\t\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn geometries[ name ];\n\n\t\t\t\t}\n\n\t\t\t\tfunction getMaterial( name ) {\n\n\t\t\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn materials[ name ];\n\n\t\t\t\t}\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'Scene':\n\n\t\t\t\t\t\tobject = new THREE.Scene();\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\t\t\tobject = new THREE.PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\t\t\tobject = new THREE.OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'AmbientLight':\n\n\t\t\t\t\t\tobject = new THREE.AmbientLight( data.color, data.intensity );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DirectionalLight':\n\n\t\t\t\t\t\tobject = new THREE.DirectionalLight( data.color, data.intensity );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PointLight':\n\n\t\t\t\t\t\tobject = new THREE.PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SpotLight':\n\n\t\t\t\t\t\tobject = new THREE.SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'HemisphereLight':\n\n\t\t\t\t\t\tobject = new THREE.HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Mesh':\n\n\t\t\t\t\t\tvar geometry = getGeometry( data.geometry );\n\t\t\t\t\t\tvar material = getMaterial( data.material );\n\n\t\t\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 ) {\n\n\t\t\t\t\t\t\tobject = new THREE.SkinnedMesh( geometry, material );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tobject = new THREE.Mesh( geometry, material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'LOD':\n\n\t\t\t\t\t\tobject = new THREE.LOD();\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Line':\n\n\t\t\t\t\t\tobject = new THREE.Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PointCloud':\n\t\t\t\t\tcase 'Points':\n\n\t\t\t\t\t\tobject = new THREE.Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Sprite':\n\n\t\t\t\t\t\tobject = new THREE.Sprite( getMaterial( data.material ) );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Group':\n\n\t\t\t\t\t\tobject = new THREE.Group();\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tobject = new THREE.Object3D();\n\n\t\t\t\t}\n\n\t\t\t\tobject.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) object.name = data.name;\n\t\t\t\tif ( data.matrix !== undefined ) {\n\n\t\t\t\t\tmatrix.fromArray( data.matrix );\n\t\t\t\t\tmatrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\t\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\t\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\t\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\n\t\t\t\tif ( data.children !== undefined ) {\n\n\t\t\t\t\tfor ( var child in data.children ) {\n\n\t\t\t\t\t\tobject.add( this.parseObject( data.children[ child ], geometries, materials ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.type === 'LOD' ) {\n\n\t\t\t\t\tvar levels = data.levels;\n\n\t\t\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\t\t\tvar level = levels[ l ];\n\t\t\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\t\t\tobject.addLevel( child, level.distance );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn object;\n\n\t\t\t};\n\n\t\t}()\n\n\t} );\n\n\t// File:src/loaders/TextureLoader.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.TextureLoader = function ( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n\t};\n\n\tObject.assign( THREE.TextureLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar texture = new THREE.Texture();\n\n\t\t\tvar loader = new THREE.ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.load( url, function ( image ) {\n\n\t\t\t\t// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\n\t\t\t\tvar isJPEG = url.search( /\\.(jpg|jpeg)$/ ) > 0 || url.search( /^data\\:image\\/jpeg/ ) === 0;\n\n\t\t\t\ttexture.format = isJPEG ? THREE.RGBFormat : THREE.RGBAFormat;\n\t\t\t\ttexture.image = image;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\t\tonLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\tsetCrossOrigin: function ( value ) {\n\n\t\t\tthis.crossOrigin = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t// File:src/loaders/CubeTextureLoader.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.CubeTextureLoader = function ( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n\t};\n\n\tObject.assign( THREE.CubeTextureLoader.prototype, {\n\n\t\tload: function ( urls, onLoad, onProgress, onError ) {\n\n\t\t\tvar texture = new THREE.CubeTexture();\n\n\t\t\tvar loader = new THREE.ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\t\tloader.setPath( this.path );\n\n\t\t\tvar loaded = 0;\n\n\t\t\tfunction loadTexture( i ) {\n\n\t\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\t\tloaded ++;\n\n\t\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t\t}\n\n\t\t\t\t}, undefined, onError );\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < urls.length; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\tsetCrossOrigin: function ( value ) {\n\n\t\t\tthis.crossOrigin = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t// File:src/loaders/BinaryTextureLoader.js\n\n\t/**\n\t * @author Nikos M. / https://github.com/foo123/\n\t *\n\t * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n\t */\n\n\tTHREE.DataTextureLoader = THREE.BinaryTextureLoader = function ( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n\t\t// override in sub classes\n\t\tthis._parser = null;\n\n\t};\n\n\tObject.assign( THREE.BinaryTextureLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar texture = new THREE.DataTexture();\n\n\t\t\tvar loader = new THREE.XHRLoader( this.manager );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tvar texData = scope._parser( buffer );\n\n\t\t\t\tif ( ! texData ) return;\n\n\t\t\t\tif ( undefined !== texData.image ) {\n\n\t\t\t\t\ttexture.image = texData.image;\n\n\t\t\t\t} else if ( undefined !== texData.data ) {\n\n\t\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.wrapS = undefined !== texData.wrapS ? texData.wrapS : THREE.ClampToEdgeWrapping;\n\t\t\t\ttexture.wrapT = undefined !== texData.wrapT ? texData.wrapT : THREE.ClampToEdgeWrapping;\n\n\t\t\t\ttexture.magFilter = undefined !== texData.magFilter ? texData.magFilter : THREE.LinearFilter;\n\t\t\t\ttexture.minFilter = undefined !== texData.minFilter ? texData.minFilter : THREE.LinearMipMapLinearFilter;\n\n\t\t\t\ttexture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\n\n\t\t\t\tif ( undefined !== texData.format ) {\n\n\t\t\t\t\ttexture.format = texData.format;\n\n\t\t\t\t}\n\t\t\t\tif ( undefined !== texData.type ) {\n\n\t\t\t\t\ttexture.type = texData.type;\n\n\t\t\t\t}\n\n\t\t\t\tif ( undefined !== texData.mipmaps ) {\n\n\t\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( 1 === texData.mipmapCount ) {\n\n\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t\t}, onProgress, onError );\n\n\n\t\t\treturn texture;\n\n\t\t}\n\n\t} );\n\n\t// File:src/loaders/CompressedTextureLoader.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t *\n\t * Abstract Base class to block based textures loader (dds, pvr, ...)\n\t */\n\n\tTHREE.CompressedTextureLoader = function ( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n\t\t// override in sub classes\n\t\tthis._parser = null;\n\n\t};\n\n\tObject.assign( THREE.CompressedTextureLoader.prototype, {\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar images = [];\n\n\t\t\tvar texture = new THREE.CompressedTexture();\n\t\t\ttexture.image = images;\n\n\t\t\tvar loader = new THREE.XHRLoader( this.manager );\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\t\tfunction loadTexture( i ) {\n\n\t\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\t\timages[ i ] = {\n\t\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t\t};\n\n\t\t\t\t\tloaded += 1;\n\n\t\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\n\t\t\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\n\n\t\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t\t}\n\n\t\t\t\t}, onProgress, onError );\n\n\t\t\t}\n\n\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\tvar loaded = 0;\n\n\t\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\t\tloadTexture( i );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\t\timages[ f ] = { mipmaps : [] };\n\n\t\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}, onProgress, onError );\n\n\t\t\t}\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t// File:src/materials/Material.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tTHREE.Material = function () {\n\n\t\tObject.defineProperty( this, 'id', { value: THREE.MaterialIdCount ++ } );\n\n\t\tthis.uuid = THREE.Math.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.fog = true;\n\t\tthis.lights = true;\n\n\t\tthis.blending = THREE.NormalBlending;\n\t\tthis.side = THREE.FrontSide;\n\t\tthis.shading = THREE.SmoothShading; // THREE.FlatShading, THREE.SmoothShading\n\t\tthis.vertexColors = THREE.NoColors; // THREE.NoColors, THREE.VertexColors, THREE.FaceColors\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\n\t\tthis.blendSrc = THREE.SrcAlphaFactor;\n\t\tthis.blendDst = THREE.OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = THREE.AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\n\t\tthis.depthFunc = THREE.LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipShadows = false;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.alphaTest = 0;\n\t\tthis.premultipliedAlpha = false;\n\n\t\tthis.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\n\n\t\tthis.visible = true;\n\n\t\tthis._needsUpdate = true;\n\n\t};\n\n\tTHREE.Material.prototype = {\n\n\t\tconstructor: THREE.Material,\n\n\t\tget needsUpdate() {\n\n\t\t\treturn this._needsUpdate;\n\n\t\t},\n\n\t\tset needsUpdate( value ) {\n\n\t\t\tif ( value === true ) this.update();\n\t\t\tthis._needsUpdate = value;\n\n\t\t},\n\n\t\tsetValues: function ( values ) {\n\n\t\t\tif ( values === undefined ) return;\n\n\t\t\tfor ( var key in values ) {\n\n\t\t\t\tvar newValue = values[ key ];\n\n\t\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tvar currentValue = this[ key ];\n\n\t\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tif ( currentValue instanceof THREE.Color ) {\n\n\t\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t\t} else if ( currentValue instanceof THREE.Vector3 && newValue instanceof THREE.Vector3 ) {\n\n\t\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t\t} else if ( key === 'overdraw' ) {\n\n\t\t\t\t\t// ensure overdraw is backwards-compatible with legacy boolean type\n\t\t\t\t\tthis[ key ] = Number( newValue );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar isRoot = meta === undefined;\n\n\t\t\tif ( isRoot ) {\n\n\t\t\t\tmeta = {\n\t\t\t\t\ttextures: {},\n\t\t\t\t\timages: {}\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tvar data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.4,\n\t\t\t\t\ttype: 'Material',\n\t\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// standard Material serialization\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.type = this.type;\n\n\t\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\t\tif ( this.color instanceof THREE.Color ) data.color = this.color.getHex();\n\n\t\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\t\tif ( this.emissive instanceof THREE.Color ) data.emissive = this.emissive.getHex();\n\t\t\tif ( this.specular instanceof THREE.Color ) data.specular = this.specular.getHex();\n\t\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\n\t\t\tif ( this.map instanceof THREE.Texture ) data.map = this.map.toJSON( meta ).uuid;\n\t\t\tif ( this.alphaMap instanceof THREE.Texture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\t\t\tif ( this.lightMap instanceof THREE.Texture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tif ( this.bumpMap instanceof THREE.Texture ) {\n\n\t\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t\t}\n\t\t\tif ( this.normalMap instanceof THREE.Texture ) {\n\n\t\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t\t}\n\t\t\tif ( this.displacementMap instanceof THREE.Texture ) {\n\n\t\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t\t}\n\t\t\tif ( this.roughnessMap instanceof THREE.Texture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\t\tif ( this.metalnessMap instanceof THREE.Texture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.emissiveMap instanceof THREE.Texture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\t\tif ( this.specularMap instanceof THREE.Texture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.envMap instanceof THREE.Texture ) {\n\n\t\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\t\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\n\n\t\t\t}\n\n\t\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\t\tif ( this.blending !== THREE.NormalBlending ) data.blending = this.blending;\n\t\t\tif ( this.shading !== THREE.SmoothShading ) data.shading = this.shading;\n\t\t\tif ( this.side !== THREE.FrontSide ) data.side = this.side;\n\t\t\tif ( this.vertexColors !== THREE.NoColors ) data.vertexColors = this.vertexColors;\n\n\t\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\t\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\t\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\n\t\t\t// TODO: Copied from Object3D.toJSON\n\n\t\t\tfunction extractFromCache ( cache ) {\n\n\t\t\t\tvar values = [];\n\n\t\t\t\tfor ( var key in cache ) {\n\n\t\t\t\t\tvar data = cache[ key ];\n\t\t\t\t\tdelete data.metadata;\n\t\t\t\t\tvalues.push( data );\n\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\n\t\t\t}\n\n\t\t\tif ( isRoot ) {\n\n\t\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\t\tvar images = extractFromCache( meta.images );\n\n\t\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.name = source.name;\n\n\t\t\tthis.fog = source.fog;\n\t\t\tthis.lights = source.lights;\n\n\t\t\tthis.blending = source.blending;\n\t\t\tthis.side = source.side;\n\t\t\tthis.shading = source.shading;\n\t\t\tthis.vertexColors = source.vertexColors;\n\n\t\t\tthis.opacity = source.opacity;\n\t\t\tthis.transparent = source.transparent;\n\n\t\t\tthis.blendSrc = source.blendSrc;\n\t\t\tthis.blendDst = source.blendDst;\n\t\t\tthis.blendEquation = source.blendEquation;\n\t\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\t\tthis.depthFunc = source.depthFunc;\n\t\t\tthis.depthTest = source.depthTest;\n\t\t\tthis.depthWrite = source.depthWrite;\n\n\t\t\tthis.colorWrite = source.colorWrite;\n\n\t\t\tthis.precision = source.precision;\n\n\t\t\tthis.polygonOffset = source.polygonOffset;\n\t\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\t\tthis.alphaTest = source.alphaTest;\n\n\t\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n\t\t\tthis.overdraw = source.overdraw;\n\n\t\t\tthis.visible = source.visible;\n\t\t\tthis.clipShadows = source.clipShadows;\n\n\t\t\tvar srcPlanes = source.clippingPlanes,\n\t\t\t\tdstPlanes = null;\n\n\t\t\tif ( srcPlanes !== null ) {\n\n\t\t\t\tvar n = srcPlanes.length;\n\t\t\t\tdstPlanes = new Array( n );\n\n\t\t\t\tfor ( var i = 0; i !== n; ++ i )\n\t\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t\tthis.clippingPlanes = dstPlanes;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tupdate: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'update' } );\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t};\n\n\tObject.assign( THREE.Material.prototype, THREE.EventDispatcher.prototype );\n\n\tTHREE.MaterialIdCount = 0;\n\n\t// File:src/materials/LineBasicMaterial.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *\n\t *  linewidth: <float>,\n\t *  linecap: \"round\",\n\t *  linejoin: \"round\"\n\t * }\n\t */\n\n\tTHREE.LineBasicMaterial = function ( parameters ) {\n\n\t\tTHREE.Material.call( this );\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new THREE.Color( 0xffffff );\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t};\n\n\tTHREE.LineBasicMaterial.prototype = Object.create( THREE.Material.prototype );\n\tTHREE.LineBasicMaterial.prototype.constructor = THREE.LineBasicMaterial;\n\n\tTHREE.LineBasicMaterial.prototype.copy = function ( source ) {\n\n\t\tTHREE.Material.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\treturn this;\n\n\t};\n\n\t// File:src/materials/LineDashedMaterial.js\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *\n\t *  linewidth: <float>,\n\t *\n\t *  scale: <float>,\n\t *  dashSize: <float>,\n\t *  gapSize: <float>\n\t * }\n\t */\n\n\tTHREE.LineDashedMaterial = function ( parameters ) {\n\n\t\tTHREE.Material.call( this );\n\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.color = new THREE.Color( 0xffffff );\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t};\n\n\tTHREE.LineDashedMaterial.prototype = Object.create( THREE.Material.prototype );\n\tTHREE.LineDashedMaterial.prototype.constructor = THREE.LineDashedMaterial;\n\n\tTHREE.LineDashedMaterial.prototype.copy = function ( source ) {\n\n\t\tTHREE.Material.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.linewidth = source.linewidth;\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t};\n\n\t// File:src/materials/MeshBasicMaterial.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  specularMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n\t *  combine: THREE.Multiply,\n\t *  reflectivity: <float>,\n\t *  refractionRatio: <float>,\n\t *\n\t *  shading: THREE.SmoothShading,\n\t *  depthTest: <bool>,\n\t *  depthWrite: <bool>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>\n\t * }\n\t */\n\n\tTHREE.MeshBasicMaterial = function ( parameters ) {\n\n\t\tTHREE.Material.call( this );\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new THREE.Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = THREE.MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t};\n\n\tTHREE.MeshBasicMaterial.prototype = Object.create( THREE.Material.prototype );\n\tTHREE.MeshBasicMaterial.prototype.constructor = THREE.MeshBasicMaterial;\n\n\tTHREE.MeshBasicMaterial.prototype.copy = function ( source ) {\n\n\t\tTHREE.Material.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\treturn this;\n\n\t};\n\n\t// File:src/materials/MeshDepthMaterial.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author bhouston / https://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>\n\t * }\n\t */\n\n\tTHREE.MeshDepthMaterial = function ( parameters ) {\n\n\t\tTHREE.Material.call( this );\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = THREE.BasicDepthPacking;\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false;\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t};\n\n\tTHREE.MeshDepthMaterial.prototype = Object.create( THREE.Material.prototype );\n\tTHREE.MeshDepthMaterial.prototype.constructor = THREE.MeshDepthMaterial;\n\n\tTHREE.MeshDepthMaterial.prototype.copy = function ( source ) {\n\n\t\tTHREE.Material.prototype.copy.call( this, source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t};\n\n\t// File:src/materials/MeshLambertMaterial.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  emissive: <hex>,\n\t *  emissiveIntensity: <float>\n\t *  emissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *  specularMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n\t *  combine: THREE.Multiply,\n\t *  reflectivity: <float>,\n\t *  refractionRatio: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tTHREE.MeshLambertMaterial = function ( parameters ) {\n\n\t\tTHREE.Material.call( this );\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new THREE.Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new THREE.Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = THREE.MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t};\n\n\tTHREE.MeshLambertMaterial.prototype = Object.create( THREE.Material.prototype );\n\tTHREE.MeshLambertMaterial.prototype.constructor = THREE.MeshLambertMaterial;\n\n\tTHREE.MeshLambertMaterial.prototype.copy = function ( source ) {\n\n\t\tTHREE.Material.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t};\n\n\t// File:src/materials/MeshNormalMaterial.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t *\n\t * parameters = {\n\t *  opacity: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>\n\t * }\n\t */\n\n\tTHREE.MeshNormalMaterial = function ( parameters ) {\n\n\t\tTHREE.Material.call( this, parameters );\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false;\n\t\tthis.lights = false;\n\t\tthis.morphTargets = false;\n\n\t\tthis.setValues( parameters );\n\n\t};\n\n\tTHREE.MeshNormalMaterial.prototype = Object.create( THREE.Material.prototype );\n\tTHREE.MeshNormalMaterial.prototype.constructor = THREE.MeshNormalMaterial;\n\n\tTHREE.MeshNormalMaterial.prototype.copy = function ( source ) {\n\n\t\tTHREE.Material.prototype.copy.call( this, source );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t};\n\n\t// File:src/materials/MeshPhongMaterial.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  specular: <hex>,\n\t *  shininess: <float>,\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  emissive: <hex>,\n\t *  emissiveIntensity: <float>\n\t *  emissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *  bumpMap: new THREE.Texture( <Image> ),\n\t *  bumpScale: <float>,\n\t *\n\t *  normalMap: new THREE.Texture( <Image> ),\n\t *  normalScale: <Vector2>,\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  specularMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n\t *  combine: THREE.Multiply,\n\t *  reflectivity: <float>,\n\t *  refractionRatio: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tTHREE.MeshPhongMaterial = function ( parameters ) {\n\n\t\tTHREE.Material.call( this );\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new THREE.Color( 0xffffff ); // diffuse\n\t\tthis.specular = new THREE.Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new THREE.Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalScale = new THREE.Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = THREE.MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t};\n\n\tTHREE.MeshPhongMaterial.prototype = Object.create( THREE.Material.prototype );\n\tTHREE.MeshPhongMaterial.prototype.constructor = THREE.MeshPhongMaterial;\n\n\tTHREE.MeshPhongMaterial.prototype.copy = function ( source ) {\n\n\t\tTHREE.Material.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t};\n\n\t// File:src/materials/MeshStandardMaterial.js\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  roughness: <float>,\n\t *  metalness: <float>,\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  emissive: <hex>,\n\t *  emissiveIntensity: <float>\n\t *  emissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *  bumpMap: new THREE.Texture( <Image> ),\n\t *  bumpScale: <float>,\n\t *\n\t *  normalMap: new THREE.Texture( <Image> ),\n\t *  normalScale: <Vector2>,\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  roughnessMap: new THREE.Texture( <Image> ),\n\t *\n\t *  metalnessMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *  envMapIntensity: <float>\n\t *\n\t *  refractionRatio: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tTHREE.MeshStandardMaterial = function ( parameters ) {\n\n\t\tTHREE.Material.call( this );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.color = new THREE.Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 0.5;\n\t\tthis.metalness = 0.5;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new THREE.Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalScale = new THREE.Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t};\n\n\tTHREE.MeshStandardMaterial.prototype = Object.create( THREE.Material.prototype );\n\tTHREE.MeshStandardMaterial.prototype.constructor = THREE.MeshStandardMaterial;\n\n\tTHREE.MeshStandardMaterial.prototype.copy = function ( source ) {\n\n\t\tTHREE.Material.prototype.copy.call( this, source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t};\n\n\t// File:src/materials/MeshPhysicalMaterial.js\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *  reflectivity: <float>\n\t * }\n\t */\n\n\tTHREE.MeshPhysicalMaterial = function ( parameters ) {\n\n\t\tTHREE.MeshStandardMaterial.call( this );\n\n\t\tthis.defines = { 'PHYSICAL': '' };\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.reflectivity = 0.5; // maps to F0 = 0.04\n\n\t\tthis.clearCoat = 0.0;\n\t\tthis.clearCoatRoughness = 0.0;\n\n\t\tthis.setValues( parameters );\n\n\t};\n\n\tTHREE.MeshPhysicalMaterial.prototype = Object.create( THREE.MeshStandardMaterial.prototype );\n\tTHREE.MeshPhysicalMaterial.prototype.constructor = THREE.MeshPhysicalMaterial;\n\n\tTHREE.MeshPhysicalMaterial.prototype.copy = function ( source ) {\n\n\t\tTHREE.MeshStandardMaterial.prototype.copy.call( this, source );\n\n\t\tthis.defines = { 'PHYSICAL': '' };\n\n\t\tthis.reflectivity = source.reflectivity;\n\n\t\tthis.clearCoat = source.clearCoat;\n\t\tthis.clearCoatRoughness = source.clearCoatRoughness;\n\n\t\treturn this;\n\n\t};\n\n\t// File:src/materials/MultiMaterial.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.MultiMaterial = function ( materials ) {\n\n\t\tthis.uuid = THREE.Math.generateUUID();\n\n\t\tthis.type = 'MultiMaterial';\n\n\t\tthis.materials = materials instanceof Array ? materials : [];\n\n\t\tthis.visible = true;\n\n\t};\n\n\tTHREE.MultiMaterial.prototype = {\n\n\t\tconstructor: THREE.MultiMaterial,\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar output = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.2,\n\t\t\t\t\ttype: 'material',\n\t\t\t\t\tgenerator: 'MaterialExporter'\n\t\t\t\t},\n\t\t\t\tuuid: this.uuid,\n\t\t\t\ttype: this.type,\n\t\t\t\tmaterials: []\n\t\t\t};\n\n\t\t\tvar materials = this.materials;\n\n\t\t\tfor ( var i = 0, l = materials.length; i < l; i ++ ) {\n\n\t\t\t\tvar material = materials[ i ].toJSON( meta );\n\t\t\t\tdelete material.metadata;\n\n\t\t\t\toutput.materials.push( material );\n\n\t\t\t}\n\n\t\t\toutput.visible = this.visible;\n\n\t\t\treturn output;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\tvar material = new this.constructor();\n\n\t\t\tfor ( var i = 0; i < this.materials.length; i ++ ) {\n\n\t\t\t\tmaterial.materials.push( this.materials[ i ].clone() );\n\n\t\t\t}\n\n\t\t\tmaterial.visible = this.visible;\n\n\t\t\treturn material;\n\n\t\t}\n\n\t};\n\n\t// File:src/materials/PointsMaterial.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  size: <float>,\n\t *  sizeAttenuation: <bool>\n\t * }\n\t */\n\n\tTHREE.PointsMaterial = function ( parameters ) {\n\n\t\tTHREE.Material.call( this );\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new THREE.Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t};\n\n\tTHREE.PointsMaterial.prototype = Object.create( THREE.Material.prototype );\n\tTHREE.PointsMaterial.prototype.constructor = THREE.PointsMaterial;\n\n\tTHREE.PointsMaterial.prototype.copy = function ( source ) {\n\n\t\tTHREE.Material.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\treturn this;\n\n\t};\n\n\t// File:src/materials/ShaderMaterial.js\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  defines: { \"label\" : \"value\" },\n\t *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n\t *\n\t *  fragmentShader: <string>,\n\t *  vertexShader: <string>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  lights: <bool>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tTHREE.ShaderMaterial = function ( parameters ) {\n\n\t\tTHREE.Material.call( this );\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\n\t\tthis.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\n\t\tthis.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.skinning = false; // set to use skinning attribute streams\n\t\tthis.morphTargets = false; // set to use morph targets\n\t\tthis.morphNormals = false; // set to use morph normals\n\n\t\tthis.extensions = {\n\t\t\tderivatives: false, // set to use derivatives\n\t\t\tfragDepth: false, // set to use fragment depth values\n\t\t\tdrawBuffers: false, // set to use draw buffers\n\t\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv2': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tif ( parameters.attributes !== undefined ) {\n\n\t\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t};\n\n\tTHREE.ShaderMaterial.prototype = Object.create( THREE.Material.prototype );\n\tTHREE.ShaderMaterial.prototype.constructor = THREE.ShaderMaterial;\n\n\tTHREE.ShaderMaterial.prototype.copy = function ( source ) {\n\n\t\tTHREE.Material.prototype.copy.call( this, source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = THREE.UniformsUtils.clone( source.uniforms );\n\n\t\tthis.defines = source.defines;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.skinning = source.skinning;\n\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\tthis.extensions = source.extensions;\n\n\t\treturn this;\n\n\t};\n\n\tTHREE.ShaderMaterial.prototype.toJSON = function ( meta ) {\n\n\t\tvar data = THREE.Material.prototype.toJSON.call( this, meta );\n\n\t\tdata.uniforms = this.uniforms;\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\treturn data;\n\n\t};\n\n\t// File:src/materials/RawShaderMaterial.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.RawShaderMaterial = function ( parameters ) {\n\n\t\tTHREE.ShaderMaterial.call( this, parameters );\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t};\n\n\tTHREE.RawShaderMaterial.prototype = Object.create( THREE.ShaderMaterial.prototype );\n\tTHREE.RawShaderMaterial.prototype.constructor = THREE.RawShaderMaterial;\n\n\t// File:src/materials/SpriteMaterial.js\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *\tuvOffset: new THREE.Vector2(),\n\t *\tuvScale: new THREE.Vector2()\n\t * }\n\t */\n\n\tTHREE.SpriteMaterial = function ( parameters ) {\n\n\t\tTHREE.Material.call( this );\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new THREE.Color( 0xffffff );\n\t\tthis.map = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.fog = false;\n\t\tthis.lights = false;\n\n\t\tthis.setValues( parameters );\n\n\t};\n\n\tTHREE.SpriteMaterial.prototype = Object.create( THREE.Material.prototype );\n\tTHREE.SpriteMaterial.prototype.constructor = THREE.SpriteMaterial;\n\n\tTHREE.SpriteMaterial.prototype.copy = function ( source ) {\n\n\t\tTHREE.Material.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.map = source.map;\n\n\t\tthis.rotation = source.rotation;\n\n\t\treturn this;\n\n\t};\n\n\t// File:src/materials/ShadowMaterial.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.ShadowMaterial = function () {\n\n\t\tTHREE.ShaderMaterial.call( this, {\n\t\t\tuniforms: THREE.UniformsUtils.merge( [\n\t\t\t\tTHREE.UniformsLib[ \"lights\" ],\n\t\t\t\t{\n\t\t\t\t\topacity: { value: 1.0 }\n\t\t\t\t}\n\t\t\t] ),\n\t\t\tvertexShader: THREE.ShaderChunk[ 'shadow_vert' ],\n\t\t\tfragmentShader: THREE.ShaderChunk[ 'shadow_frag' ]\n\t\t} );\n\n\t\tthis.lights = true;\n\t\tthis.transparent = true;\n\n\t\tObject.defineProperties( this, {\n\t\t\topacity: {\n\t\t\t\tenumerable: true,\n\t\t\t\tget: function () {\n\t\t\t\t\treturn this.uniforms.opacity.value;\n\t\t\t\t},\n\t\t\t\tset: function ( value ) {\n\t\t\t\t\tthis.uniforms.opacity.value = value;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t};\n\n\tTHREE.ShadowMaterial.prototype = Object.create( THREE.ShaderMaterial.prototype );\n\tTHREE.ShadowMaterial.prototype.constructor = THREE.ShadowMaterial;\n\n\t// File:src/textures/Texture.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author szimek / https://github.com/szimek/\n\t */\n\n\tTHREE.Texture = function ( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\t\tObject.defineProperty( this, 'id', { value: THREE.TextureIdCount ++ } );\n\n\t\tthis.uuid = THREE.Math.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.sourceFile = '';\n\n\t\tthis.image = image !== undefined ? image : THREE.Texture.DEFAULT_IMAGE;\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping !== undefined ? mapping : THREE.Texture.DEFAULT_MAPPING;\n\n\t\tthis.wrapS = wrapS !== undefined ? wrapS : THREE.ClampToEdgeWrapping;\n\t\tthis.wrapT = wrapT !== undefined ? wrapT : THREE.ClampToEdgeWrapping;\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : THREE.LinearFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : THREE.LinearMipMapLinearFilter;\n\n\t\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\n\n\t\tthis.format = format !== undefined ? format : THREE.RGBAFormat;\n\t\tthis.type = type !== undefined ? type : THREE.UnsignedByteType;\n\n\t\tthis.offset = new THREE.Vector2( 0, 0 );\n\t\tthis.repeat = new THREE.Vector2( 1, 1 );\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\n\t\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t\t//\n\t\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t\t// update.  You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\t\tthis.encoding = encoding !== undefined ? encoding :  THREE.LinearEncoding;\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t};\n\n\tTHREE.Texture.DEFAULT_IMAGE = undefined;\n\tTHREE.Texture.DEFAULT_MAPPING = THREE.UVMapping;\n\n\tTHREE.Texture.prototype = {\n\n\t\tconstructor: THREE.Texture,\n\n\t\tset needsUpdate( value ) {\n\n\t\t\tif ( value === true ) this.version ++;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.image = source.image;\n\t\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\t\tthis.mapping = source.mapping;\n\n\t\t\tthis.wrapS = source.wrapS;\n\t\t\tthis.wrapT = source.wrapT;\n\n\t\t\tthis.magFilter = source.magFilter;\n\t\t\tthis.minFilter = source.minFilter;\n\n\t\t\tthis.anisotropy = source.anisotropy;\n\n\t\t\tthis.format = source.format;\n\t\t\tthis.type = source.type;\n\n\t\t\tthis.offset.copy( source.offset );\n\t\t\tthis.repeat.copy( source.repeat );\n\n\t\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\t\tthis.flipY = source.flipY;\n\t\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\t\tthis.encoding = source.encoding;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tif ( meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t\t}\n\n\t\t\tfunction getDataURL( image ) {\n\n\t\t\t\tvar canvas;\n\n\t\t\t\tif ( image.toDataURL !== undefined ) {\n\n\t\t\t\t\tcanvas = image;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcanvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\t\t\tcanvas.width = image.width;\n\t\t\t\t\tcanvas.height = image.height;\n\n\t\t\t\t\tcanvas.getContext( '2d' ).drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar output = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.4,\n\t\t\t\t\ttype: 'Texture',\n\t\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t\t},\n\n\t\t\t\tuuid: this.uuid,\n\t\t\t\tname: this.name,\n\n\t\t\t\tmapping: this.mapping,\n\n\t\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\t\tminFilter: this.minFilter,\n\t\t\t\tmagFilter: this.magFilter,\n\t\t\t\tanisotropy: this.anisotropy,\n\n\t\t\t\tflipY: this.flipY\n\t\t\t};\n\n\t\t\tif ( this.image !== undefined ) {\n\n\t\t\t\t// TODO: Move to THREE.Image\n\n\t\t\t\tvar image = this.image;\n\n\t\t\t\tif ( image.uuid === undefined ) {\n\n\t\t\t\t\timage.uuid = THREE.Math.generateUUID(); // UGH\n\n\t\t\t\t}\n\n\t\t\t\tif ( meta.images[ image.uuid ] === undefined ) {\n\n\t\t\t\t\tmeta.images[ image.uuid ] = {\n\t\t\t\t\t\tuuid: image.uuid,\n\t\t\t\t\t\turl: getDataURL( image )\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t\toutput.image = image.uuid;\n\n\t\t\t}\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t\treturn output;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t},\n\n\t\ttransformUv: function ( uv ) {\n\n\t\t\tif ( this.mapping !== THREE.UVMapping )  return;\n\n\t\t\tuv.multiply( this.repeat );\n\t\t\tuv.add( this.offset );\n\n\t\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\t\tcase THREE.RepeatWrapping:\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase THREE.ClampToEdgeWrapping:\n\n\t\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase THREE.MirroredRepeatWrapping:\n\n\t\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\t\tcase THREE.RepeatWrapping:\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase THREE.ClampToEdgeWrapping:\n\n\t\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase THREE.MirroredRepeatWrapping:\n\n\t\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.flipY ) {\n\n\t\t\t\tuv.y = 1 - uv.y;\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tObject.assign( THREE.Texture.prototype, THREE.EventDispatcher.prototype );\n\n\tTHREE.TextureIdCount = 0;\n\n\t// File:src/textures/DepthTexture.js\n\n\t/**\n\t * @author Matt DesLauriers / @mattdesl\n\t */\n\n\tTHREE.DepthTexture = function ( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {\n\n\t  THREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, THREE.DepthFormat, type, anisotropy );\n\n\t  this.image = { width: width, height: height };\n\n\t  this.type = type !== undefined ? type : THREE.UnsignedShortType;\n\n\t  this.magFilter = magFilter !== undefined ? magFilter : THREE.NearestFilter;\n\t  this.minFilter = minFilter !== undefined ? minFilter : THREE.NearestFilter;\n\n\t  this.flipY = false;\n\t  this.generateMipmaps  = false;\n\n\t};\n\n\tTHREE.DepthTexture.prototype = Object.create( THREE.Texture.prototype );\n\tTHREE.DepthTexture.prototype.constructor = THREE.DepthTexture;\n\n\t// File:src/textures/CanvasTexture.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.CanvasTexture = function ( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tTHREE.Texture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.needsUpdate = true;\n\n\t};\n\n\tTHREE.CanvasTexture.prototype = Object.create( THREE.Texture.prototype );\n\tTHREE.CanvasTexture.prototype.constructor = THREE.CanvasTexture;\n\n\t// File:src/textures/CubeTexture.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.CubeTexture = function ( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : THREE.CubeReflectionMapping;\n\n\t\tTHREE.Texture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.flipY = false;\n\n\t};\n\n\tTHREE.CubeTexture.prototype = Object.create( THREE.Texture.prototype );\n\tTHREE.CubeTexture.prototype.constructor = THREE.CubeTexture;\n\n\tObject.defineProperty( THREE.CubeTexture.prototype, 'images', {\n\n\t\tget: function () {\n\n\t\t\treturn this.image;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.image = value;\n\n\t\t}\n\n\t} );\n\n\t// File:src/textures/CompressedTexture.js\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tTHREE.CompressedTexture = function ( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\t\tTHREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t};\n\n\tTHREE.CompressedTexture.prototype = Object.create( THREE.Texture.prototype );\n\tTHREE.CompressedTexture.prototype.constructor = THREE.CompressedTexture;\n\n\t// File:src/textures/DataTexture.js\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tTHREE.DataTexture = function ( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\t\tTHREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.image = { data: data, width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : THREE.NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : THREE.NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps  = false;\n\n\t};\n\n\tTHREE.DataTexture.prototype = Object.create( THREE.Texture.prototype );\n\tTHREE.DataTexture.prototype.constructor = THREE.DataTexture;\n\n\t// File:src/textures/VideoTexture.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.VideoTexture = function ( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tTHREE.Texture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.generateMipmaps = false;\n\n\t\tvar scope = this;\n\n\t\tfunction update() {\n\n\t\t\trequestAnimationFrame( update );\n\n\t\t\tif ( video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\t\tscope.needsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tupdate();\n\n\t};\n\n\tTHREE.VideoTexture.prototype = Object.create( THREE.Texture.prototype );\n\tTHREE.VideoTexture.prototype.constructor = THREE.VideoTexture;\n\n\t// File:src/objects/Group.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.Group = function () {\n\n\t\tTHREE.Object3D.call( this );\n\n\t\tthis.type = 'Group';\n\n\t};\n\n\tTHREE.Group.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\n\n\t\tconstructor: THREE.Group\n\n\t} );\n\n\t// File:src/objects/Points.js\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tTHREE.Points = function ( geometry, material ) {\n\n\t\tTHREE.Object3D.call( this );\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry !== undefined ? geometry : new THREE.BufferGeometry();\n\t\tthis.material = material !== undefined ? material : new THREE.PointsMaterial( { color: Math.random() * 0xffffff } );\n\n\t};\n\n\tTHREE.Points.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\n\n\t\tconstructor: THREE.Points,\n\n\t\traycast: ( function () {\n\n\t\t\tvar inverseMatrix = new THREE.Matrix4();\n\t\t\tvar ray = new THREE.Ray();\n\t\t\tvar sphere = new THREE.Sphere();\n\n\t\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\t\tvar object = this;\n\t\t\t\tvar geometry = this.geometry;\n\t\t\t\tvar matrixWorld = this.matrixWorld;\n\t\t\t\tvar threshold = raycaster.params.Points.threshold;\n\n\t\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\t\tsphere.applyMatrix4( matrixWorld );\n\n\t\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t\t//\n\n\t\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\t\t\tvar localThresholdSq = localThreshold * localThreshold;\n\t\t\t\tvar position = new THREE.Vector3();\n\n\t\t\t\tfunction testPoint( point, index ) {\n\n\t\t\t\t\tvar rayPointDistanceSq = ray.distanceSqToPoint( point );\n\n\t\t\t\t\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\t\t\t\t\tvar intersectPoint = ray.closestPointToPoint( point );\n\t\t\t\t\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\t\t\t\t\tpoint: intersectPoint.clone(),\n\t\t\t\t\t\t\tindex: index,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tobject: object\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\n\n\t\t\t\t\tvar index = geometry.index;\n\t\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tvar a = indices[ i ];\n\n\t\t\t\t\t\t\tposition.fromArray( positions, a * 3 );\n\n\t\t\t\t\t\t\ttestPoint( position, a );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tposition.fromArray( positions, i * 3 );\n\n\t\t\t\t\t\t\ttestPoint( position, i );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\t\ttestPoint( vertices[ i ], i );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}() ),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t\t}\n\n\t} );\n\n\t// File:src/objects/Line.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.Line = function ( geometry, material, mode ) {\n\n\t\tif ( mode === 1 ) {\n\n\t\t\tconsole.warn( 'THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.' );\n\t\t\treturn new THREE.LineSegments( geometry, material );\n\n\t\t}\n\n\t\tTHREE.Object3D.call( this );\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry !== undefined ? geometry : new THREE.BufferGeometry();\n\t\tthis.material = material !== undefined ? material : new THREE.LineBasicMaterial( { color: Math.random() * 0xffffff } );\n\n\t};\n\n\tTHREE.Line.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\n\n\t\tconstructor: THREE.Line,\n\n\t\traycast: ( function () {\n\n\t\t\tvar inverseMatrix = new THREE.Matrix4();\n\t\t\tvar ray = new THREE.Ray();\n\t\t\tvar sphere = new THREE.Sphere();\n\n\t\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\t\tvar precision = raycaster.linePrecision;\n\t\t\t\tvar precisionSq = precision * precision;\n\n\t\t\t\tvar geometry = this.geometry;\n\t\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\t\tsphere.applyMatrix4( matrixWorld );\n\n\t\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t\t//\n\n\t\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\t\tvar vStart = new THREE.Vector3();\n\t\t\t\tvar vEnd = new THREE.Vector3();\n\t\t\t\tvar interSegment = new THREE.Vector3();\n\t\t\t\tvar interRay = new THREE.Vector3();\n\t\t\t\tvar step = this instanceof THREE.LineSegments ? 2 : 1;\n\n\t\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\n\n\t\t\t\t\tvar index = geometry.index;\n\t\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\n\n\t\t\t\t\t\t\tvar a = indices[ i ];\n\t\t\t\t\t\t\tvar b = indices[ i + 1 ];\n\n\t\t\t\t\t\t\tvStart.fromArray( positions, a * 3 );\n\t\t\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\n\n\t\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\n\n\t\t\t\t\t\t\tvStart.fromArray( positions, 3 * i );\n\t\t\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\n\n\t\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\n\n\t\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\t\tvar nbVertices = vertices.length;\n\n\t\t\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\n\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}() ),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t\t}\n\n\t} );\n\n\t// File:src/objects/LineSegments.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.LineSegments = function ( geometry, material ) {\n\n\t\tTHREE.Line.call( this, geometry, material );\n\n\t\tthis.type = 'LineSegments';\n\n\t};\n\n\tTHREE.LineSegments.prototype = Object.assign( Object.create( THREE.Line.prototype ), {\n\n\t\tconstructor: THREE.LineSegments\n\n\t} );\n\n\t// File:src/objects/Mesh.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author jonobr1 / http://jonobr1.com/\n\t */\n\n\tTHREE.Mesh = function ( geometry, material ) {\n\n\t\tTHREE.Object3D.call( this );\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry !== undefined ? geometry : new THREE.BufferGeometry();\n\t\tthis.material = material !== undefined ? material : new THREE.MeshBasicMaterial( { color: Math.random() * 0xffffff } );\n\n\t\tthis.drawMode = THREE.TrianglesDrawMode;\n\n\t\tthis.updateMorphTargets();\n\n\t};\n\n\tTHREE.Mesh.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\n\n\t\tconstructor: THREE.Mesh,\n\n\t\tsetDrawMode: function ( value ) {\n\n\t\t\tthis.drawMode = value;\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tTHREE.Object3D.prototype.copy.call( this, source );\n\n\t\t\tthis.drawMode = source.drawMode;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tupdateMorphTargets: function () {\n\n\t\t\tif ( this.geometry.morphTargets !== undefined && this.geometry.morphTargets.length > 0 ) {\n\n\t\t\t\tthis.morphTargetBase = - 1;\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( var m = 0, ml = this.geometry.morphTargets.length; m < ml; m ++ ) {\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ this.geometry.morphTargets[ m ].name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tgetMorphTargetIndexByName: function ( name ) {\n\n\t\t\tif ( this.morphTargetDictionary[ name ] !== undefined ) {\n\n\t\t\t\treturn this.morphTargetDictionary[ name ];\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.Mesh.getMorphTargetIndexByName: morph target ' + name + ' does not exist. Returning 0.' );\n\n\t\t\treturn 0;\n\n\t\t},\n\n\t\traycast: ( function () {\n\n\t\t\tvar inverseMatrix = new THREE.Matrix4();\n\t\t\tvar ray = new THREE.Ray();\n\t\t\tvar sphere = new THREE.Sphere();\n\n\t\t\tvar vA = new THREE.Vector3();\n\t\t\tvar vB = new THREE.Vector3();\n\t\t\tvar vC = new THREE.Vector3();\n\n\t\t\tvar tempA = new THREE.Vector3();\n\t\t\tvar tempB = new THREE.Vector3();\n\t\t\tvar tempC = new THREE.Vector3();\n\n\t\t\tvar uvA = new THREE.Vector2();\n\t\t\tvar uvB = new THREE.Vector2();\n\t\t\tvar uvC = new THREE.Vector2();\n\n\t\t\tvar barycoord = new THREE.Vector3();\n\n\t\t\tvar intersectionPoint = new THREE.Vector3();\n\t\t\tvar intersectionPointWorld = new THREE.Vector3();\n\n\t\t\tfunction uvIntersection( point, p1, p2, p3, uv1, uv2, uv3 ) {\n\n\t\t\t\tTHREE.Triangle.barycoordFromPoint( point, p1, p2, p3, barycoord );\n\n\t\t\t\tuv1.multiplyScalar( barycoord.x );\n\t\t\t\tuv2.multiplyScalar( barycoord.y );\n\t\t\t\tuv3.multiplyScalar( barycoord.z );\n\n\t\t\t\tuv1.add( uv2 ).add( uv3 );\n\n\t\t\t\treturn uv1.clone();\n\n\t\t\t}\n\n\t\t\tfunction checkIntersection( object, raycaster, ray, pA, pB, pC, point ) {\n\n\t\t\t\tvar intersect;\n\t\t\t\tvar material = object.material;\n\n\t\t\t\tif ( material.side === THREE.BackSide ) {\n\n\t\t\t\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== THREE.DoubleSide, point );\n\n\t\t\t\t}\n\n\t\t\t\tif ( intersect === null ) return null;\n\n\t\t\t\tintersectionPointWorld.copy( point );\n\t\t\t\tintersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\t\t\t\treturn {\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\tpoint: intersectionPointWorld.clone(),\n\t\t\t\t\tobject: object\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tfunction checkBufferGeometryIntersection( object, raycaster, ray, positions, uvs, a, b, c ) {\n\n\t\t\t\tvA.fromArray( positions, a * 3 );\n\t\t\t\tvB.fromArray( positions, b * 3 );\n\t\t\t\tvC.fromArray( positions, c * 3 );\n\n\t\t\t\tvar intersection = checkIntersection( object, raycaster, ray, vA, vB, vC, intersectionPoint );\n\n\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\tif ( uvs ) {\n\n\t\t\t\t\t\tuvA.fromArray( uvs, a * 2 );\n\t\t\t\t\t\tuvB.fromArray( uvs, b * 2 );\n\t\t\t\t\t\tuvC.fromArray( uvs, c * 2 );\n\n\t\t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint,  vA, vB, vC,  uvA, uvB, uvC );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tintersection.face = new THREE.Face3( a, b, c, THREE.Triangle.normal( vA, vB, vC ) );\n\t\t\t\t\tintersection.faceIndex = a;\n\n\t\t\t\t}\n\n\t\t\t\treturn intersection;\n\n\t\t\t}\n\n\t\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\t\tvar geometry = this.geometry;\n\t\t\t\tvar material = this.material;\n\t\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\t\tif ( material === undefined ) return;\n\n\t\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\t\tsphere.applyMatrix4( matrixWorld );\n\n\t\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t\t//\n\n\t\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\t\t// Check boundingBox before continuing\n\n\t\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\t\tif ( ray.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t\t\t}\n\n\t\t\t\tvar uvs, intersection;\n\n\t\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\n\n\t\t\t\t\tvar a, b, c;\n\t\t\t\t\tvar index = geometry.index;\n\t\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\t\tif ( attributes.uv !== undefined ) {\n\n\t\t\t\t\t\tuvs = attributes.uv.array;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\ta = indices[ i ];\n\t\t\t\t\t\t\tb = indices[ i + 1 ];\n\t\t\t\t\t\t\tc = indices[ i + 2 ];\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, raycaster, ray, positions, uvs, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indices buffer semantics\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\n\t\t\t\t\t\tfor ( var i = 0, l = positions.length; i < l; i += 9 ) {\n\n\t\t\t\t\t\t\ta = i / 3;\n\t\t\t\t\t\t\tb = a + 1;\n\t\t\t\t\t\t\tc = a + 2;\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, raycaster, ray, positions, uvs, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.index = a; // triangle number in positions buffer semantics\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\n\n\t\t\t\t\tvar fvA, fvB, fvC;\n\t\t\t\t\tvar isFaceMaterial = material instanceof THREE.MultiMaterial;\n\t\t\t\t\tvar materials = isFaceMaterial === true ? material.materials : null;\n\n\t\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\t\tvar faces = geometry.faces;\n\t\t\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\n\t\t\t\t\tif ( faceVertexUvs.length > 0 ) uvs = faceVertexUvs;\n\n\t\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\t\tvar face = faces[ f ];\n\t\t\t\t\t\tvar faceMaterial = isFaceMaterial === true ? materials[ face.materialIndex ] : material;\n\n\t\t\t\t\t\tif ( faceMaterial === undefined ) continue;\n\n\t\t\t\t\t\tfvA = vertices[ face.a ];\n\t\t\t\t\t\tfvB = vertices[ face.b ];\n\t\t\t\t\t\tfvC = vertices[ face.c ];\n\n\t\t\t\t\t\tif ( faceMaterial.morphTargets === true ) {\n\n\t\t\t\t\t\t\tvar morphTargets = geometry.morphTargets;\n\t\t\t\t\t\t\tvar morphInfluences = this.morphTargetInfluences;\n\n\t\t\t\t\t\t\tvA.set( 0, 0, 0 );\n\t\t\t\t\t\t\tvB.set( 0, 0, 0 );\n\t\t\t\t\t\t\tvC.set( 0, 0, 0 );\n\n\t\t\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\n\n\t\t\t\t\t\t\t\tvar influence = morphInfluences[ t ];\n\n\t\t\t\t\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t\t\t\t\tvar targets = morphTargets[ t ].vertices;\n\n\t\t\t\t\t\t\t\tvA.addScaledVector( tempA.subVectors( targets[ face.a ], fvA ), influence );\n\t\t\t\t\t\t\t\tvB.addScaledVector( tempB.subVectors( targets[ face.b ], fvB ), influence );\n\t\t\t\t\t\t\t\tvC.addScaledVector( tempC.subVectors( targets[ face.c ], fvC ), influence );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvA.add( fvA );\n\t\t\t\t\t\t\tvB.add( fvB );\n\t\t\t\t\t\t\tvC.add( fvC );\n\n\t\t\t\t\t\t\tfvA = vA;\n\t\t\t\t\t\t\tfvB = vB;\n\t\t\t\t\t\t\tfvC = vC;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tintersection = checkIntersection( this, raycaster, ray, fvA, fvB, fvC, intersectionPoint );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tif ( uvs ) {\n\n\t\t\t\t\t\t\t\tvar uvs_f = uvs[ f ];\n\t\t\t\t\t\t\t\tuvA.copy( uvs_f[ 0 ] );\n\t\t\t\t\t\t\t\tuvB.copy( uvs_f[ 1 ] );\n\t\t\t\t\t\t\t\tuvC.copy( uvs_f[ 2 ] );\n\n\t\t\t\t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tintersection.face = face;\n\t\t\t\t\t\t\tintersection.faceIndex = f;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}() ),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t\t}\n\n\t} );\n\n\t// File:src/objects/Bone.js\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author ikerr / http://verold.com\n\t */\n\n\tTHREE.Bone = function ( skin ) {\n\n\t\tTHREE.Object3D.call( this );\n\n\t\tthis.type = 'Bone';\n\n\t\tthis.skin = skin;\n\n\t};\n\n\tTHREE.Bone.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\n\n\t\tconstructor: THREE.Bone,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tTHREE.Object3D.prototype.copy.call( this, source );\n\n\t\t\tthis.skin = source.skin;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t// File:src/objects/Skeleton.js\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author michael guerrero / http://realitymeltdown.com\n\t * @author ikerr / http://verold.com\n\t */\n\n\tTHREE.Skeleton = function ( bones, boneInverses, useVertexTexture ) {\n\n\t\tthis.useVertexTexture = useVertexTexture !== undefined ? useVertexTexture : true;\n\n\t\tthis.identityMatrix = new THREE.Matrix4();\n\n\t\t// copy the bone array\n\n\t\tbones = bones || [];\n\n\t\tthis.bones = bones.slice( 0 );\n\n\t\t// create a bone texture or an array of floats\n\n\t\tif ( this.useVertexTexture ) {\n\n\t\t\t// layout (1 matrix = 4 pixels)\n\t\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\n\t\t\tvar size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\t\tsize = THREE.Math.nextPowerOfTwo( Math.ceil( size ) );\n\t\t\tsize = Math.max( size, 4 );\n\n\t\t\tthis.boneTextureWidth = size;\n\t\t\tthis.boneTextureHeight = size;\n\n\t\t\tthis.boneMatrices = new Float32Array( this.boneTextureWidth * this.boneTextureHeight * 4 ); // 4 floats per RGBA pixel\n\t\t\tthis.boneTexture = new THREE.DataTexture( this.boneMatrices, this.boneTextureWidth, this.boneTextureHeight, THREE.RGBAFormat, THREE.FloatType );\n\n\t\t} else {\n\n\t\t\tthis.boneMatrices = new Float32Array( 16 * this.bones.length );\n\n\t\t}\n\n\t\t// use the supplied bone inverses or calculate the inverses\n\n\t\tif ( boneInverses === undefined ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\tif ( this.bones.length === boneInverses.length ) {\n\n\t\t\t\tthis.boneInverses = boneInverses.slice( 0 );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton bonInverses is the wrong length.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new THREE.Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tObject.assign( THREE.Skeleton.prototype, {\n\n\t\tcalculateInverses: function () {\n\n\t\t\tthis.boneInverses = [];\n\n\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\n\n\t\t\t\tvar inverse = new THREE.Matrix4();\n\n\t\t\t\tif ( this.bones[ b ] ) {\n\n\t\t\t\t\tinverse.getInverse( this.bones[ b ].matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tthis.boneInverses.push( inverse );\n\n\t\t\t}\n\n\t\t},\n\n\t\tpose: function () {\n\n\t\t\tvar bone;\n\n\t\t\t// recover the bind-time world matrices\n\n\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\n\n\t\t\t\tbone = this.bones[ b ];\n\n\t\t\t\tif ( bone ) {\n\n\t\t\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ b ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// compute the local matrices, positions, rotations and scales\n\n\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\n\n\t\t\t\tbone = this.bones[ b ];\n\n\t\t\t\tif ( bone ) {\n\n\t\t\t\t\tif ( bone.parent instanceof THREE.Bone ) {\n\n\t\t\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\n\t\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tupdate: ( function () {\n\n\t\t\tvar offsetMatrix = new THREE.Matrix4();\n\n\t\t\treturn function update() {\n\n\t\t\t\t// flatten bone matrices to array\n\n\t\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\n\n\t\t\t\t\t// compute the offset between the current and the original transform\n\n\t\t\t\t\tvar matrix = this.bones[ b ] ? this.bones[ b ].matrixWorld : this.identityMatrix;\n\n\t\t\t\t\toffsetMatrix.multiplyMatrices( matrix, this.boneInverses[ b ] );\n\t\t\t\t\toffsetMatrix.toArray( this.boneMatrices, b * 16 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.useVertexTexture ) {\n\n\t\t\t\t\tthis.boneTexture.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t} )(),\n\n\t\tclone: function () {\n\n\t\t\treturn new THREE.Skeleton( this.bones, this.boneInverses, this.useVertexTexture );\n\n\t\t}\n\n\t} );\n\n\t// File:src/objects/SkinnedMesh.js\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author ikerr / http://verold.com\n\t */\n\n\tTHREE.SkinnedMesh = function ( geometry, material, useVertexTexture ) {\n\n\t\tTHREE.Mesh.call( this, geometry, material );\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = \"attached\";\n\t\tthis.bindMatrix = new THREE.Matrix4();\n\t\tthis.bindMatrixInverse = new THREE.Matrix4();\n\n\t\t// init bones\n\n\t\t// TODO: remove bone creation as there is no reason (other than\n\t\t// convenience) for THREE.SkinnedMesh to do this.\n\n\t\tvar bones = [];\n\n\t\tif ( this.geometry && this.geometry.bones !== undefined ) {\n\n\t\t\tvar bone, gbone;\n\n\t\t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\n\n\t\t\t\tgbone = this.geometry.bones[ b ];\n\n\t\t\t\tbone = new THREE.Bone( this );\n\t\t\t\tbones.push( bone );\n\n\t\t\t\tbone.name = gbone.name;\n\t\t\t\tbone.position.fromArray( gbone.pos );\n\t\t\t\tbone.quaternion.fromArray( gbone.rotq );\n\t\t\t\tif ( gbone.scl !== undefined ) bone.scale.fromArray( gbone.scl );\n\n\t\t\t}\n\n\t\t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\n\n\t\t\t\tgbone = this.geometry.bones[ b ];\n\n\t\t\t\tif ( gbone.parent !== - 1 && gbone.parent !== null &&\n\t\t\t\t\t\tbones[ gbone.parent ] !== undefined ) {\n\n\t\t\t\t\tbones[ gbone.parent ].add( bones[ b ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.add( bones[ b ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.normalizeSkinWeights();\n\n\t\tthis.updateMatrixWorld( true );\n\t\tthis.bind( new THREE.Skeleton( bones, undefined, useVertexTexture ), this.matrixWorld );\n\n\t};\n\n\n\tTHREE.SkinnedMesh.prototype = Object.assign( Object.create( THREE.Mesh.prototype ), {\n\n\t\tconstructor: THREE.SkinnedMesh,\n\n\t\tbind: function( skeleton, bindMatrix ) {\n\n\t\t\tthis.skeleton = skeleton;\n\n\t\t\tif ( bindMatrix === undefined ) {\n\n\t\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t\t}\n\n\t\t\tthis.bindMatrix.copy( bindMatrix );\n\t\t\tthis.bindMatrixInverse.getInverse( bindMatrix );\n\n\t\t},\n\n\t\tpose: function () {\n\n\t\t\tthis.skeleton.pose();\n\n\t\t},\n\n\t\tnormalizeSkinWeights: function () {\n\n\t\t\tif ( this.geometry instanceof THREE.Geometry ) {\n\n\t\t\t\tfor ( var i = 0; i < this.geometry.skinWeights.length; i ++ ) {\n\n\t\t\t\t\tvar sw = this.geometry.skinWeights[ i ];\n\n\t\t\t\t\tvar scale = 1.0 / sw.lengthManhattan();\n\n\t\t\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\t\t\tsw.multiplyScalar( scale );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tsw.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( this.geometry instanceof THREE.BufferGeometry ) {\n\n\t\t\t\tvar vec = new THREE.Vector4();\n\n\t\t\t\tvar skinWeight = this.geometry.attributes.skinWeight;\n\n\t\t\t\tfor ( var i = 0; i < skinWeight.count; i ++ ) {\n\n\t\t\t\t\tvec.x = skinWeight.getX( i );\n\t\t\t\t\tvec.y = skinWeight.getY( i );\n\t\t\t\t\tvec.z = skinWeight.getZ( i );\n\t\t\t\t\tvec.w = skinWeight.getW( i );\n\n\t\t\t\t\tvar scale = 1.0 / vec.lengthManhattan();\n\n\t\t\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\t\t\tvec.multiplyScalar( scale );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvec.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t\t\t}\n\n\t\t\t\t\tskinWeight.setXYZW( i, vec.x, vec.y, vec.z, vec.w );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tupdateMatrixWorld: function( force ) {\n\n\t\t\tTHREE.Mesh.prototype.updateMatrixWorld.call( this, true );\n\n\t\t\tif ( this.bindMode === \"attached\" ) {\n\n\t\t\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\n\n\t\t\t} else if ( this.bindMode === \"detached\" ) {\n\n\t\t\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.SkinnedMesh unrecognized bindMode: ' + this.bindMode );\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function() {\n\n\t\t\treturn new this.constructor( this.geometry, this.material, this.skeleton.useVertexTexture ).copy( this );\n\n\t\t}\n\n\t} );\n\n\t// File:src/objects/LOD.js\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.LOD = function () {\n\n\t\tTHREE.Object3D.call( this );\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t}\n\t\t} );\n\n\t};\n\n\n\tTHREE.LOD.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\n\n\t\tconstructor: THREE.LOD,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tTHREE.Object3D.prototype.copy.call( this, source, false );\n\n\t\t\tvar levels = source.levels;\n\n\t\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tvar level = levels[ i ];\n\n\t\t\t\tthis.addLevel( level.object.clone(), level.distance );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddLevel: function ( object, distance ) {\n\n\t\t\tif ( distance === undefined ) distance = 0;\n\n\t\t\tdistance = Math.abs( distance );\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlevels.splice( l, 0, { distance: distance, object: object } );\n\n\t\t\tthis.add( object );\n\n\t\t},\n\n\t\tgetObjectForDistance: function ( distance ) {\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tif ( distance < levels[ i ].distance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t},\n\n\t\traycast: ( function () {\n\n\t\t\tvar matrixPosition = new THREE.Vector3();\n\n\t\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\n\n\t\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t\t};\n\n\t\t}() ),\n\n\t\tupdate: function () {\n\n\t\t\tvar v1 = new THREE.Vector3();\n\t\t\tvar v2 = new THREE.Vector3();\n\n\t\t\treturn function update( camera ) {\n\n\t\t\t\tvar levels = this.levels;\n\n\t\t\t\tif ( levels.length > 1 ) {\n\n\t\t\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\t\tvar distance = v1.distanceTo( v2 );\n\n\t\t\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tif ( distance >= levels[ i ].distance ) {\n\n\t\t\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}(),\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.levels = [];\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tvar level = levels[ i ];\n\n\t\t\t\tdata.object.levels.push( {\n\t\t\t\t\tobject: level.object.uuid,\n\t\t\t\t\tdistance: level.distance\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t// File:src/objects/Sprite.js\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tTHREE.Sprite = function ( material ) {\n\n\t\tTHREE.Object3D.call( this );\n\n\t\tthis.type = 'Sprite';\n\n\t\tthis.material = ( material !== undefined ) ? material : new THREE.SpriteMaterial();\n\n\t};\n\n\tTHREE.Sprite.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\n\n\t\tconstructor: THREE.Sprite,\n\n\t\traycast: ( function () {\n\n\t\t\tvar matrixPosition = new THREE.Vector3();\n\n\t\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\tvar distanceSq = raycaster.ray.distanceSqToPoint( matrixPosition );\n\t\t\t\tvar guessSizeSq = this.scale.x * this.scale.y / 4;\n\n\t\t\t\tif ( distanceSq > guessSizeSq ) {\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: Math.sqrt( distanceSq ),\n\t\t\t\t\tpoint: this.position,\n\t\t\t\t\tface: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t};\n\n\t\t}() ),\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.material ).copy( this );\n\n\t\t}\n\n\t} );\n\n\t// File:src/objects/LensFlare.js\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tTHREE.LensFlare = function ( texture, size, distance, blending, color ) {\n\n\t\tTHREE.Object3D.call( this );\n\n\t\tthis.lensFlares = [];\n\n\t\tthis.positionScreen = new THREE.Vector3();\n\t\tthis.customUpdateCallback = undefined;\n\n\t\tif ( texture !== undefined ) {\n\n\t\t\tthis.add( texture, size, distance, blending, color );\n\n\t\t}\n\n\t};\n\n\tTHREE.LensFlare.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\n\n\t\tconstructor: THREE.LensFlare,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tTHREE.Object3D.prototype.copy.call( this, source );\n\n\t\t\tthis.positionScreen.copy( source.positionScreen );\n\t\t\tthis.customUpdateCallback = source.customUpdateCallback;\n\n\t\t\tfor ( var i = 0, l = source.lensFlares.length; i < l; i ++ ) {\n\n\t\t\t\tthis.lensFlares.push( source.lensFlares[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( texture, size, distance, blending, color, opacity ) {\n\n\t\t\tif ( size === undefined ) size = - 1;\n\t\t\tif ( distance === undefined ) distance = 0;\n\t\t\tif ( opacity === undefined ) opacity = 1;\n\t\t\tif ( color === undefined ) color = new THREE.Color( 0xffffff );\n\t\t\tif ( blending === undefined ) blending = THREE.NormalBlending;\n\n\t\t\tdistance = Math.min( distance, Math.max( 0, distance ) );\n\n\t\t\tthis.lensFlares.push( {\n\t\t\t\ttexture: texture,\t// THREE.Texture\n\t\t\t\tsize: size, \t\t// size in pixels (-1 = use texture.width)\n\t\t\t\tdistance: distance, \t// distance (0-1) from light source (0=at light source)\n\t\t\t\tx: 0, y: 0, z: 0,\t// screen position (-1 => 1) z = 0 is in front z = 1 is back\n\t\t\t\tscale: 1, \t\t// scale\n\t\t\t\trotation: 0, \t\t// rotation\n\t\t\t\topacity: opacity,\t// opacity\n\t\t\t\tcolor: color,\t\t// color\n\t\t\t\tblending: blending\t// blending\n\t\t\t} );\n\n\t\t},\n\n\t\t/*\n\t\t * Update lens flares update positions on all flares based on the screen position\n\t\t * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.\n\t\t */\n\n\t\tupdateLensFlares: function () {\n\n\t\t\tvar f, fl = this.lensFlares.length;\n\t\t\tvar flare;\n\t\t\tvar vecX = - this.positionScreen.x * 2;\n\t\t\tvar vecY = - this.positionScreen.y * 2;\n\n\t\t\tfor ( f = 0; f < fl; f ++ ) {\n\n\t\t\t\tflare = this.lensFlares[ f ];\n\n\t\t\t\tflare.x = this.positionScreen.x + vecX * flare.distance;\n\t\t\t\tflare.y = this.positionScreen.y + vecY * flare.distance;\n\n\t\t\t\tflare.wantedRotation = flare.x * Math.PI * 0.25;\n\t\t\t\tflare.rotation += ( flare.wantedRotation - flare.rotation ) * 0.25;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t// File:src/scenes/Scene.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.Scene = function () {\n\n\t\tTHREE.Object3D.call( this );\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.fog = null;\n\t\tthis.overrideMaterial = null;\n\n\t\tthis.autoUpdate = true; // checked by the renderer\n\n\t};\n\n\tTHREE.Scene.prototype = Object.create( THREE.Object3D.prototype );\n\tTHREE.Scene.prototype.constructor = THREE.Scene;\n\n\tTHREE.Scene.prototype.copy = function ( source, recursive ) {\n\n\t\tTHREE.Object3D.prototype.copy.call( this, source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t};\n\n\t// File:src/scenes/Fog.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tTHREE.Fog = function ( color, near, far ) {\n\n\t\tthis.name = '';\n\n\t\tthis.color = new THREE.Color( color );\n\n\t\tthis.near = ( near !== undefined ) ? near : 1;\n\t\tthis.far = ( far !== undefined ) ? far : 1000;\n\n\t};\n\n\tTHREE.Fog.prototype.clone = function () {\n\n\t\treturn new THREE.Fog( this.color.getHex(), this.near, this.far );\n\n\t};\n\n\t// File:src/scenes/FogExp2.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tTHREE.FogExp2 = function ( color, density ) {\n\n\t\tthis.name = '';\n\n\t\tthis.color = new THREE.Color( color );\n\t\tthis.density = ( density !== undefined ) ? density : 0.00025;\n\n\t};\n\n\tTHREE.FogExp2.prototype.clone = function () {\n\n\t\treturn new THREE.FogExp2( this.color.getHex(), this.density );\n\n\t};\n\n\t// File:src/renderers/shaders/ShaderChunk.js\n\n\tTHREE.ShaderChunk = {};\n\n\t// File:src/renderers/shaders/ShaderChunk/alphamap_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'alphamap_fragment' ] = \"#ifdef USE_ALPHAMAP\\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/alphamap_pars_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'alphamap_pars_fragment' ] = \"#ifdef USE_ALPHAMAP\\n\tuniform sampler2D alphaMap;\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/alphatest_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'alphatest_fragment' ] = \"#ifdef ALPHATEST\\n\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/aomap_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'aomap_fragment' ] = \"#ifdef USE_AOMAP\\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\t#endif\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/aomap_pars_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'aomap_pars_fragment' ] = \"#ifdef USE_AOMAP\\n\tuniform sampler2D aoMap;\\n\tuniform float aoMapIntensity;\\n#endif\";\n\n\t// File:src/renderers/shaders/ShaderChunk/begin_vertex.glsl\n\n\tTHREE.ShaderChunk[ 'begin_vertex' ] = \"\\nvec3 transformed = vec3( position );\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/beginnormal_vertex.glsl\n\n\tTHREE.ShaderChunk[ 'beginnormal_vertex' ] = \"\\nvec3 objectNormal = vec3( normal );\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/bsdfs.glsl\n\n\tTHREE.ShaderChunk[ 'bsdfs' ] = \"bool testLightInRange( const in float lightDistance, const in float cutoffDistance ) {\\n\treturn any( bvec2( cutoffDistance == 0.0, lightDistance < cutoffDistance ) );\\n}\\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\t\tif( decayExponent > 0.0 ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\t\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\t\t\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\t\t\treturn distanceFalloff * maxDistanceCutoffFactor;\\n#else\\n\t\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n#endif\\n\t\t}\\n\t\treturn 1.0;\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\tfloat a2 = pow2( alpha );\\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\tfloat a2 = pow2( alpha );\\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\tfloat a2 = pow2( alpha );\\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\tfloat alpha = pow2( roughness );\\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\tvec3 F = F_Schlick( specularColor, dotLH );\\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\tfloat D = D_GGX( alpha, dotNH );\\n\treturn F * ( G * D );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\tvec4 r = roughness * c0 + c1;\\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\\n\treturn specularColor * AB.x + AB.y;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\tvec3 F = F_Schlick( specularColor, dotLH );\\n\tfloat G = G_BlinnPhong_Implicit( );\\n\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/bumpmap_pars_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'bumpmap_pars_fragment' ] = \"#ifdef USE_BUMPMAP\\n\tuniform sampler2D bumpMap;\\n\tuniform float bumpScale;\\n\tvec2 dHdxy_fwd() {\\n\t\tvec2 dSTdx = dFdx( vUv );\\n\t\tvec2 dSTdy = dFdy( vUv );\\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\t\treturn vec2( dBx, dBy );\\n\t}\\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\t\tvec3 vSigmaX = dFdx( surf_pos );\\n\t\tvec3 vSigmaY = dFdy( surf_pos );\\n\t\tvec3 vN = surf_norm;\\n\t\tvec3 R1 = cross( vSigmaY, vN );\\n\t\tvec3 R2 = cross( vN, vSigmaX );\\n\t\tfloat fDet = dot( vSigmaX, R1 );\\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\t}\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/clipping_planes_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'clipping_planes_fragment' ] = \"#if NUM_CLIPPING_PLANES > 0\\n\tfor ( int i = 0; i < NUM_CLIPPING_PLANES; ++ i ) {\\n\t\tvec4 plane = clippingPlanes[ i ];\\n\t\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\t}\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/clipping_planes_pars_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'clipping_planes_pars_fragment' ] = \"#if NUM_CLIPPING_PLANES > 0\\n\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\\n\t\tvarying vec3 vViewPosition;\\n\t#endif\\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/clipping_planes_pars_vertex.glsl\n\n\tTHREE.ShaderChunk[ 'clipping_planes_pars_vertex' ] = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\tvarying vec3 vViewPosition;\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/clipping_planes_vertex.glsl\n\n\tTHREE.ShaderChunk[ 'clipping_planes_vertex' ] = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\tvViewPosition = - mvPosition.xyz;\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/color_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'color_fragment' ] = \"#ifdef USE_COLOR\\n\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\n\t// File:src/renderers/shaders/ShaderChunk/color_pars_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'color_pars_fragment' ] = \"#ifdef USE_COLOR\\n\tvarying vec3 vColor;\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/color_pars_vertex.glsl\n\n\tTHREE.ShaderChunk[ 'color_pars_vertex' ] = \"#ifdef USE_COLOR\\n\tvarying vec3 vColor;\\n#endif\";\n\n\t// File:src/renderers/shaders/ShaderChunk/color_vertex.glsl\n\n\tTHREE.ShaderChunk[ 'color_vertex' ] = \"#ifdef USE_COLOR\\n\tvColor.xyz = color.xyz;\\n#endif\";\n\n\t// File:src/renderers/shaders/ShaderChunk/common.glsl\n\n\tTHREE.ShaderChunk[ 'common' ] = \"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\tvec3 color;\\n\tvec3 direction;\\n\tbool visible;\\n};\\nstruct ReflectedLight {\\n\tvec3 directDiffuse;\\n\tvec3 directSpecular;\\n\tvec3 indirectDiffuse;\\n\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\tvec3 position;\\n\tvec3 normal;\\n\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/cube_uv_reflection_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'cube_uv_reflection_fragment' ] = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\tvec3 absDirection = abs(direction);\\n\tint face = -1;\\n\tif( absDirection.x > absDirection.z ) {\\n\t\tif(absDirection.x > absDirection.y )\\n\t\t\tface = direction.x > 0.0 ? 0 : 3;\\n\t\telse\\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\\n\t}\\n\telse {\\n\t\tif(absDirection.z > absDirection.y )\\n\t\t\tface = direction.z > 0.0 ? 2 : 5;\\n\t\telse\\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\\n\t}\\n\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\tfloat dxRoughness = dFdx(roughness);\\n\tfloat dyRoughness = dFdy(roughness);\\n\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\tfloat mipLevel = 0.5 * log2(d);\\n\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\tbool bRes = mipLevel == 0.0;\\n\tscale =  bRes && (scale < a) ? a : scale;\\n\tvec3 r;\\n\tvec2 offset;\\n\tint face = getFaceFromDirection(direction);\\n\tfloat rcpPowScale = 1.0 / powScale;\\n\tif( face == 0) {\\n\t\tr = vec3(direction.x, -direction.z, direction.y);\\n\t\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\n\t}\\n\telse if( face == 1) {\\n\t\tr = vec3(direction.y, direction.x, direction.z);\\n\t\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\n\t}\\n\telse if( face == 2) {\\n\t\tr = vec3(direction.z, direction.x, direction.y);\\n\t\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\n\t}\\n\telse if( face == 3) {\\n\t\tr = vec3(direction.x, direction.z, direction.y);\\n\t\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\n\t}\\n\telse if( face == 4) {\\n\t\tr = vec3(direction.y, direction.x, -direction.z);\\n\t\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\n\t}\\n\telse {\\n\t\tr = vec3(direction.z, -direction.x, direction.y);\\n\t\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\n\t}\\n\tr = normalize(r);\\n\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\tvec2 base = offset + vec2( texelOffset );\\n\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\\n\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\tfloat r1 = floor(roughnessVal);\\n\tfloat r2 = r1 + 1.0;\\n\tfloat t = fract(roughnessVal);\\n\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\tfloat s = mipInfo.y;\\n\tfloat level0 = mipInfo.x;\\n\tfloat level1 = level0 + 1.0;\\n\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\tvec4 result = mix(color10, color20, t);\\n\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/defaultnormal_vertex.glsl\n\n\tTHREE.ShaderChunk[ 'defaultnormal_vertex' ] = \"#ifdef FLIP_SIDED\\n\tobjectNormal = -objectNormal;\\n#endif\\nvec3 transformedNormal = normalMatrix * objectNormal;\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/displacementmap_vertex.glsl\n\n\tTHREE.ShaderChunk[ 'displacementmap_vertex' ] = \"#ifdef USE_DISPLACEMENTMAP\\n\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/displacementmap_pars_vertex.glsl\n\n\tTHREE.ShaderChunk[ 'displacementmap_pars_vertex' ] = \"#ifdef USE_DISPLACEMENTMAP\\n\tuniform sampler2D displacementMap;\\n\tuniform float displacementScale;\\n\tuniform float displacementBias;\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/emissivemap_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'emissivemap_fragment' ] = \"#ifdef USE_EMISSIVEMAP\\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/emissivemap_pars_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'emissivemap_pars_fragment' ] = \"#ifdef USE_EMISSIVEMAP\\n\tuniform sampler2D emissiveMap;\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/encodings_pars_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'encodings_pars_fragment' ] = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n  return value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n  return vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n  return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n  return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n  return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n  return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n  float maxComponent = max( max( value.r, value.g ), value.b );\\n  float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n  return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n  return vec4( value.xyz * value.w * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n  float maxRGB = max( value.x, max( value.g, value.b ) );\\n  float M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n  M            = ceil( M * 255.0 ) / 255.0;\\n  return vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n    return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n    float maxRGB = max( value.x, max( value.g, value.b ) );\\n    float D      = max( maxRange / maxRGB, 1.0 );\\n    D            = min( floor( D ) / 255.0, 1.0 );\\n    return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n  vec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\n  Xp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\\n  vec4 vResult;\\n  vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n  float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n  vResult.w = fract(Le);\\n  vResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\\n  return vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n  float Le = value.z * 255.0 + value.w;\\n  vec3 Xp_Y_XYZp;\\n  Xp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\\n  Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n  Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n  vec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\n  return vec4( max(vRGB, 0.0), 1.0 );\\n}\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/encodings_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'encodings_fragment' ] = \"  gl_FragColor = linearToOutputTexel( gl_FragColor );\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/envmap_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'envmap_fragment' ] = \"#ifdef USE_ENVMAP\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\t\t#ifdef ENVMAP_MODE_REFLECTION\\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\t\t#else\\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\t\t#endif\\n\t#else\\n\t\tvec3 reflectVec = vReflect;\\n\t#endif\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\t\tvec2 sampleUV;\\n\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\\n\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\t\tvec3 reflectView = flipNormal * normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\t#endif\\n\tenvColor = envMapTexelToLinear( envColor );\\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\t#elif defined( ENVMAP_BLENDING_MIX )\\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\t#elif defined( ENVMAP_BLENDING_ADD )\\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\t#endif\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/envmap_pars_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'envmap_pars_fragment' ] = \"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\n\tuniform float reflectivity;\\n\tuniform float envMapIntenstiy;\\n#endif\\n#ifdef USE_ENVMAP\\n\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\n\t\tvarying vec3 vWorldPosition;\\n\t#endif\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tuniform samplerCube envMap;\\n\t#else\\n\t\tuniform sampler2D envMap;\\n\t#endif\\n\tuniform float flipEnvMap;\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\n\t\tuniform float refractionRatio;\\n\t#else\\n\t\tvarying vec3 vReflect;\\n\t#endif\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/envmap_pars_vertex.glsl\n\n\tTHREE.ShaderChunk[ 'envmap_pars_vertex' ] = \"#ifdef USE_ENVMAP\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\t\tvarying vec3 vWorldPosition;\\n\t#else\\n\t\tvarying vec3 vReflect;\\n\t\tuniform float refractionRatio;\\n\t#endif\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/envmap_vertex.glsl\n\n\tTHREE.ShaderChunk[ 'envmap_vertex' ] = \"#ifdef USE_ENVMAP\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\t\tvWorldPosition = worldPosition.xyz;\\n\t#else\\n\t\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\t\t#ifdef ENVMAP_MODE_REFLECTION\\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\\n\t\t#else\\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\t\t#endif\\n\t#endif\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/fog_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'fog_fragment' ] = \"#ifdef USE_FOG\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\\n\t#else\\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n\t#endif\\n\t#ifdef FOG_EXP2\\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\\n\t#else\\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\\n\t#endif\\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/fog_pars_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'fog_pars_fragment' ] = \"#ifdef USE_FOG\\n\tuniform vec3 fogColor;\\n\t#ifdef FOG_EXP2\\n\t\tuniform float fogDensity;\\n\t#else\\n\t\tuniform float fogNear;\\n\t\tuniform float fogFar;\\n\t#endif\\n#endif\";\n\n\t// File:src/renderers/shaders/ShaderChunk/lightmap_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'lightmap_fragment' ] = \"#ifdef USE_LIGHTMAP\\n\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/lightmap_pars_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'lightmap_pars_fragment' ] = \"#ifdef USE_LIGHTMAP\\n\tuniform sampler2D lightMap;\\n\tuniform float lightMapIntensity;\\n#endif\";\n\n\t// File:src/renderers/shaders/ShaderChunk/lights_lambert_vertex.glsl\n\n\tTHREE.ShaderChunk[ 'lights_lambert_vertex' ] = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\tvLightBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\t\tdotNL = dot( geometry.normal, directLight.direction );\\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\t\t#endif\\n\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\t\tdotNL = dot( geometry.normal, directLight.direction );\\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\t\t#endif\\n\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\t\tdotNL = dot( geometry.normal, directLight.direction );\\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\t\t#endif\\n\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\t\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\t\t#endif\\n\t}\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/lights_pars.glsl\n\n\tTHREE.ShaderChunk[ 'lights_pars' ] = \"uniform vec3 ambientLightColor;\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\tvec3 irradiance = ambientLightColor;\\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\t\tirradiance *= PI;\\n\t#endif\\n\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\tstruct DirectionalLight {\\n\t\tvec3 direction;\\n\t\tvec3 color;\\n\t\tint shadow;\\n\t\tfloat shadowBias;\\n\t\tfloat shadowRadius;\\n\t\tvec2 shadowMapSize;\\n\t};\\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\t\tdirectLight.color = directionalLight.color;\\n\t\tdirectLight.direction = directionalLight.direction;\\n\t\tdirectLight.visible = true;\\n\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\tstruct PointLight {\\n\t\tvec3 position;\\n\t\tvec3 color;\\n\t\tfloat distance;\\n\t\tfloat decay;\\n\t\tint shadow;\\n\t\tfloat shadowBias;\\n\t\tfloat shadowRadius;\\n\t\tvec2 shadowMapSize;\\n\t};\\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\t\tvec3 lVector = pointLight.position - geometry.position;\\n\t\tdirectLight.direction = normalize( lVector );\\n\t\tfloat lightDistance = length( lVector );\\n\t\tif ( testLightInRange( lightDistance, pointLight.distance ) ) {\\n\t\t\tdirectLight.color = pointLight.color;\\n\t\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\t\t\tdirectLight.visible = true;\\n\t\t} else {\\n\t\t\tdirectLight.color = vec3( 0.0 );\\n\t\t\tdirectLight.visible = false;\\n\t\t}\\n\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\tstruct SpotLight {\\n\t\tvec3 position;\\n\t\tvec3 direction;\\n\t\tvec3 color;\\n\t\tfloat distance;\\n\t\tfloat decay;\\n\t\tfloat coneCos;\\n\t\tfloat penumbraCos;\\n\t\tint shadow;\\n\t\tfloat shadowBias;\\n\t\tfloat shadowRadius;\\n\t\tvec2 shadowMapSize;\\n\t};\\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\t\tvec3 lVector = spotLight.position - geometry.position;\\n\t\tdirectLight.direction = normalize( lVector );\\n\t\tfloat lightDistance = length( lVector );\\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\t\tif ( all( bvec2( angleCos > spotLight.coneCos, testLightInRange( lightDistance, spotLight.distance ) ) ) ) {\\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\t\t\tdirectLight.color = spotLight.color;\\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\t\t\tdirectLight.visible = true;\\n\t\t} else {\\n\t\t\tdirectLight.color = vec3( 0.0 );\\n\t\t\tdirectLight.visible = false;\\n\t\t}\\n\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\tstruct HemisphereLight {\\n\t\tvec3 direction;\\n\t\tvec3 skyColor;\\n\t\tvec3 groundColor;\\n\t};\\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\t\t\tirradiance *= PI;\\n\t\t#endif\\n\t\treturn irradiance;\\n\t}\\n#endif\\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\t\t#include <normal_flip>\\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\t\t#ifdef ENVMAP_TYPE_CUBE\\n\t\t\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\t\t\t#ifdef TEXTURE_LOD_EXT\\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\t\t\t#else\\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\t\t\t#endif\\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\t\t\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\t\t\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\\n\t\t#else\\n\t\t\tvec4 envMapColor = vec4( 0.0 );\\n\t\t#endif\\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\\n\t}\\n\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\t}\\n\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\t\t#ifdef ENVMAP_MODE_REFLECTION\\n\t\t\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\t\t#else\\n\t\t\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\t\t#endif\\n\t\t#include <normal_flip>\\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\t\t#ifdef ENVMAP_TYPE_CUBE\\n\t\t\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\t\t\t#ifdef TEXTURE_LOD_EXT\\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\t\t\t#else\\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\t\t\t#endif\\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\t\t\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\t\t\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\t\t\tvec2 sampleUV;\\n\t\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\t\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\t\t\t#ifdef TEXTURE_LOD_EXT\\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\t\t\t#else\\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\t\t\t#endif\\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\t\t\tvec3 reflectView = flipNormal * normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\n\t\t\t#ifdef TEXTURE_LOD_EXT\\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\t\t\t#else\\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\t\t\t#endif\\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\t\t#endif\\n\t\treturn envMapColor.rgb * envMapIntensity;\\n\t}\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/lights_phong_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'lights_phong_fragment' ] = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/lights_phong_pars_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'lights_phong_pars_fragment' ] = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\tvec3\tdiffuseColor;\\n\tvec3\tspecularColor;\\n\tfloat\tspecularShininess;\\n\tfloat\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\tvec3 irradiance = dotNL * directLight.color;\\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\t\tirradiance *= PI;\\n\t#endif\\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\t(0)\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/lights_physical_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'lights_physical_fragment' ] = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef STANDARD\\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n\tmaterial.clearCoat = saturate( clearCoat );\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/lights_physical_pars_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'lights_physical_pars_fragment' ] = \"struct PhysicalMaterial {\\n\tvec3\tdiffuseColor;\\n\tfloat\tspecularRoughness;\\n\tvec3\tspecularColor;\\n\t#ifndef STANDARD\\n\t\tfloat clearCoat;\\n\t\tfloat clearCoatRoughness;\\n\t#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\tvec3 irradiance = dotNL * directLight.color;\\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\t\tirradiance *= PI;\\n\t#endif\\n\t#ifndef STANDARD\\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\t#else\\n\t\tfloat clearCoatDHR = 0.0;\\n\t#endif\\n\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\t#ifndef STANDARD\\n\t\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\t#endif\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\t#ifndef STANDARD\\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\t\tfloat dotNL = dotNV;\\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\t#else\\n\t\tfloat clearCoatDHR = 0.0;\\n\t#endif\\n\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n\t#ifndef STANDARD\\n\t\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\t#endif\\n}\\n#define RE_Direct\t\t\t\tRE_Direct_Physical\\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/lights_template.glsl\n\n\tTHREE.ShaderChunk[ 'lights_template' ] = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\tPointLight pointLight;\\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\t\tpointLight = pointLights[ i ];\\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\t\t#ifdef USE_SHADOWMAP\\n\t\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\\n\t\t#endif\\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\tSpotLight spotLight;\\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\t\tspotLight = spotLights[ i ];\\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\t\t#ifdef USE_SHADOWMAP\\n\t\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\t\t#endif\\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\tDirectionalLight directionalLight;\\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\t\tdirectionalLight = directionalLights[ i ];\\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\t\t#ifdef USE_SHADOWMAP\\n\t\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\t\t#endif\\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\t#ifdef USE_LIGHTMAP\\n\t\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\t\t\tlightMapIrradiance *= PI;\\n\t\t#endif\\n\t\tirradiance += lightMapIrradiance;\\n\t#endif\\n\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\t\t}\\n\t#endif\\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\t \tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\\n\t#endif\\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\\n\t#ifndef STANDARD\\n\t\tvec3 clearCoatRadiance = getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), 8 );\\n\t#else\\n\t\tvec3 clearCoatRadiance = vec3( 0.0 );\\n\t#endif\\n\t\t\\n\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/logdepthbuf_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'logdepthbuf_fragment' ] = \"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\n#endif\";\n\n\t// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'logdepthbuf_pars_fragment' ] = \"#ifdef USE_LOGDEPTHBUF\\n\tuniform float logDepthBufFC;\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\t\tvarying float vFragDepth;\\n\t#endif\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_vertex.glsl\n\n\tTHREE.ShaderChunk[ 'logdepthbuf_pars_vertex' ] = \"#ifdef USE_LOGDEPTHBUF\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\t\tvarying float vFragDepth;\\n\t#endif\\n\tuniform float logDepthBufFC;\\n#endif\";\n\n\t// File:src/renderers/shaders/ShaderChunk/logdepthbuf_vertex.glsl\n\n\tTHREE.ShaderChunk[ 'logdepthbuf_vertex' ] = \"#ifdef USE_LOGDEPTHBUF\\n\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\t\tvFragDepth = 1.0 + gl_Position.w;\\n\t#else\\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\n\t#endif\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/map_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'map_fragment' ] = \"#ifdef USE_MAP\\n\tvec4 texelColor = texture2D( map, vUv );\\n\ttexelColor = mapTexelToLinear( texelColor );\\n\tdiffuseColor *= texelColor;\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/map_pars_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'map_pars_fragment' ] = \"#ifdef USE_MAP\\n\tuniform sampler2D map;\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/map_particle_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'map_particle_fragment' ] = \"#ifdef USE_MAP\\n\tvec4 mapTexel = texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/map_particle_pars_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'map_particle_pars_fragment' ] = \"#ifdef USE_MAP\\n\tuniform vec4 offsetRepeat;\\n\tuniform sampler2D map;\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/metalnessmap_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'metalnessmap_fragment' ] = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\tmetalnessFactor *= texelMetalness.r;\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/metalnessmap_pars_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'metalnessmap_pars_fragment' ] = \"#ifdef USE_METALNESSMAP\\n\tuniform sampler2D metalnessMap;\\n#endif\";\n\n\t// File:src/renderers/shaders/ShaderChunk/morphnormal_vertex.glsl\n\n\tTHREE.ShaderChunk[ 'morphnormal_vertex' ] = \"#ifdef USE_MORPHNORMALS\\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/morphtarget_pars_vertex.glsl\n\n\tTHREE.ShaderChunk[ 'morphtarget_pars_vertex' ] = \"#ifdef USE_MORPHTARGETS\\n\t#ifndef USE_MORPHNORMALS\\n\tuniform float morphTargetInfluences[ 8 ];\\n\t#else\\n\tuniform float morphTargetInfluences[ 4 ];\\n\t#endif\\n#endif\";\n\n\t// File:src/renderers/shaders/ShaderChunk/morphtarget_vertex.glsl\n\n\tTHREE.ShaderChunk[ 'morphtarget_vertex' ] = \"#ifdef USE_MORPHTARGETS\\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\t#ifndef USE_MORPHNORMALS\\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\t#endif\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/normal_flip.glsl\n\n\tTHREE.ShaderChunk[ 'normal_flip' ] = \"#ifdef DOUBLE_SIDED\\n\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n#else\\n\tfloat flipNormal = 1.0;\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/normal_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'normal_fragment' ] = \"#ifdef FLAT_SHADED\\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\tvec3 normal = normalize( vNormal ) * flipNormal;\\n#endif\\n#ifdef USE_NORMALMAP\\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n#elif defined( USE_BUMPMAP )\\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/normalmap_pars_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'normalmap_pars_fragment' ] = \"#ifdef USE_NORMALMAP\\n\tuniform sampler2D normalMap;\\n\tuniform vec2 normalScale;\\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\\n\t\tvec2 st0 = dFdx( vUv.st );\\n\t\tvec2 st1 = dFdy( vUv.st );\\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\t\tvec3 N = normalize( surf_norm );\\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\t\tmapN.xy = normalScale * mapN.xy;\\n\t\tmat3 tsn = mat3( S, T, N );\\n\t\treturn normalize( tsn * mapN );\\n\t}\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/packing.glsl\n\n\tTHREE.ShaderChunk[ 'packing' ] = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n  return normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n  return 1.0 - 2.0 * rgb.xyz;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\treturn dot( v, UnpackFactors );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n  return ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n  return linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n  return (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n  return ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/premultiplied_alpha_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'premultiplied_alpha_fragment' ] = \"#ifdef PREMULTIPLIED_ALPHA\\n\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/project_vertex.glsl\n\n\tTHREE.ShaderChunk[ 'project_vertex' ] = \"#ifdef USE_SKINNING\\n\tvec4 mvPosition = modelViewMatrix * skinned;\\n#else\\n\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\n#endif\\ngl_Position = projectionMatrix * mvPosition;\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/roughnessmap_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'roughnessmap_fragment' ] = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\troughnessFactor *= texelRoughness.r;\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/roughnessmap_pars_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'roughnessmap_pars_fragment' ] = \"#ifdef USE_ROUGHNESSMAP\\n\tuniform sampler2D roughnessMap;\\n#endif\";\n\n\t// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'shadowmap_pars_fragment' ] = \"#ifdef USE_SHADOWMAP\\n\t#if NUM_DIR_LIGHTS > 0\\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\t#endif\\n\t#if NUM_SPOT_LIGHTS > 0\\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\t#endif\\n\t#if NUM_POINT_LIGHTS > 0\\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\t#endif\\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\t}\\n\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\t\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\t\tvec2 texelSize = vec2( 1.0 ) / size;\\n\t\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\n\t\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\t\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\t\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\t\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\t\tvec2 f = fract( uv * size + 0.5 );\\n\t\tfloat a = mix( lb, lt, f.y );\\n\t\tfloat b = mix( rb, rt, f.y );\\n\t\tfloat c = mix( a, b, f.x );\\n\t\treturn c;\\n\t}\\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\t\tshadowCoord.xyz /= shadowCoord.w;\\n\t\tshadowCoord.z += shadowBias;\\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\t\tbool inFrustum = all( inFrustumVec );\\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\t\tbool frustumTest = all( frustumTestVec );\\n\t\tif ( frustumTest ) {\\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\\n\t\t\treturn (\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\t\t\t) * ( 1.0 / 9.0 );\\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\\n\t\t\treturn (\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\t\t\t) * ( 1.0 / 9.0 );\\n\t\t#else\\n\t\t\treturn texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\t\t#endif\\n\t\t}\\n\t\treturn 1.0;\\n\t}\\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\t\tvec3 absV = abs( v );\\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\t\tabsV *= scaleToCube;\\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\t\tvec2 planar = v.xy;\\n\t\tfloat almostATexel = 1.5 * texelSizeY;\\n\t\tfloat almostOne = 1.0 - almostATexel;\\n\t\tif ( absV.z >= almostOne ) {\\n\t\t\tif ( v.z > 0.0 )\\n\t\t\t\tplanar.x = 4.0 - v.x;\\n\t\t} else if ( absV.x >= almostOne ) {\\n\t\t\tfloat signX = sign( v.x );\\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\\n\t\t} else if ( absV.y >= almostOne ) {\\n\t\t\tfloat signY = sign( v.y );\\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\t\t\tplanar.y = v.z * signY - 2.0;\\n\t\t}\\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\t}\\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\t\tvec3 lightToPosition = shadowCoord.xyz;\\n\t\tvec3 bd3D = normalize( lightToPosition );\\n\t\tfloat dp = ( length( lightToPosition ) - shadowBias ) / 1000.0;\\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\t\t\treturn (\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\t\t\t) * ( 1.0 / 9.0 );\\n\t\t#else\\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\t\t#endif\\n\t}\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_vertex.glsl\n\n\tTHREE.ShaderChunk[ 'shadowmap_pars_vertex' ] = \"#ifdef USE_SHADOWMAP\\n\t#if NUM_DIR_LIGHTS > 0\\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\t#endif\\n\t#if NUM_SPOT_LIGHTS > 0\\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\t#endif\\n\t#if NUM_POINT_LIGHTS > 0\\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\t#endif\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/shadowmap_vertex.glsl\n\n\tTHREE.ShaderChunk[ 'shadowmap_vertex' ] = \"#ifdef USE_SHADOWMAP\\n\t#if NUM_DIR_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\t}\\n\t#endif\\n\t#if NUM_SPOT_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\t}\\n\t#endif\\n\t#if NUM_POINT_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\t}\\n\t#endif\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/shadowmask_pars_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'shadowmask_pars_fragment' ] = \"float getShadowMask() {\\n\tfloat shadow = 1.0;\\n\t#ifdef USE_SHADOWMAP\\n\t#if NUM_DIR_LIGHTS > 0\\n\tDirectionalLight directionalLight;\\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\t\tdirectionalLight = directionalLights[ i ];\\n\t\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\t}\\n\t#endif\\n\t#if NUM_SPOT_LIGHTS > 0\\n\tSpotLight spotLight;\\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\t\tspotLight = spotLights[ i ];\\n\t\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\t}\\n\t#endif\\n\t#if NUM_POINT_LIGHTS > 0\\n\tPointLight pointLight;\\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\t\tpointLight = pointLights[ i ];\\n\t\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\\n\t}\\n\t#endif\\n\t#endif\\n\treturn shadow;\\n}\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/skinbase_vertex.glsl\n\n\tTHREE.ShaderChunk[ 'skinbase_vertex' ] = \"#ifdef USE_SKINNING\\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\n\t// File:src/renderers/shaders/ShaderChunk/skinning_pars_vertex.glsl\n\n\tTHREE.ShaderChunk[ 'skinning_pars_vertex' ] = \"#ifdef USE_SKINNING\\n\tuniform mat4 bindMatrix;\\n\tuniform mat4 bindMatrixInverse;\\n\t#ifdef BONE_TEXTURE\\n\t\tuniform sampler2D boneTexture;\\n\t\tuniform int boneTextureWidth;\\n\t\tuniform int boneTextureHeight;\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\t\t\tfloat j = i * 4.0;\\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\\n\t\t\ty = dy * ( y + 0.5 );\\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\t\t\treturn bone;\\n\t\t}\\n\t#else\\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\\n\t\t\treturn bone;\\n\t\t}\\n\t#endif\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/skinning_vertex.glsl\n\n\tTHREE.ShaderChunk[ 'skinning_vertex' ] = \"#ifdef USE_SKINNING\\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\tvec4 skinned = vec4( 0.0 );\\n\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\tskinned  = bindMatrixInverse * skinned;\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/skinnormal_vertex.glsl\n\n\tTHREE.ShaderChunk[ 'skinnormal_vertex' ] = \"#ifdef USE_SKINNING\\n\tmat4 skinMatrix = mat4( 0.0 );\\n\tskinMatrix += skinWeight.x * boneMatX;\\n\tskinMatrix += skinWeight.y * boneMatY;\\n\tskinMatrix += skinWeight.z * boneMatZ;\\n\tskinMatrix += skinWeight.w * boneMatW;\\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/specularmap_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'specularmap_fragment' ] = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\tspecularStrength = texelSpecular.r;\\n#else\\n\tspecularStrength = 1.0;\\n#endif\";\n\n\t// File:src/renderers/shaders/ShaderChunk/specularmap_pars_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'specularmap_pars_fragment' ] = \"#ifdef USE_SPECULARMAP\\n\tuniform sampler2D specularMap;\\n#endif\";\n\n\t// File:src/renderers/shaders/ShaderChunk/tonemapping_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'tonemapping_fragment' ] = \"#if defined( TONE_MAPPING )\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/tonemapping_pars_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'tonemapping_pars_fragment' ] = \"#define saturate(a) clamp( a, 0.0, 1.0 )\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n  return toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n  color *= toneMappingExposure;\\n  return saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n  color *= toneMappingExposure;\\n  return saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n  color *= toneMappingExposure;\\n  color = max( vec3( 0.0 ), color - 0.004 );\\n  return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/uv2_pars_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'uv2_pars_fragment' ] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\tvarying vec2 vUv2;\\n#endif\";\n\n\t// File:src/renderers/shaders/ShaderChunk/uv2_pars_vertex.glsl\n\n\tTHREE.ShaderChunk[ 'uv2_pars_vertex' ] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\tattribute vec2 uv2;\\n\tvarying vec2 vUv2;\\n#endif\";\n\n\t// File:src/renderers/shaders/ShaderChunk/uv2_vertex.glsl\n\n\tTHREE.ShaderChunk[ 'uv2_vertex' ] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\tvUv2 = uv2;\\n#endif\";\n\n\t// File:src/renderers/shaders/ShaderChunk/uv_pars_fragment.glsl\n\n\tTHREE.ShaderChunk[ 'uv_pars_fragment' ] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\tvarying vec2 vUv;\\n#endif\";\n\n\t// File:src/renderers/shaders/ShaderChunk/uv_pars_vertex.glsl\n\n\tTHREE.ShaderChunk[ 'uv_pars_vertex' ] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\tvarying vec2 vUv;\\n\tuniform vec4 offsetRepeat;\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/ShaderChunk/uv_vertex.glsl\n\n\tTHREE.ShaderChunk[ 'uv_vertex' ] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n#endif\";\n\n\t// File:src/renderers/shaders/ShaderChunk/worldpos_vertex.glsl\n\n\tTHREE.ShaderChunk[ 'worldpos_vertex' ] = \"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( PHYSICAL ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\\n\t#ifdef USE_SKINNING\\n\t\tvec4 worldPosition = modelMatrix * skinned;\\n\t#else\\n\t\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n\t#endif\\n#endif\\n\";\n\n\t// File:src/renderers/shaders/UniformsUtils.js\n\n\t/**\n\t * Uniform Utilities\n\t */\n\n\tTHREE.UniformsUtils = {\n\n\t\tmerge: function ( uniforms ) {\n\n\t\t\tvar merged = {};\n\n\t\t\tfor ( var u = 0; u < uniforms.length; u ++ ) {\n\n\t\t\t\tvar tmp = this.clone( uniforms[ u ] );\n\n\t\t\t\tfor ( var p in tmp ) {\n\n\t\t\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn merged;\n\n\t\t},\n\n\t\tclone: function ( uniforms_src ) {\n\n\t\t\tvar uniforms_dst = {};\n\n\t\t\tfor ( var u in uniforms_src ) {\n\n\t\t\t\tuniforms_dst[ u ] = {};\n\n\t\t\t\tfor ( var p in uniforms_src[ u ] ) {\n\n\t\t\t\t\tvar parameter_src = uniforms_src[ u ][ p ];\n\n\t\t\t\t\tif ( parameter_src instanceof THREE.Color ||\n\t\t\t\t\t\t parameter_src instanceof THREE.Vector2 ||\n\t\t\t\t\t\t parameter_src instanceof THREE.Vector3 ||\n\t\t\t\t\t\t parameter_src instanceof THREE.Vector4 ||\n\t\t\t\t\t\t parameter_src instanceof THREE.Matrix3 ||\n\t\t\t\t\t\t parameter_src instanceof THREE.Matrix4 ||\n\t\t\t\t\t\t parameter_src instanceof THREE.Texture ) {\n\n\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.clone();\n\n\t\t\t\t\t} else if ( Array.isArray( parameter_src ) ) {\n\n\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.slice();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn uniforms_dst;\n\n\t\t}\n\n\t};\n\n\t// File:src/renderers/shaders/UniformsLib.js\n\n\t/**\n\t * Uniforms library for shared webgl shaders\n\t */\n\n\tTHREE.UniformsLib = {\n\n\t\tcommon: {\n\n\t\t\t\"diffuse\": { value: new THREE.Color( 0xeeeeee ) },\n\t\t\t\"opacity\": { value: 1.0 },\n\n\t\t\t\"map\": { value: null },\n\t\t\t\"offsetRepeat\": { value: new THREE.Vector4( 0, 0, 1, 1 ) },\n\n\t\t\t\"specularMap\": { value: null },\n\t\t\t\"alphaMap\": { value: null },\n\n\t\t\t\"envMap\": { value: null },\n\t\t\t\"flipEnvMap\": { value: - 1 },\n\t\t\t\"reflectivity\": { value: 1.0 },\n\t\t\t\"refractionRatio\": { value: 0.98 }\n\n\t\t},\n\n\t\taomap: {\n\n\t\t\t\"aoMap\": { value: null },\n\t\t\t\"aoMapIntensity\": { value: 1 }\n\n\t\t},\n\n\t\tlightmap: {\n\n\t\t\t\"lightMap\": { value: null },\n\t\t\t\"lightMapIntensity\": { value: 1 }\n\n\t\t},\n\n\t\temissivemap: {\n\n\t\t\t\"emissiveMap\": { value: null }\n\n\t\t},\n\n\t\tbumpmap: {\n\n\t\t\t\"bumpMap\": { value: null },\n\t\t\t\"bumpScale\": { value: 1 }\n\n\t\t},\n\n\t\tnormalmap: {\n\n\t\t\t\"normalMap\": { value: null },\n\t\t\t\"normalScale\": { value: new THREE.Vector2( 1, 1 ) }\n\n\t\t},\n\n\t\tdisplacementmap: {\n\n\t\t\t\"displacementMap\": { value: null },\n\t\t\t\"displacementScale\": { value: 1 },\n\t\t\t\"displacementBias\": { value: 0 }\n\n\t\t},\n\n\t\troughnessmap: {\n\n\t\t\t\"roughnessMap\": { value: null }\n\n\t\t},\n\n\t\tmetalnessmap: {\n\n\t\t\t\"metalnessMap\": { value: null }\n\n\t\t},\n\n\t\tfog: {\n\n\t\t\t\"fogDensity\": { value: 0.00025 },\n\t\t\t\"fogNear\": { value: 1 },\n\t\t\t\"fogFar\": { value: 2000 },\n\t\t\t\"fogColor\": { value: new THREE.Color( 0xffffff ) }\n\n\t\t},\n\n\t\tlights: {\n\n\t\t\t\"ambientLightColor\": { value: [] },\n\n\t\t\t\"directionalLights\": { value: [], properties: {\n\t\t\t\t\"direction\": {},\n\t\t\t\t\"color\": {},\n\n\t\t\t\t\"shadow\": {},\n\t\t\t\t\"shadowBias\": {},\n\t\t\t\t\"shadowRadius\": {},\n\t\t\t\t\"shadowMapSize\": {}\n\t\t\t} },\n\n\t\t\t\"directionalShadowMap\": { value: [] },\n\t\t\t\"directionalShadowMatrix\": { value: [] },\n\n\t\t\t\"spotLights\": { value: [], properties: {\n\t\t\t\t\"color\": {},\n\t\t\t\t\"position\": {},\n\t\t\t\t\"direction\": {},\n\t\t\t\t\"distance\": {},\n\t\t\t\t\"coneCos\": {},\n\t\t\t\t\"penumbraCos\": {},\n\t\t\t\t\"decay\": {},\n\n\t\t\t\t\"shadow\": {},\n\t\t\t\t\"shadowBias\": {},\n\t\t\t\t\"shadowRadius\": {},\n\t\t\t\t\"shadowMapSize\": {}\n\t\t\t} },\n\n\t\t\t\"spotShadowMap\": { value: [] },\n\t\t\t\"spotShadowMatrix\": { value: [] },\n\n\t\t\t\"pointLights\": { value: [], properties: {\n\t\t\t\t\"color\": {},\n\t\t\t\t\"position\": {},\n\t\t\t\t\"decay\": {},\n\t\t\t\t\"distance\": {},\n\n\t\t\t\t\"shadow\": {},\n\t\t\t\t\"shadowBias\": {},\n\t\t\t\t\"shadowRadius\": {},\n\t\t\t\t\"shadowMapSize\": {}\n\t\t\t} },\n\n\t\t\t\"pointShadowMap\": { value: [] },\n\t\t\t\"pointShadowMatrix\": { value: [] },\n\n\t\t\t\"hemisphereLights\": { value: [], properties: {\n\t\t\t\t\"direction\": {},\n\t\t\t\t\"skyColor\": {},\n\t\t\t\t\"groundColor\": {}\n\t\t\t} }\n\n\t\t},\n\n\t\tpoints: {\n\n\t\t\t\"diffuse\": { value: new THREE.Color( 0xeeeeee ) },\n\t\t\t\"opacity\": { value: 1.0 },\n\t\t\t\"size\": { value: 1.0 },\n\t\t\t\"scale\": { value: 1.0 },\n\t\t\t\"map\": { value: null },\n\t\t\t\"offsetRepeat\": { value: new THREE.Vector4( 0, 0, 1, 1 ) }\n\n\t\t}\n\n\t};\n\n\t// File:src/renderers/shaders/ShaderLib/cube_frag.glsl\n\n\tTHREE.ShaderChunk[ 'cube_frag' ] = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\\n\tgl_FragColor.a *= opacity;\\n}\\n\";\n\n\t// File:src/renderers/shaders/ShaderLib/cube_vert.glsl\n\n\tTHREE.ShaderChunk[ 'cube_vert' ] = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\tvWorldPosition = transformDirection( position, modelMatrix );\\n\t#include <begin_vertex>\\n\t#include <project_vertex>\\n}\\n\";\n\n\t// File:src/renderers/shaders/ShaderLib/depth_frag.glsl\n\n\tTHREE.ShaderChunk[ 'depth_frag' ] = \"#if DEPTH_PACKING == 3200\\n\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tvec4 diffuseColor = vec4( 1.0 );\\n\t#if DEPTH_PACKING == 3200\\n\t\tdiffuseColor.a = opacity;\\n\t#endif\\n\t#include <map_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <logdepthbuf_fragment>\\n\t#if DEPTH_PACKING == 3200\\n\t\tgl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\\n\t#elif DEPTH_PACKING == 3201\\n\t\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\t#endif\\n}\\n\";\n\n\t// File:src/renderers/shaders/ShaderLib/depth_vert.glsl\n\n\tTHREE.ShaderChunk[ 'depth_vert' ] = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <skinbase_vertex>\\n\t#include <begin_vertex>\\n\t#include <displacementmap_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n}\\n\";\n\n\t// File:src/renderers/shaders/ShaderLib/distanceRGBA_frag.glsl\n\n\tTHREE.ShaderChunk[ 'distanceRGBA_frag' ] = \"uniform vec3 lightPos;\\nvarying vec4 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\t#include <clipping_planes_fragment>\\n\tgl_FragColor = packDepthToRGBA( length( vWorldPosition.xyz - lightPos.xyz ) / 1000.0 );\\n}\\n\";\n\n\t// File:src/renderers/shaders/ShaderLib/distanceRGBA_vert.glsl\n\n\tTHREE.ShaderChunk[ 'distanceRGBA_vert' ] = \"varying vec4 vWorldPosition;\\n#include <common>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <skinbase_vertex>\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <worldpos_vertex>\\n\t#include <clipping_planes_vertex>\\n\tvWorldPosition = worldPosition;\\n}\\n\";\n\n\t// File:src/renderers/shaders/ShaderLib/equirect_frag.glsl\n\n\tTHREE.ShaderChunk[ 'equirect_frag' ] = \"uniform sampler2D tEquirect;\\nuniform float tFlip;\\nvarying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\tvec3 direction = normalize( vWorldPosition );\\n\tvec2 sampleUV;\\n\tsampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\\n\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n}\\n\";\n\n\t// File:src/renderers/shaders/ShaderLib/equirect_vert.glsl\n\n\tTHREE.ShaderChunk[ 'equirect_vert' ] = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\tvWorldPosition = transformDirection( position, modelMatrix );\\n\t#include <begin_vertex>\\n\t#include <project_vertex>\\n}\\n\";\n\n\t// File:src/renderers/shaders/ShaderLib/linedashed_frag.glsl\n\n\tTHREE.ShaderChunk[ 'linedashed_frag' ] = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\t\tdiscard;\\n\t}\\n\tvec3 outgoingLight = vec3( 0.0 );\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\t#include <logdepthbuf_fragment>\\n\t#include <color_fragment>\\n\toutgoingLight = diffuseColor.rgb;\\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n}\\n\";\n\n\t// File:src/renderers/shaders/ShaderLib/linedashed_vert.glsl\n\n\tTHREE.ShaderChunk[ 'linedashed_vert' ] = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <color_vertex>\\n\tvLineDistance = scale * lineDistance;\\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\tgl_Position = projectionMatrix * mvPosition;\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n}\\n\";\n\n\t// File:src/renderers/shaders/ShaderLib/meshbasic_frag.glsl\n\n\tTHREE.ShaderChunk[ 'meshbasic_frag' ] = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_fragment>\\n\t#include <color_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <specularmap_fragment>\\n\tReflectedLight reflectedLight;\\n\treflectedLight.directDiffuse = vec3( 0.0 );\\n\treflectedLight.directSpecular = vec3( 0.0 );\\n\treflectedLight.indirectDiffuse = diffuseColor.rgb;\\n\treflectedLight.indirectSpecular = vec3( 0.0 );\\n\t#include <aomap_fragment>\\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\t#include <normal_flip>\\n\t#include <envmap_fragment>\\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n}\\n\";\n\n\t// File:src/renderers/shaders/ShaderLib/meshbasic_vert.glsl\n\n\tTHREE.ShaderChunk[ 'meshbasic_vert' ] = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <uv2_vertex>\\n\t#include <color_vertex>\\n\t#include <skinbase_vertex>\\n\t#ifdef USE_ENVMAP\\n\t#include <beginnormal_vertex>\\n\t#include <morphnormal_vertex>\\n\t#include <skinnormal_vertex>\\n\t#include <defaultnormal_vertex>\\n\t#endif\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <worldpos_vertex>\\n\t#include <clipping_planes_vertex>\\n\t#include <envmap_vertex>\\n}\\n\";\n\n\t// File:src/renderers/shaders/ShaderLib/meshlambert_frag.glsl\n\n\tTHREE.ShaderChunk[ 'meshlambert_frag' ] = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\tvec3 totalEmissiveRadiance = emissive;\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_fragment>\\n\t#include <color_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <specularmap_fragment>\\n\t#include <emissivemap_fragment>\\n\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\t#include <lightmap_fragment>\\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\t#ifdef DOUBLE_SIDED\\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\t#else\\n\t\treflectedLight.directDiffuse = vLightFront;\\n\t#endif\\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\t#include <aomap_fragment>\\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\t#include <normal_flip>\\n\t#include <envmap_fragment>\\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n}\\n\";\n\n\t// File:src/renderers/shaders/ShaderLib/meshlambert_vert.glsl\n\n\tTHREE.ShaderChunk[ 'meshlambert_vert' ] = \"#define LAMBERT\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <uv2_vertex>\\n\t#include <color_vertex>\\n\t#include <beginnormal_vertex>\\n\t#include <morphnormal_vertex>\\n\t#include <skinbase_vertex>\\n\t#include <skinnormal_vertex>\\n\t#include <defaultnormal_vertex>\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n\t#include <worldpos_vertex>\\n\t#include <envmap_vertex>\\n\t#include <lights_lambert_vertex>\\n\t#include <shadowmap_vertex>\\n}\\n\";\n\n\t// File:src/renderers/shaders/ShaderLib/meshphong_frag.glsl\n\n\tTHREE.ShaderChunk[ 'meshphong_frag' ] = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\tvec3 totalEmissiveRadiance = emissive;\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_fragment>\\n\t#include <color_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <specularmap_fragment>\\n\t#include <normal_flip>\\n\t#include <normal_fragment>\\n\t#include <emissivemap_fragment>\\n\t#include <lights_phong_fragment>\\n\t#include <lights_template>\\n\t#include <aomap_fragment>\\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\t#include <envmap_fragment>\\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n}\\n\";\n\n\t// File:src/renderers/shaders/ShaderLib/meshphong_vert.glsl\n\n\tTHREE.ShaderChunk[ 'meshphong_vert' ] = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <uv2_vertex>\\n\t#include <color_vertex>\\n\t#include <beginnormal_vertex>\\n\t#include <morphnormal_vertex>\\n\t#include <skinbase_vertex>\\n\t#include <skinnormal_vertex>\\n\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\tvNormal = normalize( transformedNormal );\\n#endif\\n\t#include <begin_vertex>\\n\t#include <displacementmap_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n\tvViewPosition = - mvPosition.xyz;\\n\t#include <worldpos_vertex>\\n\t#include <envmap_vertex>\\n\t#include <shadowmap_vertex>\\n}\\n\";\n\n\t// File:src/renderers/shaders/ShaderLib/meshphysical_frag.glsl\n\n\tTHREE.ShaderChunk[ 'meshphysical_frag' ] = \"#define PHYSICAL\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifndef STANDARD\\n\tuniform float clearCoat;\\n\tuniform float clearCoatRoughness;\\n#endif\\nuniform float envMapIntensity;\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <lights_pars>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\tvec3 totalEmissiveRadiance = emissive;\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_fragment>\\n\t#include <color_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <specularmap_fragment>\\n\t#include <roughnessmap_fragment>\\n\t#include <metalnessmap_fragment>\\n\t#include <normal_flip>\\n\t#include <normal_fragment>\\n\t#include <emissivemap_fragment>\\n\t#include <lights_physical_fragment>\\n\t#include <lights_template>\\n\t#include <aomap_fragment>\\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n}\\n\";\n\n\t// File:src/renderers/shaders/ShaderLib/meshphysical_vert.glsl\n\n\tTHREE.ShaderChunk[ 'meshphysical_vert' ] = \"#define PHYSICAL\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <uv2_vertex>\\n\t#include <color_vertex>\\n\t#include <beginnormal_vertex>\\n\t#include <morphnormal_vertex>\\n\t#include <skinbase_vertex>\\n\t#include <skinnormal_vertex>\\n\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\tvNormal = normalize( transformedNormal );\\n#endif\\n\t#include <begin_vertex>\\n\t#include <displacementmap_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n\tvViewPosition = - mvPosition.xyz;\\n\t#include <worldpos_vertex>\\n\t#include <shadowmap_vertex>\\n}\\n\";\n\n\t// File:src/renderers/shaders/ShaderLib/normal_frag.glsl\n\n\tTHREE.ShaderChunk[ 'normal_frag' ] = \"uniform float opacity;\\nvarying vec3 vNormal;\\n#include <common>\\n#include <packing>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tgl_FragColor = vec4( packNormalToRGB( vNormal ), opacity );\\n\t#include <logdepthbuf_fragment>\\n}\\n\";\n\n\t// File:src/renderers/shaders/ShaderLib/normal_vert.glsl\n\n\tTHREE.ShaderChunk[ 'normal_vert' ] = \"varying vec3 vNormal;\\n#include <common>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\tvNormal = normalize( normalMatrix * normal );\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n}\\n\";\n\n\t// File:src/renderers/shaders/ShaderLib/points_frag.glsl\n\n\tTHREE.ShaderChunk[ 'points_frag' ] = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tvec3 outgoingLight = vec3( 0.0 );\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_particle_fragment>\\n\t#include <color_fragment>\\n\t#include <alphatest_fragment>\\n\toutgoingLight = diffuseColor.rgb;\\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n}\\n\";\n\n\t// File:src/renderers/shaders/ShaderLib/points_vert.glsl\n\n\tTHREE.ShaderChunk[ 'points_vert' ] = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <color_vertex>\\n\t#include <begin_vertex>\\n\t#include <project_vertex>\\n\t#ifdef USE_SIZEATTENUATION\\n\t\tgl_PointSize = size * ( scale / - mvPosition.z );\\n\t#else\\n\t\tgl_PointSize = size;\\n\t#endif\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n\t#include <worldpos_vertex>\\n\t#include <shadowmap_vertex>\\n}\\n\";\n\n\t// File:src/renderers/shaders/ShaderLib/shadow_frag.glsl\n\n\tTHREE.ShaderChunk[ 'shadow_frag' ] = \"uniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\tgl_FragColor = vec4( 0.0, 0.0, 0.0, opacity * ( 1.0  - getShadowMask() ) );\\n}\\n\";\n\n\t// File:src/renderers/shaders/ShaderLib/shadow_vert.glsl\n\n\tTHREE.ShaderChunk[ 'shadow_vert' ] = \"#include <shadowmap_pars_vertex>\\nvoid main() {\\n\t#include <begin_vertex>\\n\t#include <project_vertex>\\n\t#include <worldpos_vertex>\\n\t#include <shadowmap_vertex>\\n}\\n\";\n\n\t// File:src/renderers/shaders/ShaderLib.js\n\n\t/**\n\t * Webgl Shader Library for three.js\n\t *\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t */\n\n\n\tTHREE.ShaderLib = {\n\n\t\t'basic': {\n\n\t\t\tuniforms: THREE.UniformsUtils.merge( [\n\n\t\t\t\tTHREE.UniformsLib[ 'common' ],\n\t\t\t\tTHREE.UniformsLib[ 'aomap' ],\n\t\t\t\tTHREE.UniformsLib[ 'fog' ]\n\n\t\t\t] ),\n\n\t\t\tvertexShader: THREE.ShaderChunk[ 'meshbasic_vert' ],\n\t\t\tfragmentShader: THREE.ShaderChunk[ 'meshbasic_frag' ]\n\n\t\t},\n\n\t\t'lambert': {\n\n\t\t\tuniforms: THREE.UniformsUtils.merge( [\n\n\t\t\t\tTHREE.UniformsLib[ 'common' ],\n\t\t\t\tTHREE.UniformsLib[ 'aomap' ],\n\t\t\t\tTHREE.UniformsLib[ 'lightmap' ],\n\t\t\t\tTHREE.UniformsLib[ 'emissivemap' ],\n\t\t\t\tTHREE.UniformsLib[ 'fog' ],\n\t\t\t\tTHREE.UniformsLib[ 'lights' ],\n\n\t\t\t\t{\n\t\t\t\t\t\"emissive\" : { value: new THREE.Color( 0x000000 ) }\n\t\t\t\t}\n\n\t\t\t] ),\n\n\t\t\tvertexShader: THREE.ShaderChunk[ 'meshlambert_vert' ],\n\t\t\tfragmentShader: THREE.ShaderChunk[ 'meshlambert_frag' ]\n\n\t\t},\n\n\t\t'phong': {\n\n\t\t\tuniforms: THREE.UniformsUtils.merge( [\n\n\t\t\t\tTHREE.UniformsLib[ 'common' ],\n\t\t\t\tTHREE.UniformsLib[ 'aomap' ],\n\t\t\t\tTHREE.UniformsLib[ 'lightmap' ],\n\t\t\t\tTHREE.UniformsLib[ 'emissivemap' ],\n\t\t\t\tTHREE.UniformsLib[ 'bumpmap' ],\n\t\t\t\tTHREE.UniformsLib[ 'normalmap' ],\n\t\t\t\tTHREE.UniformsLib[ 'displacementmap' ],\n\t\t\t\tTHREE.UniformsLib[ 'fog' ],\n\t\t\t\tTHREE.UniformsLib[ 'lights' ],\n\n\t\t\t\t{\n\t\t\t\t\t\"emissive\" : { value: new THREE.Color( 0x000000 ) },\n\t\t\t\t\t\"specular\" : { value: new THREE.Color( 0x111111 ) },\n\t\t\t\t\t\"shininess\": { value: 30 }\n\t\t\t\t}\n\n\t\t\t] ),\n\n\t\t\tvertexShader: THREE.ShaderChunk[ 'meshphong_vert' ],\n\t\t\tfragmentShader: THREE.ShaderChunk[ 'meshphong_frag' ]\n\n\t\t},\n\n\t\t'standard': {\n\n\t\t\tuniforms: THREE.UniformsUtils.merge( [\n\n\t\t\t\tTHREE.UniformsLib[ 'common' ],\n\t\t\t\tTHREE.UniformsLib[ 'aomap' ],\n\t\t\t\tTHREE.UniformsLib[ 'lightmap' ],\n\t\t\t\tTHREE.UniformsLib[ 'emissivemap' ],\n\t\t\t\tTHREE.UniformsLib[ 'bumpmap' ],\n\t\t\t\tTHREE.UniformsLib[ 'normalmap' ],\n\t\t\t\tTHREE.UniformsLib[ 'displacementmap' ],\n\t\t\t\tTHREE.UniformsLib[ 'roughnessmap' ],\n\t\t\t\tTHREE.UniformsLib[ 'metalnessmap' ],\n\t\t\t\tTHREE.UniformsLib[ 'fog' ],\n\t\t\t\tTHREE.UniformsLib[ 'lights' ],\n\n\t\t\t\t{\n\t\t\t\t\t\"emissive\" : { value: new THREE.Color( 0x000000 ) },\n\t\t\t\t\t\"roughness\": { value: 0.5 },\n\t\t\t\t\t\"metalness\": { value: 0 },\n\t\t\t\t\t\"envMapIntensity\" : { value: 1 }, // temporary\n\t\t\t\t}\n\n\t\t\t] ),\n\n\t\t\tvertexShader: THREE.ShaderChunk[ 'meshphysical_vert' ],\n\t\t\tfragmentShader: THREE.ShaderChunk[ 'meshphysical_frag' ]\n\n\t\t},\n\n\t\t'points': {\n\n\t\t\tuniforms: THREE.UniformsUtils.merge( [\n\n\t\t\t\tTHREE.UniformsLib[ 'points' ],\n\t\t\t\tTHREE.UniformsLib[ 'fog' ]\n\n\t\t\t] ),\n\n\t\t\tvertexShader: THREE.ShaderChunk[ 'points_vert' ],\n\t\t\tfragmentShader: THREE.ShaderChunk[ 'points_frag' ]\n\n\t\t},\n\n\t\t'dashed': {\n\n\t\t\tuniforms: THREE.UniformsUtils.merge( [\n\n\t\t\t\tTHREE.UniformsLib[ 'common' ],\n\t\t\t\tTHREE.UniformsLib[ 'fog' ],\n\n\t\t\t\t{\n\t\t\t\t\t\"scale\"    : { value: 1 },\n\t\t\t\t\t\"dashSize\" : { value: 1 },\n\t\t\t\t\t\"totalSize\": { value: 2 }\n\t\t\t\t}\n\n\t\t\t] ),\n\n\t\t\tvertexShader: THREE.ShaderChunk[ 'linedashed_vert' ],\n\t\t\tfragmentShader: THREE.ShaderChunk[ 'linedashed_frag' ]\n\n\t\t},\n\n\t\t'depth': {\n\n\t\t\tuniforms: THREE.UniformsUtils.merge( [\n\n\t\t\t\tTHREE.UniformsLib[ 'common' ],\n\t\t\t\tTHREE.UniformsLib[ 'displacementmap' ]\n\n\t\t\t] ),\n\n\t\t\tvertexShader: THREE.ShaderChunk[ 'depth_vert' ],\n\t\t\tfragmentShader: THREE.ShaderChunk[ 'depth_frag' ]\n\n\t\t},\n\n\t\t'normal': {\n\n\t\t\tuniforms: {\n\n\t\t\t\t\"opacity\" : { value: 1.0 }\n\n\t\t\t},\n\n\t\t\tvertexShader: THREE.ShaderChunk[ 'normal_vert' ],\n\t\t\tfragmentShader: THREE.ShaderChunk[ 'normal_frag' ]\n\n\t\t},\n\n\t\t/* -------------------------------------------------------------------------\n\t\t//\tCube map shader\n\t\t ------------------------------------------------------------------------- */\n\n\t\t'cube': {\n\n\t\t\tuniforms: {\n\t\t\t\t\"tCube\": { value: null },\n\t\t\t\t\"tFlip\": { value: - 1 },\n\t\t\t\t\"opacity\": { value: 1.0 }\n\t\t\t},\n\n\t\t\tvertexShader: THREE.ShaderChunk[ 'cube_vert' ],\n\t\t\tfragmentShader: THREE.ShaderChunk[ 'cube_frag' ]\n\n\t\t},\n\n\t\t/* -------------------------------------------------------------------------\n\t\t//\tCube map shader\n\t\t ------------------------------------------------------------------------- */\n\n\t\t'equirect': {\n\n\t\t\tuniforms: {\n\t\t\t\t\"tEquirect\": { value: null },\n\t\t\t\t\"tFlip\": { value: - 1 }\n\t\t\t},\n\n\t\t\tvertexShader: THREE.ShaderChunk[ 'equirect_vert' ],\n\t\t\tfragmentShader: THREE.ShaderChunk[ 'equirect_frag' ]\n\n\t\t},\n\n\t\t'distanceRGBA': {\n\n\t\t\tuniforms: {\n\n\t\t\t\t\"lightPos\": { value: new THREE.Vector3() }\n\n\t\t\t},\n\n\t\t\tvertexShader: THREE.ShaderChunk[ 'distanceRGBA_vert' ],\n\t\t\tfragmentShader: THREE.ShaderChunk[ 'distanceRGBA_frag' ]\n\n\t\t}\n\n\t};\n\n\tTHREE.ShaderLib[ 'physical' ] = {\n\n\t\tuniforms: THREE.UniformsUtils.merge( [\n\n\t\t\tTHREE.ShaderLib[ 'standard' ].uniforms,\n\n\t\t\t{\n\t\t\t\t\"clearCoat\": { value: 0 },\n\t\t\t\t\"clearCoatRoughness\": { value: 0 }\n\t\t\t}\n\n\t\t] ),\n\n\t\tvertexShader: THREE.ShaderChunk[ 'meshphysical_vert' ],\n\t\tfragmentShader: THREE.ShaderChunk[ 'meshphysical_frag' ]\n\n\t};\n\n\t// File:src/renderers/WebGLRenderer.js\n\n\t/**\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author szimek / https://github.com/szimek/\n\t * @author tschw\n\t */\n\n\tTHREE.WebGLRenderer = function ( parameters ) {\n\n\t\tconsole.log( 'THREE.WebGLRenderer', THREE.REVISION );\n\n\t\tparameters = parameters || {};\n\n\t\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' ),\n\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false;\n\n\t\tvar lights = [];\n\n\t\tvar opaqueObjects = [];\n\t\tvar opaqueObjectsLastIndex = - 1;\n\t\tvar transparentObjects = [];\n\t\tvar transparentObjectsLastIndex = - 1;\n\n\t\tvar morphInfluences = new Float32Array( 8 );\n\n\t\tvar sprites = [];\n\t\tvar lensFlares = [];\n\n\t\t// public properties\n\n\t\tthis.domElement = _canvas;\n\t\tthis.context = null;\n\n\t\t// clearing\n\n\t\tthis.autoClear = true;\n\t\tthis.autoClearColor = true;\n\t\tthis.autoClearDepth = true;\n\t\tthis.autoClearStencil = true;\n\n\t\t// scene graph\n\n\t\tthis.sortObjects = true;\n\n\t\t// user-defined clipping\n\n\t\tthis.clippingPlanes = [];\n\t\tthis.localClippingEnabled = false;\n\n\t\t// physically based shading\n\n\t\tthis.gammaFactor = 2.0;\t// for backwards compatibility\n\t\tthis.gammaInput = false;\n\t\tthis.gammaOutput = false;\n\n\t\t// physical lights\n\n\t\tthis.physicallyCorrectLights = false;\n\n\t\t// tone mapping\n\n\t\tthis.toneMapping = THREE.LinearToneMapping;\n\t\tthis.toneMappingExposure = 1.0;\n\t\tthis.toneMappingWhitePoint = 1.0;\n\n\t\t// morphs\n\n\t\tthis.maxMorphTargets = 8;\n\t\tthis.maxMorphNormals = 4;\n\n\t\t// internal properties\n\n\t\tvar _this = this,\n\n\t\t// internal state cache\n\n\t\t_currentProgram = null,\n\t\t_currentRenderTarget = null,\n\t\t_currentFramebuffer = null,\n\t\t_currentMaterialId = - 1,\n\t\t_currentGeometryProgram = '',\n\t\t_currentCamera = null,\n\n\t\t_currentScissor = new THREE.Vector4(),\n\t\t_currentScissorTest = null,\n\n\t\t_currentViewport = new THREE.Vector4(),\n\n\t\t//\n\n\t\t_usedTextureUnits = 0,\n\n\t\t//\n\n\t\t_clearColor = new THREE.Color( 0x000000 ),\n\t\t_clearAlpha = 0,\n\n\t\t_width = _canvas.width,\n\t\t_height = _canvas.height,\n\n\t\t_pixelRatio = 1,\n\n\t\t_scissor = new THREE.Vector4( 0, 0, _width, _height ),\n\t\t_scissorTest = false,\n\n\t\t_viewport = new THREE.Vector4( 0, 0, _width, _height ),\n\n\t\t// frustum\n\n\t\t_frustum = new THREE.Frustum(),\n\n\t\t// clipping\n\n\t\t_clipping = new THREE.WebGLClipping(),\n\t\t_clippingEnabled = false,\n\t\t_localClippingEnabled = false,\n\n\t\t_sphere = new THREE.Sphere(),\n\n\t\t// camera matrices cache\n\n\t\t_projScreenMatrix = new THREE.Matrix4(),\n\n\t\t_vector3 = new THREE.Vector3(),\n\n\t\t// light arrays cache\n\n\t\t_lights = {\n\n\t\t\thash: '',\n\n\t\t\tambient: [ 0, 0, 0 ],\n\t\t\tdirectional: [],\n\t\t\tdirectionalShadowMap: [],\n\t\t\tdirectionalShadowMatrix: [],\n\t\t\tspot: [],\n\t\t\tspotShadowMap: [],\n\t\t\tspotShadowMatrix: [],\n\t\t\tpoint: [],\n\t\t\tpointShadowMap: [],\n\t\t\tpointShadowMatrix: [],\n\t\t\themi: [],\n\n\t\t\tshadows: []\n\n\t\t},\n\n\t\t// info\n\n\t\t_infoRender = {\n\n\t\t\tcalls: 0,\n\t\t\tvertices: 0,\n\t\t\tfaces: 0,\n\t\t\tpoints: 0\n\n\t\t};\n\n\t\tthis.info = {\n\n\t\t\trender: _infoRender,\n\t\t\tmemory: {\n\n\t\t\t\tgeometries: 0,\n\t\t\t\ttextures: 0\n\n\t\t\t},\n\t\t\tprograms: null\n\n\t\t};\n\n\n\t\t// initialize\n\n\t\tvar _gl;\n\n\t\ttry {\n\n\t\t\tvar attributes = {\n\t\t\t\talpha: _alpha,\n\t\t\t\tdepth: _depth,\n\t\t\t\tstencil: _stencil,\n\t\t\t\tantialias: _antialias,\n\t\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer\n\t\t\t};\n\n\t\t\t_gl = _context || _canvas.getContext( 'webgl', attributes ) || _canvas.getContext( 'experimental-webgl', attributes );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\n\n\t\t\t\t\tthrow 'Error creating WebGL context with your selected attributes.';\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow 'Error creating WebGL context.';\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: ' + error );\n\n\t\t}\n\n\t\tvar extensions = new THREE.WebGLExtensions( _gl );\n\n\t\textensions.get( 'WEBGL_depth_texture' );\n\t\textensions.get( 'OES_texture_float' );\n\t\textensions.get( 'OES_texture_float_linear' );\n\t\textensions.get( 'OES_texture_half_float' );\n\t\textensions.get( 'OES_texture_half_float_linear' );\n\t\textensions.get( 'OES_standard_derivatives' );\n\t\textensions.get( 'ANGLE_instanced_arrays' );\n\n\t\tif ( extensions.get( 'OES_element_index_uint' ) ) {\n\n\t\t\tTHREE.BufferGeometry.MaxIndex = 4294967296;\n\n\t\t}\n\n\t\tvar capabilities = new THREE.WebGLCapabilities( _gl, extensions, parameters );\n\n\t\tvar state = new THREE.WebGLState( _gl, extensions, paramThreeToGL );\n\t\tvar properties = new THREE.WebGLProperties();\n\t\tvar textures = new THREE.WebGLTextures( _gl, extensions, state, properties, capabilities, paramThreeToGL, this.info );\n\t\tvar objects = new THREE.WebGLObjects( _gl, properties, this.info );\n\t\tvar programCache = new THREE.WebGLPrograms( this, capabilities );\n\t\tvar lightCache = new THREE.WebGLLights();\n\n\t\tthis.info.programs = programCache.programs;\n\n\t\tvar bufferRenderer = new THREE.WebGLBufferRenderer( _gl, extensions, _infoRender );\n\t\tvar indexedBufferRenderer = new THREE.WebGLIndexedBufferRenderer( _gl, extensions, _infoRender );\n\n\t\t//\n\n\t\tvar backgroundCamera = new THREE.OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\t\tvar backgroundCamera2 = new THREE.PerspectiveCamera();\n\t\tvar backgroundPlaneMesh = new THREE.Mesh(\n\t\t\tnew THREE.PlaneBufferGeometry( 2, 2 ),\n\t\t\tnew THREE.MeshBasicMaterial( { depthTest: false, depthWrite: false, fog: false } )\n\t\t);\n\t\tvar backgroundBoxShader = THREE.ShaderLib[ 'cube' ];\n\t\tvar backgroundBoxMesh = new THREE.Mesh(\n\t\t\tnew THREE.BoxBufferGeometry( 5, 5, 5 ),\n\t\t\tnew THREE.ShaderMaterial( {\n\t\t\t\tuniforms: backgroundBoxShader.uniforms,\n\t\t\t\tvertexShader: backgroundBoxShader.vertexShader,\n\t\t\t\tfragmentShader: backgroundBoxShader.fragmentShader,\n\t\t\t\tside: THREE.BackSide,\n\t\t\t\tdepthTest: false,\n\t\t\t\tdepthWrite: false,\n\t\t\t\tfog: false\n\t\t\t} )\n\t\t);\n\n\t\t//\n\n\t\tfunction getTargetPixelRatio() {\n\n\t\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t\t}\n\n\t\tfunction glClearColor( r, g, b, a ) {\n\n\t\t\tif ( _premultipliedAlpha === true ) {\n\n\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t}\n\n\t\t\tstate.clearColor( r, g, b, a );\n\n\t\t}\n\n\t\tfunction setDefaultGLState() {\n\n\t\t\tstate.init();\n\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\n\n\t\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\n\n\t\t}\n\n\t\tfunction resetGLState() {\n\n\t\t\t_currentProgram = null;\n\t\t\t_currentCamera = null;\n\n\t\t\t_currentGeometryProgram = '';\n\t\t\t_currentMaterialId = - 1;\n\n\t\t\tstate.reset();\n\n\t\t}\n\n\t\tsetDefaultGLState();\n\n\t\tthis.context = _gl;\n\t\tthis.capabilities = capabilities;\n\t\tthis.extensions = extensions;\n\t\tthis.properties = properties;\n\t\tthis.state = state;\n\n\t\t// shadow map\n\n\t\tvar shadowMap = new THREE.WebGLShadowMap( this, _lights, objects, capabilities );\n\n\t\tthis.shadowMap = shadowMap;\n\n\n\t\t// Plugins\n\n\t\tvar spritePlugin = new THREE.SpritePlugin( this, sprites );\n\t\tvar lensFlarePlugin = new THREE.LensFlarePlugin( this, lensFlares );\n\n\t\t// API\n\n\t\tthis.getContext = function () {\n\n\t\t\treturn _gl;\n\n\t\t};\n\n\t\tthis.getContextAttributes = function () {\n\n\t\t\treturn _gl.getContextAttributes();\n\n\t\t};\n\n\t\tthis.forceContextLoss = function () {\n\n\t\t\textensions.get( 'WEBGL_lose_context' ).loseContext();\n\n\t\t};\n\n\t\tthis.getMaxAnisotropy = function () {\n\n\t\t\treturn capabilities.getMaxAnisotropy();\n\n\t\t};\n\n\t\tthis.getPrecision = function () {\n\n\t\t\treturn capabilities.precision;\n\n\t\t};\n\n\t\tthis.getPixelRatio = function () {\n\n\t\t\treturn _pixelRatio;\n\n\t\t};\n\n\t\tthis.setPixelRatio = function ( value ) {\n\n\t\t\tif ( value === undefined ) return;\n\n\t\t\t_pixelRatio = value;\n\n\t\t\tthis.setSize( _viewport.z, _viewport.w, false );\n\n\t\t};\n\n\t\tthis.getSize = function () {\n\n\t\t\treturn {\n\t\t\t\twidth: _width,\n\t\t\t\theight: _height\n\t\t\t};\n\n\t\t};\n\n\t\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\t_canvas.width = width * _pixelRatio;\n\t\t\t_canvas.height = height * _pixelRatio;\n\n\t\t\tif ( updateStyle !== false ) {\n\n\t\t\t\t_canvas.style.width = width + 'px';\n\t\t\t\t_canvas.style.height = height + 'px';\n\n\t\t\t}\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t\tstate.viewport( _viewport.set( x, y, width, height ) );\n\n\t\t};\n\n\t\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t\tstate.scissor( _scissor.set( x, y, width, height ) );\n\n\t\t};\n\n\t\tthis.setScissorTest = function ( boolean ) {\n\n\t\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t\t};\n\n\t\t// Clearing\n\n\t\tthis.getClearColor = function () {\n\n\t\t\treturn _clearColor;\n\n\t\t};\n\n\t\tthis.setClearColor = function ( color, alpha ) {\n\n\t\t\t_clearColor.set( color );\n\n\t\t\t_clearAlpha = alpha !== undefined ? alpha : 1;\n\n\t\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\n\n\t\t};\n\n\t\tthis.getClearAlpha = function () {\n\n\t\t\treturn _clearAlpha;\n\n\t\t};\n\n\t\tthis.setClearAlpha = function ( alpha ) {\n\n\t\t\t_clearAlpha = alpha;\n\n\t\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\n\n\t\t};\n\n\t\tthis.clear = function ( color, depth, stencil ) {\n\n\t\t\tvar bits = 0;\n\n\t\t\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\n\t\t\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\t\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t\t_gl.clear( bits );\n\n\t\t};\n\n\t\tthis.clearColor = function () {\n\n\t\t\tthis.clear( true, false, false );\n\n\t\t};\n\n\t\tthis.clearDepth = function () {\n\n\t\t\tthis.clear( false, true, false );\n\n\t\t};\n\n\t\tthis.clearStencil = function () {\n\n\t\t\tthis.clear( false, false, true );\n\n\t\t};\n\n\t\tthis.clearTarget = function ( renderTarget, color, depth, stencil ) {\n\n\t\t\tthis.setRenderTarget( renderTarget );\n\t\t\tthis.clear( color, depth, stencil );\n\n\t\t};\n\n\t\t// Reset\n\n\t\tthis.resetGLState = resetGLState;\n\n\t\tthis.dispose = function() {\n\n\t\t\ttransparentObjects = [];\n\t\t\ttransparentObjectsLastIndex = -1;\n\t\t\topaqueObjects = [];\n\t\t\topaqueObjectsLastIndex = -1;\n\n\t\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\n\t\t};\n\n\t\t// Events\n\n\t\tfunction onContextLost( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tresetGLState();\n\t\t\tsetDefaultGLState();\n\n\t\t\tproperties.clear();\n\n\t\t}\n\n\t\tfunction onMaterialDispose( event ) {\n\n\t\t\tvar material = event.target;\n\n\t\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tdeallocateMaterial( material );\n\n\t\t}\n\n\t\t// Buffer deallocation\n\n\t\tfunction deallocateMaterial( material ) {\n\n\t\t\treleaseMaterialProgramReference( material );\n\n\t\t\tproperties.delete( material );\n\n\t\t}\n\n\n\t\tfunction releaseMaterialProgramReference( material ) {\n\n\t\t\tvar programInfo = properties.get( material ).program;\n\n\t\t\tmaterial.program = undefined;\n\n\t\t\tif ( programInfo !== undefined ) {\n\n\t\t\t\tprogramCache.releaseProgram( programInfo );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Buffer rendering\n\n\t\tthis.renderBufferImmediate = function ( object, program, material ) {\n\n\t\t\tstate.initAttributes();\n\n\t\t\tvar buffers = properties.get( object );\n\n\t\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\n\t\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\n\t\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\n\t\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\n\n\t\t\tvar attributes = program.getAttributes();\n\n\t\t\tif ( object.hasPositions ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.position );\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\n\n\t\t\t\tstate.enableAttribute( attributes.position );\n\t\t\t\t_gl.vertexAttribPointer( attributes.position, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( object.hasNormals ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.normal );\n\n\t\t\t\tif ( material.type !== 'MeshPhongMaterial' && material.type !== 'MeshStandardMaterial' && material.type !== 'MeshPhysicalMaterial' && material.shading === THREE.FlatShading ) {\n\n\t\t\t\t\tfor ( var i = 0, l = object.count * 3; i < l; i += 9 ) {\n\n\t\t\t\t\t\tvar array = object.normalArray;\n\n\t\t\t\t\t\tvar nx = ( array[ i + 0 ] + array[ i + 3 ] + array[ i + 6 ] ) / 3;\n\t\t\t\t\t\tvar ny = ( array[ i + 1 ] + array[ i + 4 ] + array[ i + 7 ] ) / 3;\n\t\t\t\t\t\tvar nz = ( array[ i + 2 ] + array[ i + 5 ] + array[ i + 8 ] ) / 3;\n\n\t\t\t\t\t\tarray[ i + 0 ] = nx;\n\t\t\t\t\t\tarray[ i + 1 ] = ny;\n\t\t\t\t\t\tarray[ i + 2 ] = nz;\n\n\t\t\t\t\t\tarray[ i + 3 ] = nx;\n\t\t\t\t\t\tarray[ i + 4 ] = ny;\n\t\t\t\t\t\tarray[ i + 5 ] = nz;\n\n\t\t\t\t\t\tarray[ i + 6 ] = nx;\n\t\t\t\t\t\tarray[ i + 7 ] = ny;\n\t\t\t\t\t\tarray[ i + 8 ] = nz;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\n\n\t\t\t\tstate.enableAttribute( attributes.normal );\n\n\t\t\t\t_gl.vertexAttribPointer( attributes.normal, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( object.hasUvs && material.map ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.uv );\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\n\n\t\t\t\tstate.enableAttribute( attributes.uv );\n\n\t\t\t\t_gl.vertexAttribPointer( attributes.uv, 2, _gl.FLOAT, false, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( object.hasColors && material.vertexColors !== THREE.NoColors ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.color );\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\n\n\t\t\t\tstate.enableAttribute( attributes.color );\n\n\t\t\t\t_gl.vertexAttribPointer( attributes.color, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t\t}\n\n\t\t\tstate.disableUnusedAttributes();\n\n\t\t\t_gl.drawArrays( _gl.TRIANGLES, 0, object.count );\n\n\t\t\tobject.count = 0;\n\n\t\t};\n\n\t\tthis.renderBufferDirect = function ( camera, fog, geometry, material, object, group ) {\n\n\t\t\tsetMaterial( material );\n\n\t\t\tvar program = setProgram( camera, fog, material, object );\n\n\t\t\tvar updateBuffers = false;\n\t\t\tvar geometryProgram = geometry.id + '_' + program.id + '_' + material.wireframe;\n\n\t\t\tif ( geometryProgram !== _currentGeometryProgram ) {\n\n\t\t\t\t_currentGeometryProgram = geometryProgram;\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t\t// morph targets\n\n\t\t\tvar morphTargetInfluences = object.morphTargetInfluences;\n\n\t\t\tif ( morphTargetInfluences !== undefined ) {\n\n\t\t\t\tvar activeInfluences = [];\n\n\t\t\t\tfor ( var i = 0, l = morphTargetInfluences.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar influence = morphTargetInfluences[ i ];\n\t\t\t\t\tactiveInfluences.push( [ influence, i ] );\n\n\t\t\t\t}\n\n\t\t\t\tactiveInfluences.sort( absNumericalSort );\n\n\t\t\t\tif ( activeInfluences.length > 8 ) {\n\n\t\t\t\t\tactiveInfluences.length = 8;\n\n\t\t\t\t}\n\n\t\t\t\tvar morphAttributes = geometry.morphAttributes;\n\n\t\t\t\tfor ( var i = 0, l = activeInfluences.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar influence = activeInfluences[ i ];\n\t\t\t\t\tmorphInfluences[ i ] = influence[ 0 ];\n\n\t\t\t\t\tif ( influence[ 0 ] !== 0 ) {\n\n\t\t\t\t\t\tvar index = influence[ 1 ];\n\n\t\t\t\t\t\tif ( material.morphTargets === true && morphAttributes.position ) geometry.addAttribute( 'morphTarget' + i, morphAttributes.position[ index ] );\n\t\t\t\t\t\tif ( material.morphNormals === true && morphAttributes.normal ) geometry.addAttribute( 'morphNormal' + i, morphAttributes.normal[ index ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( material.morphTargets === true ) geometry.removeAttribute( 'morphTarget' + i );\n\t\t\t\t\t\tif ( material.morphNormals === true ) geometry.removeAttribute( 'morphNormal' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tprogram.getUniforms().setValue(\n\t\t\t\t\t\t_gl, 'morphTargetInfluences', morphInfluences );\n\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar index = geometry.index;\n\t\t\tvar position = geometry.attributes.position;\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tindex = objects.getWireframeAttribute( geometry );\n\n\t\t\t}\n\n\t\t\tvar renderer;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\trenderer = indexedBufferRenderer;\n\t\t\t\trenderer.setIndex( index );\n\n\t\t\t} else {\n\n\t\t\t\trenderer = bufferRenderer;\n\n\t\t\t}\n\n\t\t\tif ( updateBuffers ) {\n\n\t\t\t\tsetupVertexAttributes( material, program, geometry );\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, objects.getAttributeBuffer( index ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar dataStart = 0;\n\t\t\tvar dataCount = Infinity;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tdataCount = index.count;\n\n\t\t\t} else if ( position !== undefined ) {\n\n\t\t\t\tdataCount = position.count;\n\n\t\t\t}\n\n\t\t\tvar rangeStart = geometry.drawRange.start;\n\t\t\tvar rangeCount = geometry.drawRange.count;\n\n\t\t\tvar groupStart = group !== null ? group.start : 0;\n\t\t\tvar groupCount = group !== null ? group.count : Infinity;\n\n\t\t\tvar drawStart = Math.max( dataStart, rangeStart, groupStart );\n\t\t\tvar drawEnd = Math.min( dataStart + dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n\n\t\t\tvar drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n\n\t\t\t//\n\n\t\t\tif ( object instanceof THREE.Mesh ) {\n\n\t\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( object.drawMode ) {\n\n\t\t\t\t\t\tcase THREE.TrianglesDrawMode:\n\t\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase THREE.TriangleStripDrawMode:\n\t\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_STRIP );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase THREE.TriangleFanDrawMode:\n\t\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_FAN );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\n\t\t\t} else if ( object instanceof THREE.Line ) {\n\n\t\t\t\tvar lineWidth = material.linewidth;\n\n\t\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\t\tif ( object instanceof THREE.LineSegments ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object instanceof THREE.Points ) {\n\n\t\t\t\trenderer.setMode( _gl.POINTS );\n\n\t\t\t}\n\n\t\t\tif ( geometry instanceof THREE.InstancedBufferGeometry ) {\n\n\t\t\t\tif ( geometry.maxInstancedCount > 0 ) {\n\n\t\t\t\t\trenderer.renderInstances( geometry, drawStart, drawCount );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction setupVertexAttributes( material, program, geometry, startIndex ) {\n\n\t\t\tvar extension;\n\n\t\t\tif ( geometry instanceof THREE.InstancedBufferGeometry ) {\n\n\t\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\t\tif ( extension === null ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( startIndex === undefined ) startIndex = 0;\n\n\t\t\tstate.initAttributes();\n\n\t\t\tvar geometryAttributes = geometry.attributes;\n\n\t\t\tvar programAttributes = program.getAttributes();\n\n\t\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\t\tfor ( var name in programAttributes ) {\n\n\t\t\t\tvar programAttribute = programAttributes[ name ];\n\n\t\t\t\tif ( programAttribute >= 0 ) {\n\n\t\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\t\tvar type = _gl.FLOAT;\n\t\t\t\t\t\tvar array = geometryAttribute.array;\n\t\t\t\t\t\tvar normalized = geometryAttribute.normalized;\n\n\t\t\t\t\t\tif ( array instanceof Float32Array ) {\n\n\t\t\t\t\t\t\ttype = _gl.FLOAT;\n\n\t\t\t\t\t\t} else if ( array instanceof Float64Array ) {\n\n\t\t\t\t\t\t\tconsole.warn(\"Unsupported data buffer format: Float64Array\");\n\n\t\t\t\t\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\t\t\t\t\ttype = _gl.UNSIGNED_SHORT;\n\n\t\t\t\t\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\t\t\t\t\ttype = _gl.SHORT;\n\n\t\t\t\t\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\t\t\t\t\ttype = _gl.UNSIGNED_INT;\n\n\t\t\t\t\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\t\t\t\t\ttype = _gl.INT;\n\n\t\t\t\t\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\t\t\t\t\ttype = _gl.BYTE;\n\n\t\t\t\t\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\t\t\t\t\ttype = _gl.UNSIGNED_BYTE;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar size = geometryAttribute.itemSize;\n\t\t\t\t\t\tvar buffer = objects.getAttributeBuffer( geometryAttribute );\n\n\t\t\t\t\t\tif ( geometryAttribute instanceof THREE.InterleavedBufferAttribute ) {\n\n\t\t\t\t\t\t\tvar data = geometryAttribute.data;\n\t\t\t\t\t\t\tvar stride = data.stride;\n\t\t\t\t\t\t\tvar offset = geometryAttribute.offset;\n\n\t\t\t\t\t\t\tif ( data instanceof THREE.InstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, data.meshPerAttribute, extension );\n\n\t\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\n\t\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, stride * data.array.BYTES_PER_ELEMENT, ( startIndex * stride + offset ) * data.array.BYTES_PER_ELEMENT );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( geometryAttribute instanceof THREE.InstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute, extension );\n\n\t\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\n\t\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, 0, startIndex * size * geometryAttribute.array.BYTES_PER_ELEMENT );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, value );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, value );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib4fv( programAttribute, value );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib1fv( programAttribute, value );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.disableUnusedAttributes();\n\n\t\t}\n\n\t\t// Sorting\n\n\t\tfunction absNumericalSort( a, b ) {\n\n\t\t\treturn Math.abs( b[ 0 ] ) - Math.abs( a[ 0 ] );\n\n\t\t}\n\n\t\tfunction painterSortStable ( a, b ) {\n\n\t\t\tif ( a.object.renderOrder !== b.object.renderOrder ) {\n\n\t\t\t\treturn a.object.renderOrder - b.object.renderOrder;\n\n\t\t\t} else if ( a.material.program && b.material.program && a.material.program !== b.material.program ) {\n\n\t\t\t\treturn a.material.program.id - b.material.program.id;\n\n\t\t\t} else if ( a.material.id !== b.material.id ) {\n\n\t\t\t\treturn a.material.id - b.material.id;\n\n\t\t\t} else if ( a.z !== b.z ) {\n\n\t\t\t\treturn a.z - b.z;\n\n\t\t\t} else {\n\n\t\t\t\treturn a.id - b.id;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction reversePainterSortStable ( a, b ) {\n\n\t\t\tif ( a.object.renderOrder !== b.object.renderOrder ) {\n\n\t\t\t\treturn a.object.renderOrder - b.object.renderOrder;\n\n\t\t\t} if ( a.z !== b.z ) {\n\n\t\t\t\treturn b.z - a.z;\n\n\t\t\t} else {\n\n\t\t\t\treturn a.id - b.id;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Rendering\n\n\t\tthis.render = function ( scene, camera, renderTarget, forceClear ) {\n\n\t\t\tif ( camera instanceof THREE.Camera === false ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar fog = scene.fog;\n\n\t\t\t// reset caching for this frame\n\n\t\t\t_currentGeometryProgram = '';\n\t\t\t_currentMaterialId = - 1;\n\t\t\t_currentCamera = null;\n\n\t\t\t// update scene graph\n\n\t\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t\t// update camera matrices and frustum\n\n\t\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\n\n\t\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t\tlights.length = 0;\n\n\t\t\topaqueObjectsLastIndex = - 1;\n\t\t\ttransparentObjectsLastIndex = - 1;\n\n\t\t\tsprites.length = 0;\n\t\t\tlensFlares.length = 0;\n\n\t\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t\t_clippingEnabled = _clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\n\t\t\tprojectObject( scene, camera );\n\n\t\t\topaqueObjects.length = opaqueObjectsLastIndex + 1;\n\t\t\ttransparentObjects.length = transparentObjectsLastIndex + 1;\n\n\t\t\tif ( _this.sortObjects === true ) {\n\n\t\t\t\topaqueObjects.sort( painterSortStable );\n\t\t\t\ttransparentObjects.sort( reversePainterSortStable );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( _clippingEnabled ) _clipping.beginShadows();\n\n\t\t\tsetupShadows( lights );\n\n\t\t\tshadowMap.render( scene, camera );\n\n\t\t\tsetupLights( lights, camera );\n\n\t\t\tif ( _clippingEnabled ) _clipping.endShadows();\n\n\t\t\t//\n\n\t\t\t_infoRender.calls = 0;\n\t\t\t_infoRender.vertices = 0;\n\t\t\t_infoRender.faces = 0;\n\t\t\t_infoRender.points = 0;\n\n\t\t\tif ( renderTarget === undefined ) {\n\n\t\t\t\trenderTarget = null;\n\n\t\t\t}\n\n\t\t\tthis.setRenderTarget( renderTarget );\n\n\t\t\t//\n\n\t\t\tvar background = scene.background;\n\n\t\t\tif ( background === null ) {\n\n\t\t\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\n\n\t\t\t} else if ( background instanceof THREE.Color ) {\n\n\t\t\t\tglClearColor( background.r, background.g, background.b, 1 );\n\n\t\t\t}\n\n\t\t\tif ( this.autoClear || forceClear ) {\n\n\t\t\t\tthis.clear( this.autoClearColor, this.autoClearDepth, this.autoClearStencil );\n\n\t\t\t}\n\n\t\t\tif ( background instanceof THREE.CubeTexture ) {\n\n\t\t\t\tbackgroundCamera2.projectionMatrix.copy( camera.projectionMatrix );\n\n\t\t\t\tbackgroundCamera2.matrixWorld.extractRotation( camera.matrixWorld );\n\t\t\t\tbackgroundCamera2.matrixWorldInverse.getInverse( backgroundCamera2.matrixWorld );\n\n\t\t\t\tbackgroundBoxMesh.material.uniforms[ \"tCube\" ].value = background;\n\t\t\t\tbackgroundBoxMesh.modelViewMatrix.multiplyMatrices( backgroundCamera2.matrixWorldInverse, backgroundBoxMesh.matrixWorld );\n\n\t\t\t\tobjects.update( backgroundBoxMesh );\n\n\t\t\t\t_this.renderBufferDirect( backgroundCamera2, null, backgroundBoxMesh.geometry, backgroundBoxMesh.material, backgroundBoxMesh, null );\n\n\t\t\t} else if ( background instanceof THREE.Texture ) {\n\n\t\t\t\tbackgroundPlaneMesh.material.map = background;\n\n\t\t\t\tobjects.update( backgroundPlaneMesh );\n\n\t\t\t\t_this.renderBufferDirect( backgroundCamera, null, backgroundPlaneMesh.geometry, backgroundPlaneMesh.material, backgroundPlaneMesh, null );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( scene.overrideMaterial ) {\n\n\t\t\t\tvar overrideMaterial = scene.overrideMaterial;\n\n\t\t\t\trenderObjects( opaqueObjects, camera, fog, overrideMaterial );\n\t\t\t\trenderObjects( transparentObjects, camera, fog, overrideMaterial );\n\n\t\t\t} else {\n\n\t\t\t\t// opaque pass (front-to-back order)\n\n\t\t\t\tstate.setBlending( THREE.NoBlending );\n\t\t\t\trenderObjects( opaqueObjects, camera, fog );\n\n\t\t\t\t// transparent pass (back-to-front order)\n\n\t\t\t\trenderObjects( transparentObjects, camera, fog );\n\n\t\t\t}\n\n\t\t\t// custom render plugins (post pass)\n\n\t\t\tspritePlugin.render( scene, camera );\n\t\t\tlensFlarePlugin.render( scene, camera, _currentViewport );\n\n\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\tif ( renderTarget ) {\n\n\t\t\t\ttextures.updateRenderTargetMipmap( renderTarget );\n\n\t\t\t}\n\n\t\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\t\tstate.setDepthTest( true );\n\t\t\tstate.setDepthWrite( true );\n\t\t\tstate.setColorWrite( true );\n\n\t\t\t// _gl.finish();\n\n\t\t};\n\n\t\tfunction pushRenderItem( object, geometry, material, z, group ) {\n\n\t\t\tvar array, index;\n\n\t\t\t// allocate the next position in the appropriate array\n\n\t\t\tif ( material.transparent ) {\n\n\t\t\t\tarray = transparentObjects;\n\t\t\t\tindex = ++ transparentObjectsLastIndex;\n\n\t\t\t} else {\n\n\t\t\t\tarray = opaqueObjects;\n\t\t\t\tindex = ++ opaqueObjectsLastIndex;\n\n\t\t\t}\n\n\t\t\t// recycle existing render item or grow the array\n\n\t\t\tvar renderItem = array[ index ];\n\n\t\t\tif ( renderItem !== undefined ) {\n\n\t\t\t\trenderItem.id = object.id;\n\t\t\t\trenderItem.object = object;\n\t\t\t\trenderItem.geometry = geometry;\n\t\t\t\trenderItem.material = material;\n\t\t\t\trenderItem.z = _vector3.z;\n\t\t\t\trenderItem.group = group;\n\n\t\t\t} else {\n\n\t\t\t\trenderItem = {\n\t\t\t\t\tid: object.id,\n\t\t\t\t\tobject: object,\n\t\t\t\t\tgeometry: geometry,\n\t\t\t\t\tmaterial: material,\n\t\t\t\t\tz: _vector3.z,\n\t\t\t\t\tgroup: group\n\t\t\t\t};\n\n\t\t\t\t// assert( index === array.length );\n\t\t\t\tarray.push( renderItem );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// TODO Duplicated code (Frustum)\n\n\t\tfunction isObjectViewable( object ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null )\n\t\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\t_sphere.copy( geometry.boundingSphere ).\n\t\t\t\tapplyMatrix4( object.matrixWorld );\n\n\t\t\treturn isSphereViewable( _sphere );\n\n\t\t}\n\n\t\tfunction isSpriteViewable( sprite ) {\n\n\t\t\t_sphere.center.set( 0, 0, 0 );\n\t\t\t_sphere.radius = 0.7071067811865476;\n\t\t\t_sphere.applyMatrix4( sprite.matrixWorld );\n\n\t\t\treturn isSphereViewable( _sphere );\n\n\t\t}\n\n\t\tfunction isSphereViewable( sphere ) {\n\n\t\t\tif ( ! _frustum.intersectsSphere( sphere ) ) return false;\n\n\t\t\tvar numPlanes = _clipping.numPlanes;\n\n\t\t\tif ( numPlanes === 0 ) return true;\n\n\t\t\tvar planes = _this.clippingPlanes,\n\n\t\t\t\tcenter = sphere.center,\n\t\t\t\tnegRad = - sphere.radius,\n\t\t\t\ti = 0;\n\n\t\t\tdo {\n\n\t\t\t\t// out when deeper than radius in the negative halfspace\n\t\t\t\tif ( planes[ i ].distanceToPoint( center ) < negRad ) return false;\n\n\t\t\t} while ( ++ i !== numPlanes );\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tfunction projectObject( object, camera ) {\n\n\t\t\tif ( object.visible === false ) return;\n\n\t\t\tif ( object.layers.test( camera.layers ) ) {\n\n\t\t\t\tif ( object instanceof THREE.Light ) {\n\n\t\t\t\t\tlights.push( object );\n\n\t\t\t\t} else if ( object instanceof THREE.Sprite ) {\n\n\t\t\t\t\tif ( object.frustumCulled === false || isSpriteViewable( object ) === true ) {\n\n\t\t\t\t\t\tsprites.push( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object instanceof THREE.LensFlare ) {\n\n\t\t\t\t\tlensFlares.push( object );\n\n\t\t\t\t} else if ( object instanceof THREE.ImmediateRenderObject ) {\n\n\t\t\t\t\tif ( _this.sortObjects === true ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\n\t\t\t\t\t\t_vector3.applyProjection( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tpushRenderItem( object, null, object.material, _vector3.z, null );\n\n\t\t\t\t} else if ( object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points ) {\n\n\t\t\t\t\tif ( object instanceof THREE.SkinnedMesh ) {\n\n\t\t\t\t\t\tobject.skeleton.update();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( object.frustumCulled === false || isObjectViewable( object ) === true ) {\n\n\t\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\t\tif ( material.visible === true ) {\n\n\t\t\t\t\t\t\tif ( _this.sortObjects === true ) {\n\n\t\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\n\t\t\t\t\t\t\t\t_vector3.applyProjection( _projScreenMatrix );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvar geometry = objects.update( object );\n\n\t\t\t\t\t\t\tif ( material instanceof THREE.MultiMaterial ) {\n\n\t\t\t\t\t\t\t\tvar groups = geometry.groups;\n\t\t\t\t\t\t\t\tvar materials = material.materials;\n\n\t\t\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\t\tvar group = groups[ i ];\n\t\t\t\t\t\t\t\t\tvar groupMaterial = materials[ group.materialIndex ];\n\n\t\t\t\t\t\t\t\t\tif ( groupMaterial.visible === true ) {\n\n\t\t\t\t\t\t\t\t\t\tpushRenderItem( object, geometry, groupMaterial, _vector3.z, group );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tpushRenderItem( object, geometry, material, _vector3.z, null );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar children = object.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tprojectObject( children[ i ], camera );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderObjects( renderList, camera, fog, overrideMaterial ) {\n\n\t\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\t\tvar renderItem = renderList[ i ];\n\n\t\t\t\tvar object = renderItem.object;\n\t\t\t\tvar geometry = renderItem.geometry;\n\t\t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\n\t\t\t\tvar group = renderItem.group;\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\t\t\tif ( object instanceof THREE.ImmediateRenderObject ) {\n\n\t\t\t\t\tsetMaterial( material );\n\n\t\t\t\t\tvar program = setProgram( camera, fog, material, object );\n\n\t\t\t\t\t_currentGeometryProgram = '';\n\n\t\t\t\t\tobject.render( function ( object ) {\n\n\t\t\t\t\t\t_this.renderBufferImmediate( object, program, material );\n\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_this.renderBufferDirect( camera, fog, geometry, material, object, group );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction initMaterial( material, fog, object ) {\n\n\t\t\tvar materialProperties = properties.get( material );\n\n\t\t\tvar parameters = programCache.getParameters(\n\t\t\t\t\tmaterial, _lights, fog, _clipping.numPlanes, object );\n\n\t\t\tvar code = programCache.getProgramCode( material, parameters );\n\n\t\t\tvar program = materialProperties.program;\n\t\t\tvar programChange = true;\n\n\t\t\tif ( program === undefined ) {\n\n\t\t\t\t// new material\n\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t} else if ( program.code !== code ) {\n\n\t\t\t\t// changed glsl or parameters\n\t\t\t\treleaseMaterialProgramReference( material );\n\n\t\t\t} else if ( parameters.shaderID !== undefined ) {\n\n\t\t\t\t// same glsl and uniform list\n\t\t\t\treturn;\n\n\t\t\t} else {\n\n\t\t\t\t// only rebuild uniform list\n\t\t\t\tprogramChange = false;\n\n\t\t\t}\n\n\t\t\tif ( programChange ) {\n\n\t\t\t\tif ( parameters.shaderID ) {\n\n\t\t\t\t\tvar shader = THREE.ShaderLib[ parameters.shaderID ];\n\n\t\t\t\t\tmaterialProperties.__webglShader = {\n\t\t\t\t\t\tname: material.type,\n\t\t\t\t\t\tuniforms: THREE.UniformsUtils.clone( shader.uniforms ),\n\t\t\t\t\t\tvertexShader: shader.vertexShader,\n\t\t\t\t\t\tfragmentShader: shader.fragmentShader\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\tmaterialProperties.__webglShader = {\n\t\t\t\t\t\tname: material.type,\n\t\t\t\t\t\tuniforms: material.uniforms,\n\t\t\t\t\t\tvertexShader: material.vertexShader,\n\t\t\t\t\t\tfragmentShader: material.fragmentShader\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t\tmaterial.__webglShader = materialProperties.__webglShader;\n\n\t\t\t\tprogram = programCache.acquireProgram( material, parameters, code );\n\n\t\t\t\tmaterialProperties.program = program;\n\t\t\t\tmaterial.program = program;\n\n\t\t\t}\n\n\t\t\tvar attributes = program.getAttributes();\n\n\t\t\tif ( material.morphTargets ) {\n\n\t\t\t\tmaterial.numSupportedMorphTargets = 0;\n\n\t\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\n\n\t\t\t\t\tif ( attributes[ 'morphTarget' + i ] >= 0 ) {\n\n\t\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.morphNormals ) {\n\n\t\t\t\tmaterial.numSupportedMorphNormals = 0;\n\n\t\t\t\tfor ( var i = 0; i < _this.maxMorphNormals; i ++ ) {\n\n\t\t\t\t\tif ( attributes[ 'morphNormal' + i ] >= 0 ) {\n\n\t\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar uniforms = materialProperties.__webglShader.uniforms;\n\n\t\t\tif ( ! ( material instanceof THREE.ShaderMaterial ) &&\n\t\t\t\t\t! ( material instanceof THREE.RawShaderMaterial ) ||\n\t\t\t\t\tmaterial.clipping === true ) {\n\n\t\t\t\tmaterialProperties.numClippingPlanes = _clipping.numPlanes;\n\t\t\t\tuniforms.clippingPlanes = _clipping.uniform;\n\n\t\t\t}\n\n\t\t\tif ( material.lights ) {\n\n\t\t\t\t// store the light setup it was created for\n\n\t\t\t\tmaterialProperties.lightsHash = _lights.hash;\n\n\t\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\t\tuniforms.ambientLightColor.value = _lights.ambient;\n\t\t\t\tuniforms.directionalLights.value = _lights.directional;\n\t\t\t\tuniforms.spotLights.value = _lights.spot;\n\t\t\t\tuniforms.pointLights.value = _lights.point;\n\t\t\t\tuniforms.hemisphereLights.value = _lights.hemi;\n\n\t\t\t\tuniforms.directionalShadowMap.value = _lights.directionalShadowMap;\n\t\t\t\tuniforms.directionalShadowMatrix.value = _lights.directionalShadowMatrix;\n\t\t\t\tuniforms.spotShadowMap.value = _lights.spotShadowMap;\n\t\t\t\tuniforms.spotShadowMatrix.value = _lights.spotShadowMatrix;\n\t\t\t\tuniforms.pointShadowMap.value = _lights.pointShadowMap;\n\t\t\t\tuniforms.pointShadowMatrix.value = _lights.pointShadowMatrix;\n\n\t\t\t}\n\n\t\t\tvar progUniforms = materialProperties.program.getUniforms(),\n\t\t\t\tuniformsList =\n\t\t\t\t\t\tTHREE.WebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\t\tmaterialProperties.uniformsList = uniformsList;\n\t\t\tmaterialProperties.dynamicUniforms =\n\t\t\t\t\tTHREE.WebGLUniforms.splitDynamic( uniformsList, uniforms );\n\n\t\t}\n\n\t\tfunction setMaterial( material ) {\n\n\t\t\tif ( material.side !== THREE.DoubleSide )\n\t\t\t\tstate.enable( _gl.CULL_FACE );\n\t\t\telse\n\t\t\t\tstate.disable( _gl.CULL_FACE );\n\n\t\t\tstate.setFlipSided( material.side === THREE.BackSide );\n\n\t\t\tif ( material.transparent === true ) {\n\n\t\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\n\t\t\t} else {\n\n\t\t\t\tstate.setBlending( THREE.NoBlending );\n\n\t\t\t}\n\n\t\t\tstate.setDepthFunc( material.depthFunc );\n\t\t\tstate.setDepthTest( material.depthTest );\n\t\t\tstate.setDepthWrite( material.depthWrite );\n\t\t\tstate.setColorWrite( material.colorWrite );\n\t\t\tstate.setPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\t}\n\n\t\tfunction setProgram( camera, fog, material, object ) {\n\n\t\t\t_usedTextureUnits = 0;\n\n\t\t\tvar materialProperties = properties.get( material );\n\n\t\t\tif ( _clippingEnabled ) {\n\n\t\t\t\tif ( _localClippingEnabled || camera !== _currentCamera ) {\n\n\t\t\t\t\tvar useCache =\n\t\t\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t\t// (#8465, #8379)\n\t\t\t\t\t_clipping.setState(\n\t\t\t\t\t\t\tmaterial.clippingPlanes, material.clipShadows,\n\t\t\t\t\t\t\tcamera, materialProperties, useCache );\n\n\t\t\t\t}\n\n\t\t\t\tif ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t\tmaterialProperties.numClippingPlanes !== _clipping.numPlanes ) {\n\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( materialProperties.program === undefined ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tif ( materialProperties.lightsHash !== undefined &&\n\t\t\t\tmaterialProperties.lightsHash !== _lights.hash ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tif ( material.needsUpdate ) {\n\n\t\t\t\tinitMaterial( material, fog, object );\n\t\t\t\tmaterial.needsUpdate = false;\n\n\t\t\t}\n\n\t\t\tvar refreshProgram = false;\n\t\t\tvar refreshMaterial = false;\n\t\t\tvar refreshLights = false;\n\n\t\t\tvar program = materialProperties.program,\n\t\t\t\tp_uniforms = program.getUniforms(),\n\t\t\t\tm_uniforms = materialProperties.__webglShader.uniforms;\n\n\t\t\tif ( program.id !== _currentProgram ) {\n\n\t\t\t\t_gl.useProgram( program.program );\n\t\t\t\t_currentProgram = program.id;\n\n\t\t\t\trefreshProgram = true;\n\t\t\t\trefreshMaterial = true;\n\t\t\t\trefreshLights = true;\n\n\t\t\t}\n\n\t\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t\t_currentMaterialId = material.id;\n\n\t\t\t\trefreshMaterial = true;\n\n\t\t\t}\n\n\t\t\tif ( refreshProgram || camera !== _currentCamera ) {\n\n\t\t\t\tp_uniforms.set( _gl, camera, 'projectionMatrix' );\n\n\t\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t\t}\n\n\n\t\t\t\tif ( camera !== _currentCamera ) {\n\n\t\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t\t}\n\n\t\t\t\t// load material specific uniforms\n\t\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\t\tif ( material instanceof THREE.ShaderMaterial ||\n\t\t\t\t\t material instanceof THREE.MeshPhongMaterial ||\n\t\t\t\t\t material instanceof THREE.MeshStandardMaterial ||\n\t\t\t\t\t material.envMap ) {\n\n\t\t\t\t\tvar uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( material instanceof THREE.MeshPhongMaterial ||\n\t\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\n\t\t\t\t\t material instanceof THREE.MeshBasicMaterial ||\n\t\t\t\t\t material instanceof THREE.MeshStandardMaterial ||\n\t\t\t\t\t material instanceof THREE.ShaderMaterial ||\n\t\t\t\t\t material.skinning ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t\t}\n\n\t\t\t\tp_uniforms.set( _gl, _this, 'toneMappingExposure' );\n\t\t\t\tp_uniforms.set( _gl, _this, 'toneMappingWhitePoint' );\n\n\t\t\t}\n\n\t\t\t// skinning uniforms must be set even if material didn't change\n\t\t\t// auto-setting of texture unit for bone texture must go before other textures\n\t\t\t// not sure why, but otherwise weird things happen\n\n\t\t\tif ( material.skinning ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\t\tvar skeleton = object.skeleton;\n\n\t\t\t\tif ( skeleton ) {\n\n\t\t\t\t\tif ( capabilities.floatVertexTextures && skeleton.useVertexTexture ) {\n\n\t\t\t\t\t\tp_uniforms.set( _gl, skeleton, 'boneTexture' );\n\t\t\t\t\t\tp_uniforms.set( _gl, skeleton, 'boneTextureWidth' );\n\t\t\t\t\t\tp_uniforms.set( _gl, skeleton, 'boneTextureHeight' );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tp_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial ) {\n\n\t\t\t\tif ( material.lights ) {\n\n\t\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t\t// values\n\t\t\t\t\t//\n\t\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t\t// the GL state when required\n\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t\t}\n\n\t\t\t\t// refresh uniforms common to several materials\n\n\t\t\t\tif ( fog && material.fog ) {\n\n\t\t\t\t\trefreshUniformsFog( m_uniforms, fog );\n\n\t\t\t\t}\n\n\t\t\t\tif ( material instanceof THREE.MeshBasicMaterial ||\n\t\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\n\t\t\t\t\t material instanceof THREE.MeshPhongMaterial ||\n\t\t\t\t\t material instanceof THREE.MeshStandardMaterial ||\n\t\t\t\t\t material instanceof THREE.MeshDepthMaterial ) {\n\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t\t// refresh single material specific uniforms\n\n\t\t\t\tif ( material instanceof THREE.LineBasicMaterial ) {\n\n\t\t\t\t\trefreshUniformsLine( m_uniforms, material );\n\n\t\t\t\t} else if ( material instanceof THREE.LineDashedMaterial ) {\n\n\t\t\t\t\trefreshUniformsLine( m_uniforms, material );\n\t\t\t\t\trefreshUniformsDash( m_uniforms, material );\n\n\t\t\t\t} else if ( material instanceof THREE.PointsMaterial ) {\n\n\t\t\t\t\trefreshUniformsPoints( m_uniforms, material );\n\n\t\t\t\t} else if ( material instanceof THREE.MeshLambertMaterial ) {\n\n\t\t\t\t\trefreshUniformsLambert( m_uniforms, material );\n\n\t\t\t\t} else if ( material instanceof THREE.MeshPhongMaterial ) {\n\n\t\t\t\t\trefreshUniformsPhong( m_uniforms, material );\n\n\t\t\t\t} else if ( material instanceof THREE.MeshPhysicalMaterial ) {\n\n\t\t\t\t\trefreshUniformsPhysical( m_uniforms, material );\n\n\t\t\t\t} else if ( material instanceof THREE.MeshStandardMaterial ) {\n\n\t\t\t\t\trefreshUniformsStandard( m_uniforms, material );\n\n\t\t\t\t} else if ( material instanceof THREE.MeshDepthMaterial ) {\n\n\t\t\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\t\t\tm_uniforms.displacementMap.value = material.displacementMap;\n\t\t\t\t\t\tm_uniforms.displacementScale.value = material.displacementScale;\n\t\t\t\t\t\tm_uniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material instanceof THREE.MeshNormalMaterial ) {\n\n\t\t\t\t\tm_uniforms.opacity.value = material.opacity;\n\n\t\t\t\t}\n\n\t\t\t\tTHREE.WebGLUniforms.upload(\n\t\t\t\t\t\t_gl, materialProperties.uniformsList, m_uniforms, _this );\n\n\t\t\t}\n\n\n\t\t\t// common matrices\n\n\t\t\tp_uniforms.set( _gl, object, 'modelViewMatrix' );\n\t\t\tp_uniforms.set( _gl, object, 'normalMatrix' );\n\t\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\n\t\t\t// dynamic uniforms\n\n\t\t\tvar dynUniforms = materialProperties.dynamicUniforms;\n\n\t\t\tif ( dynUniforms !== null ) {\n\n\t\t\t\tTHREE.WebGLUniforms.evalDynamic(\n\t\t\t\t\t\tdynUniforms, m_uniforms, object, camera );\n\n\t\t\t\tTHREE.WebGLUniforms.upload( _gl, dynUniforms, m_uniforms, _this );\n\n\t\t\t}\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\t// Uniforms (refresh uniforms objects)\n\n\t\tfunction refreshUniformsCommon ( uniforms, material ) {\n\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t\tuniforms.diffuse.value = material.color;\n\n\t\t\tif ( material.emissive ) {\n\n\t\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t\t}\n\n\t\t\tuniforms.map.value = material.map;\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\tif ( material.aoMap ) {\n\n\t\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t\t}\n\n\t\t\t// uv repeat and offset setting priorities\n\t\t\t// 1. color map\n\t\t\t// 2. specular map\n\t\t\t// 3. normal map\n\t\t\t// 4. bump map\n\t\t\t// 5. alpha map\n\t\t\t// 6. emissive map\n\n\t\t\tvar uvScaleMap;\n\n\t\t\tif ( material.map ) {\n\n\t\t\t\tuvScaleMap = material.map;\n\n\t\t\t} else if ( material.specularMap ) {\n\n\t\t\t\tuvScaleMap = material.specularMap;\n\n\t\t\t} else if ( material.displacementMap ) {\n\n\t\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t\t} else if ( material.normalMap ) {\n\n\t\t\t\tuvScaleMap = material.normalMap;\n\n\t\t\t} else if ( material.bumpMap ) {\n\n\t\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t\t} else if ( material.roughnessMap ) {\n\n\t\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t\t} else if ( material.metalnessMap ) {\n\n\t\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t\t} else if ( material.alphaMap ) {\n\n\t\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t\t} else if ( material.emissiveMap ) {\n\n\t\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t\t// backwards compatibility\n\t\t\t\tif ( uvScaleMap instanceof THREE.WebGLRenderTarget ) {\n\n\t\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t\t}\n\n\t\t\t\tvar offset = uvScaleMap.offset;\n\t\t\t\tvar repeat = uvScaleMap.repeat;\n\n\t\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\n\n\t\t\t}\n\n\t\t\tuniforms.envMap.value = material.envMap;\n\n\t\t\t// don't flip CubeTexture envMaps, flip everything else:\n\t\t\t//  WebGLRenderTargetCube will be flipped for backwards compatibility\n\t\t\t//  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\n\t\t\t// this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\n\t\t\tuniforms.flipEnvMap.value = ( ! ( material.envMap instanceof THREE.CubeTexture ) ) ? 1 : - 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t}\n\n\t\tfunction refreshUniformsLine ( uniforms, material ) {\n\n\t\t\tuniforms.diffuse.value = material.color;\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t}\n\n\t\tfunction refreshUniformsDash ( uniforms, material ) {\n\n\t\t\tuniforms.dashSize.value = material.dashSize;\n\t\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\t\tuniforms.scale.value = material.scale;\n\n\t\t}\n\n\t\tfunction refreshUniformsPoints ( uniforms, material ) {\n\n\t\t\tuniforms.diffuse.value = material.color;\n\t\t\tuniforms.opacity.value = material.opacity;\n\t\t\tuniforms.size.value = material.size * _pixelRatio;\n\t\t\tuniforms.scale.value = _canvas.clientHeight * 0.5;\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\tif ( material.map !== null ) {\n\n\t\t\t\tvar offset = material.map.offset;\n\t\t\t\tvar repeat = material.map.repeat;\n\n\t\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsFog ( uniforms, fog ) {\n\n\t\t\tuniforms.fogColor.value = fog.color;\n\n\t\t\tif ( fog instanceof THREE.Fog ) {\n\n\t\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t\t} else if ( fog instanceof THREE.FogExp2 ) {\n\n\t\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsLambert ( uniforms, material ) {\n\n\t\t\tif ( material.lightMap ) {\n\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t\t}\n\n\t\t\tif ( material.emissiveMap ) {\n\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsPhong ( uniforms, material ) {\n\n\t\t\tuniforms.specular.value = material.specular;\n\t\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t\t\tif ( material.lightMap ) {\n\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t\t}\n\n\t\t\tif ( material.emissiveMap ) {\n\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\t}\n\n\t\t\tif ( material.bumpMap ) {\n\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t\t}\n\n\t\t\tif ( material.normalMap ) {\n\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t\t}\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsStandard ( uniforms, material ) {\n\n\t\t\tuniforms.roughness.value = material.roughness;\n\t\t\tuniforms.metalness.value = material.metalness;\n\n\t\t\tif ( material.roughnessMap ) {\n\n\t\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t\t}\n\n\t\t\tif ( material.metalnessMap ) {\n\n\t\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t\t}\n\n\t\t\tif ( material.lightMap ) {\n\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t\t}\n\n\t\t\tif ( material.emissiveMap ) {\n\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\t}\n\n\t\t\tif ( material.bumpMap ) {\n\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t\t}\n\n\t\t\tif ( material.normalMap ) {\n\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t\t}\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t\tif ( material.envMap ) {\n\n\t\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsPhysical ( uniforms, material ) {\n\n\t\t\tuniforms.clearCoat.value = material.clearCoat;\n\t\t\tuniforms.clearCoatRoughness.value = material.clearCoatRoughness;\n\n\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t}\n\n\t\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\t\tfunction markUniformsLightsNeedsUpdate ( uniforms, value ) {\n\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\n\n\t\t\tuniforms.directionalLights.needsUpdate = value;\n\t\t\tuniforms.pointLights.needsUpdate = value;\n\t\t\tuniforms.spotLights.needsUpdate = value;\n\t\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t\t}\n\n\t\t// Lighting\n\n\t\tfunction setupShadows ( lights ) {\n\n\t\t\tvar lightShadowsLength = 0;\n\n\t\t\tfor ( var i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\t\tvar light = lights[ i ];\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\t_lights.shadows[ lightShadowsLength ++ ] = light;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_lights.shadows.length = lightShadowsLength;\n\n\t\t}\n\n\t\tfunction setupLights ( lights, camera ) {\n\n\t\t\tvar l, ll, light,\n\t\t\tr = 0, g = 0, b = 0,\n\t\t\tcolor,\n\t\t\tintensity,\n\t\t\tdistance,\n\t\t\tshadowMap,\n\n\t\t\tviewMatrix = camera.matrixWorldInverse,\n\n\t\t\tdirectionalLength = 0,\n\t\t\tpointLength = 0,\n\t\t\tspotLength = 0,\n\t\t\themiLength = 0;\n\n\t\t\tfor ( l = 0, ll = lights.length; l < ll; l ++ ) {\n\n\t\t\t\tlight = lights[ l ];\n\n\t\t\t\tcolor = light.color;\n\t\t\t\tintensity = light.intensity;\n\t\t\t\tdistance = light.distance;\n\n\t\t\t\tshadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\t\tif ( light instanceof THREE.AmbientLight ) {\n\n\t\t\t\t\tr += color.r * intensity;\n\t\t\t\t\tg += color.g * intensity;\n\t\t\t\t\tb += color.b * intensity;\n\n\t\t\t\t} else if ( light instanceof THREE.DirectionalLight ) {\n\n\t\t\t\t\tvar uniforms = lightCache.get( light );\n\n\t\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\t\tuniforms.direction.sub( _vector3 );\n\t\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\t\tuniforms.shadowBias = light.shadow.bias;\n\t\t\t\t\t\tuniforms.shadowRadius = light.shadow.radius;\n\t\t\t\t\t\tuniforms.shadowMapSize = light.shadow.mapSize;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_lights.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\t_lights.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\t\t\t\t\t_lights.directional[ directionalLength ++ ] = uniforms;\n\n\t\t\t\t} else if ( light instanceof THREE.SpotLight ) {\n\n\t\t\t\t\tvar uniforms = lightCache.get( light );\n\n\t\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\t\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\t\tuniforms.direction.sub( _vector3 );\n\t\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\t\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\n\n\t\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\t\tuniforms.shadowBias = light.shadow.bias;\n\t\t\t\t\t\tuniforms.shadowRadius = light.shadow.radius;\n\t\t\t\t\t\tuniforms.shadowMapSize = light.shadow.mapSize;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_lights.spotShadowMap[ spotLength ] = shadowMap;\n\t\t\t\t\t_lights.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\n\t\t\t\t\t_lights.spot[ spotLength ++ ] = uniforms;\n\n\t\t\t\t} else if ( light instanceof THREE.PointLight ) {\n\n\t\t\t\t\tvar uniforms = lightCache.get( light );\n\n\t\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\t\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\n\n\t\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\t\tuniforms.shadowBias = light.shadow.bias;\n\t\t\t\t\t\tuniforms.shadowRadius = light.shadow.radius;\n\t\t\t\t\t\tuniforms.shadowMapSize = light.shadow.mapSize;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_lights.pointShadowMap[ pointLength ] = shadowMap;\n\n\t\t\t\t\tif ( _lights.pointShadowMatrix[ pointLength ] === undefined ) {\n\n\t\t\t\t\t\t_lights.pointShadowMatrix[ pointLength ] = new THREE.Matrix4();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// for point lights we set the shadow matrix to be a translation-only matrix\n\t\t\t\t\t// equal to inverse of the light's position\n\t\t\t\t\t_vector3.setFromMatrixPosition( light.matrixWorld ).negate();\n\t\t\t\t\t_lights.pointShadowMatrix[ pointLength ].identity().setPosition( _vector3 );\n\n\t\t\t\t\t_lights.point[ pointLength ++ ] = uniforms;\n\n\t\t\t\t} else if ( light instanceof THREE.HemisphereLight ) {\n\n\t\t\t\t\tvar uniforms = lightCache.get( light );\n\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\t\t\t\t\tuniforms.direction.normalize();\n\n\t\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\n\t\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\n\n\t\t\t\t\t_lights.hemi[ hemiLength ++ ] = uniforms;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_lights.ambient[ 0 ] = r;\n\t\t\t_lights.ambient[ 1 ] = g;\n\t\t\t_lights.ambient[ 2 ] = b;\n\n\t\t\t_lights.directional.length = directionalLength;\n\t\t\t_lights.spot.length = spotLength;\n\t\t\t_lights.point.length = pointLength;\n\t\t\t_lights.hemi.length = hemiLength;\n\n\t\t\t_lights.hash = directionalLength + ',' + pointLength + ',' + spotLength + ',' + hemiLength + ',' + _lights.shadows.length;\n\n\t\t}\n\n\t\t// GL state setting\n\n\t\tthis.setFaceCulling = function ( cullFace, frontFaceDirection ) {\n\n\t\t\tstate.setCullFace( cullFace );\n\t\t\tstate.setFlipSided( frontFaceDirection === THREE.FrontFaceDirectionCW );\n\n\t\t};\n\n\t\t// Textures\n\n\t\tfunction allocTextureUnit() {\n\n\t\t\tvar textureUnit = _usedTextureUnits;\n\n\t\t\tif ( textureUnit >= capabilities.maxTextures ) {\n\n\t\t\t\tconsole.warn( 'WebGLRenderer: trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\n\n\t\t\t}\n\n\t\t\t_usedTextureUnits += 1;\n\n\t\t\treturn textureUnit;\n\n\t\t}\n\n\t\tthis.allocTextureUnit = allocTextureUnit;\n\n\t\t// this.setTexture2D = setTexture2D;\n\t\tthis.setTexture2D = ( function() {\n\n\t\t\tvar warned = false;\n\n\t\t\t// backwards compatibility: peel texture.texture\n\t\t\treturn function setTexture2D( texture, slot ) {\n\n\t\t\t\tif ( texture instanceof THREE.WebGLRenderTarget ) {\n\n\t\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\t\twarned = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture = texture.texture;\n\n\t\t\t\t}\n\n\t\t\t\ttextures.setTexture2D( texture, slot );\n\n\t\t\t};\n\n\t\t}() );\n\n\t\tthis.setTexture = ( function() {\n\n\t\t\tvar warned = false;\n\n\t\t\treturn function setTexture( texture, slot ) {\n\n\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead.\" );\n\t\t\t\t\twarned = true;\n\n\t\t\t\t}\n\n\t\t\t\ttextures.setTexture2D( texture, slot );\n\n\t\t\t};\n\n\t\t}() );\n\n\t\tthis.setTextureCube = ( function() {\n\n\t\t\tvar warned = false;\n\n\t\t\treturn function setTextureCube( texture, slot ) {\n\n\t\t\t\t// backwards compatibility: peel texture.texture\n\t\t\t\tif ( texture instanceof THREE.WebGLRenderTargetCube ) {\n\n\t\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\t\twarned = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture = texture.texture;\n\n\t\t\t\t}\n\n\t\t\t\t// currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture\n\t\t\t\t// TODO: unify these code paths\n\t\t\t\tif ( texture instanceof THREE.CubeTexture ||\n\t\t\t\t\t ( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\n\n\t\t\t\t\t// CompressedTexture can have Array in image :/\n\n\t\t\t\t\t// this function alone should take care of cube textures\n\t\t\t\t\ttextures.setTextureCube( texture, slot );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// assumed: texture property of THREE.WebGLRenderTargetCube\n\n\t\t\t\t\ttextures.setTextureCubeDynamic( texture, slot );\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}() );\n\n\t\tthis.getCurrentRenderTarget = function() {\n\n\t\t\treturn _currentRenderTarget;\n\n\t\t};\n\n\t\tthis.setRenderTarget = function ( renderTarget ) {\n\n\t\t\t_currentRenderTarget = renderTarget;\n\n\t\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\n\n\t\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t\t}\n\n\t\t\tvar isCube = ( renderTarget instanceof THREE.WebGLRenderTargetCube );\n\t\t\tvar framebuffer;\n\n\t\t\tif ( renderTarget ) {\n\n\t\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\n\t\t\t\tif ( isCube ) {\n\n\t\t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer[ renderTarget.activeCubeFace ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer;\n\n\t\t\t\t}\n\n\t\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t\t\t_currentViewport.copy( renderTarget.viewport );\n\n\t\t\t} else {\n\n\t\t\t\tframebuffer = null;\n\n\t\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio );\n\t\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio );\n\n\t\t\t}\n\n\t\t\tif ( _currentFramebuffer !== framebuffer ) {\n\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\t\t\t\t_currentFramebuffer = framebuffer;\n\n\t\t\t}\n\n\t\t\tstate.scissor( _currentScissor );\n\t\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\t\tstate.viewport( _currentViewport );\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + renderTarget.activeCubeFace, textureProperties.__webglTexture, renderTarget.activeMipMapLevel );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer ) {\n\n\t\t\tif ( renderTarget instanceof THREE.WebGLRenderTarget === false ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( framebuffer ) {\n\n\t\t\t\tvar restore = false;\n\n\t\t\t\tif ( framebuffer !== _currentFramebuffer ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\t\trestore = true;\n\n\t\t\t\t}\n\n\t\t\t\ttry {\n\n\t\t\t\t\tvar texture = renderTarget.texture;\n\n\t\t\t\t\tif ( texture.format !== THREE.RGBAFormat && paramThreeToGL( texture.format ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( texture.type !== THREE.UnsignedByteType &&\n\t\t\t\t\t     paramThreeToGL( texture.type ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) &&\n\t\t\t\t\t     ! ( texture.type === THREE.FloatType && extensions.get( 'WEBGL_color_buffer_float' ) ) &&\n\t\t\t\t\t     ! ( texture.type === THREE.HalfFloatType && extensions.get( 'EXT_color_buffer_half_float' ) ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {\n\n\t\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t\t_gl.readPixels( x, y, width, height, paramThreeToGL( texture.format ), paramThreeToGL( texture.type ), buffer );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t} finally {\n\n\t\t\t\t\tif ( restore ) {\n\n\t\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, _currentFramebuffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Map three.js constants to WebGL constants\n\n\t\tfunction paramThreeToGL ( p ) {\n\n\t\t\tvar extension;\n\n\t\t\tif ( p === THREE.RepeatWrapping ) return _gl.REPEAT;\n\t\t\tif ( p === THREE.ClampToEdgeWrapping ) return _gl.CLAMP_TO_EDGE;\n\t\t\tif ( p === THREE.MirroredRepeatWrapping ) return _gl.MIRRORED_REPEAT;\n\n\t\t\tif ( p === THREE.NearestFilter ) return _gl.NEAREST;\n\t\t\tif ( p === THREE.NearestMipMapNearestFilter ) return _gl.NEAREST_MIPMAP_NEAREST;\n\t\t\tif ( p === THREE.NearestMipMapLinearFilter ) return _gl.NEAREST_MIPMAP_LINEAR;\n\n\t\t\tif ( p === THREE.LinearFilter ) return _gl.LINEAR;\n\t\t\tif ( p === THREE.LinearMipMapNearestFilter ) return _gl.LINEAR_MIPMAP_NEAREST;\n\t\t\tif ( p === THREE.LinearMipMapLinearFilter ) return _gl.LINEAR_MIPMAP_LINEAR;\n\n\t\t\tif ( p === THREE.UnsignedByteType ) return _gl.UNSIGNED_BYTE;\n\t\t\tif ( p === THREE.UnsignedShort4444Type ) return _gl.UNSIGNED_SHORT_4_4_4_4;\n\t\t\tif ( p === THREE.UnsignedShort5551Type ) return _gl.UNSIGNED_SHORT_5_5_5_1;\n\t\t\tif ( p === THREE.UnsignedShort565Type ) return _gl.UNSIGNED_SHORT_5_6_5;\n\n\t\t\tif ( p === THREE.ByteType ) return _gl.BYTE;\n\t\t\tif ( p === THREE.ShortType ) return _gl.SHORT;\n\t\t\tif ( p === THREE.UnsignedShortType ) return _gl.UNSIGNED_SHORT;\n\t\t\tif ( p === THREE.IntType ) return _gl.INT;\n\t\t\tif ( p === THREE.UnsignedIntType ) return _gl.UNSIGNED_INT;\n\t\t\tif ( p === THREE.FloatType ) return _gl.FLOAT;\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === THREE.HalfFloatType ) return extension.HALF_FLOAT_OES;\n\n\t\t\t}\n\n\t\t\tif ( p === THREE.AlphaFormat ) return _gl.ALPHA;\n\t\t\tif ( p === THREE.RGBFormat ) return _gl.RGB;\n\t\t\tif ( p === THREE.RGBAFormat ) return _gl.RGBA;\n\t\t\tif ( p === THREE.LuminanceFormat ) return _gl.LUMINANCE;\n\t\t\tif ( p === THREE.LuminanceAlphaFormat ) return _gl.LUMINANCE_ALPHA;\n\t\t\tif ( p === THREE.DepthFormat ) return _gl.DEPTH_COMPONENT;\n\n\t\t\tif ( p === THREE.AddEquation ) return _gl.FUNC_ADD;\n\t\t\tif ( p === THREE.SubtractEquation ) return _gl.FUNC_SUBTRACT;\n\t\t\tif ( p === THREE.ReverseSubtractEquation ) return _gl.FUNC_REVERSE_SUBTRACT;\n\n\t\t\tif ( p === THREE.ZeroFactor ) return _gl.ZERO;\n\t\t\tif ( p === THREE.OneFactor ) return _gl.ONE;\n\t\t\tif ( p === THREE.SrcColorFactor ) return _gl.SRC_COLOR;\n\t\t\tif ( p === THREE.OneMinusSrcColorFactor ) return _gl.ONE_MINUS_SRC_COLOR;\n\t\t\tif ( p === THREE.SrcAlphaFactor ) return _gl.SRC_ALPHA;\n\t\t\tif ( p === THREE.OneMinusSrcAlphaFactor ) return _gl.ONE_MINUS_SRC_ALPHA;\n\t\t\tif ( p === THREE.DstAlphaFactor ) return _gl.DST_ALPHA;\n\t\t\tif ( p === THREE.OneMinusDstAlphaFactor ) return _gl.ONE_MINUS_DST_ALPHA;\n\n\t\t\tif ( p === THREE.DstColorFactor ) return _gl.DST_COLOR;\n\t\t\tif ( p === THREE.OneMinusDstColorFactor ) return _gl.ONE_MINUS_DST_COLOR;\n\t\t\tif ( p === THREE.SrcAlphaSaturateFactor ) return _gl.SRC_ALPHA_SATURATE;\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === THREE.RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === THREE.RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === THREE.RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\tif ( p === THREE.RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t}\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === THREE.RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === THREE.RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === THREE.RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === THREE.RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t}\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === THREE.RGB_ETC1_Format ) return extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t}\n\n\t\t\textension = extensions.get( 'EXT_blend_minmax' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === THREE.MinEquation ) return extension.MIN_EXT;\n\t\t\t\tif ( p === THREE.MaxEquation ) return extension.MAX_EXT;\n\n\t\t\t}\n\n\t\t\treturn 0;\n\n\t\t}\n\n\t};\n\n\t// File:src/renderers/WebGLRenderTarget.js\n\n\t/**\n\t * @author szimek / https://github.com/szimek/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author Marius Kintel / https://github.com/kintel\n\t */\n\n\t/*\n\t In options, we can specify:\n\t * Texture parameters for an auto-generated target texture\n\t * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n\t*/\n\tTHREE.WebGLRenderTarget = function ( width, height, options ) {\n\n\t\tthis.uuid = THREE.Math.generateUUID();\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t\tthis.scissor = new THREE.Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new THREE.Vector4( 0, 0, width, height );\n\n\t\toptions = options || {};\n\n\t\tif ( options.minFilter === undefined ) options.minFilter = THREE.LinearFilter;\n\n\t\tthis.texture = new THREE.Texture( undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\n\t\tthis.depthTexture = null;\n\n\t};\n\n\tObject.assign( THREE.WebGLRenderTarget.prototype, THREE.EventDispatcher.prototype, {\n\n\t\tsetSize: function ( width, height ) {\n\n\t\t\tif ( this.width !== width || this.height !== height ) {\n\n\t\t\t\tthis.width = width;\n\t\t\t\tthis.height = height;\n\n\t\t\t\tthis.dispose();\n\n\t\t\t}\n\n\t\t\tthis.viewport.set( 0, 0, width, height );\n\t\t\tthis.scissor.set( 0, 0, width, height );\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.width = source.width;\n\t\t\tthis.height = source.height;\n\n\t\t\tthis.viewport.copy( source.viewport );\n\n\t\t\tthis.texture = source.texture.clone();\n\n\t\t\tthis.depthBuffer = source.depthBuffer;\n\t\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\t\tthis.depthTexture = source.depthTexture;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\t// File:src/renderers/WebGLRenderTargetCube.js\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com\n\t */\n\n\tTHREE.WebGLRenderTargetCube = function ( width, height, options ) {\n\n\t\tTHREE.WebGLRenderTarget.call( this, width, height, options );\n\n\t\tthis.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\n\t\tthis.activeMipMapLevel = 0;\n\n\t};\n\n\tTHREE.WebGLRenderTargetCube.prototype = Object.create( THREE.WebGLRenderTarget.prototype );\n\tTHREE.WebGLRenderTargetCube.prototype.constructor = THREE.WebGLRenderTargetCube;\n\n\t// File:src/renderers/webgl/WebGLBufferRenderer.js\n\n\t/**\n\t* @author mrdoob / http://mrdoob.com/\n\t*/\n\n\tTHREE.WebGLBufferRenderer = function ( _gl, extensions, _infoRender ) {\n\n\t\tvar mode;\n\n\t\tfunction setMode( value ) {\n\n\t\t\tmode = value;\n\n\t\t}\n\n\t\tfunction render( start, count ) {\n\n\t\t\t_gl.drawArrays( mode, start, count );\n\n\t\t\t_infoRender.calls ++;\n\t\t\t_infoRender.vertices += count;\n\t\t\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += count / 3;\n\n\t\t}\n\n\t\tfunction renderInstances( geometry ) {\n\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar position = geometry.attributes.position;\n\n\t\t\tvar count = 0;\n\n\t\t\tif ( position instanceof THREE.InterleavedBufferAttribute ) {\n\n\t\t\t\tcount = position.data.count;\n\n\t\t\t\textension.drawArraysInstancedANGLE( mode, 0, count, geometry.maxInstancedCount );\n\n\t\t\t} else {\n\n\t\t\t\tcount = position.count;\n\n\t\t\t\textension.drawArraysInstancedANGLE( mode, 0, count, geometry.maxInstancedCount );\n\n\t\t\t}\n\n\t\t\t_infoRender.calls ++;\n\t\t\t_infoRender.vertices += count * geometry.maxInstancedCount;\n\t\t\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += geometry.maxInstancedCount * count / 3;\n\n\t\t}\n\n\t\tthis.setMode = setMode;\n\t\tthis.render = render;\n\t\tthis.renderInstances = renderInstances;\n\n\t};\n\n\t// File:src/renderers/webgl/WebGLClipping.js\n\n\tTHREE.WebGLClipping = function() {\n\n\t\tvar scope = this,\n\n\t\t\tglobalState = null,\n\t\t\tnumGlobalPlanes = 0,\n\t\t\tlocalClippingEnabled = false,\n\t\t\trenderingShadows = false,\n\n\t\t\tplane = new THREE.Plane(),\n\t\t\tviewNormalMatrix = new THREE.Matrix3(),\n\n\t\t\tuniform = { value: null, needsUpdate: false };\n\n\t\tthis.uniform = uniform;\n\t\tthis.numPlanes = 0;\n\n\t\tthis.init = function( planes, enableLocalClipping, camera ) {\n\n\t\t\tvar enabled =\n\t\t\t\tplanes.length !== 0 ||\n\t\t\t\tenableLocalClipping ||\n\t\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t\t// run another frame in order to reset the state:\n\t\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\t\tlocalClippingEnabled;\n\n\t\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\t\tnumGlobalPlanes = planes.length;\n\n\t\t\treturn enabled;\n\n\t\t};\n\n\t\tthis.beginShadows = function() {\n\n\t\t\trenderingShadows = true;\n\t\t\tprojectPlanes( null );\n\n\t\t};\n\n\t\tthis.endShadows = function() {\n\n\t\t\trenderingShadows = false;\n\t\t\tresetGlobalState();\n\n\t\t};\n\n\t\tthis.setState = function( planes, clipShadows, camera, cache, fromCache ) {\n\n\t\t\tif ( ! localClippingEnabled ||\n\t\t\t\t\tplanes === null || planes.length === 0 ||\n\t\t\t\t\trenderingShadows && ! clipShadows ) {\n\t\t\t\t// there's no local clipping\n\n\t\t\t\tif ( renderingShadows ) {\n\t\t\t\t\t// there's no global clipping\n\n\t\t\t\t\tprojectPlanes( null );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tresetGlobalState();\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\t\tlGlobal = nGlobal * 4,\n\n\t\t\t\t\tdstArray = cache.clippingState || null;\n\n\t\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, fromCache );\n\n\t\t\t\tfor ( var i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcache.clippingState = dstArray;\n\t\t\t\tthis.numPlanes += nGlobal;\n\n\t\t\t}\n\n\n\t\t};\n\n\t\tfunction resetGlobalState() {\n\n\t\t\tif ( uniform.value !== globalState ) {\n\n\t\t\t\tuniform.value = globalState;\n\t\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t\t}\n\n\t\t\tscope.numPlanes = numGlobalPlanes;\n\n\t\t}\n\n\t\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\t\tvar nPlanes = planes !== null ? planes.length : 0,\n\t\t\t\tdstArray = null;\n\n\t\t\tif ( nPlanes !== 0 ) {\n\n\t\t\t\tdstArray = uniform.value;\n\n\t\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\t\tvar flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0, i4 = dstOffset;\n\t\t\t\t\t\t\t\t\t\ti !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\t\tplane.copy( planes[ i ] ).\n\t\t\t\t\t\t\t\tapplyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tuniform.value = dstArray;\n\t\t\t\tuniform.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tscope.numPlanes = nPlanes;\n\t\t\treturn dstArray;\n\n\t\t}\n\n\t};\n\n\n\t// File:src/renderers/webgl/WebGLIndexedBufferRenderer.js\n\n\t/**\n\t* @author mrdoob / http://mrdoob.com/\n\t*/\n\n\tTHREE.WebGLIndexedBufferRenderer = function ( _gl, extensions, _infoRender ) {\n\n\t\tvar mode;\n\n\t\tfunction setMode( value ) {\n\n\t\t\tmode = value;\n\n\t\t}\n\n\t\tvar type, size;\n\n\t\tfunction setIndex( index ) {\n\n\t\t\tif ( index.array instanceof Uint32Array && extensions.get( 'OES_element_index_uint' ) ) {\n\n\t\t\t\ttype = _gl.UNSIGNED_INT;\n\t\t\t\tsize = 4;\n\n\t\t\t} else {\n\n\t\t\t\ttype = _gl.UNSIGNED_SHORT;\n\t\t\t\tsize = 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction render( start, count ) {\n\n\t\t\t_gl.drawElements( mode, count, type, start * size );\n\n\t\t\t_infoRender.calls ++;\n\t\t\t_infoRender.vertices += count;\n\t\t\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += count / 3;\n\n\t\t}\n\n\t\tfunction renderInstances( geometry, start, count ) {\n\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\textension.drawElementsInstancedANGLE( mode, count, type, start * size, geometry.maxInstancedCount );\n\n\t\t\t_infoRender.calls ++;\n\t\t\t_infoRender.vertices += count * geometry.maxInstancedCount;\n\t\t\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += geometry.maxInstancedCount * count / 3;\n\t\t}\n\n\t\tthis.setMode = setMode;\n\t\tthis.setIndex = setIndex;\n\t\tthis.render = render;\n\t\tthis.renderInstances = renderInstances;\n\n\t};\n\n\t// File:src/renderers/webgl/WebGLExtensions.js\n\n\t/**\n\t* @author mrdoob / http://mrdoob.com/\n\t*/\n\n\tTHREE.WebGLExtensions = function ( gl ) {\n\n\t\tvar extensions = {};\n\n\t\tthis.get = function ( name ) {\n\n\t\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\t\treturn extensions[ name ];\n\n\t\t\t}\n\n\t\t\tvar extension;\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_etc1':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_etc1' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\textension = gl.getExtension( name );\n\n\t\t\t}\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\textensions[ name ] = extension;\n\n\t\t\treturn extension;\n\n\t\t};\n\n\t};\n\n\t// File:src/renderers/webgl/WebGLCapabilities.js\n\n\tTHREE.WebGLCapabilities = function ( gl, extensions, parameters ) {\n\n\t\tvar maxAnisotropy;\n\n\t\tfunction getMaxAnisotropy() {\n\n\t\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t\t} else {\n\n\t\t\t\tmaxAnisotropy = 0;\n\n\t\t\t}\n\n\t\t\treturn maxAnisotropy;\n\n\t\t}\n\n\t\tfunction getMaxPrecision( precision ) {\n\n\t\t\tif ( precision === 'highp' ) {\n\n\t\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\t\treturn 'highp';\n\n\t\t\t\t}\n\n\t\t\t\tprecision = 'mediump';\n\n\t\t\t}\n\n\t\t\tif ( precision === 'mediump' ) {\n\n\t\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\t\treturn 'mediump';\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn 'lowp';\n\n\t\t}\n\n\t\tthis.getMaxAnisotropy = getMaxAnisotropy;\n\t\tthis.getMaxPrecision = getMaxPrecision;\n\n\t\tthis.precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\t\tthis.logarithmicDepthBuffer = parameters.logarithmicDepthBuffer !== undefined ? parameters.logarithmicDepthBuffer : false;\n\n\t\tthis.maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\t\tthis.maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\t\tthis.maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\t\tthis.maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\t\tthis.maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\t\tthis.maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\t\tthis.maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\t\tthis.maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\t\tthis.vertexTextures = this.maxVertexTextures > 0;\n\t\tthis.floatFragmentTextures = !! extensions.get( 'OES_texture_float' );\n\t\tthis.floatVertexTextures = this.vertexTextures && this.floatFragmentTextures;\n\n\t\tvar _maxPrecision = getMaxPrecision( this.precision );\n\n\t\tif ( _maxPrecision !== this.precision ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer:', this.precision, 'not supported, using', _maxPrecision, 'instead.' );\n\t\t\tthis.precision = _maxPrecision;\n\n\t\t}\n\n\t\tif ( this.logarithmicDepthBuffer ) {\n\n\t\t\tthis.logarithmicDepthBuffer = !! extensions.get( 'EXT_frag_depth' );\n\n\t\t}\n\n\t};\n\n\t// File:src/renderers/webgl/WebGLGeometries.js\n\n\t/**\n\t* @author mrdoob / http://mrdoob.com/\n\t*/\n\n\tTHREE.WebGLGeometries = function ( gl, properties, info ) {\n\n\t\tvar geometries = {};\n\n\t\tfunction get( object ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( geometries[ geometry.id ] !== undefined ) {\n\n\t\t\t\treturn geometries[ geometry.id ];\n\n\t\t\t}\n\n\t\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\t\tvar buffergeometry;\n\n\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\n\n\t\t\t\tbuffergeometry = geometry;\n\n\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\n\n\t\t\t\tif ( geometry._bufferGeometry === undefined ) {\n\n\t\t\t\t\tgeometry._bufferGeometry = new THREE.BufferGeometry().setFromObject( object );\n\n\t\t\t\t}\n\n\t\t\t\tbuffergeometry = geometry._bufferGeometry;\n\n\t\t\t}\n\n\t\t\tgeometries[ geometry.id ] = buffergeometry;\n\n\t\t\tinfo.memory.geometries ++;\n\n\t\t\treturn buffergeometry;\n\n\t\t}\n\n\t\tfunction onGeometryDispose( event ) {\n\n\t\t\tvar geometry = event.target;\n\t\t\tvar buffergeometry = geometries[ geometry.id ];\n\n\t\t\tif ( buffergeometry.index !== null ) {\n\n\t\t\t\tdeleteAttribute( buffergeometry.index );\n\n\t\t\t}\n\n\t\t\tdeleteAttributes( buffergeometry.attributes );\n\n\t\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\t\tdelete geometries[ geometry.id ];\n\n\t\t\t// TODO\n\n\t\t\tvar property = properties.get( geometry );\n\n\t\t\tif ( property.wireframe ) {\n\n\t\t\t\tdeleteAttribute( property.wireframe );\n\n\t\t\t}\n\n\t\t\tproperties.delete( geometry );\n\n\t\t\tvar bufferproperty = properties.get( buffergeometry );\n\n\t\t\tif ( bufferproperty.wireframe ) {\n\n\t\t\t\tdeleteAttribute( bufferproperty.wireframe );\n\n\t\t\t}\n\n\t\t\tproperties.delete( buffergeometry );\n\n\t\t\t//\n\n\t\t\tinfo.memory.geometries --;\n\n\t\t}\n\n\t\tfunction getAttributeBuffer( attribute ) {\n\n\t\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\n\n\t\t\t\treturn properties.get( attribute.data ).__webglBuffer;\n\n\t\t\t}\n\n\t\t\treturn properties.get( attribute ).__webglBuffer;\n\n\t\t}\n\n\t\tfunction deleteAttribute( attribute ) {\n\n\t\t\tvar buffer = getAttributeBuffer( attribute );\n\n\t\t\tif ( buffer !== undefined ) {\n\n\t\t\t\tgl.deleteBuffer( buffer );\n\t\t\t\tremoveAttributeBuffer( attribute );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction deleteAttributes( attributes ) {\n\n\t\t\tfor ( var name in attributes ) {\n\n\t\t\t\tdeleteAttribute( attributes[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction removeAttributeBuffer( attribute ) {\n\n\t\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\n\n\t\t\t\tproperties.delete( attribute.data );\n\n\t\t\t} else {\n\n\t\t\t\tproperties.delete( attribute );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.get = get;\n\n\t};\n\n\t// File:src/renderers/webgl/WebGLLights.js\n\n\t/**\n\t* @author mrdoob / http://mrdoob.com/\n\t*/\n\n\tTHREE.WebGLLights = function () {\n\n\t\tvar lights = {};\n\n\t\tthis.get = function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tvar uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new THREE.Vector3(),\n\t\t\t\t\t\tcolor: new THREE.Color(),\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new THREE.Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new THREE.Vector3(),\n\t\t\t\t\t\tdirection: new THREE.Vector3(),\n\t\t\t\t\t\tcolor: new THREE.Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new THREE.Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new THREE.Vector3(),\n\t\t\t\t\t\tcolor: new THREE.Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new THREE.Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new THREE.Vector3(),\n\t\t\t\t\t\tskyColor: new THREE.Color(),\n\t\t\t\t\t\tgroundColor: new THREE.Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t};\n\n\t};\n\n\t// File:src/renderers/webgl/WebGLObjects.js\n\n\t/**\n\t* @author mrdoob / http://mrdoob.com/\n\t*/\n\n\tTHREE.WebGLObjects = function ( gl, properties, info ) {\n\n\t\tvar geometries = new THREE.WebGLGeometries( gl, properties, info );\n\n\t\t//\n\n\t\tfunction update( object ) {\n\n\t\t\t// TODO: Avoid updating twice (when using shadowMap). Maybe add frame counter.\n\n\t\t\tvar geometry = geometries.get( object );\n\n\t\t\tif ( object.geometry instanceof THREE.Geometry ) {\n\n\t\t\t\tgeometry.updateFromObject( object );\n\n\t\t\t}\n\n\t\t\tvar index = geometry.index;\n\t\t\tvar attributes = geometry.attributes;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tupdateAttribute( index, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t\tfor ( var name in attributes ) {\n\n\t\t\t\tupdateAttribute( attributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t\t// morph targets\n\n\t\t\tvar morphAttributes = geometry.morphAttributes;\n\n\t\t\tfor ( var name in morphAttributes ) {\n\n\t\t\t\tvar array = morphAttributes[ name ];\n\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\t\tupdateAttribute( array[ i ], gl.ARRAY_BUFFER );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn geometry;\n\n\t\t}\n\n\t\tfunction updateAttribute( attribute, bufferType ) {\n\n\t\t\tvar data = ( attribute instanceof THREE.InterleavedBufferAttribute ) ? attribute.data : attribute;\n\n\t\t\tvar attributeProperties = properties.get( data );\n\n\t\t\tif ( attributeProperties.__webglBuffer === undefined ) {\n\n\t\t\t\tcreateBuffer( attributeProperties, data, bufferType );\n\n\t\t\t} else if ( attributeProperties.version !== data.version ) {\n\n\t\t\t\tupdateBuffer( attributeProperties, data, bufferType );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction createBuffer( attributeProperties, data, bufferType ) {\n\n\t\t\tattributeProperties.__webglBuffer = gl.createBuffer();\n\t\t\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\n\n\t\t\tvar usage = data.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\n\n\t\t\tgl.bufferData( bufferType, data.array, usage );\n\n\t\t\tattributeProperties.version = data.version;\n\n\t\t}\n\n\t\tfunction updateBuffer( attributeProperties, data, bufferType ) {\n\n\t\t\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\n\n\t\t\tif ( data.dynamic === false || data.updateRange.count === - 1 ) {\n\n\t\t\t\t// Not using update ranges\n\n\t\t\t\tgl.bufferSubData( bufferType, 0, data.array );\n\n\t\t\t} else if ( data.updateRange.count === 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\n\n\t\t\t} else {\n\n\t\t\t\tgl.bufferSubData( bufferType, data.updateRange.offset * data.array.BYTES_PER_ELEMENT,\n\t\t\t\t\t\t\t\t  data.array.subarray( data.updateRange.offset, data.updateRange.offset + data.updateRange.count ) );\n\n\t\t\t\tdata.updateRange.count = 0; // reset range\n\n\t\t\t}\n\n\t\t\tattributeProperties.version = data.version;\n\n\t\t}\n\n\t\tfunction getAttributeBuffer( attribute ) {\n\n\t\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\n\n\t\t\t\treturn properties.get( attribute.data ).__webglBuffer;\n\n\t\t\t}\n\n\t\t\treturn properties.get( attribute ).__webglBuffer;\n\n\t\t}\n\n\t\tfunction getWireframeAttribute( geometry ) {\n\n\t\t\tvar property = properties.get( geometry );\n\n\t\t\tif ( property.wireframe !== undefined ) {\n\n\t\t\t\treturn property.wireframe;\n\n\t\t\t}\n\n\t\t\tvar indices = [];\n\n\t\t\tvar index = geometry.index;\n\t\t\tvar attributes = geometry.attributes;\n\t\t\tvar position = attributes.position;\n\n\t\t\t// console.time( 'wireframe' );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tvar edges = {};\n\t\t\t\tvar array = index.array;\n\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\t\tvar a = array[ i + 0 ];\n\t\t\t\t\tvar b = array[ i + 1 ];\n\t\t\t\t\tvar c = array[ i + 2 ];\n\n\t\t\t\t\tif ( checkEdge( edges, a, b ) ) indices.push( a, b );\n\t\t\t\t\tif ( checkEdge( edges, b, c ) ) indices.push( b, c );\n\t\t\t\t\tif ( checkEdge( edges, c, a ) ) indices.push( c, a );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar array = attributes.position.array;\n\n\t\t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\t\tvar a = i + 0;\n\t\t\t\t\tvar b = i + 1;\n\t\t\t\t\tvar c = i + 2;\n\n\t\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// console.timeEnd( 'wireframe' );\n\n\t\t\tvar TypeArray = position.count > 65535 ? Uint32Array : Uint16Array;\n\t\t\tvar attribute = new THREE.BufferAttribute( new TypeArray( indices ), 1 );\n\n\t\t\tupdateAttribute( attribute, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t\tproperty.wireframe = attribute;\n\n\t\t\treturn attribute;\n\n\t\t}\n\n\t\tfunction checkEdge( edges, a, b ) {\n\n\t\t\tif ( a > b ) {\n\n\t\t\t\tvar tmp = a;\n\t\t\t\ta = b;\n\t\t\t\tb = tmp;\n\n\t\t\t}\n\n\t\t\tvar list = edges[ a ];\n\n\t\t\tif ( list === undefined ) {\n\n\t\t\t\tedges[ a ] = [ b ];\n\t\t\t\treturn true;\n\n\t\t\t} else if ( list.indexOf( b ) === -1 ) {\n\n\t\t\t\tlist.push( b );\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\tthis.getAttributeBuffer = getAttributeBuffer;\n\t\tthis.getWireframeAttribute = getWireframeAttribute;\n\n\t\tthis.update = update;\n\n\t};\n\n\t// File:src/renderers/webgl/WebGLProgram.js\n\n\tTHREE.WebGLProgram = ( function () {\n\n\t\tvar programIdCount = 0;\n\n\t\tfunction getEncodingComponents( encoding ) {\n\n\t\t\tswitch ( encoding ) {\n\n\t\t\t\tcase THREE.LinearEncoding:\n\t\t\t\t\treturn [ 'Linear','( value )' ];\n\t\t\t\tcase THREE.sRGBEncoding:\n\t\t\t\t\treturn [ 'sRGB','( value )' ];\n\t\t\t\tcase THREE.RGBEEncoding:\n\t\t\t\t\treturn [ 'RGBE','( value )' ];\n\t\t\t\tcase THREE.RGBM7Encoding:\n\t\t\t\t\treturn [ 'RGBM','( value, 7.0 )' ];\n\t\t\t\tcase THREE.RGBM16Encoding:\n\t\t\t\t\treturn [ 'RGBM','( value, 16.0 )' ];\n\t\t\t\tcase THREE.RGBDEncoding:\n\t\t\t\t\treturn [ 'RGBD','( value, 256.0 )' ];\n\t\t\t\tcase THREE.GammaEncoding:\n\t\t\t\t\treturn [ 'Gamma','( value, float( GAMMA_FACTOR ) )' ];\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error( 'unsupported encoding: ' + encoding );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getTexelDecodingFunction( functionName, encoding ) {\n\n\t\t\tvar components = getEncodingComponents( encoding );\n\t\t\treturn \"vec4 \" + functionName + \"( vec4 value ) { return \" + components[ 0 ] + \"ToLinear\" + components[ 1 ] + \"; }\";\n\n\t\t}\n\n\t\tfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\t\t\tvar components = getEncodingComponents( encoding );\n\t\t\treturn \"vec4 \" + functionName + \"( vec4 value ) { return LinearTo\" + components[ 0 ] + components[ 1 ] + \"; }\";\n\n\t\t}\n\n\t\tfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\t\t\tvar toneMappingName;\n\n\t\t\tswitch ( toneMapping ) {\n\n\t\t\t\tcase THREE.LinearToneMapping:\n\t\t\t\t\ttoneMappingName = \"Linear\";\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase THREE.ReinhardToneMapping:\n\t\t\t\t\ttoneMappingName = \"Reinhard\";\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase THREE.Uncharted2ToneMapping:\n\t\t\t\t\ttoneMappingName = \"Uncharted2\";\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase THREE.CineonToneMapping:\n\t\t\t\t\ttoneMappingName = \"OptimizedCineon\";\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error( 'unsupported toneMapping: ' + toneMapping );\n\n\t\t\t}\n\n\t\t\treturn \"vec3 \" + functionName + \"( vec3 color ) { return \" + toneMappingName + \"ToneMapping( color ); }\";\n\n\t\t}\n\n\t\tfunction generateExtensions( extensions, parameters, rendererExtensions ) {\n\n\t\t\textensions = extensions || {};\n\n\t\t\tvar chunks = [\n\t\t\t\t( extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.normalMap || parameters.flatShading ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t\t\t( extensions.fragDepth || parameters.logarithmicDepthBuffer ) && rendererExtensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t\t\t( extensions.drawBuffers ) && rendererExtensions.get( 'WEBGL_draw_buffers' ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t\t\t( extensions.shaderTextureLOD || parameters.envMap ) && rendererExtensions.get( 'EXT_shader_texture_lod' ) ? '#extension GL_EXT_shader_texture_lod : enable' : '',\n\t\t\t];\n\n\t\t\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n\t\t}\n\n\t\tfunction generateDefines( defines ) {\n\n\t\t\tvar chunks = [];\n\n\t\t\tfor ( var name in defines ) {\n\n\t\t\t\tvar value = defines[ name ];\n\n\t\t\t\tif ( value === false ) continue;\n\n\t\t\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t\t\t}\n\n\t\t\treturn chunks.join( '\\n' );\n\n\t\t}\n\n\t\tfunction fetchAttributeLocations( gl, program, identifiers ) {\n\n\t\t\tvar attributes = {};\n\n\t\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\t\t\tfor ( var i = 0; i < n; i ++ ) {\n\n\t\t\t\tvar info = gl.getActiveAttrib( program, i );\n\t\t\t\tvar name = info.name;\n\n\t\t\t\t// console.log(\"THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:\", name, i );\n\n\t\t\t\tattributes[ name ] = gl.getAttribLocation( program, name );\n\n\t\t\t}\n\n\t\t\treturn attributes;\n\n\t\t}\n\n\t\tfunction filterEmptyLine( string ) {\n\n\t\t\treturn string !== '';\n\n\t\t}\n\n\t\tfunction replaceLightNums( string, parameters ) {\n\n\t\t\treturn string\n\t\t\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights );\n\n\t\t}\n\n\t\tfunction parseIncludes( string ) {\n\n\t\t\tvar pattern = /#include +<([\\w\\d.]+)>/g;\n\n\t\t\tfunction replace( match, include ) {\n\n\t\t\t\tvar replace = THREE.ShaderChunk[ include ];\n\n\t\t\t\tif ( replace === undefined ) {\n\n\t\t\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t\t\t}\n\n\t\t\t\treturn parseIncludes( replace );\n\n\t\t\t}\n\n\t\t\treturn string.replace( pattern, replace );\n\n\t\t}\n\n\t\tfunction unrollLoops( string ) {\n\n\t\t\tvar pattern = /for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n\n\t\t\tfunction replace( match, start, end, snippet ) {\n\n\t\t\t\tvar unroll = '';\n\n\t\t\t\tfor ( var i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\t\t\t\tunroll += snippet.replace( /\\[ i \\]/g, '[ ' + i + ' ]' );\n\n\t\t\t\t}\n\n\t\t\t\treturn unroll;\n\n\t\t\t}\n\n\t\t\treturn string.replace( pattern, replace );\n\n\t\t}\n\n\t\treturn function WebGLProgram( renderer, code, material, parameters ) {\n\n\t\t\tvar gl = renderer.context;\n\n\t\t\tvar extensions = material.extensions;\n\t\t\tvar defines = material.defines;\n\n\t\t\tvar vertexShader = material.__webglShader.vertexShader;\n\t\t\tvar fragmentShader = material.__webglShader.fragmentShader;\n\n\t\t\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\t\t\tif ( parameters.shadowMapType === THREE.PCFShadowMap ) {\n\n\t\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t\t\t} else if ( parameters.shadowMapType === THREE.PCFSoftShadowMap ) {\n\n\t\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t\t\t}\n\n\t\t\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\t\t\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\n\t\t\tif ( parameters.envMap ) {\n\n\t\t\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\t\t\tcase THREE.CubeReflectionMapping:\n\t\t\t\t\tcase THREE.CubeRefractionMapping:\n\t\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase THREE.CubeUVReflectionMapping:\n\t\t\t\t\tcase THREE.CubeUVRefractionMapping:\n\t\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase THREE.EquirectangularReflectionMapping:\n\t\t\t\t\tcase THREE.EquirectangularRefractionMapping:\n\t\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase THREE.SphericalReflectionMapping:\n\t\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\t\t\tcase THREE.CubeRefractionMapping:\n\t\t\t\t\tcase THREE.EquirectangularRefractionMapping:\n\t\t\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tswitch ( material.combine ) {\n\n\t\t\t\t\tcase THREE.MultiplyOperation:\n\t\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase THREE.MixOperation:\n\t\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase THREE.AddOperation:\n\t\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\n\n\t\t\t// console.log( 'building new program ' );\n\n\t\t\t//\n\n\t\t\tvar customExtensions = generateExtensions( extensions, parameters, renderer.extensions );\n\n\t\t\tvar customDefines = generateDefines( defines );\n\n\t\t\t//\n\n\t\t\tvar program = gl.createProgram();\n\n\t\t\tvar prefixVertex, prefixFragment;\n\n\t\t\tif ( material instanceof THREE.RawShaderMaterial ) {\n\n\t\t\t\tprefixVertex = [\n\n\t\t\t\t\tcustomDefines\n\n\t\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t\t\tprefixFragment = [\n\n\t\t\t\t\tcustomDefines\n\n\t\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t\t} else {\n\n\t\t\t\tprefixVertex = [\n\n\t\t\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t\t\t'#define SHADER_NAME ' + material.__webglShader.name,\n\n\t\t\t\t\tcustomDefines,\n\n\t\t\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t\t\t'#define MAX_BONES ' + parameters.maxBones,\n\n\t\t\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\t\t\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\n\n\t\t\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\t\t\t'#define NUM_CLIPPING_PLANES ' + parameters.numClippingPlanes,\n\n\t\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\t\t\t'attribute vec3 position;',\n\t\t\t\t\t'attribute vec3 normal;',\n\t\t\t\t\t'attribute vec2 uv;',\n\n\t\t\t\t\t'#ifdef USE_COLOR',\n\n\t\t\t\t\t'\tattribute vec3 color;',\n\n\t\t\t\t\t'#endif',\n\n\t\t\t\t\t'#ifdef USE_MORPHTARGETS',\n\n\t\t\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t\t\t'\t#else',\n\n\t\t\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t\t\t'\t#endif',\n\n\t\t\t\t\t'#endif',\n\n\t\t\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t\t\t'#endif',\n\n\t\t\t\t\t'\\n'\n\n\t\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t\t\tprefixFragment = [\n\n\t\t\t\t\tcustomExtensions,\n\n\t\t\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t\t\t'#define SHADER_NAME ' + material.__webglShader.name,\n\n\t\t\t\t\tcustomDefines,\n\n\t\t\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest : '',\n\n\t\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\n\n\t\t\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\t\t\t'#define NUM_CLIPPING_PLANES ' + parameters.numClippingPlanes,\n\n\t\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\t\t\tparameters.premultipliedAlpha ? \"#define PREMULTIPLIED_ALPHA\" : '',\n\n\t\t\t\t\tparameters.physicallyCorrectLights ? \"#define PHYSICALLY_CORRECT_LIGHTS\" : '',\n\n\t\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t\t\tparameters.envMap && renderer.extensions.get( 'EXT_shader_texture_lod' ) ? '#define TEXTURE_LOD_EXT' : '',\n\n\t\t\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\t\t\t( parameters.toneMapping !== THREE.NoToneMapping ) ? \"#define TONE_MAPPING\" : '',\n\t\t\t\t\t( parameters.toneMapping !== THREE.NoToneMapping ) ? THREE.ShaderChunk[ 'tonemapping_pars_fragment' ] : '',  // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t\t\t( parameters.toneMapping !== THREE.NoToneMapping ) ? getToneMappingFunction( \"toneMapping\", parameters.toneMapping ) : '',\n\n\t\t\t\t\t( parameters.outputEncoding || parameters.mapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding ) ? THREE.ShaderChunk[ 'encodings_pars_fragment' ] : '', // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\t\t\tparameters.mapEncoding ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\n\t\t\t\t\tparameters.envMapEncoding ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\n\t\t\t\t\tparameters.emissiveMapEncoding ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\n\t\t\t\t\tparameters.outputEncoding ? getTexelEncodingFunction( \"linearToOutputTexel\", parameters.outputEncoding ) : '',\n\n\t\t\t\t\tparameters.depthPacking ? \"#define DEPTH_PACKING \" + material.depthPacking : '',\n\n\t\t\t\t\t'\\n'\n\n\t\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t\t}\n\n\t\t\tvertexShader = parseIncludes( vertexShader, parameters );\n\t\t\tvertexShader = replaceLightNums( vertexShader, parameters );\n\n\t\t\tfragmentShader = parseIncludes( fragmentShader, parameters );\n\t\t\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\n\t\t\tif ( material instanceof THREE.ShaderMaterial === false ) {\n\n\t\t\t\tvertexShader = unrollLoops( vertexShader );\n\t\t\t\tfragmentShader = unrollLoops( fragmentShader );\n\n\t\t\t}\n\n\t\t\tvar vertexGlsl = prefixVertex + vertexShader;\n\t\t\tvar fragmentGlsl = prefixFragment + fragmentShader;\n\n\t\t\t// console.log( '*VERTEX*', vertexGlsl );\n\t\t\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\t\t\tvar glVertexShader = THREE.WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\t\t\tvar glFragmentShader = THREE.WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\t\t\tgl.attachShader( program, glVertexShader );\n\t\t\tgl.attachShader( program, glFragmentShader );\n\n\t\t\t// Force a particular attribute to index 0.\n\n\t\t\tif ( material.index0AttributeName !== undefined ) {\n\n\t\t\t\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\n\n\t\t\t} else if ( parameters.morphTargets === true ) {\n\n\t\t\t\t// programs with morphTargets displace position out of attribute 0\n\t\t\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t\t\t}\n\n\t\t\tgl.linkProgram( program );\n\n\t\t\tvar programLog = gl.getProgramInfoLog( program );\n\t\t\tvar vertexLog = gl.getShaderInfoLog( glVertexShader );\n\t\t\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader );\n\n\t\t\tvar runnable = true;\n\t\t\tvar haveDiagnostics = true;\n\n\t\t\t// console.log( '**VERTEX**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );\n\t\t\t// console.log( '**FRAGMENT**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );\n\n\t\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\t\t\trunnable = false;\n\n\t\t\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter( program, gl.VALIDATE_STATUS ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );\n\n\t\t\t} else if ( programLog !== '' ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\n\n\t\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\t\thaveDiagnostics = false;\n\n\t\t\t}\n\n\t\t\tif ( haveDiagnostics ) {\n\n\t\t\t\tthis.diagnostics = {\n\n\t\t\t\t\trunnable: runnable,\n\t\t\t\t\tmaterial: material,\n\n\t\t\t\t\tprogramLog: programLog,\n\n\t\t\t\t\tvertexShader: {\n\n\t\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t\t},\n\n\t\t\t\t\tfragmentShader: {\n\n\t\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t\t}\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\t// clean up\n\n\t\t\tgl.deleteShader( glVertexShader );\n\t\t\tgl.deleteShader( glFragmentShader );\n\n\t\t\t// set up caching for uniform locations\n\n\t\t\tvar cachedUniforms;\n\n\t\t\tthis.getUniforms = function() {\n\n\t\t\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\t\t\tcachedUniforms =\n\t\t\t\t\t\t\tnew THREE.WebGLUniforms( gl, program, renderer );\n\n\t\t\t\t}\n\n\t\t\t\treturn cachedUniforms;\n\n\t\t\t};\n\n\t\t\t// set up caching for attribute locations\n\n\t\t\tvar cachedAttributes;\n\n\t\t\tthis.getAttributes = function() {\n\n\t\t\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t\t\t}\n\n\t\t\t\treturn cachedAttributes;\n\n\t\t\t};\n\n\t\t\t// free resource\n\n\t\t\tthis.destroy = function() {\n\n\t\t\t\tgl.deleteProgram( program );\n\t\t\t\tthis.program = undefined;\n\n\t\t\t};\n\n\t\t\t// DEPRECATED\n\n\t\t\tObject.defineProperties( this, {\n\n\t\t\t\tuniforms: {\n\t\t\t\t\tget: function() {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );\n\t\t\t\t\t\treturn this.getUniforms();\n\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tattributes: {\n\t\t\t\t\tget: function() {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );\n\t\t\t\t\t\treturn this.getAttributes();\n\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t} );\n\n\n\t\t\t//\n\n\t\t\tthis.id = programIdCount ++;\n\t\t\tthis.code = code;\n\t\t\tthis.usedTimes = 1;\n\t\t\tthis.program = program;\n\t\t\tthis.vertexShader = glVertexShader;\n\t\t\tthis.fragmentShader = glFragmentShader;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t} )();\n\n\t// File:src/renderers/webgl/WebGLPrograms.js\n\n\tTHREE.WebGLPrograms = function ( renderer, capabilities ) {\n\n\t\tvar programs = [];\n\n\t\tvar shaderIDs = {\n\t\t\tMeshDepthMaterial: 'depth',\n\t\t\tMeshNormalMaterial: 'normal',\n\t\t\tMeshBasicMaterial: 'basic',\n\t\t\tMeshLambertMaterial: 'lambert',\n\t\t\tMeshPhongMaterial: 'phong',\n\t\t\tMeshStandardMaterial: 'physical',\n\t\t\tMeshPhysicalMaterial: 'physical',\n\t\t\tLineBasicMaterial: 'basic',\n\t\t\tLineDashedMaterial: 'dashed',\n\t\t\tPointsMaterial: 'points'\n\t\t};\n\n\t\tvar parameterNames = [\n\t\t\t\"precision\", \"supportsVertexTextures\", \"map\", \"mapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\",\n\t\t\t\"lightMap\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"displacementMap\", \"specularMap\",\n\t\t\t\"roughnessMap\", \"metalnessMap\",\n\t\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\",\n\t\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\n\t\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\n\t\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\",\n\t\t\t\"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\",\n\t\t\t\"shadowMapEnabled\", \"shadowMapType\", \"toneMapping\", 'physicallyCorrectLights',\n\t\t\t\"alphaTest\", \"doubleSided\", \"flipSided\", \"numClippingPlanes\", \"depthPacking\"\n\t\t];\n\n\n\t\tfunction allocateBones ( object ) {\n\n\t\t\tif ( capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture ) {\n\n\t\t\t\treturn 1024;\n\n\t\t\t} else {\n\n\t\t\t\t// default for when object is not specified\n\t\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\n\t\t\t\t//\n\t\t\t\t//  - leave some extra space for other uniforms\n\t\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\n\t\t\t\t//    (up to 54 should be safe)\n\n\t\t\t\tvar nVertexUniforms = capabilities.maxVertexUniforms;\n\t\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\n\n\t\t\t\tvar maxBones = nVertexMatrices;\n\n\t\t\t\tif ( object !== undefined && object instanceof THREE.SkinnedMesh ) {\n\n\t\t\t\t\tmaxBones = Math.min( object.skeleton.bones.length, maxBones );\n\n\t\t\t\t\tif ( maxBones < object.skeleton.bones.length ) {\n\n\t\t\t\t\t\tconsole.warn( 'WebGLRenderer: too many bones - ' + object.skeleton.bones.length + ', this GPU supports just ' + maxBones + ' (try OpenGL instead of ANGLE)' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn maxBones;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getTextureEncodingFromMap( map, gammaOverrideLinear ) {\n\n\t\t\tvar encoding;\n\n\t\t\tif ( ! map ) {\n\n\t\t\t\tencoding = THREE.LinearEncoding;\n\n\t\t\t} else if ( map instanceof THREE.Texture ) {\n\n\t\t\t\tencoding = map.encoding;\n\n\t\t\t} else if ( map instanceof THREE.WebGLRenderTarget ) {\n\n\t\t\t\tconsole.warn( \"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\t\tencoding = map.texture.encoding;\n\n\t\t\t}\n\n\t\t\t// add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.\n\t\t\tif ( encoding === THREE.LinearEncoding && gammaOverrideLinear ) {\n\n\t\t\t\tencoding = THREE.GammaEncoding;\n\n\t\t\t}\n\n\t\t\treturn encoding;\n\n\t\t}\n\n\t\tthis.getParameters = function ( material, lights, fog, nClipPlanes, object ) {\n\n\t\t\tvar shaderID = shaderIDs[ material.type ];\n\n\t\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t\t// (not to blow over maxLights budget)\n\n\t\t\tvar maxBones = allocateBones( object );\n\t\t\tvar precision = renderer.getPrecision();\n\n\t\t\tif ( material.precision !== null ) {\n\n\t\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar currentRenderTarget = renderer.getCurrentRenderTarget();\n\n\t\t\tvar parameters = {\n\n\t\t\t\tshaderID: shaderID,\n\n\t\t\t\tprecision: precision,\n\t\t\t\tsupportsVertexTextures: capabilities.vertexTextures,\n\t\t\t\toutputEncoding: getTextureEncodingFromMap( ( ! currentRenderTarget ) ? null : currentRenderTarget.texture, renderer.gammaOutput ),\n\t\t\t\tmap: !! material.map,\n\t\t\t\tmapEncoding: getTextureEncodingFromMap( material.map, renderer.gammaInput ),\n\t\t\t\tenvMap: !! material.envMap,\n\t\t\t\tenvMapMode: material.envMap && material.envMap.mapping,\n\t\t\t\tenvMapEncoding: getTextureEncodingFromMap( material.envMap, renderer.gammaInput ),\n\t\t\t\tenvMapCubeUV: ( !! material.envMap ) && ( ( material.envMap.mapping === THREE.CubeUVReflectionMapping ) || ( material.envMap.mapping === THREE.CubeUVRefractionMapping ) ),\n\t\t\t\tlightMap: !! material.lightMap,\n\t\t\t\taoMap: !! material.aoMap,\n\t\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\t\temissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap, renderer.gammaInput ),\n\t\t\t\tbumpMap: !! material.bumpMap,\n\t\t\t\tnormalMap: !! material.normalMap,\n\t\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\t\tspecularMap: !! material.specularMap,\n\t\t\t\talphaMap: !! material.alphaMap,\n\n\t\t\t\tcombine: material.combine,\n\n\t\t\t\tvertexColors: material.vertexColors,\n\n\t\t\t\tfog: !! fog,\n\t\t\t\tuseFog: material.fog,\n\t\t\t\tfogExp: fog instanceof THREE.FogExp2,\n\n\t\t\t\tflatShading: material.shading === THREE.FlatShading,\n\n\t\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\t\tlogarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\n\n\t\t\t\tskinning: material.skinning,\n\t\t\t\tmaxBones: maxBones,\n\t\t\t\tuseVertexTexture: capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture,\n\n\t\t\t\tmorphTargets: material.morphTargets,\n\t\t\t\tmorphNormals: material.morphNormals,\n\t\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\n\t\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\n\n\t\t\t\tnumDirLights: lights.directional.length,\n\t\t\t\tnumPointLights: lights.point.length,\n\t\t\t\tnumSpotLights: lights.spot.length,\n\t\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\t\tnumClippingPlanes: nClipPlanes,\n\n\t\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && lights.shadows.length > 0,\n\t\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\t\ttoneMapping: renderer.toneMapping,\n\t\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\t\talphaTest: material.alphaTest,\n\t\t\t\tdoubleSided: material.side === THREE.DoubleSide,\n\t\t\t\tflipSided: material.side === THREE.BackSide,\n\n\t\t\t\tdepthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false\n\n\t\t\t};\n\n\t\t\treturn parameters;\n\n\t\t};\n\n\t\tthis.getProgramCode = function ( material, parameters ) {\n\n\t\t\tvar array = [];\n\n\t\t\tif ( parameters.shaderID ) {\n\n\t\t\t\tarray.push( parameters.shaderID );\n\n\t\t\t} else {\n\n\t\t\t\tarray.push( material.fragmentShader );\n\t\t\t\tarray.push( material.vertexShader );\n\n\t\t\t}\n\n\t\t\tif ( material.defines !== undefined ) {\n\n\t\t\t\tfor ( var name in material.defines ) {\n\n\t\t\t\t\tarray.push( name );\n\t\t\t\t\tarray.push( material.defines[ name ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\n\n\t\t\t\tarray.push( parameters[ parameterNames[ i ] ] );\n\n\t\t\t}\n\n\t\t\treturn array.join();\n\n\t\t};\n\n\t\tthis.acquireProgram = function ( material, parameters, code ) {\n\n\t\t\tvar program;\n\n\t\t\t// Check if code has been already compiled\n\t\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\t\tvar programInfo = programs[ p ];\n\n\t\t\t\tif ( programInfo.code === code ) {\n\n\t\t\t\t\tprogram = programInfo;\n\t\t\t\t\t++ program.usedTimes;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( program === undefined ) {\n\n\t\t\t\tprogram = new THREE.WebGLProgram( renderer, code, material, parameters );\n\t\t\t\tprograms.push( program );\n\n\t\t\t}\n\n\t\t\treturn program;\n\n\t\t};\n\n\t\tthis.releaseProgram = function( program ) {\n\n\t\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t\t// Remove from unordered set\n\t\t\t\tvar i = programs.indexOf( program );\n\t\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\t\tprograms.pop();\n\n\t\t\t\t// Free WebGL resources\n\t\t\t\tprogram.destroy();\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tthis.programs = programs;\n\n\t};\n\n\t// File:src/renderers/webgl/WebGLProperties.js\n\n\t/**\n\t* @author fordacious / fordacious.github.io\n\t*/\n\n\tTHREE.WebGLProperties = function () {\n\n\t\tvar properties = {};\n\n\t\tthis.get = function ( object ) {\n\n\t\t\tvar uuid = object.uuid;\n\t\t\tvar map = properties[ uuid ];\n\n\t\t\tif ( map === undefined ) {\n\n\t\t\t\tmap = {};\n\t\t\t\tproperties[ uuid ] = map;\n\n\t\t\t}\n\n\t\t\treturn map;\n\n\t\t};\n\n\t\tthis.delete = function ( object ) {\n\n\t\t\tdelete properties[ object.uuid ];\n\n\t\t};\n\n\t\tthis.clear = function () {\n\n\t\t\tproperties = {};\n\n\t\t};\n\n\t};\n\n\t// File:src/renderers/webgl/WebGLShader.js\n\n\tTHREE.WebGLShader = ( function () {\n\n\t\tfunction addLineNumbers( string ) {\n\n\t\t\tvar lines = string.split( '\\n' );\n\n\t\t\tfor ( var i = 0; i < lines.length; i ++ ) {\n\n\t\t\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\n\n\t\t\t}\n\n\t\t\treturn lines.join( '\\n' );\n\n\t\t}\n\n\t\treturn function WebGLShader( gl, type, string ) {\n\n\t\t\tvar shader = gl.createShader( type );\n\n\t\t\tgl.shaderSource( shader, string );\n\t\t\tgl.compileShader( shader );\n\n\t\t\tif ( gl.getShaderParameter( shader, gl.COMPILE_STATUS ) === false ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLShader: Shader couldn\\'t compile.' );\n\n\t\t\t}\n\n\t\t\tif ( gl.getShaderInfoLog( shader ) !== '' ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );\n\n\t\t\t}\n\n\t\t\t// --enable-privileged-webgl-extension\n\t\t\t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\t\treturn shader;\n\n\t\t};\n\n\t} )();\n\n\t// File:src/renderers/webgl/WebGLShadowMap.js\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.WebGLShadowMap = function ( _renderer, _lights, _objects, capabilities ) {\n\n\t\tvar _gl = _renderer.context,\n\t\t_state = _renderer.state,\n\t\t_frustum = new THREE.Frustum(),\n\t\t_projScreenMatrix = new THREE.Matrix4(),\n\n\t\t_lightShadows = _lights.shadows,\n\n\t\t_shadowMapSize = new THREE.Vector2(),\n\t\t_maxShadowMapSize = new THREE.Vector2( capabilities.maxTextureSize, capabilities.maxTextureSize ),\n\n\t\t_lookTarget = new THREE.Vector3(),\n\t\t_lightPositionWorld = new THREE.Vector3(),\n\n\t\t_renderList = [],\n\n\t\t_MorphingFlag = 1,\n\t\t_SkinningFlag = 2,\n\n\t\t_NumberOfMaterialVariants = ( _MorphingFlag | _SkinningFlag ) + 1,\n\n\t\t_depthMaterials = new Array( _NumberOfMaterialVariants ),\n\t\t_distanceMaterials = new Array( _NumberOfMaterialVariants ),\n\n\t\t_materialCache = {};\n\n\t\tvar cubeDirections = [\n\t\t\tnew THREE.Vector3( 1, 0, 0 ), new THREE.Vector3( - 1, 0, 0 ), new THREE.Vector3( 0, 0, 1 ),\n\t\t\tnew THREE.Vector3( 0, 0, - 1 ), new THREE.Vector3( 0, 1, 0 ), new THREE.Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tvar cubeUps = [\n\t\t\tnew THREE.Vector3( 0, 1, 0 ), new THREE.Vector3( 0, 1, 0 ), new THREE.Vector3( 0, 1, 0 ),\n\t\t\tnew THREE.Vector3( 0, 1, 0 ), new THREE.Vector3( 0, 0, 1 ),\tnew THREE.Vector3( 0, 0, - 1 )\n\t\t];\n\n\t\tvar cube2DViewPorts = [\n\t\t\tnew THREE.Vector4(), new THREE.Vector4(), new THREE.Vector4(),\n\t\t\tnew THREE.Vector4(), new THREE.Vector4(), new THREE.Vector4()\n\t\t];\n\n\t\t// init\n\n\t\tvar depthMaterialTemplate = new THREE.MeshDepthMaterial();\n\t\tdepthMaterialTemplate.depthPacking = THREE.RGBADepthPacking;\n\t\tdepthMaterialTemplate.clipping = true;\n\n\t\tvar distanceShader = THREE.ShaderLib[ \"distanceRGBA\" ];\n\t\tvar distanceUniforms = THREE.UniformsUtils.clone( distanceShader.uniforms );\n\n\t\tfor ( var i = 0; i !== _NumberOfMaterialVariants; ++ i ) {\n\n\t\t\tvar useMorphing = ( i & _MorphingFlag ) !== 0;\n\t\t\tvar useSkinning = ( i & _SkinningFlag ) !== 0;\n\n\t\t\tvar depthMaterial = depthMaterialTemplate.clone();\n\t\t\tdepthMaterial.morphTargets = useMorphing;\n\t\t\tdepthMaterial.skinning = useSkinning;\n\n\t\t\t_depthMaterials[ i ] = depthMaterial;\n\n\t\t\tvar distanceMaterial = new THREE.ShaderMaterial( {\n\t\t\t\tdefines: {\n\t\t\t\t\t'USE_SHADOWMAP': ''\n\t\t\t\t},\n\t\t\t\tuniforms: distanceUniforms,\n\t\t\t\tvertexShader: distanceShader.vertexShader,\n\t\t\t\tfragmentShader: distanceShader.fragmentShader,\n\t\t\t\tmorphTargets: useMorphing,\n\t\t\t\tskinning: useSkinning,\n\t\t\t\tclipping: true\n\t\t\t} );\n\n\t\t\t_distanceMaterials[ i ] = distanceMaterial;\n\n\t\t}\n\n\t\t//\n\n\t\tvar scope = this;\n\n\t\tthis.enabled = false;\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis.type = THREE.PCFShadowMap;\n\n\t\tthis.renderReverseSided = true;\n\t\tthis.renderSingleSided = true;\n\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\t\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\t\tif ( _lightShadows.length === 0 ) return;\n\n\t\t\t// Set GL state for depth map.\n\t\t\t_state.clearColor( 1, 1, 1, 1 );\n\t\t\t_state.disable( _gl.BLEND );\n\t\t\t_state.setDepthTest( true );\n\t\t\t_state.setScissorTest( false );\n\n\t\t\t// render depth map\n\n\t\t\tvar faceCount, isPointLight;\n\n\t\t\tfor ( var i = 0, il = _lightShadows.length; i < il; i ++ ) {\n\n\t\t\t\tvar light = _lightShadows[ i ];\n\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tvar shadowCamera = shadow.camera;\n\n\t\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\t\t\t\t_shadowMapSize.min( _maxShadowMapSize );\n\n\t\t\t\tif ( light instanceof THREE.PointLight ) {\n\n\t\t\t\t\tfaceCount = 6;\n\t\t\t\t\tisPointLight = true;\n\n\t\t\t\t\tvar vpWidth = _shadowMapSize.x;\n\t\t\t\t\tvar vpHeight = _shadowMapSize.y;\n\n\t\t\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t\t\t// following orientation:\n\t\t\t\t\t//\n\t\t\t\t\t//  xzXZ\n\t\t\t\t\t//   y Y\n\t\t\t\t\t//\n\t\t\t\t\t// X - Positive x direction\n\t\t\t\t\t// x - Negative x direction\n\t\t\t\t\t// Y - Positive y direction\n\t\t\t\t\t// y - Negative y direction\n\t\t\t\t\t// Z - Positive z direction\n\t\t\t\t\t// z - Negative z direction\n\n\t\t\t\t\t// positive X\n\t\t\t\t\tcube2DViewPorts[ 0 ].set( vpWidth * 2, vpHeight, vpWidth, vpHeight );\n\t\t\t\t\t// negative X\n\t\t\t\t\tcube2DViewPorts[ 1 ].set( 0, vpHeight, vpWidth, vpHeight );\n\t\t\t\t\t// positive Z\n\t\t\t\t\tcube2DViewPorts[ 2 ].set( vpWidth * 3, vpHeight, vpWidth, vpHeight );\n\t\t\t\t\t// negative Z\n\t\t\t\t\tcube2DViewPorts[ 3 ].set( vpWidth, vpHeight, vpWidth, vpHeight );\n\t\t\t\t\t// positive Y\n\t\t\t\t\tcube2DViewPorts[ 4 ].set( vpWidth * 3, 0, vpWidth, vpHeight );\n\t\t\t\t\t// negative Y\n\t\t\t\t\tcube2DViewPorts[ 5 ].set( vpWidth, 0, vpWidth, vpHeight );\n\n\t\t\t\t\t_shadowMapSize.x *= 4.0;\n\t\t\t\t\t_shadowMapSize.y *= 2.0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfaceCount = 1;\n\t\t\t\t\tisPointLight = false;\n\n\t\t\t\t}\n\n\t\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\t\tvar pars = { minFilter: THREE.NearestFilter, magFilter: THREE.NearestFilter, format: THREE.RGBAFormat };\n\n\t\t\t\t\tshadow.map = new THREE.WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\n\t\t\t\t\tshadowCamera.updateProjectionMatrix();\n\n\t\t\t\t}\n\n\t\t\t\tif ( shadow instanceof THREE.SpotLightShadow ) {\n\n\t\t\t\t\tshadow.update( light );\n\n\t\t\t\t}\n\n\t\t\t\tvar shadowMap = shadow.map;\n\t\t\t\tvar shadowMatrix = shadow.matrix;\n\n\t\t\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tshadowCamera.position.copy( _lightPositionWorld );\n\n\t\t\t\t_renderer.setRenderTarget( shadowMap );\n\t\t\t\t_renderer.clear();\n\n\t\t\t\t// render shadow map for each cube face (if omni-directional) or\n\t\t\t\t// run a single pass if not\n\n\t\t\t\tfor ( var face = 0; face < faceCount; face ++ ) {\n\n\t\t\t\t\tif ( isPointLight ) {\n\n\t\t\t\t\t\t_lookTarget.copy( shadowCamera.position );\n\t\t\t\t\t\t_lookTarget.add( cubeDirections[ face ] );\n\t\t\t\t\t\tshadowCamera.up.copy( cubeUps[ face ] );\n\t\t\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\n\t\t\t\t\t\tvar vpDimensions = cube2DViewPorts[ face ];\n\t\t\t\t\t\t_state.viewport( vpDimensions );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_lookTarget.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tshadowCamera.updateMatrixWorld();\n\t\t\t\t\tshadowCamera.matrixWorldInverse.getInverse( shadowCamera.matrixWorld );\n\n\t\t\t\t\t// compute shadow matrix\n\n\t\t\t\t\tshadowMatrix.set(\n\t\t\t\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t\t\t\t);\n\n\t\t\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\n\t\t\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\n\n\t\t\t\t\t// update camera matrices and frustum\n\n\t\t\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\t\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t\t\t\t// set object matrices & frustum culling\n\n\t\t\t\t\t_renderList.length = 0;\n\n\t\t\t\t\tprojectObject( scene, camera, shadowCamera );\n\n\t\t\t\t\t// render shadow map\n\t\t\t\t\t// render regular objects\n\n\t\t\t\t\tfor ( var j = 0, jl = _renderList.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar object = _renderList[ j ];\n\t\t\t\t\t\tvar geometry = _objects.update( object );\n\t\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\t\tif ( material instanceof THREE.MultiMaterial ) {\n\n\t\t\t\t\t\t\tvar groups = geometry.groups;\n\t\t\t\t\t\t\tvar materials = material.materials;\n\n\t\t\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\t\t\tvar group = groups[ k ];\n\t\t\t\t\t\t\t\tvar groupMaterial = materials[ group.materialIndex ];\n\n\t\t\t\t\t\t\t\tif ( groupMaterial.visible === true ) {\n\n\t\t\t\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, groupMaterial, isPointLight, _lightPositionWorld );\n\t\t\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, material, isPointLight, _lightPositionWorld );\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Restore GL state.\n\t\t\tvar clearColor = _renderer.getClearColor(),\n\t\t\tclearAlpha = _renderer.getClearAlpha();\n\t\t\t_renderer.setClearColor( clearColor, clearAlpha );\n\n\t\t\tscope.needsUpdate = false;\n\n\t\t};\n\n\t\tfunction getDepthMaterial( object, material, isPointLight, lightPositionWorld ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tvar result = null;\n\n\t\t\tvar materialVariants = _depthMaterials;\n\t\t\tvar customMaterial = object.customDepthMaterial;\n\n\t\t\tif ( isPointLight ) {\n\n\t\t\t\tmaterialVariants = _distanceMaterials;\n\t\t\t\tcustomMaterial = object.customDistanceMaterial;\n\n\t\t\t}\n\n\t\t\tif ( ! customMaterial ) {\n\n\t\t\t\tvar useMorphing = false;\n\n\t\t\t\tif ( material.morphTargets ) {\n\n\t\t\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\n\n\t\t\t\t\t\tuseMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n\n\t\t\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\n\n\t\t\t\t\t\tuseMorphing = geometry.morphTargets && geometry.morphTargets.length > 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar useSkinning = object instanceof THREE.SkinnedMesh && material.skinning;\n\n\t\t\t\tvar variantIndex = 0;\n\n\t\t\t\tif ( useMorphing ) variantIndex |= _MorphingFlag;\n\t\t\t\tif ( useSkinning ) variantIndex |= _SkinningFlag;\n\n\t\t\t\tresult = materialVariants[ variantIndex ];\n\n\t\t\t} else {\n\n\t\t\t\tresult = customMaterial;\n\n\t\t\t}\n\n\t\t\tif ( _renderer.localClippingEnabled &&\n\t\t\t\t material.clipShadows === true &&\n\t\t\t\t\tmaterial.clippingPlanes.length !== 0 ) {\n\n\t\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t\t// appropriate state\n\n\t\t\t\tvar keyA = result.uuid, keyB = material.uuid;\n\n\t\t\t\tvar materialsForVariant = _materialCache[ keyA ];\n\n\t\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t\t}\n\n\t\t\t\tvar cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t\t}\n\n\t\t\t\tresult = cachedMaterial;\n\n\t\t\t}\n\n\t\t\tresult.visible = material.visible;\n\t\t\tresult.wireframe = material.wireframe;\n\n\t\t\tvar side = material.side;\n\n\t\t\tif ( scope.renderSingleSided && side == THREE.DoubleSide ) {\n\n\t\t\t\tside = THREE.FrontSide;\n\n\t\t\t}\n\n\t\t\tif ( scope.renderReverseSided ) {\n\n\t\t\t\tif ( side === THREE.FrontSide ) side = THREE.BackSide;\n\t\t\t\telse if ( side === THREE.BackSide ) side = THREE.FrontSide;\n\n\t\t\t}\n\n\t\t\tresult.side = side;\n\n\t\t\tresult.clipShadows = material.clipShadows;\n\t\t\tresult.clippingPlanes = material.clippingPlanes;\n\n\t\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\t\tresult.linewidth = material.linewidth;\n\n\t\t\tif ( isPointLight && result.uniforms.lightPos !== undefined ) {\n\n\t\t\t\tresult.uniforms.lightPos.value.copy( lightPositionWorld );\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t\tfunction projectObject( object, camera, shadowCamera ) {\n\n\t\t\tif ( object.visible === false ) return;\n\n\t\t\tif ( object.layers.test( camera.layers ) && ( object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points ) ) {\n\n\t\t\t\tif ( object.castShadow && ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) ) {\n\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tif ( material.visible === true ) {\n\n\t\t\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\t\t\t\t\t\t_renderList.push( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar children = object.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tprojectObject( children[ i ], camera, shadowCamera );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\t// File:src/renderers/webgl/WebGLState.js\n\n\t/**\n\t* @author mrdoob / http://mrdoob.com/\n\t*/\n\n\tTHREE.WebGLState = function ( gl, extensions, paramThreeToGL ) {\n\n\t\tvar _this = this;\n\n\t\tthis.buffers = {\n\t\t\tcolor: new THREE.WebGLColorBuffer( gl, this ),\n\t\t\tdepth: new THREE.WebGLDepthBuffer( gl, this ),\n\t\t\tstencil: new THREE.WebGLStencilBuffer( gl, this )\n\t\t};\n\n\t\tvar maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\t\tvar newAttributes = new Uint8Array( maxVertexAttributes );\n\t\tvar enabledAttributes = new Uint8Array( maxVertexAttributes );\n\t\tvar attributeDivisors = new Uint8Array( maxVertexAttributes );\n\n\t\tvar capabilities = {};\n\n\t\tvar compressedTextureFormats = null;\n\n\t\tvar currentBlending = null;\n\t\tvar currentBlendEquation = null;\n\t\tvar currentBlendSrc = null;\n\t\tvar currentBlendDst = null;\n\t\tvar currentBlendEquationAlpha = null;\n\t\tvar currentBlendSrcAlpha = null;\n\t\tvar currentBlendDstAlpha = null;\n\t\tvar currentPremultipledAlpha = false;\n\n\t\tvar currentFlipSided = null;\n\t\tvar currentCullFace = null;\n\n\t\tvar currentLineWidth = null;\n\n\t\tvar currentPolygonOffsetFactor = null;\n\t\tvar currentPolygonOffsetUnits = null;\n\n\t\tvar currentScissorTest = null;\n\n\t\tvar maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\n\t\tvar currentTextureSlot = null;\n\t\tvar currentBoundTextures = {};\n\n\t\tvar currentScissor = new THREE.Vector4();\n\t\tvar currentViewport = new THREE.Vector4();\n\n\t\tfunction createTexture( type, target, count ) {\n\n\t\t\tvar data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\t\tvar texture = gl.createTexture();\n\n\t\t\tgl.bindTexture( type, texture );\n\t\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\t\tfor ( var i = 0; i < count; i ++ ) {\n\n\t\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t}\n\n\t\t\treturn texture;\n\n\t\t}\n\n\t\tvar emptyTextures = {};\n\t\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\t\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\n\t\t//\n\n\t\tthis.init = function () {\n\n\t\t\tthis.clearColor( 0, 0, 0, 1 );\n\t\t\tthis.clearDepth( 1 );\n\t\t\tthis.clearStencil( 0 );\n\n\t\t\tthis.enable( gl.DEPTH_TEST );\n\t\t\tthis.setDepthFunc( THREE.LessEqualDepth );\n\n\t\t\tthis.setFlipSided( false );\n\t\t\tthis.setCullFace( THREE.CullFaceBack );\n\t\t\tthis.enable( gl.CULL_FACE );\n\n\t\t\tthis.enable( gl.BLEND );\n\t\t\tthis.setBlending( THREE.NormalBlending );\n\n\t\t};\n\n\t\tthis.initAttributes = function () {\n\n\t\t\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\n\n\t\t\t\tnewAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.enableAttribute = function ( attribute ) {\n\n\t\t\tnewAttributes[ attribute ] = 1;\n\n\t\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t\t}\n\n\t\t\tif ( attributeDivisors[ attribute ] !== 0 ) {\n\n\t\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\t\textension.vertexAttribDivisorANGLE( attribute, 0 );\n\t\t\t\tattributeDivisors[ attribute ] = 0;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.enableAttributeAndDivisor = function ( attribute, meshPerAttribute, extension ) {\n\n\t\t\tnewAttributes[ attribute ] = 1;\n\n\t\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t\t}\n\n\t\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\t\textension.vertexAttribDivisorANGLE( attribute, meshPerAttribute );\n\t\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.disableUnusedAttributes = function () {\n\n\t\t\tfor ( var i = 0, l = enabledAttributes.length; i !== l; ++ i ) {\n\n\t\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.enable = function ( id ) {\n\n\t\t\tif ( capabilities[ id ] !== true ) {\n\n\t\t\t\tgl.enable( id );\n\t\t\t\tcapabilities[ id ] = true;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.disable = function ( id ) {\n\n\t\t\tif ( capabilities[ id ] !== false ) {\n\n\t\t\t\tgl.disable( id );\n\t\t\t\tcapabilities[ id ] = false;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getCompressedTextureFormats = function () {\n\n\t\t\tif ( compressedTextureFormats === null ) {\n\n\t\t\t\tcompressedTextureFormats = [];\n\n\t\t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\n\t\t\t\t     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ||\n\t\t\t\t     extensions.get( 'WEBGL_compressed_texture_etc1' ) ) {\n\n\t\t\t\t\tvar formats = gl.getParameter( gl.COMPRESSED_TEXTURE_FORMATS );\n\n\t\t\t\t\tfor ( var i = 0; i < formats.length; i ++ ) {\n\n\t\t\t\t\t\tcompressedTextureFormats.push( formats[ i ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn compressedTextureFormats;\n\n\t\t};\n\n\t\tthis.setBlending = function ( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\t\tif ( blending !== THREE.NoBlending ) {\n\n\t\t\t\tthis.enable( gl.BLEND );\n\n\t\t\t} else {\n\n\t\t\t\tthis.disable( gl.BLEND );\n\t\t\t\tcurrentBlending = blending; // no blending, that is\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( blending === THREE.AdditiveBlending ) {\n\n\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE, gl.ONE, gl.ONE );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( blending === THREE.SubtractiveBlending ) {\n\n\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( blending === THREE.MultiplyBlending ) {\n\n\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\tif ( blending === THREE.CustomBlending ) {\n\n\t\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\t\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\t\t\tgl.blendEquationSeparate( paramThreeToGL( blendEquation ), paramThreeToGL( blendEquationAlpha ) );\n\n\t\t\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t\t\t}\n\n\t\t\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\t\t\tgl.blendFuncSeparate( paramThreeToGL( blendSrc ), paramThreeToGL( blendDst ), paramThreeToGL( blendSrcAlpha ), paramThreeToGL( blendDstAlpha ) );\n\n\t\t\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\t\t\tcurrentBlendDst = blendDst;\n\t\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tcurrentBlendEquation = null;\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendEquationAlpha = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t\t}\n\n\t\t};\n\n\t\t// TODO Deprecate\n\n\t\tthis.setColorWrite = function ( colorWrite ) {\n\n\t\t\tthis.buffers.color.setMask( colorWrite );\n\n\t\t};\n\n\t\tthis.setDepthTest = function ( depthTest ) {\n\n\t\t\tthis.buffers.depth.setTest( depthTest );\n\n\t\t};\n\n\t\tthis.setDepthWrite = function ( depthWrite ) {\n\n\t\t\tthis.buffers.depth.setMask( depthWrite );\n\n\t\t};\n\n\t\tthis.setDepthFunc = function ( depthFunc ) {\n\n\t\t\tthis.buffers.depth.setFunc( depthFunc );\n\n\t\t};\n\n\t\tthis.setStencilTest = function ( stencilTest ) {\n\n\t\t\tthis.buffers.stencil.setTest( stencilTest );\n\n\t\t};\n\n\t\tthis.setStencilWrite = function ( stencilWrite ) {\n\n\t\t\tthis.buffers.stencil.setMask( stencilWrite );\n\n\t\t};\n\n\t\tthis.setStencilFunc = function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\tthis.buffers.stencil.setFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t};\n\n\t\tthis.setStencilOp = function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\tthis.buffers.stencil.setOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t};\n\n\t\t//\n\n\t\tthis.setFlipSided = function ( flipSided ) {\n\n\t\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\t\tif ( flipSided ) {\n\n\t\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t\t}\n\n\t\t\t\tcurrentFlipSided = flipSided;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setCullFace = function ( cullFace ) {\n\n\t\t\tif ( cullFace !== THREE.CullFaceNone ) {\n\n\t\t\t\tthis.enable( gl.CULL_FACE );\n\n\t\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\t\tif ( cullFace === THREE.CullFaceBack ) {\n\n\t\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t\t} else if ( cullFace === THREE.CullFaceFront ) {\n\n\t\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.disable( gl.CULL_FACE );\n\n\t\t\t}\n\n\t\t\tcurrentCullFace = cullFace;\n\n\t\t};\n\n\t\tthis.setLineWidth = function ( width ) {\n\n\t\t\tif ( width !== currentLineWidth ) {\n\n\t\t\t\tgl.lineWidth( width );\n\n\t\t\t\tcurrentLineWidth = width;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setPolygonOffset = function ( polygonOffset, factor, units ) {\n\n\t\t\tif ( polygonOffset ) {\n\n\t\t\t\tthis.enable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.disable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getScissorTest = function () {\n\n\t\t\treturn currentScissorTest;\n\n\t\t};\n\n\t\tthis.setScissorTest = function ( scissorTest ) {\n\n\t\t\tcurrentScissorTest = scissorTest;\n\n\t\t\tif ( scissorTest ) {\n\n\t\t\t\tthis.enable( gl.SCISSOR_TEST );\n\n\t\t\t} else {\n\n\t\t\t\tthis.disable( gl.SCISSOR_TEST );\n\n\t\t\t}\n\n\t\t};\n\n\t\t// texture\n\n\t\tthis.activeTexture = function ( webglSlot ) {\n\n\t\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\t\tgl.activeTexture( webglSlot );\n\t\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.bindTexture = function ( webglType, webglTexture ) {\n\n\t\t\tif ( currentTextureSlot === null ) {\n\n\t\t\t\t_this.activeTexture();\n\n\t\t\t}\n\n\t\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\t\tif ( boundTexture === undefined ) {\n\n\t\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\n\n\t\t\t}\n\n\t\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\t\tboundTexture.type = webglType;\n\t\t\t\tboundTexture.texture = webglTexture;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.compressedTexImage2D = function () {\n\n\t\t\ttry {\n\n\t\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tconsole.error( error );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.texImage2D = function () {\n\n\t\t\ttry {\n\n\t\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tconsole.error( error );\n\n\t\t\t}\n\n\t\t};\n\n\t\t// TODO Deprecate\n\n\t\tthis.clearColor = function ( r, g, b, a ) {\n\n\t\t\tthis.buffers.color.setClear( r, g, b, a );\n\n\t\t};\n\n\t\tthis.clearDepth = function ( depth ) {\n\n\t\t\tthis.buffers.depth.setClear( depth );\n\n\t\t};\n\n\t\tthis.clearStencil = function ( stencil ) {\n\n\t\t\tthis.buffers.stencil.setClear( stencil );\n\n\t\t};\n\n\t\t//\n\n\t\tthis.scissor = function ( scissor ) {\n\n\t\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\t\tcurrentScissor.copy( scissor );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.viewport = function ( viewport ) {\n\n\t\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\t\tcurrentViewport.copy( viewport );\n\n\t\t\t}\n\n\t\t};\n\n\t\t//\n\n\t\tthis.reset = function () {\n\n\t\t\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\n\n\t\t\t\tif ( enabledAttributes[ i ] === 1 ) {\n\n\t\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tcapabilities = {};\n\n\t\t\tcompressedTextureFormats = null;\n\n\t\t\tcurrentTextureSlot = null;\n\t\t\tcurrentBoundTextures = {};\n\n\t\t\tcurrentBlending = null;\n\n\t\t\tcurrentFlipSided = null;\n\t\t\tcurrentCullFace = null;\n\n\t\t\tthis.buffers.color.reset();\n\t\t\tthis.buffers.depth.reset();\n\t\t\tthis.buffers.stencil.reset();\n\n\t\t};\n\n\t};\n\n\tTHREE.WebGLColorBuffer = function ( gl, state ) {\n\n\t\tvar locked = false;\n\n\t\tvar color = new THREE.Vector4();\n\t\tvar currentColorMask = null;\n\t\tvar currentColorClear = new THREE.Vector4();\n\n\t\tthis.setMask = function ( colorMask ) {\n\n\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setLocked = function ( lock ) {\n\n\t\t\tlocked = lock;\n\n\t\t};\n\n\t\tthis.setClear = function ( r, g, b, a ) {\n\n\t\t\tcolor.set( r, g, b, a );\n\n\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tlocked = false;\n\n\t\t\tcurrentColorMask = null;\n\t\t\tcurrentColorClear = new THREE.Vector4();\n\n\t\t};\n\n\t};\n\n\tTHREE.WebGLDepthBuffer = function( gl, state ) {\n\n\t\tvar locked = false;\n\n\t\tvar currentDepthMask = null;\n\t\tvar currentDepthFunc = null;\n\t\tvar currentDepthClear = null;\n\n\t\tthis.setTest = function ( depthTest ) {\n\n\t\t\tif ( depthTest ) {\n\n\t\t\t\tstate.enable( gl.DEPTH_TEST );\n\n\t\t\t} else {\n\n\t\t\t\tstate.disable( gl.DEPTH_TEST );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setMask = function( depthMask ){\n\n\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setFunc = function ( depthFunc ) {\n\n\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\tif ( depthFunc ) {\n\n\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\tcase THREE.NeverDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase THREE.AlwaysDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase THREE.LessDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase THREE.LessEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase THREE.EqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase THREE.GreaterEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase THREE.GreaterDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase THREE.NotEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t}\n\n\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setLocked = function ( lock ) {\n\n\t\t\tlocked = lock;\n\n\t\t};\n\n\t\tthis.setClear = function ( depth ) {\n\n\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\tgl.clearDepth( depth );\n\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tlocked = false;\n\n\t\t\tcurrentDepthMask = null;\n\t\t\tcurrentDepthFunc = null;\n\t\t\tcurrentDepthClear = null;\n\n\t\t};\n\n\t};\n\n\tTHREE.WebGLStencilBuffer = function ( gl, state ) {\n\n\t\tvar locked = false;\n\n\t\tvar currentStencilMask = null;\n\t\tvar currentStencilFunc = null;\n\t\tvar currentStencilRef = null;\n\t\tvar currentStencilFuncMask = null;\n\t\tvar currentStencilFail  = null;\n\t\tvar currentStencilZFail = null;\n\t\tvar currentStencilZPass = null;\n\t\tvar currentStencilClear = null;\n\n\t\tthis.setTest = function ( stencilTest ) {\n\n\t\t\tif ( stencilTest ) {\n\n\t\t\t\tstate.enable( gl.STENCIL_TEST );\n\n\t\t\t} else {\n\n\t\t\t\tstate.disable( gl.STENCIL_TEST );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setMask = function ( stencilMask ) {\n\n\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setFunc = function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t     currentStencilRef \t!== stencilRef \t||\n\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\tgl.stencilFunc( stencilFunc,  stencilRef, stencilMask );\n\n\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\tcurrentStencilRef  = stencilRef;\n\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setOp\t = function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\tif ( currentStencilFail\t !== stencilFail \t||\n\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\tgl.stencilOp( stencilFail,  stencilZFail, stencilZPass );\n\n\t\t\t\tcurrentStencilFail  = stencilFail;\n\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setLocked = function ( lock ) {\n\n\t\t\tlocked = lock;\n\n\t\t};\n\n\t\tthis.setClear = function ( stencil ) {\n\n\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tlocked = false;\n\n\t\t\tcurrentStencilMask = null;\n\t\t\tcurrentStencilFunc = null;\n\t\t\tcurrentStencilRef = null;\n\t\t\tcurrentStencilFuncMask = null;\n\t\t\tcurrentStencilFail = null;\n\t\t\tcurrentStencilZFail = null;\n\t\t\tcurrentStencilZPass = null;\n\t\t\tcurrentStencilClear = null;\n\n\t\t};\n\n\t};\n\n\t// File:src/renderers/webgl/WebGLTextures.js\n\n\t/**\n\t* @author mrdoob / http://mrdoob.com/\n\t*/\n\n\tTHREE.WebGLTextures = function ( _gl, extensions, state, properties, capabilities, paramThreeToGL, info ) {\n\n\t\tvar _infoMemory = info.memory;\n\t\tvar _isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && _gl instanceof WebGL2RenderingContext );\n\n\t\t//\n\n\t\tfunction clampToMaxSize ( image, maxSize ) {\n\n\t\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\t\t// Warning: Scaling through the canvas will only work with images that use\n\t\t\t\t// premultiplied alpha.\n\n\t\t\t\tvar scale = maxSize / Math.max( image.width, image.height );\n\n\t\t\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\t\tcanvas.width = Math.floor( image.width * scale );\n\t\t\t\tcanvas.height = Math.floor( image.height * scale );\n\n\t\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\n\n\t\t\t\treturn canvas;\n\n\t\t\t}\n\n\t\t\treturn image;\n\n\t\t}\n\n\t\tfunction isPowerOfTwo( image ) {\n\n\t\t\treturn THREE.Math.isPowerOfTwo( image.width ) && THREE.Math.isPowerOfTwo( image.height );\n\n\t\t}\n\n\t\tfunction makePowerOfTwo( image ) {\n\n\t\t\tif ( image instanceof HTMLImageElement || image instanceof HTMLCanvasElement ) {\n\n\t\t\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\t\tcanvas.width = THREE.Math.nearestPowerOfTwo( image.width );\n\t\t\t\tcanvas.height = THREE.Math.nearestPowerOfTwo( image.height );\n\n\t\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, canvas.width, canvas.height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is not power of two (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\n\n\t\t\t\treturn canvas;\n\n\t\t\t}\n\n\t\t\treturn image;\n\n\t\t}\n\n\t\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\t\tif ( texture.wrapS !== THREE.ClampToEdgeWrapping || texture.wrapT !== THREE.ClampToEdgeWrapping ) return true;\n\t\t\tif ( texture.minFilter !== THREE.NearestFilter && texture.minFilter !== THREE.LinearFilter ) return true;\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// Fallback filters for non-power-of-2 textures\n\n\t\tfunction filterFallback ( f ) {\n\n\t\t\tif ( f === THREE.NearestFilter || f === THREE.NearestMipMapNearestFilter || f === THREE.NearestMipMapLinearFilter ) {\n\n\t\t\t\treturn _gl.NEAREST;\n\n\t\t\t}\n\n\t\t\treturn _gl.LINEAR;\n\n\t\t}\n\n\t\t//\n\n\t\tfunction onTextureDispose( event ) {\n\n\t\t\tvar texture = event.target;\n\n\t\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\t\tdeallocateTexture( texture );\n\n\t\t\t_infoMemory.textures --;\n\n\n\t\t}\n\n\t\tfunction onRenderTargetDispose( event ) {\n\n\t\t\tvar renderTarget = event.target;\n\n\t\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\t\tdeallocateRenderTarget( renderTarget );\n\n\t\t\t_infoMemory.textures --;\n\n\t\t}\n\n\t\t//\n\n\t\tfunction deallocateTexture( texture ) {\n\n\t\t\tvar textureProperties = properties.get( texture );\n\n\t\t\tif ( texture.image && textureProperties.__image__webglTextureCube ) {\n\n\t\t\t\t// cube texture\n\n\t\t\t\t_gl.deleteTexture( textureProperties.__image__webglTextureCube );\n\n\t\t\t} else {\n\n\t\t\t\t// 2D texture\n\n\t\t\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\t}\n\n\t\t\t// remove all webgl properties\n\t\t\tproperties.delete( texture );\n\n\t\t}\n\n\t\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\t\tif ( ! renderTarget ) return;\n\n\t\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t\t}\n\n\t\t\tif ( renderTarget instanceof THREE.WebGLRenderTargetCube ) {\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\n\t\t\t}\n\n\t\t\tproperties.delete( renderTarget.texture );\n\t\t\tproperties.delete( renderTarget );\n\n\t\t}\n\n\t\t//\n\n\n\n\t\tfunction setTexture2D( texture, slot ) {\n\n\t\t\tvar textureProperties = properties.get( texture );\n\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\tvar image = texture.image;\n\n\t\t\t\tif ( image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined', texture );\n\n\t\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete', texture );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\n\t\t}\n\n\t\tfunction setTextureCube ( texture, slot ) {\n\n\t\t\tvar textureProperties = properties.get( texture );\n\n\t\t\tif ( texture.image.length === 6 ) {\n\n\t\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\t\tif ( ! textureProperties.__image__webglTextureCube ) {\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\ttextureProperties.__image__webglTextureCube = _gl.createTexture();\n\n\t\t\t\t\t\t_infoMemory.textures ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\n\n\t\t\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\n\t\t\t\t\tvar isCompressed = texture instanceof THREE.CompressedTexture;\n\t\t\t\t\tvar isDataTexture = texture.image[ 0 ] instanceof THREE.DataTexture;\n\n\t\t\t\t\tvar cubeImage = [];\n\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\t\t\tcubeImage[ i ] = clampToMaxSize( texture.image[ i ], capabilities.maxCubemapSize );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar image = cubeImage[ 0 ],\n\t\t\t\t\tisPowerOfTwoImage = isPowerOfTwo( image ),\n\t\t\t\t\tglFormat = paramThreeToGL( texture.format ),\n\t\t\t\t\tglType = paramThreeToGL( texture.type );\n\n\t\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isPowerOfTwoImage );\n\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t\tif ( ! isCompressed ) {\n\n\t\t\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\t\t\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\t\tmipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\t\tif ( texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat ) {\n\n\t\t\t\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()\" );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( texture.generateMipmaps && isPowerOfTwoImage ) {\n\n\t\t\t\t\t\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttextureProperties.__version = texture.version;\n\n\t\t\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setTextureCubeDynamic ( texture, slot ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( texture ).__webglTexture );\n\n\t\t}\n\n\t\tfunction setTextureParameters ( textureType, texture, isPowerOfTwoImage ) {\n\n\t\t\tvar extension;\n\n\t\t\tif ( isPowerOfTwoImage ) {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, paramThreeToGL( texture.wrapS ) );\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, paramThreeToGL( texture.wrapT ) );\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, paramThreeToGL( texture.magFilter ) );\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, paramThreeToGL( texture.minFilter ) );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\n\n\t\t\t\tif ( texture.wrapS !== THREE.ClampToEdgeWrapping || texture.wrapT !== THREE.ClampToEdgeWrapping ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.', texture );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\n\n\t\t\t\tif ( texture.minFilter !== THREE.NearestFilter && texture.minFilter !== THREE.LinearFilter ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.', texture );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( extension ) {\n\n\t\t\t\tif ( texture.type === THREE.FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\n\t\t\t\tif ( texture.type === THREE.HalfFloatType && extensions.get( 'OES_texture_half_float_linear' ) === null ) return;\n\n\t\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\t_infoMemory.textures ++;\n\n\t\t\t}\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\n\t\t\tvar image = clampToMaxSize( texture.image, capabilities.maxTextureSize );\n\n\t\t\tif ( textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( image ) === false ) {\n\n\t\t\t\timage = makePowerOfTwo( image );\n\n\t\t\t}\n\n\t\t\tvar isPowerOfTwoImage = isPowerOfTwo( image ),\n\t\t\tglFormat = paramThreeToGL( texture.format ),\n\t\t\tglType = paramThreeToGL( texture.type );\n\n\t\t\tsetTextureParameters( _gl.TEXTURE_2D, texture, isPowerOfTwoImage );\n\n\t\t\tvar mipmap, mipmaps = texture.mipmaps;\n\n\t\t\tif ( texture instanceof THREE.DepthTexture ) {\n\n\t\t\t\t// populate depth texture with dummy data\n\n\t\t\t\tvar internalFormat = _gl.DEPTH_COMPONENT;\n\n\t\t\t\tif ( texture.type === THREE.FloatType ) {\n\n\t\t\t\t\tif ( !_isWebGL2 ) throw new Error('Float Depth Texture only supported in WebGL2.0');\n\t\t\t\t\tinternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t} else if ( _isWebGL2 ) {\n\n\t\t\t\t\t// WebGL 2.0 requires signed internalformat for glTexImage2D\n\t\t\t\t\tinternalFormat = _gl.DEPTH_COMPONENT16;\n\n\t\t\t\t}\n\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, internalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t\t} else if ( texture instanceof THREE.DataTexture ) {\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\n\n\t\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture instanceof THREE.CompressedTexture ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\tif ( texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat ) {\n\n\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()\" );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\n\n\t\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, glFormat, glType, image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( texture.generateMipmaps && isPowerOfTwoImage ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\n\t\t\ttextureProperties.__version = texture.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\t// Render targets\n\n\t\t// Setup storage for target texture and bind it to correct framebuffer\n\t\tfunction setupFrameBufferTexture ( framebuffer, renderTarget, attachment, textureTarget ) {\n\n\t\t\tvar glFormat = paramThreeToGL( renderTarget.texture.format );\n\t\t\tvar glType = paramThreeToGL( renderTarget.texture.type );\n\t\t\tstate.texImage2D( textureTarget, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 );\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t\t}\n\n\t\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\t\tfunction setupRenderBufferStorage ( renderbuffer, renderTarget ) {\n\n\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n\t\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );\n\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\n\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t\t} else {\n\n\t\t\t\t// FIXME: We don't support !depth !stencil\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t\t}\n\n\t\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\t\tfunction setupDepthTexture ( framebuffer, renderTarget ) {\n\n\t\t\tvar isCube = ( renderTarget instanceof THREE.WebGLRenderTargetCube );\n\t\t\tif ( isCube ) throw new Error('Depth Texture with cube render targets is not supported!');\n\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\tif ( !( renderTarget.depthTexture instanceof THREE.DepthTexture ) ) {\n\n\t\t\t\tthrow new Error('renderTarget.depthTexture must be an instance of THREE.DepthTexture');\n\n\t\t\t}\n\n\t\t\t// upload an empty depth texture with framebuffer size\n\t\t\tif ( !properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\t\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\t\t\t}\n\n\t\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\t\tvar webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t}\n\n\t\t// Setup GL resources for a non-texture depth buffer\n\t\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\n\t\t\tvar isCube = ( renderTarget instanceof THREE.WebGLRenderTargetCube );\n\n\t\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\t\tif ( isCube ) throw new Error('target.depthTexture not supported in Cube render targets');\n\n\t\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t\t} else {\n\n\t\t\t\tif ( isCube ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t\t}\n\n\t\t// Set up GL resources for the render target\n\t\tfunction setupRenderTarget( renderTarget ) {\n\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t_infoMemory.textures ++;\n\n\t\t\tvar isCube = ( renderTarget instanceof THREE.WebGLRenderTargetCube );\n\t\t\tvar isTargetPowerOfTwo = isPowerOfTwo( renderTarget );\n\n\t\t\t// Setup framebuffer\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t\t// Setup color buffer\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget.texture, isTargetPowerOfTwo );\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\n\n\t\t\t\t}\n\n\t\t\t\tif ( renderTarget.texture.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, renderTarget.texture, isTargetPowerOfTwo );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D );\n\n\t\t\t\tif ( renderTarget.texture.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\n\n\t\t\t}\n\n\t\t\t// Setup depth and stencil buffers\n\n\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\t\tvar texture = renderTarget.texture;\n\n\t\t\tif ( texture.generateMipmaps && isPowerOfTwo( renderTarget ) &&\n\t\t\t\t\ttexture.minFilter !== THREE.NearestFilter &&\n\t\t\t\t\ttexture.minFilter !== THREE.LinearFilter ) {\n\n\t\t\t\tvar target = renderTarget instanceof THREE.WebGLRenderTargetCube ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\t\t\t\tvar webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t\t_gl.generateMipmap( target );\n\t\t\t\tstate.bindTexture( target, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setTexture2D = setTexture2D;\n\t\tthis.setTextureCube = setTextureCube;\n\t\tthis.setTextureCubeDynamic = setTextureCubeDynamic;\n\t\tthis.setupRenderTarget = setupRenderTarget;\n\t\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\n\t};\n\n\t// File:src/renderers/webgl/WebGLUniforms.js\n\n\t/**\n\t *\n\t * Uniforms of a program.\n\t * Those form a tree structure with a special top-level container for the root,\n\t * which you get by calling 'new WebGLUniforms( gl, program, renderer )'.\n\t *\n\t *\n\t * Properties of inner nodes including the top-level container:\n\t *\n\t * .seq - array of nested uniforms\n\t * .map - nested uniforms by name\n\t *\n\t *\n\t * Methods of all nodes except the top-level container:\n\t *\n\t * .setValue( gl, value, [renderer] )\n\t *\n\t * \t\tuploads a uniform value(s)\n\t *  \tthe 'renderer' parameter is needed for sampler uniforms\n\t *\n\t *\n\t * Static methods of the top-level container (renderer factorizations):\n\t *\n\t * .upload( gl, seq, values, renderer )\n\t *\n\t * \t\tsets uniforms in 'seq' to 'values[id].value'\n\t *\n\t * .seqWithValue( seq, values ) : filteredSeq\n\t *\n\t * \t\tfilters 'seq' entries with corresponding entry in values\n\t *\n\t * .splitDynamic( seq, values ) : filteredSeq\n\t *\n\t * \t\tfilters 'seq' entries with dynamic entry and removes them from 'seq'\n\t *\n\t *\n\t * Methods of the top-level container (renderer factorizations):\n\t *\n\t * .setValue( gl, name, value )\n\t *\n\t * \t\tsets uniform with  name 'name' to 'value'\n\t *\n\t * .set( gl, obj, prop )\n\t *\n\t * \t\tsets uniform from object and property with same name than uniform\n\t *\n\t * .setOptional( gl, obj, prop )\n\t *\n\t * \t\tlike .set for an optional property of the object\n\t *\n\t *\n\t * @author tschw\n\t *\n\t */\n\n\tTHREE.WebGLUniforms = ( function() { // scope\n\n\t\tvar emptyTexture = new THREE.Texture();\n\t\tvar emptyCubeTexture = new THREE.CubeTexture();\n\n\t\t// --- Base for inner nodes (including the root) ---\n\n\t\tvar UniformContainer = function() {\n\n\t\t\t\tthis.seq = [];\n\t\t\t\tthis.map = {};\n\n\t\t\t},\n\n\t\t// --- Utilities ---\n\n\t\t// Array Caches (provide typed arrays for temporary by size)\n\n\t\t\tarrayCacheF32 = [],\n\t\t\tarrayCacheI32 = [],\n\n\t\t\tuncacheTemporaryArrays = function() {\n\n\t\t\t\tarrayCacheF32.length = 0;\n\t\t\t\tarrayCacheI32.length = 0;\n\n\t\t\t},\n\n\t\t// Flattening for arrays of vectors and matrices\n\n\t\t\tflatten = function( array, nBlocks, blockSize ) {\n\n\t\t\t\tvar firstElem = array[ 0 ];\n\n\t\t\t\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t\t\t\t// unoptimized: ! isNaN( firstElem )\n\t\t\t\t// see http://jacksondunstan.com/articles/983\n\n\t\t\t\tvar n = nBlocks * blockSize,\n\t\t\t\t\tr = arrayCacheF32[ n ];\n\n\t\t\t\tif ( r === undefined ) {\n\n\t\t\t\t\tr = new Float32Array( n );\n\t\t\t\t\tarrayCacheF32[ n ] = r;\n\n\t\t\t\t}\n\n\t\t\t\tif ( nBlocks !== 0 ) {\n\n\t\t\t\t\tfirstElem.toArray( r, 0 );\n\n\t\t\t\t\tfor ( var i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\t\t\t\toffset += blockSize;\n\t\t\t\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn r;\n\n\t\t\t},\n\n\t\t// Texture unit allocation\n\n\t\t\tallocTexUnits = function( renderer, n ) {\n\n\t\t\t\tvar r = arrayCacheI32[ n ];\n\n\t\t\t\tif ( r === undefined ) {\n\n\t\t\t\t\tr = new Int32Array( n );\n\t\t\t\t\tarrayCacheI32[ n ] = r;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0; i !== n; ++ i )\n\t\t\t\t\tr[ i ] = renderer.allocTextureUnit();\n\n\t\t\t\treturn r;\n\n\t\t\t},\n\n\t\t// --- Setters ---\n\n\t\t// Note: Defining these methods externally, because they come in a bunch\n\t\t// and this way their names minify.\n\n\t\t\t// Single scalar\n\n\t\t\tsetValue1f = function( gl, v ) { gl.uniform1f( this.addr, v ); },\n\t\t\tsetValue1i = function( gl, v ) { gl.uniform1i( this.addr, v ); },\n\n\t\t\t// Single float vector (from flat array or THREE.VectorN)\n\n\t\t\tsetValue2fv = function( gl, v ) {\n\n\t\t\t\tif ( v.x === undefined ) gl.uniform2fv( this.addr, v );\n\t\t\t\telse gl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\t},\n\n\t\t\tsetValue3fv = function( gl, v ) {\n\n\t\t\t\tif ( v.x !== undefined )\n\t\t\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\t\t\t\telse if ( v.r !== undefined )\n\t\t\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\t\t\t\telse\n\t\t\t\t\tgl.uniform3fv( this.addr, v );\n\n\t\t\t},\n\n\t\t\tsetValue4fv = function( gl, v ) {\n\n\t\t\t\tif ( v.x === undefined ) gl.uniform4fv( this.addr, v );\n\t\t\t\telse gl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\t},\n\n\t\t\t// Single matrix (from flat array or MatrixN)\n\n\t\t\tsetValue2fm = function( gl, v ) {\n\n\t\t\t\tgl.uniformMatrix2fv( this.addr, false, v.elements || v );\n\n\t\t\t},\n\n\t\t\tsetValue3fm = function( gl, v ) {\n\n\t\t\t\tgl.uniformMatrix3fv( this.addr, false, v.elements || v );\n\n\t\t\t},\n\n\t\t\tsetValue4fm = function( gl, v ) {\n\n\t\t\t\tgl.uniformMatrix4fv( this.addr, false, v.elements || v );\n\n\t\t\t},\n\n\t\t\t// Single texture (2D / Cube)\n\n\t\t\tsetValueT1 = function( gl, v, renderer ) {\n\n\t\t\t\tvar unit = renderer.allocTextureUnit();\n\t\t\t\tgl.uniform1i( this.addr, unit );\n\t\t\t\trenderer.setTexture2D( v || emptyTexture, unit );\n\n\t\t\t},\n\n\t\t\tsetValueT6 = function( gl, v, renderer ) {\n\n\t\t\t\tvar unit = renderer.allocTextureUnit();\n\t\t\t\tgl.uniform1i( this.addr, unit );\n\t\t\t\trenderer.setTextureCube( v || emptyCubeTexture, unit );\n\n\t\t\t},\n\n\t\t\t// Integer / Boolean vectors or arrays thereof (always flat arrays)\n\n\t\t\tsetValue2iv = function( gl, v ) { gl.uniform2iv( this.addr, v ); },\n\t\t\tsetValue3iv = function( gl, v ) { gl.uniform3iv( this.addr, v ); },\n\t\t\tsetValue4iv = function( gl, v ) { gl.uniform4iv( this.addr, v ); },\n\n\t\t\t// Helper to pick the right setter for the singular case\n\n\t\t\tgetSingularSetter = function( type ) {\n\n\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\tcase 0x1406: return setValue1f; // FLOAT\n\t\t\t\t\tcase 0x8b50: return setValue2fv; // _VEC2\n\t\t\t\t\tcase 0x8b51: return setValue3fv; // _VEC3\n\t\t\t\t\tcase 0x8b52: return setValue4fv; // _VEC4\n\n\t\t\t\t\tcase 0x8b5a: return setValue2fm; // _MAT2\n\t\t\t\t\tcase 0x8b5b: return setValue3fm; // _MAT3\n\t\t\t\t\tcase 0x8b5c: return setValue4fm; // _MAT4\n\n\t\t\t\t\tcase 0x8b5e: return setValueT1; // SAMPLER_2D\n\t\t\t\t\tcase 0x8b60: return setValueT6; // SAMPLER_CUBE\n\n\t\t\t\t\tcase 0x1404: case 0x8b56: return setValue1i; // INT, BOOL\n\t\t\t\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\n\t\t\t\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\n\t\t\t\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\t// Array of scalars\n\n\t\t\tsetValue1fv = function( gl, v ) { gl.uniform1fv( this.addr, v ); },\n\t\t\tsetValue1iv = function( gl, v ) { gl.uniform1iv( this.addr, v ); },\n\n\t\t\t// Array of vectors (flat or from THREE classes)\n\n\t\t\tsetValueV2a = function( gl, v ) {\n\n\t\t\t\tgl.uniform2fv( this.addr, flatten( v, this.size, 2 ) );\n\n\t\t\t},\n\n\t\t\tsetValueV3a = function( gl, v ) {\n\n\t\t\t\tgl.uniform3fv( this.addr, flatten( v, this.size, 3 ) );\n\n\t\t\t},\n\n\t\t\tsetValueV4a = function( gl, v ) {\n\n\t\t\t\tgl.uniform4fv( this.addr, flatten( v, this.size, 4 ) );\n\n\t\t\t},\n\n\t\t\t// Array of matrices (flat or from THREE clases)\n\n\t\t\tsetValueM2a = function( gl, v ) {\n\n\t\t\t\tgl.uniformMatrix2fv( this.addr, false, flatten( v, this.size, 4 ) );\n\n\t\t\t},\n\n\t\t\tsetValueM3a = function( gl, v ) {\n\n\t\t\t\tgl.uniformMatrix3fv( this.addr, false, flatten( v, this.size, 9 ) );\n\n\t\t\t},\n\n\t\t\tsetValueM4a = function( gl, v ) {\n\n\t\t\t\tgl.uniformMatrix4fv( this.addr, false, flatten( v, this.size, 16 ) );\n\n\t\t\t},\n\n\t\t\t// Array of textures (2D / Cube)\n\n\t\t\tsetValueT1a = function( gl, v, renderer ) {\n\n\t\t\t\tvar n = v.length,\n\t\t\t\t\tunits = allocTexUnits( renderer, n );\n\n\t\t\t\tgl.uniform1iv( this.addr, units );\n\n\t\t\t\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\t\t\t\trenderer.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetValueT6a = function( gl, v, renderer ) {\n\n\t\t\t\tvar n = v.length,\n\t\t\t\t\tunits = allocTexUnits( renderer, n );\n\n\t\t\t\tgl.uniform1iv( this.addr, units );\n\n\t\t\t\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\t\t\t\trenderer.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\n\t\t\t// Helper to pick the right setter for a pure (bottom-level) array\n\n\t\t\tgetPureArraySetter = function( type ) {\n\n\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\tcase 0x1406: return setValue1fv; // FLOAT\n\t\t\t\t\tcase 0x8b50: return setValueV2a; // _VEC2\n\t\t\t\t\tcase 0x8b51: return setValueV3a; // _VEC3\n\t\t\t\t\tcase 0x8b52: return setValueV4a; // _VEC4\n\n\t\t\t\t\tcase 0x8b5a: return setValueM2a; // _MAT2\n\t\t\t\t\tcase 0x8b5b: return setValueM3a; // _MAT3\n\t\t\t\t\tcase 0x8b5c: return setValueM4a; // _MAT4\n\n\t\t\t\t\tcase 0x8b5e: return setValueT1a; // SAMPLER_2D\n\t\t\t\t\tcase 0x8b60: return setValueT6a; // SAMPLER_CUBE\n\n\t\t\t\t\tcase 0x1404: case 0x8b56: return setValue1iv; // INT, BOOL\n\t\t\t\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\n\t\t\t\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\n\t\t\t\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t// --- Uniform Classes ---\n\n\t\t\tSingleUniform = function SingleUniform( id, activeInfo, addr ) {\n\n\t\t\t\tthis.id = id;\n\t\t\t\tthis.addr = addr;\n\t\t\t\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t\t\t\t// this.path = activeInfo.name; // DEBUG\n\n\t\t\t},\n\n\t\t\tPureArrayUniform = function( id, activeInfo, addr ) {\n\n\t\t\t\tthis.id = id;\n\t\t\t\tthis.addr = addr;\n\t\t\t\tthis.size = activeInfo.size;\n\t\t\t\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t\t\t\t// this.path = activeInfo.name; // DEBUG\n\n\t\t\t},\n\n\t\t\tStructuredUniform = function( id ) {\n\n\t\t\t\tthis.id = id;\n\n\t\t\t\tUniformContainer.call( this ); // mix-in\n\n\t\t\t};\n\n\t\tStructuredUniform.prototype.setValue = function( gl, value ) {\n\n\t\t\t// Note: Don't need an extra 'renderer' parameter, since samplers\n\t\t\t// are not allowed in structured uniforms.\n\n\t\t\tvar seq = this.seq;\n\n\t\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\t\tvar u = seq[ i ];\n\t\t\t\tu.setValue( gl, value[ u.id ] );\n\n\t\t\t}\n\n\t\t};\n\n\t\t// --- Top-level ---\n\n\t\t// Parser - builds up the property tree from the path strings\n\n\t\tvar RePathPart = /([\\w\\d_]+)(\\])?(\\[|\\.)?/g,\n\t\t\t// extracts\n\t\t\t// \t- the identifier (member name or array index)\n\t\t\t//  - followed by an optional right bracket (found when array index)\n\t\t\t//  - followed by an optional left bracket or dot (type of subscript)\n\t\t\t//\n\t\t\t// Note: These portions can be read in a non-overlapping fashion and\n\t\t\t// allow straightforward parsing of the hierarchy that WebGL encodes\n\t\t\t// in the uniform names.\n\n\t\t\taddUniform = function( container, uniformObject ) {\n\n\t\t\t\tcontainer.seq.push( uniformObject );\n\t\t\t\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n\t\t\t},\n\n\t\t\tparseUniform = function( activeInfo, addr, container ) {\n\n\t\t\t\tvar path = activeInfo.name,\n\t\t\t\t\tpathLength = path.length;\n\n\t\t\t\t// reset RegExp object, because of the early exit of a previous run\n\t\t\t\tRePathPart.lastIndex = 0;\n\n\t\t\t\tfor (; ;) {\n\n\t\t\t\t\tvar match = RePathPart.exec( path ),\n\t\t\t\t\t\tmatchEnd = RePathPart.lastIndex,\n\n\t\t\t\t\t\tid = match[ 1 ],\n\t\t\t\t\t\tidIsIndex = match[ 2 ] === ']',\n\t\t\t\t\t\tsubscript = match[ 3 ];\n\n\t\t\t\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\t\t\t\tif ( subscript === undefined ||\n\t\t\t\t\t\t\tsubscript === '[' && matchEnd + 2 === pathLength ) {\n\t\t\t\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\t\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\t\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\t\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\t\t\t\tvar map = container.map,\n\t\t\t\t\t\t\tnext = map[ id ];\n\n\t\t\t\t\t\tif ( next === undefined ) {\n\n\t\t\t\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\t\t\t\taddUniform( container, next );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontainer = next;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t// Root Container\n\n\t\t\tWebGLUniforms = function WebGLUniforms( gl, program, renderer ) {\n\n\t\t\t\tUniformContainer.call( this );\n\n\t\t\t\tthis.renderer = renderer;\n\n\t\t\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\t\t\t\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\t\t\t\tvar info = gl.getActiveUniform( program, i ),\n\t\t\t\t\t\tpath = info.name,\n\t\t\t\t\t\taddr = gl.getUniformLocation( program, path );\n\n\t\t\t\t\tparseUniform( info, addr, this );\n\n\t\t\t\t}\n\n\t\t\t};\n\n\n\t\tWebGLUniforms.prototype.setValue = function( gl, name, value ) {\n\n\t\t\tvar u = this.map[ name ];\n\n\t\t\tif ( u !== undefined ) u.setValue( gl, value, this.renderer );\n\n\t\t};\n\n\t\tWebGLUniforms.prototype.set = function( gl, object, name ) {\n\n\t\t\tvar u = this.map[ name ];\n\n\t\t\tif ( u !== undefined ) u.setValue( gl, object[ name ], this.renderer );\n\n\t\t};\n\n\t\tWebGLUniforms.prototype.setOptional = function( gl, object, name ) {\n\n\t\t\tvar v = object[ name ];\n\n\t\t\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n\t\t};\n\n\n\t\t// Static interface\n\n\t\tWebGLUniforms.upload = function( gl, seq, values, renderer ) {\n\n\t\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\t\tvar u = seq[ i ],\n\t\t\t\t\tv = values[ u.id ];\n\n\t\t\t\tif ( v.needsUpdate !== false ) {\n\t\t\t\t\t// note: always updating when .needsUpdate is undefined\n\n\t\t\t\t\tu.setValue( gl, v.value, renderer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tWebGLUniforms.seqWithValue = function( seq, values ) {\n\n\t\t\tvar r = [];\n\n\t\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\t\tvar u = seq[ i ];\n\t\t\t\tif ( u.id in values ) r.push( u );\n\n\t\t\t}\n\n\t\t\treturn r;\n\n\t\t};\n\n\t\tWebGLUniforms.splitDynamic = function( seq, values ) {\n\n\t\t\tvar r = null,\n\t\t\t\tn = seq.length,\n\t\t\t\tw = 0;\n\n\t\t\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\t\t\tvar u = seq[ i ],\n\t\t\t\t\tv = values[ u.id ];\n\n\t\t\t\tif ( v && v.dynamic === true ) {\n\n\t\t\t\t\tif ( r === null ) r = [];\n\t\t\t\t\tr.push( u );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// in-place compact 'seq', removing the matches\n\t\t\t\t\tif ( w < i ) seq[ w ] = u;\n\t\t\t\t\t++ w;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( w < n ) seq.length = w;\n\n\t\t\treturn r;\n\n\t\t};\n\n\t\tWebGLUniforms.evalDynamic = function( seq, values, object, camera ) {\n\n\t\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\t\tvar v = values[ seq[ i ].id ],\n\t\t\t\t\tf = v.onUpdateCallback;\n\n\t\t\t\tif ( f !== undefined ) f.call( v, object, camera );\n\n\t\t\t}\n\n\t\t};\n\n\t\treturn WebGLUniforms;\n\n\t} )();\n\n\t// File:src/renderers/webgl/plugins/LensFlarePlugin.js\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tTHREE.LensFlarePlugin = function ( renderer, flares ) {\n\n\t\tvar gl = renderer.context;\n\t\tvar state = renderer.state;\n\n\t\tvar vertexBuffer, elementBuffer;\n\t\tvar shader, program, attributes, uniforms;\n\n\t\tvar tempTexture, occlusionTexture;\n\n\t\tfunction init() {\n\n\t\t\tvar vertices = new Float32Array( [\n\t\t\t\t- 1, - 1,  0, 0,\n\t\t\t\t 1, - 1,  1, 0,\n\t\t\t\t 1,  1,  1, 1,\n\t\t\t\t- 1,  1,  0, 1\n\t\t\t] );\n\n\t\t\tvar faces = new Uint16Array( [\n\t\t\t\t0, 1, 2,\n\t\t\t\t0, 2, 3\n\t\t\t] );\n\n\t\t\t// buffers\n\n\t\t\tvertexBuffer     = gl.createBuffer();\n\t\t\telementBuffer    = gl.createBuffer();\n\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\n\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\t\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\n\n\t\t\t// textures\n\n\t\t\ttempTexture      = gl.createTexture();\n\t\t\tocclusionTexture = gl.createTexture();\n\n\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\n\t\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGB, 16, 16, 0, gl.RGB, gl.UNSIGNED_BYTE, null );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\n\t\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\n\t\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGBA, 16, 16, 0, gl.RGBA, gl.UNSIGNED_BYTE, null );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\n\t\t\tshader = {\n\n\t\t\t\tvertexShader: [\n\n\t\t\t\t\t\"uniform lowp int renderType;\",\n\n\t\t\t\t\t\"uniform vec3 screenPosition;\",\n\t\t\t\t\t\"uniform vec2 scale;\",\n\t\t\t\t\t\"uniform float rotation;\",\n\n\t\t\t\t\t\"uniform sampler2D occlusionMap;\",\n\n\t\t\t\t\t\"attribute vec2 position;\",\n\t\t\t\t\t\"attribute vec2 uv;\",\n\n\t\t\t\t\t\"varying vec2 vUV;\",\n\t\t\t\t\t\"varying float vVisibility;\",\n\n\t\t\t\t\t\"void main() {\",\n\n\t\t\t\t\t\t\"vUV = uv;\",\n\n\t\t\t\t\t\t\"vec2 pos = position;\",\n\n\t\t\t\t\t\t\"if ( renderType == 2 ) {\",\n\n\t\t\t\t\t\t\t\"vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\",\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\",\n\n\t\t\t\t\t\t\t\"vVisibility =        visibility.r / 9.0;\",\n\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.g / 9.0;\",\n\t\t\t\t\t\t\t\"vVisibility *=       visibility.b / 9.0;\",\n\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.a / 9.0;\",\n\n\t\t\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\n\t\t\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\n\n\t\t\t\t\t\t\"}\",\n\n\t\t\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\n\n\t\t\t\t\t\"}\"\n\n\t\t\t\t].join( \"\\n\" ),\n\n\t\t\t\tfragmentShader: [\n\n\t\t\t\t\t\"uniform lowp int renderType;\",\n\n\t\t\t\t\t\"uniform sampler2D map;\",\n\t\t\t\t\t\"uniform float opacity;\",\n\t\t\t\t\t\"uniform vec3 color;\",\n\n\t\t\t\t\t\"varying vec2 vUV;\",\n\t\t\t\t\t\"varying float vVisibility;\",\n\n\t\t\t\t\t\"void main() {\",\n\n\t\t\t\t\t\t// pink square\n\n\t\t\t\t\t\t\"if ( renderType == 0 ) {\",\n\n\t\t\t\t\t\t\t\"gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\",\n\n\t\t\t\t\t\t// restore\n\n\t\t\t\t\t\t\"} else if ( renderType == 1 ) {\",\n\n\t\t\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\n\n\t\t\t\t\t\t// flare\n\n\t\t\t\t\t\t\"} else {\",\n\n\t\t\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\n\t\t\t\t\t\t\t\"texture.a *= opacity * vVisibility;\",\n\t\t\t\t\t\t\t\"gl_FragColor = texture;\",\n\t\t\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\n\n\t\t\t\t\t\t\"}\",\n\n\t\t\t\t\t\"}\"\n\n\t\t\t\t].join( \"\\n\" )\n\n\t\t\t};\n\n\t\t\tprogram = createProgram( shader );\n\n\t\t\tattributes = {\n\t\t\t\tvertex: gl.getAttribLocation ( program, \"position\" ),\n\t\t\t\tuv:     gl.getAttribLocation ( program, \"uv\" )\n\t\t\t};\n\n\t\t\tuniforms = {\n\t\t\t\trenderType:     gl.getUniformLocation( program, \"renderType\" ),\n\t\t\t\tmap:            gl.getUniformLocation( program, \"map\" ),\n\t\t\t\tocclusionMap:   gl.getUniformLocation( program, \"occlusionMap\" ),\n\t\t\t\topacity:        gl.getUniformLocation( program, \"opacity\" ),\n\t\t\t\tcolor:          gl.getUniformLocation( program, \"color\" ),\n\t\t\t\tscale:          gl.getUniformLocation( program, \"scale\" ),\n\t\t\t\trotation:       gl.getUniformLocation( program, \"rotation\" ),\n\t\t\t\tscreenPosition: gl.getUniformLocation( program, \"screenPosition\" )\n\t\t\t};\n\n\t\t}\n\n\t\t/*\n\t\t * Render lens flares\n\t\t * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,\n\t\t *         reads these back and calculates occlusion.\n\t\t */\n\n\t\tthis.render = function ( scene, camera, viewport ) {\n\n\t\t\tif ( flares.length === 0 ) return;\n\n\t\t\tvar tempPosition = new THREE.Vector3();\n\n\t\t\tvar invAspect = viewport.w / viewport.z,\n\t\t\t\thalfViewportWidth = viewport.z * 0.5,\n\t\t\t\thalfViewportHeight = viewport.w * 0.5;\n\n\t\t\tvar size = 16 / viewport.w,\n\t\t\t\tscale = new THREE.Vector2( size * invAspect, size );\n\n\t\t\tvar screenPosition = new THREE.Vector3( 1, 1, 0 ),\n\t\t\t\tscreenPositionPixels = new THREE.Vector2( 1, 1 );\n\n\t\t\tvar validArea = new THREE.Box2();\n\n\t\t\tvalidArea.min.set( 0, 0 );\n\t\t\tvalidArea.max.set( viewport.z - 16, viewport.w - 16 );\n\n\t\t\tif ( program === undefined ) {\n\n\t\t\t\tinit();\n\n\t\t\t}\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tstate.initAttributes();\n\t\t\tstate.enableAttribute( attributes.vertex );\n\t\t\tstate.enableAttribute( attributes.uv );\n\t\t\tstate.disableUnusedAttributes();\n\n\t\t\t// loop through all lens flares to update their occlusion and positions\n\t\t\t// setup gl and common used attribs/uniforms\n\n\t\t\tgl.uniform1i( uniforms.occlusionMap, 0 );\n\t\t\tgl.uniform1i( uniforms.map, 1 );\n\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\t\tgl.vertexAttribPointer( attributes.vertex, 2, gl.FLOAT, false, 2 * 8, 0 );\n\t\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\n\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\n\t\t\tstate.disable( gl.CULL_FACE );\n\t\t\tstate.setDepthWrite( false );\n\n\t\t\tfor ( var i = 0, l = flares.length; i < l; i ++ ) {\n\n\t\t\t\tsize = 16 / viewport.w;\n\t\t\t\tscale.set( size * invAspect, size );\n\n\t\t\t\t// calc object screen position\n\n\t\t\t\tvar flare = flares[ i ];\n\n\t\t\t\ttempPosition.set( flare.matrixWorld.elements[ 12 ], flare.matrixWorld.elements[ 13 ], flare.matrixWorld.elements[ 14 ] );\n\n\t\t\t\ttempPosition.applyMatrix4( camera.matrixWorldInverse );\n\t\t\t\ttempPosition.applyProjection( camera.projectionMatrix );\n\n\t\t\t\t// setup arrays for gl programs\n\n\t\t\t\tscreenPosition.copy( tempPosition );\n\n\t\t\t\t// horizontal and vertical coordinate of the lower left corner of the pixels to copy\n\n\t\t\t\tscreenPositionPixels.x = viewport.x + ( screenPosition.x * halfViewportWidth ) + halfViewportWidth - 8;\n\t\t\t\tscreenPositionPixels.y = viewport.y + ( screenPosition.y * halfViewportHeight ) + halfViewportHeight - 8;\n\n\t\t\t\t// screen cull\n\n\t\t\t\tif ( validArea.containsPoint( screenPositionPixels ) === true ) {\n\n\t\t\t\t\t// save current RGB to temp texture\n\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, null );\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\n\t\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGB, screenPositionPixels.x, screenPositionPixels.y, 16, 16, 0 );\n\n\n\t\t\t\t\t// render pink quad\n\n\t\t\t\t\tgl.uniform1i( uniforms.renderType, 0 );\n\t\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\n\t\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\n\n\t\t\t\t\tstate.disable( gl.BLEND );\n\t\t\t\t\tstate.enable( gl.DEPTH_TEST );\n\n\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\n\t\t\t\t\t// copy result to occlusionMap\n\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\n\t\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGBA, screenPositionPixels.x, screenPositionPixels.y, 16, 16, 0 );\n\n\n\t\t\t\t\t// restore graphics\n\n\t\t\t\t\tgl.uniform1i( uniforms.renderType, 1 );\n\t\t\t\t\tstate.disable( gl.DEPTH_TEST );\n\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\n\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\n\t\t\t\t\t// update object positions\n\n\t\t\t\t\tflare.positionScreen.copy( screenPosition );\n\n\t\t\t\t\tif ( flare.customUpdateCallback ) {\n\n\t\t\t\t\t\tflare.customUpdateCallback( flare );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tflare.updateLensFlares();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// render flares\n\n\t\t\t\t\tgl.uniform1i( uniforms.renderType, 2 );\n\t\t\t\t\tstate.enable( gl.BLEND );\n\n\t\t\t\t\tfor ( var j = 0, jl = flare.lensFlares.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar sprite = flare.lensFlares[ j ];\n\n\t\t\t\t\t\tif ( sprite.opacity > 0.001 && sprite.scale > 0.001 ) {\n\n\t\t\t\t\t\t\tscreenPosition.x = sprite.x;\n\t\t\t\t\t\t\tscreenPosition.y = sprite.y;\n\t\t\t\t\t\t\tscreenPosition.z = sprite.z;\n\n\t\t\t\t\t\t\tsize = sprite.size * sprite.scale / viewport.w;\n\n\t\t\t\t\t\t\tscale.x = size * invAspect;\n\t\t\t\t\t\t\tscale.y = size;\n\n\t\t\t\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\n\t\t\t\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\n\t\t\t\t\t\t\tgl.uniform1f( uniforms.rotation, sprite.rotation );\n\n\t\t\t\t\t\t\tgl.uniform1f( uniforms.opacity, sprite.opacity );\n\t\t\t\t\t\t\tgl.uniform3f( uniforms.color, sprite.color.r, sprite.color.g, sprite.color.b );\n\n\t\t\t\t\t\t\tstate.setBlending( sprite.blending, sprite.blendEquation, sprite.blendSrc, sprite.blendDst );\n\t\t\t\t\t\t\trenderer.setTexture2D( sprite.texture, 1 );\n\n\t\t\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// restore gl\n\n\t\t\tstate.enable( gl.CULL_FACE );\n\t\t\tstate.enable( gl.DEPTH_TEST );\n\t\t\tstate.setDepthWrite( true );\n\n\t\t\trenderer.resetGLState();\n\n\t\t};\n\n\t\tfunction createProgram ( shader ) {\n\n\t\t\tvar program = gl.createProgram();\n\n\t\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\n\t\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\n\n\t\t\tvar prefix = \"precision \" + renderer.getPrecision() + \" float;\\n\";\n\n\t\t\tgl.shaderSource( fragmentShader, prefix + shader.fragmentShader );\n\t\t\tgl.shaderSource( vertexShader, prefix + shader.vertexShader );\n\n\t\t\tgl.compileShader( fragmentShader );\n\t\t\tgl.compileShader( vertexShader );\n\n\t\t\tgl.attachShader( program, fragmentShader );\n\t\t\tgl.attachShader( program, vertexShader );\n\n\t\t\tgl.linkProgram( program );\n\n\t\t\treturn program;\n\n\t\t}\n\n\t};\n\n\t// File:src/renderers/webgl/plugins/SpritePlugin.js\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tTHREE.SpritePlugin = function ( renderer, sprites ) {\n\n\t\tvar gl = renderer.context;\n\t\tvar state = renderer.state;\n\n\t\tvar vertexBuffer, elementBuffer;\n\t\tvar program, attributes, uniforms;\n\n\t\tvar texture;\n\n\t\t// decompose matrixWorld\n\n\t\tvar spritePosition = new THREE.Vector3();\n\t\tvar spriteRotation = new THREE.Quaternion();\n\t\tvar spriteScale = new THREE.Vector3();\n\n\t\tfunction init() {\n\n\t\t\tvar vertices = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5,  0, 0,\n\t\t\t\t  0.5, - 0.5,  1, 0,\n\t\t\t\t  0.5,   0.5,  1, 1,\n\t\t\t\t- 0.5,   0.5,  0, 1\n\t\t\t] );\n\n\t\t\tvar faces = new Uint16Array( [\n\t\t\t\t0, 1, 2,\n\t\t\t\t0, 2, 3\n\t\t\t] );\n\n\t\t\tvertexBuffer  = gl.createBuffer();\n\t\t\telementBuffer = gl.createBuffer();\n\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\n\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\t\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\n\n\t\t\tprogram = createProgram();\n\n\t\t\tattributes = {\n\t\t\t\tposition:\t\t\tgl.getAttribLocation ( program, 'position' ),\n\t\t\t\tuv:\t\t\t\t\tgl.getAttribLocation ( program, 'uv' )\n\t\t\t};\n\n\t\t\tuniforms = {\n\t\t\t\tuvOffset:\t\t\tgl.getUniformLocation( program, 'uvOffset' ),\n\t\t\t\tuvScale:\t\t\tgl.getUniformLocation( program, 'uvScale' ),\n\n\t\t\t\trotation:\t\t\tgl.getUniformLocation( program, 'rotation' ),\n\t\t\t\tscale:\t\t\t\tgl.getUniformLocation( program, 'scale' ),\n\n\t\t\t\tcolor:\t\t\t\tgl.getUniformLocation( program, 'color' ),\n\t\t\t\tmap:\t\t\t\tgl.getUniformLocation( program, 'map' ),\n\t\t\t\topacity:\t\t\tgl.getUniformLocation( program, 'opacity' ),\n\n\t\t\t\tmodelViewMatrix: \tgl.getUniformLocation( program, 'modelViewMatrix' ),\n\t\t\t\tprojectionMatrix:\tgl.getUniformLocation( program, 'projectionMatrix' ),\n\n\t\t\t\tfogType:\t\t\tgl.getUniformLocation( program, 'fogType' ),\n\t\t\t\tfogDensity:\t\t\tgl.getUniformLocation( program, 'fogDensity' ),\n\t\t\t\tfogNear:\t\t\tgl.getUniformLocation( program, 'fogNear' ),\n\t\t\t\tfogFar:\t\t\t\tgl.getUniformLocation( program, 'fogFar' ),\n\t\t\t\tfogColor:\t\t\tgl.getUniformLocation( program, 'fogColor' ),\n\n\t\t\t\talphaTest:\t\t\tgl.getUniformLocation( program, 'alphaTest' )\n\t\t\t};\n\n\t\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\tcanvas.width = 8;\n\t\t\tcanvas.height = 8;\n\n\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\tcontext.fillStyle = 'white';\n\t\t\tcontext.fillRect( 0, 0, 8, 8 );\n\n\t\t\ttexture = new THREE.Texture( canvas );\n\t\t\ttexture.needsUpdate = true;\n\n\t\t}\n\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\tif ( sprites.length === 0 ) return;\n\n\t\t\t// setup gl\n\n\t\t\tif ( program === undefined ) {\n\n\t\t\t\tinit();\n\n\t\t\t}\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tstate.initAttributes();\n\t\t\tstate.enableAttribute( attributes.position );\n\t\t\tstate.enableAttribute( attributes.uv );\n\t\t\tstate.disableUnusedAttributes();\n\n\t\t\tstate.disable( gl.CULL_FACE );\n\t\t\tstate.enable( gl.BLEND );\n\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\t\tgl.vertexAttribPointer( attributes.position, 2, gl.FLOAT, false, 2 * 8, 0 );\n\t\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\n\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\n\t\t\tgl.uniformMatrix4fv( uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\n\n\t\t\tstate.activeTexture( gl.TEXTURE0 );\n\t\t\tgl.uniform1i( uniforms.map, 0 );\n\n\t\t\tvar oldFogType = 0;\n\t\t\tvar sceneFogType = 0;\n\t\t\tvar fog = scene.fog;\n\n\t\t\tif ( fog ) {\n\n\t\t\t\tgl.uniform3f( uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b );\n\n\t\t\t\tif ( fog instanceof THREE.Fog ) {\n\n\t\t\t\t\tgl.uniform1f( uniforms.fogNear, fog.near );\n\t\t\t\t\tgl.uniform1f( uniforms.fogFar, fog.far );\n\n\t\t\t\t\tgl.uniform1i( uniforms.fogType, 1 );\n\t\t\t\t\toldFogType = 1;\n\t\t\t\t\tsceneFogType = 1;\n\n\t\t\t\t} else if ( fog instanceof THREE.FogExp2 ) {\n\n\t\t\t\t\tgl.uniform1f( uniforms.fogDensity, fog.density );\n\n\t\t\t\t\tgl.uniform1i( uniforms.fogType, 2 );\n\t\t\t\t\toldFogType = 2;\n\t\t\t\t\tsceneFogType = 2;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tgl.uniform1i( uniforms.fogType, 0 );\n\t\t\t\toldFogType = 0;\n\t\t\t\tsceneFogType = 0;\n\n\t\t\t}\n\n\n\t\t\t// update positions and sort\n\n\t\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\n\n\t\t\t\tvar sprite = sprites[ i ];\n\n\t\t\t\tsprite.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, sprite.matrixWorld );\n\t\t\t\tsprite.z = - sprite.modelViewMatrix.elements[ 14 ];\n\n\t\t\t}\n\n\t\t\tsprites.sort( painterSortStable );\n\n\t\t\t// render all sprites\n\n\t\t\tvar scale = [];\n\n\t\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\n\n\t\t\t\tvar sprite = sprites[ i ];\n\t\t\t\tvar material = sprite.material;\n\n\t\t\t\tif ( material.visible === false ) continue;\n\n\t\t\t\tgl.uniform1f( uniforms.alphaTest, material.alphaTest );\n\t\t\t\tgl.uniformMatrix4fv( uniforms.modelViewMatrix, false, sprite.modelViewMatrix.elements );\n\n\t\t\t\tsprite.matrixWorld.decompose( spritePosition, spriteRotation, spriteScale );\n\n\t\t\t\tscale[ 0 ] = spriteScale.x;\n\t\t\t\tscale[ 1 ] = spriteScale.y;\n\n\t\t\t\tvar fogType = 0;\n\n\t\t\t\tif ( scene.fog && material.fog ) {\n\n\t\t\t\t\tfogType = sceneFogType;\n\n\t\t\t\t}\n\n\t\t\t\tif ( oldFogType !== fogType ) {\n\n\t\t\t\t\tgl.uniform1i( uniforms.fogType, fogType );\n\t\t\t\t\toldFogType = fogType;\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.map !== null ) {\n\n\t\t\t\t\tgl.uniform2f( uniforms.uvOffset, material.map.offset.x, material.map.offset.y );\n\t\t\t\t\tgl.uniform2f( uniforms.uvScale, material.map.repeat.x, material.map.repeat.y );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.uniform2f( uniforms.uvOffset, 0, 0 );\n\t\t\t\t\tgl.uniform2f( uniforms.uvScale, 1, 1 );\n\n\t\t\t\t}\n\n\t\t\t\tgl.uniform1f( uniforms.opacity, material.opacity );\n\t\t\t\tgl.uniform3f( uniforms.color, material.color.r, material.color.g, material.color.b );\n\n\t\t\t\tgl.uniform1f( uniforms.rotation, material.rotation );\n\t\t\t\tgl.uniform2fv( uniforms.scale, scale );\n\n\t\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst );\n\t\t\t\tstate.setDepthTest( material.depthTest );\n\t\t\t\tstate.setDepthWrite( material.depthWrite );\n\n\t\t\t\tif ( material.map ) {\n\n\t\t\t\t\trenderer.setTexture2D( material.map, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setTexture2D( texture, 0 );\n\n\t\t\t\t}\n\n\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\t\t\t}\n\n\t\t\t// restore gl\n\n\t\t\tstate.enable( gl.CULL_FACE );\n\n\t\t\trenderer.resetGLState();\n\n\t\t};\n\n\t\tfunction createProgram () {\n\n\t\t\tvar program = gl.createProgram();\n\n\t\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\n\t\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\n\n\t\t\tgl.shaderSource( vertexShader, [\n\n\t\t\t\t'precision ' + renderer.getPrecision() + ' float;',\n\n\t\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t\t'uniform float rotation;',\n\t\t\t\t'uniform vec2 scale;',\n\t\t\t\t'uniform vec2 uvOffset;',\n\t\t\t\t'uniform vec2 uvScale;',\n\n\t\t\t\t'attribute vec2 position;',\n\t\t\t\t'attribute vec2 uv;',\n\n\t\t\t\t'varying vec2 vUV;',\n\n\t\t\t\t'void main() {',\n\n\t\t\t\t\t'vUV = uvOffset + uv * uvScale;',\n\n\t\t\t\t\t'vec2 alignedPosition = position * scale;',\n\n\t\t\t\t\t'vec2 rotatedPosition;',\n\t\t\t\t\t'rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;',\n\t\t\t\t\t'rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;',\n\n\t\t\t\t\t'vec4 finalPosition;',\n\n\t\t\t\t\t'finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );',\n\t\t\t\t\t'finalPosition.xy += rotatedPosition;',\n\t\t\t\t\t'finalPosition = projectionMatrix * finalPosition;',\n\n\t\t\t\t\t'gl_Position = finalPosition;',\n\n\t\t\t\t'}'\n\n\t\t\t].join( '\\n' ) );\n\n\t\t\tgl.shaderSource( fragmentShader, [\n\n\t\t\t\t'precision ' + renderer.getPrecision() + ' float;',\n\n\t\t\t\t'uniform vec3 color;',\n\t\t\t\t'uniform sampler2D map;',\n\t\t\t\t'uniform float opacity;',\n\n\t\t\t\t'uniform int fogType;',\n\t\t\t\t'uniform vec3 fogColor;',\n\t\t\t\t'uniform float fogDensity;',\n\t\t\t\t'uniform float fogNear;',\n\t\t\t\t'uniform float fogFar;',\n\t\t\t\t'uniform float alphaTest;',\n\n\t\t\t\t'varying vec2 vUV;',\n\n\t\t\t\t'void main() {',\n\n\t\t\t\t\t'vec4 texture = texture2D( map, vUV );',\n\n\t\t\t\t\t'if ( texture.a < alphaTest ) discard;',\n\n\t\t\t\t\t'gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );',\n\n\t\t\t\t\t'if ( fogType > 0 ) {',\n\n\t\t\t\t\t\t'float depth = gl_FragCoord.z / gl_FragCoord.w;',\n\t\t\t\t\t\t'float fogFactor = 0.0;',\n\n\t\t\t\t\t\t'if ( fogType == 1 ) {',\n\n\t\t\t\t\t\t\t'fogFactor = smoothstep( fogNear, fogFar, depth );',\n\n\t\t\t\t\t\t'} else {',\n\n\t\t\t\t\t\t\t'const float LOG2 = 1.442695;',\n\t\t\t\t\t\t\t'fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );',\n\t\t\t\t\t\t\t'fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );',\n\n\t\t\t\t\t\t'}',\n\n\t\t\t\t\t\t'gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );',\n\n\t\t\t\t\t'}',\n\n\t\t\t\t'}'\n\n\t\t\t].join( '\\n' ) );\n\n\t\t\tgl.compileShader( vertexShader );\n\t\t\tgl.compileShader( fragmentShader );\n\n\t\t\tgl.attachShader( program, vertexShader );\n\t\t\tgl.attachShader( program, fragmentShader );\n\n\t\t\tgl.linkProgram( program );\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\tfunction painterSortStable ( a, b ) {\n\n\t\t\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\t\t\treturn a.renderOrder - b.renderOrder;\n\n\t\t\t} else if ( a.z !== b.z ) {\n\n\t\t\t\treturn b.z - a.z;\n\n\t\t\t} else {\n\n\t\t\t\treturn b.id - a.id;\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\t// File:src/Three.Legacy.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tObject.assign( THREE, {\n\t\tFace4: function ( a, b, c, d, normal, color, materialIndex ) {\n\t\t\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\n\t\t\treturn new THREE.Face3( a, b, c, normal, color, materialIndex );\n\t\t},\n\t\tLineStrip: 0,\n\t\tLinePieces: 1,\n\t\tMeshFaceMaterial: THREE.MultiMaterial,\n\t\tPointCloud: function ( geometry, material ) {\n\t\t\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\n\t\t\treturn new THREE.Points( geometry, material );\n\t\t},\n\t\tParticle: THREE.Sprite,\n\t\tParticleSystem: function ( geometry, material ) {\n\t\t\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\n\t\t\treturn new THREE.Points( geometry, material );\n\t\t},\n\t\tPointCloudMaterial: function ( parameters ) {\n\t\t\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\n\t\t\treturn new THREE.PointsMaterial( parameters );\n\t\t},\n\t\tParticleBasicMaterial: function ( parameters ) {\n\t\t\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\n\t\t\treturn new THREE.PointsMaterial( parameters );\n\t\t},\n\t\tParticleSystemMaterial: function ( parameters ) {\n\t\t\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\n\t\t\treturn new THREE.PointsMaterial( parameters );\n\t\t},\n\t\tVertex: function ( x, y, z ) {\n\t\t\tconsole.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );\n\t\t\treturn new THREE.Vector3( x, y, z );\n\t\t}\n\t} );\n\n\t//\n\n\tObject.assign( THREE.Box2.prototype, {\n\t\tempty: function () {\n\t\t\tconsole.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\n\t\t\treturn this.isEmpty();\n\t\t},\n\t\tisIntersectionBox: function ( box ) {\n\t\t\tconsole.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\t\treturn this.intersectsBox( box );\n\t\t}\n\t} );\n\n\tObject.assign( THREE.Box3.prototype, {\n\t\tempty: function () {\n\t\t\tconsole.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\n\t\t\treturn this.isEmpty();\n\t\t},\n\t\tisIntersectionBox: function ( box ) {\n\t\t\tconsole.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\t\treturn this.intersectsBox( box );\n\t\t},\n\t\tisIntersectionSphere: function ( sphere ) {\n\t\t\tconsole.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\t\treturn this.intersectsSphere( sphere );\n\t\t}\n\t} );\n\n\tObject.assign( THREE.Matrix3.prototype, {\n\t\tmultiplyVector3: function ( vector ) {\n\t\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\n\t\t\treturn vector.applyMatrix3( this );\n\t\t},\n\t\tmultiplyVector3Array: function ( a ) {\n\t\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\n\t\t\treturn this.applyToVector3Array( a );\n\t\t}\n\t} );\n\n\tObject.assign( THREE.Matrix4.prototype, {\n\t\textractPosition: function ( m ) {\n\t\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\n\t\t\treturn this.copyPosition( m );\n\t\t},\n\t\tsetRotationFromQuaternion: function ( q ) {\n\t\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\n\t\t\treturn this.makeRotationFromQuaternion( q );\n\t\t},\n\t\tmultiplyVector3: function ( vector ) {\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.' );\n\t\t\treturn vector.applyProjection( this );\n\t\t},\n\t\tmultiplyVector4: function ( vector ) {\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\t\treturn vector.applyMatrix4( this );\n\t\t},\n\t\tmultiplyVector3Array: function ( a ) {\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\n\t\t\treturn this.applyToVector3Array( a );\n\t\t},\n\t\trotateAxis: function ( v ) {\n\t\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\n\t\t\tv.transformDirection( this );\n\t\t},\n\t\tcrossVector: function ( vector ) {\n\t\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\t\treturn vector.applyMatrix4( this );\n\t\t},\n\t\ttranslate: function ( v ) {\n\t\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\n\t\t},\n\t\trotateX: function ( angle ) {\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\n\t\t},\n\t\trotateY: function ( angle ) {\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\n\t\t},\n\t\trotateZ: function ( angle ) {\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\n\t\t},\n\t\trotateByAxis: function ( axis, angle ) {\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\n\t\t}\n\t} );\n\n\tObject.assign( THREE.Plane.prototype, {\n\t\tisIntersectionLine: function ( line ) {\n\t\t\tconsole.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\n\t\t\treturn this.intersectsLine( line );\n\t\t}\n\t} );\n\n\tObject.assign( THREE.Quaternion.prototype, {\n\t\tmultiplyVector3: function ( vector ) {\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\n\t\t\treturn vector.applyQuaternion( this );\n\t\t}\n\t} );\n\n\tObject.assign( THREE.Ray.prototype, {\n\t\tisIntersectionBox: function ( box ) {\n\t\t\tconsole.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\t\treturn this.intersectsBox( box );\n\t\t},\n\t\tisIntersectionPlane: function ( plane ) {\n\t\t\tconsole.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\n\t\t\treturn this.intersectsPlane( plane );\n\t\t},\n\t\tisIntersectionSphere: function ( sphere ) {\n\t\t\tconsole.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\t\treturn this.intersectsSphere( sphere );\n\t\t}\n\t} );\n\n\tObject.assign( THREE.Vector3.prototype, {\n\t\tsetEulerFromRotationMatrix: function () {\n\t\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\n\t\t},\n\t\tsetEulerFromQuaternion: function () {\n\t\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\n\t\t},\n\t\tgetPositionFromMatrix: function ( m ) {\n\t\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\n\t\t\treturn this.setFromMatrixPosition( m );\n\t\t},\n\t\tgetScaleFromMatrix: function ( m ) {\n\t\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\n\t\t\treturn this.setFromMatrixScale( m );\n\t\t},\n\t\tgetColumnFromMatrix: function ( index, matrix ) {\n\t\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\n\t\t\treturn this.setFromMatrixColumn( matrix, index );\n\t\t}\n\t} );\n\n\t//\n\n\tObject.assign( THREE.Object3D.prototype, {\n\t\tgetChildByName: function ( name ) {\n\t\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\n\t\t\treturn this.getObjectByName( name );\n\t\t},\n\t\trenderDepth: function ( value ) {\n\t\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\n\t\t},\n\t\ttranslate: function ( distance, axis ) {\n\t\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\n\t\t\treturn this.translateOnAxis( axis, distance );\n\t\t}\n\t} );\n\n\tObject.defineProperties( THREE.Object3D.prototype, {\n\t\teulerOrder: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\t\treturn this.rotation.order;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\t\tthis.rotation.order = value;\n\t\t\t}\n\t\t},\n\t\tuseQuaternion: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\t\t\t}\n\t\t}\n\t} );\n\n\tObject.defineProperties( THREE.LOD.prototype, {\n\t\tobjects: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\n\t\t\t\treturn this.levels;\n\t\t\t}\n\t\t}\n\t} );\n\n\t//\n\n\tTHREE.PerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {\n\n\t\tconsole.warn( \"THREE.PerspectiveCamera.setLens is deprecated. \" +\n\t\t\t\t\"Use .setFocalLength and .filmGauge for a photographic setup.\" );\n\n\t\tif ( filmGauge !== undefined ) this.filmGauge = filmGauge;\n\t\tthis.setFocalLength( focalLength );\n\n\t};\n\n\t//\n\n\tObject.defineProperties( THREE.Light.prototype, {\n\t\tonlyShadow: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .onlyShadow has been removed.' );\n\t\t\t}\n\t\t},\n\t\tshadowCameraFov: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\n\t\t\t\tthis.shadow.camera.fov = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraLeft: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\n\t\t\t\tthis.shadow.camera.left = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraRight: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\n\t\t\t\tthis.shadow.camera.right = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraTop: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\n\t\t\t\tthis.shadow.camera.top = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraBottom: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\n\t\t\t\tthis.shadow.camera.bottom = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraNear: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\n\t\t\t\tthis.shadow.camera.near = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraFar: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\n\t\t\t\tthis.shadow.camera.far = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraVisible: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\n\t\t\t}\n\t\t},\n\t\tshadowBias: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\n\t\t\t\tthis.shadow.bias = value;\n\t\t\t}\n\t\t},\n\t\tshadowDarkness: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowDarkness has been removed.' );\n\t\t\t}\n\t\t},\n\t\tshadowMapWidth: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\n\t\t\t\tthis.shadow.mapSize.width = value;\n\t\t\t}\n\t\t},\n\t\tshadowMapHeight: {\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\n\t\t\t\tthis.shadow.mapSize.height = value;\n\t\t\t}\n\t\t}\n\t} );\n\n\t//\n\n\tObject.defineProperties( THREE.BufferAttribute.prototype, {\n\t\tlength: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Please use .count.' );\n\t\t\t\treturn this.array.length;\n\t\t\t}\n\t\t}\n\t} );\n\n\tObject.assign( THREE.BufferGeometry.prototype, {\n\t\taddIndex: function ( index ) {\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\n\t\t\tthis.setIndex( index );\n\t\t},\n\t\taddDrawCall: function ( start, count, indexOffset ) {\n\t\t\tif ( indexOffset !== undefined ) {\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\n\t\t\t}\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\n\t\t\tthis.addGroup( start, count );\n\t\t},\n\t\tclearDrawCalls: function () {\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\n\t\t\tthis.clearGroups();\n\t\t},\n\t\tcomputeTangents: function () {\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\n\t\t},\n\t\tcomputeOffsets: function () {\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\n\t\t}\n\t} );\n\n\tObject.defineProperties( THREE.BufferGeometry.prototype, {\n\t\tdrawcalls: {\n\t\t\tget: function () {\n\t\t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\n\t\t\t\treturn this.groups;\n\t\t\t}\n\t\t},\n\t\toffsets: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\n\t\t\t\treturn this.groups;\n\t\t\t}\n\t\t}\n\t} );\n\n\t//\n\n\tObject.defineProperties( THREE.Material.prototype, {\n\t\twrapAround: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\n\t\t\t}\n\t\t},\n\t\twrapRGB: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .wrapRGB has been removed.' );\n\t\t\t\treturn new THREE.Color();\n\t\t\t}\n\t\t}\n\t} );\n\n\tObject.defineProperties( THREE.MeshPhongMaterial.prototype, {\n\t\tmetal: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.' );\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead' );\n\t\t\t}\n\t\t}\n\t} );\n\n\tObject.defineProperties( THREE.ShaderMaterial.prototype, {\n\t\tderivatives: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\t\treturn this.extensions.derivatives;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\t\tthis.extensions.derivatives = value;\n\t\t\t}\n\t\t}\n\t} );\n\n\t//\n\n\tTHREE.EventDispatcher.prototype = Object.assign( Object.create( {\n\n\t\t// Note: Extra base ensures these properties are not 'assign'ed.\n\n\t\tconstructor: THREE.EventDispatcher,\n\n\t\tapply: function ( target ) {\n\n\t\t\tconsole.warn( \"THREE.EventDispatcher: .apply is deprecated, \" +\n\t\t\t\t\t\"just inherit or Object.assign the prototype to mix-in.\" );\n\n\t\t\tObject.assign( target, this );\n\n\t\t}\n\n\t} ), THREE.EventDispatcher.prototype );\n\n\t//\n\n\tObject.assign( THREE.WebGLRenderer.prototype, {\n\t\tsupportsFloatTextures: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\n\t\t\treturn this.extensions.get( 'OES_texture_float' );\n\t\t},\n\t\tsupportsHalfFloatTextures: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\n\t\t\treturn this.extensions.get( 'OES_texture_half_float' );\n\t\t},\n\t\tsupportsStandardDerivatives: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\n\t\t\treturn this.extensions.get( 'OES_standard_derivatives' );\n\t\t},\n\t\tsupportsCompressedTextureS3TC: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\n\t\t\treturn this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\t\t},\n\t\tsupportsCompressedTexturePVRTC: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\n\t\t\treturn this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\t\t},\n\t\tsupportsBlendMinMax: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\n\t\t\treturn this.extensions.get( 'EXT_blend_minmax' );\n\t\t},\n\t\tsupportsVertexTextures: function () {\n\t\t\treturn this.capabilities.vertexTextures;\n\t\t},\n\t\tsupportsInstancedArrays: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\n\t\t\treturn this.extensions.get( 'ANGLE_instanced_arrays' );\n\t\t},\n\t\tenableScissorTest: function ( boolean ) {\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\n\t\t\tthis.setScissorTest( boolean );\n\t\t},\n\t\tinitMaterial: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\n\t\t},\n\t\taddPrePlugin: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\n\t\t},\n\t\taddPostPlugin: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\n\t\t},\n\t\tupdateShadowMap: function () {\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\n\t\t}\n\t} );\n\n\tObject.defineProperties( THREE.WebGLRenderer.prototype, {\n\t\tshadowMapEnabled: {\n\t\t\tget: function () {\n\t\t\t\treturn this.shadowMap.enabled;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\n\t\t\t\tthis.shadowMap.enabled = value;\n\t\t\t}\n\t\t},\n\t\tshadowMapType: {\n\t\t\tget: function () {\n\t\t\t\treturn this.shadowMap.type;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\n\t\t\t\tthis.shadowMap.type = value;\n\t\t\t}\n\t\t},\n\t\tshadowMapCullFace: {\n\t\t\tget: function () {\n\t\t\t\treturn this.shadowMap.cullFace;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.' );\n\t\t\t\tthis.shadowMap.cullFace = value;\n\t\t\t}\n\t\t}\n\t} );\n\n\tObject.defineProperties( THREE.WebGLShadowMap.prototype, {\n\t\tcullFace: {\n\t\t\tget: function () {\n\t\t\t\treturn this.renderReverseSided ? THREE.CullFaceFront : THREE.CullFaceBack;\n\t\t\t},\n\t\t\tset: function ( cullFace ) {\n\t\t\t\tvar value = ( cullFace !== THREE.CullFaceBack );\n\t\t\t\tconsole.warn( \"WebGLRenderer: .shadowMap.cullFace is deprecated. Set .shadowMap.renderReverseSided to \" + value + \".\" );\n\t\t\t\tthis.renderReverseSided = value;\n\t\t\t}\n\t\t}\n\t} );\n\n\t//\n\n\tObject.defineProperties( THREE.WebGLRenderTarget.prototype, {\n\t\twrapS: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\t\treturn this.texture.wrapS;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\t\tthis.texture.wrapS = value;\n\t\t\t}\n\t\t},\n\t\twrapT: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\t\treturn this.texture.wrapT;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\t\tthis.texture.wrapT = value;\n\t\t\t}\n\t\t},\n\t\tmagFilter: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\t\treturn this.texture.magFilter;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\t\tthis.texture.magFilter = value;\n\t\t\t}\n\t\t},\n\t\tminFilter: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\t\treturn this.texture.minFilter;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\t\tthis.texture.minFilter = value;\n\t\t\t}\n\t\t},\n\t\tanisotropy: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\t\treturn this.texture.anisotropy;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\t\tthis.texture.anisotropy = value;\n\t\t\t}\n\t\t},\n\t\toffset: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\t\treturn this.texture.offset;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\t\tthis.texture.offset = value;\n\t\t\t}\n\t\t},\n\t\trepeat: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\t\treturn this.texture.repeat;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\t\tthis.texture.repeat = value;\n\t\t\t}\n\t\t},\n\t\tformat: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\t\treturn this.texture.format;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\t\tthis.texture.format = value;\n\t\t\t}\n\t\t},\n\t\ttype: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\t\treturn this.texture.type;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\t\tthis.texture.type = value;\n\t\t\t}\n\t\t},\n\t\tgenerateMipmaps: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\t\treturn this.texture.generateMipmaps;\n\t\t\t},\n\t\t\tset: function ( value ) {\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\t\tthis.texture.generateMipmaps = value;\n\t\t\t}\n\t\t}\n\t} );\n\n\t//\n\n\tObject.assign( THREE.Audio.prototype, {\n\t\tload: function ( file ) {\n\t\t\tconsole.warn( 'THREE.Audio: .load has been deprecated. Please use THREE.AudioLoader.' );\n\t\t\tvar scope = this;\n\t\t\tvar audioLoader = new THREE.AudioLoader();\n\t\t\taudioLoader.load( file, function ( buffer ) {\n\t\t\t\tscope.setBuffer( buffer );\n\t\t\t} );\n\t\t\treturn this;\n\t\t}\n\t} );\n\n\tObject.assign( THREE.AudioAnalyser.prototype, {\n\t\tgetData: function ( file ) {\n\t\t\tconsole.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );\n\t\t\treturn this.getFrequencyData();\n\t\t}\n\t} );\n\n\t//\n\n\tTHREE.GeometryUtils = {\n\n\t\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\n\n\t\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\n\n\t\t\tvar matrix;\n\n\t\t\tif ( geometry2 instanceof THREE.Mesh ) {\n\n\t\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\n\n\t\t\t\tmatrix = geometry2.matrix;\n\t\t\t\tgeometry2 = geometry2.geometry;\n\n\t\t\t}\n\n\t\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\n\n\t\t},\n\n\t\tcenter: function ( geometry ) {\n\n\t\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\n\t\t\treturn geometry.center();\n\n\t\t}\n\n\t};\n\n\tTHREE.ImageUtils = {\n\n\t\tcrossOrigin: undefined,\n\n\t\tloadTexture: function ( url, mapping, onLoad, onError ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );\n\n\t\t\tvar loader = new THREE.TextureLoader();\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tvar texture = loader.load( url, onLoad, undefined, onError );\n\n\t\t\tif ( mapping ) texture.mapping = mapping;\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\tloadTextureCube: function ( urls, mapping, onLoad, onError ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );\n\n\t\t\tvar loader = new THREE.CubeTextureLoader();\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tvar texture = loader.load( urls, onLoad, undefined, onError );\n\n\t\t\tif ( mapping ) texture.mapping = mapping;\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\tloadCompressedTexture: function () {\n\n\t\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );\n\n\t\t},\n\n\t\tloadCompressedTextureCube: function () {\n\n\t\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );\n\n\t\t}\n\n\t};\n\n\t//\n\n\tTHREE.Projector = function () {\n\n\t\tconsole.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );\n\n\t\tthis.projectVector = function ( vector, camera ) {\n\n\t\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\n\t\t\tvector.project( camera );\n\n\t\t};\n\n\t\tthis.unprojectVector = function ( vector, camera ) {\n\n\t\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\n\t\t\tvector.unproject( camera );\n\n\t\t};\n\n\t\tthis.pickingRay = function ( vector, camera ) {\n\n\t\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\n\n\t\t};\n\n\t};\n\n\t//\n\n\tTHREE.CanvasRenderer = function () {\n\n\t\tconsole.error( 'THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js' );\n\n\t\tthis.domElement = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\tthis.clear = function () {};\n\t\tthis.render = function () {};\n\t\tthis.setClearColor = function () {};\n\t\tthis.setSize = function () {};\n\n\t};\n\n\t// File:src/extras/CurveUtils.js\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t */\n\n\tTHREE.CurveUtils = {\n\n\t\ttangentQuadraticBezier: function ( t, p0, p1, p2 ) {\n\n\t\t\treturn 2 * ( 1 - t ) * ( p1 - p0 ) + 2 * t * ( p2 - p1 );\n\n\t\t},\n\n\t\t// Puay Bing, thanks for helping with this derivative!\n\n\t\ttangentCubicBezier: function ( t, p0, p1, p2, p3 ) {\n\n\t\t\treturn - 3 * p0 * ( 1 - t ) * ( 1 - t )  +\n\t\t\t\t3 * p1 * ( 1 - t ) * ( 1 - t ) - 6 * t * p1 * ( 1 - t ) +\n\t\t\t\t6 * t *  p2 * ( 1 - t ) - 3 * t * t * p2 +\n\t\t\t\t3 * t * t * p3;\n\n\t\t},\n\n\t\ttangentSpline: function ( t, p0, p1, p2, p3 ) {\n\n\t\t\t// To check if my formulas are correct\n\n\t\t\tvar h00 = 6 * t * t - 6 * t; \t// derived from 2t^3 − 3t^2 + 1\n\t\t\tvar h10 = 3 * t * t - 4 * t + 1; // t^3 − 2t^2 + t\n\t\t\tvar h01 = - 6 * t * t + 6 * t; \t// − 2t3 + 3t2\n\t\t\tvar h11 = 3 * t * t - 2 * t;\t// t3 − t2\n\n\t\t\treturn h00 + h10 + h01 + h11;\n\n\t\t},\n\n\t\t// Catmull-Rom\n\n\t\tinterpolate: function( p0, p1, p2, p3, t ) {\n\n\t\t\tvar v0 = ( p2 - p0 ) * 0.5;\n\t\t\tvar v1 = ( p3 - p1 ) * 0.5;\n\t\t\tvar t2 = t * t;\n\t\t\tvar t3 = t * t2;\n\t\t\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n\t\t}\n\n\t};\n\n\t// File:src/extras/SceneUtils.js\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tTHREE.SceneUtils = {\n\n\t\tcreateMultiMaterialObject: function ( geometry, materials ) {\n\n\t\t\tvar group = new THREE.Group();\n\n\t\t\tfor ( var i = 0, l = materials.length; i < l; i ++ ) {\n\n\t\t\t\tgroup.add( new THREE.Mesh( geometry, materials[ i ] ) );\n\n\t\t\t}\n\n\t\t\treturn group;\n\n\t\t},\n\n\t\tdetach: function ( child, parent, scene ) {\n\n\t\t\tchild.applyMatrix( parent.matrixWorld );\n\t\t\tparent.remove( child );\n\t\t\tscene.add( child );\n\n\t\t},\n\n\t\tattach: function ( child, scene, parent ) {\n\n\t\t\tvar matrixWorldInverse = new THREE.Matrix4();\n\t\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\n\t\t\tchild.applyMatrix( matrixWorldInverse );\n\n\t\t\tscene.remove( child );\n\t\t\tparent.add( child );\n\n\t\t}\n\n\t};\n\n\t// File:src/extras/ShapeUtils.js\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t */\n\n\tTHREE.ShapeUtils = {\n\n\t\t// calculate area of the contour polygon\n\n\t\tarea: function ( contour ) {\n\n\t\t\tvar n = contour.length;\n\t\t\tvar a = 0.0;\n\n\t\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t\t}\n\n\t\t\treturn a * 0.5;\n\n\t\t},\n\n\t\ttriangulate: ( function () {\n\n\t\t\t/**\n\t\t\t * This code is a quick port of code written in C++ which was submitted to\n\t\t\t * flipcode.com by John W. Ratcliff  // July 22, 2000\n\t\t\t * See original code and more information here:\n\t\t\t * http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml\n\t\t\t *\n\t\t\t * ported to actionscript by Zevan Rosser\n\t\t\t * www.actionsnippet.com\n\t\t\t *\n\t\t\t * ported to javascript by Joshua Koo\n\t\t\t * http://www.lab4games.net/zz85/blog\n\t\t\t *\n\t\t\t */\n\n\t\t\tfunction snip( contour, u, v, w, n, verts ) {\n\n\t\t\t\tvar p;\n\t\t\t\tvar ax, ay, bx, by;\n\t\t\t\tvar cx, cy, px, py;\n\n\t\t\t\tax = contour[ verts[ u ] ].x;\n\t\t\t\tay = contour[ verts[ u ] ].y;\n\n\t\t\t\tbx = contour[ verts[ v ] ].x;\n\t\t\t\tby = contour[ verts[ v ] ].y;\n\n\t\t\t\tcx = contour[ verts[ w ] ].x;\n\t\t\t\tcy = contour[ verts[ w ] ].y;\n\n\t\t\t\tif ( Number.EPSILON > ( ( ( bx - ax ) * ( cy - ay ) ) - ( ( by - ay ) * ( cx - ax ) ) ) ) return false;\n\n\t\t\t\tvar aX, aY, bX, bY, cX, cY;\n\t\t\t\tvar apx, apy, bpx, bpy, cpx, cpy;\n\t\t\t\tvar cCROSSap, bCROSScp, aCROSSbp;\n\n\t\t\t\taX = cx - bx;  aY = cy - by;\n\t\t\t\tbX = ax - cx;  bY = ay - cy;\n\t\t\t\tcX = bx - ax;  cY = by - ay;\n\n\t\t\t\tfor ( p = 0; p < n; p ++ ) {\n\n\t\t\t\t\tpx = contour[ verts[ p ] ].x;\n\t\t\t\t\tpy = contour[ verts[ p ] ].y;\n\n\t\t\t\t\tif ( ( ( px === ax ) && ( py === ay ) ) ||\n\t\t\t\t\t\t ( ( px === bx ) && ( py === by ) ) ||\n\t\t\t\t\t\t ( ( px === cx ) && ( py === cy ) ) )\tcontinue;\n\n\t\t\t\t\tapx = px - ax;  apy = py - ay;\n\t\t\t\t\tbpx = px - bx;  bpy = py - by;\n\t\t\t\t\tcpx = px - cx;  cpy = py - cy;\n\n\t\t\t\t\t// see if p is inside triangle abc\n\n\t\t\t\t\taCROSSbp = aX * bpy - aY * bpx;\n\t\t\t\t\tcCROSSap = cX * apy - cY * apx;\n\t\t\t\t\tbCROSScp = bX * cpy - bY * cpx;\n\n\t\t\t\t\tif ( ( aCROSSbp >= - Number.EPSILON ) && ( bCROSScp >= - Number.EPSILON ) && ( cCROSSap >= - Number.EPSILON ) ) return false;\n\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\t// takes in an contour array and returns\n\n\t\t\treturn function triangulate( contour, indices ) {\n\n\t\t\t\tvar n = contour.length;\n\n\t\t\t\tif ( n < 3 ) return null;\n\n\t\t\t\tvar result = [],\n\t\t\t\t\tverts = [],\n\t\t\t\t\tvertIndices = [];\n\n\t\t\t\t/* we want a counter-clockwise polygon in verts */\n\n\t\t\t\tvar u, v, w;\n\n\t\t\t\tif ( THREE.ShapeUtils.area( contour ) > 0.0 ) {\n\n\t\t\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = v;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = ( n - 1 ) - v;\n\n\t\t\t\t}\n\n\t\t\t\tvar nv = n;\n\n\t\t\t\t/*  remove nv - 2 vertices, creating 1 triangle every time */\n\n\t\t\t\tvar count = 2 * nv;   /* error detection */\n\n\t\t\t\tfor ( v = nv - 1; nv > 2; ) {\n\n\t\t\t\t\t/* if we loop, it is probably a non-simple polygon */\n\n\t\t\t\t\tif ( ( count -- ) <= 0 ) {\n\n\t\t\t\t\t\t//** Triangulate: ERROR - probable bad polygon!\n\n\t\t\t\t\t\t//throw ( \"Warning, unable to triangulate polygon!\" );\n\t\t\t\t\t\t//return null;\n\t\t\t\t\t\t// Sometimes warning is fine, especially polygons are triangulated in reverse.\n\t\t\t\t\t\tconsole.warn( 'THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()' );\n\n\t\t\t\t\t\tif ( indices ) return vertIndices;\n\t\t\t\t\t\treturn result;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t/* three consecutive vertices in current polygon, <u,v,w> */\n\n\t\t\t\t\tu = v; \t \tif ( nv <= u ) u = 0;     /* previous */\n\t\t\t\t\tv = u + 1;  if ( nv <= v ) v = 0;     /* new v    */\n\t\t\t\t\tw = v + 1;  if ( nv <= w ) w = 0;     /* next     */\n\n\t\t\t\t\tif ( snip( contour, u, v, w, nv, verts ) ) {\n\n\t\t\t\t\t\tvar a, b, c, s, t;\n\n\t\t\t\t\t\t/* true names of the vertices */\n\n\t\t\t\t\t\ta = verts[ u ];\n\t\t\t\t\t\tb = verts[ v ];\n\t\t\t\t\t\tc = verts[ w ];\n\n\t\t\t\t\t\t/* output Triangle */\n\n\t\t\t\t\t\tresult.push( [ contour[ a ],\n\t\t\t\t\t\t\tcontour[ b ],\n\t\t\t\t\t\t\tcontour[ c ] ] );\n\n\n\t\t\t\t\t\tvertIndices.push( [ verts[ u ], verts[ v ], verts[ w ] ] );\n\n\t\t\t\t\t\t/* remove v from the remaining polygon */\n\n\t\t\t\t\t\tfor ( s = v, t = v + 1; t < nv; s ++, t ++ ) {\n\n\t\t\t\t\t\t\tverts[ s ] = verts[ t ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnv --;\n\n\t\t\t\t\t\t/* reset error detection counter */\n\n\t\t\t\t\t\tcount = 2 * nv;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( indices ) return vertIndices;\n\t\t\t\treturn result;\n\n\t\t\t}\n\n\t\t} )(),\n\n\t\ttriangulateShape: function ( contour, holes ) {\n\n\t\t\tfunction removeDupEndPts(points) {\n\n\t\t\t\tvar l = points.length;\n\n\t\t\t\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\t\t\tpoints.pop();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tremoveDupEndPts( contour );\n\t\t\tholes.forEach( removeDupEndPts );\n\n\t\t\tfunction point_in_segment_2D_colin( inSegPt1, inSegPt2, inOtherPt ) {\n\n\t\t\t\t// inOtherPt needs to be collinear to the inSegment\n\t\t\t\tif ( inSegPt1.x !== inSegPt2.x ) {\n\n\t\t\t\t\tif ( inSegPt1.x < inSegPt2.x ) {\n\n\t\t\t\t\t\treturn\t( ( inSegPt1.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt2.x ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\treturn\t( ( inSegPt2.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt1.x ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( inSegPt1.y < inSegPt2.y ) {\n\n\t\t\t\t\t\treturn\t( ( inSegPt1.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt2.y ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\treturn\t( ( inSegPt2.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt1.y ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction intersect_segments_2D( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1, inSeg2Pt2, inExcludeAdjacentSegs ) {\n\n\t\t\t\tvar seg1dx = inSeg1Pt2.x - inSeg1Pt1.x,   seg1dy = inSeg1Pt2.y - inSeg1Pt1.y;\n\t\t\t\tvar seg2dx = inSeg2Pt2.x - inSeg2Pt1.x,   seg2dy = inSeg2Pt2.y - inSeg2Pt1.y;\n\n\t\t\t\tvar seg1seg2dx = inSeg1Pt1.x - inSeg2Pt1.x;\n\t\t\t\tvar seg1seg2dy = inSeg1Pt1.y - inSeg2Pt1.y;\n\n\t\t\t\tvar limit\t\t= seg1dy * seg2dx - seg1dx * seg2dy;\n\t\t\t\tvar perpSeg1\t= seg1dy * seg1seg2dx - seg1dx * seg1seg2dy;\n\n\t\t\t\tif ( Math.abs( limit ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\n\t\t\t\t\tvar perpSeg2;\n\t\t\t\t\tif ( limit > 0 ) {\n\n\t\t\t\t\t\tif ( ( perpSeg1 < 0 ) || ( perpSeg1 > limit ) ) \t\treturn [];\n\t\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\n\t\t\t\t\t\tif ( ( perpSeg2 < 0 ) || ( perpSeg2 > limit ) ) \t\treturn [];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( ( perpSeg1 > 0 ) || ( perpSeg1 < limit ) ) \t\treturn [];\n\t\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\n\t\t\t\t\t\tif ( ( perpSeg2 > 0 ) || ( perpSeg2 < limit ) ) \t\treturn [];\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// i.e. to reduce rounding errors\n\t\t\t\t\t// intersection at endpoint of segment#1?\n\t\t\t\t\tif ( perpSeg2 === 0 ) {\n\n\t\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\n\t\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\n\t\t\t\t\t\treturn [ inSeg1Pt1 ];\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( perpSeg2 === limit ) {\n\n\t\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\n\t\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\n\t\t\t\t\t\treturn [ inSeg1Pt2 ];\n\n\t\t\t\t\t}\n\t\t\t\t\t// intersection at endpoint of segment#2?\n\t\t\t\t\tif ( perpSeg1 === 0 )\t\treturn [ inSeg2Pt1 ];\n\t\t\t\t\tif ( perpSeg1 === limit )\treturn [ inSeg2Pt2 ];\n\n\t\t\t\t\t// return real intersection point\n\t\t\t\t\tvar factorSeg1 = perpSeg2 / limit;\n\t\t\t\t\treturn\t[ { x: inSeg1Pt1.x + factorSeg1 * seg1dx,\n\t\t\t\t\t\t\t\ty: inSeg1Pt1.y + factorSeg1 * seg1dy } ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( ( perpSeg1 !== 0 ) ||\n\t\t\t\t\t\t ( seg2dy * seg1seg2dx !== seg2dx * seg1seg2dy ) ) \t\t\treturn [];\n\n\t\t\t\t\t// they are collinear or degenerate\n\t\t\t\t\tvar seg1Pt = ( ( seg1dx === 0 ) && ( seg1dy === 0 ) );\t// segment1 is just a point?\n\t\t\t\t\tvar seg2Pt = ( ( seg2dx === 0 ) && ( seg2dy === 0 ) );\t// segment2 is just a point?\n\t\t\t\t\t// both segments are points\n\t\t\t\t\tif ( seg1Pt && seg2Pt ) {\n\n\t\t\t\t\t\tif ( ( inSeg1Pt1.x !== inSeg2Pt1.x ) ||\n\t\t\t\t\t\t\t ( inSeg1Pt1.y !== inSeg2Pt1.y ) )\t\treturn [];\t// they are distinct  points\n\t\t\t\t\t\treturn [ inSeg1Pt1 ];                 \t\t\t\t\t\t// they are the same point\n\n\t\t\t\t\t}\n\t\t\t\t\t// segment#1  is a single point\n\t\t\t\t\tif ( seg1Pt ) {\n\n\t\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg2Pt1, inSeg2Pt2, inSeg1Pt1 ) )\t\treturn [];\t\t// but not in segment#2\n\t\t\t\t\t\treturn [ inSeg1Pt1 ];\n\n\t\t\t\t\t}\n\t\t\t\t\t// segment#2  is a single point\n\t\t\t\t\tif ( seg2Pt ) {\n\n\t\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1 ) )\t\treturn [];\t\t// but not in segment#1\n\t\t\t\t\t\treturn [ inSeg2Pt1 ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// they are collinear segments, which might overlap\n\t\t\t\t\tvar seg1min, seg1max, seg1minVal, seg1maxVal;\n\t\t\t\t\tvar seg2min, seg2max, seg2minVal, seg2maxVal;\n\t\t\t\t\tif ( seg1dx !== 0 ) {\n\n\t\t\t\t\t\t// the segments are NOT on a vertical line\n\t\t\t\t\t\tif ( inSeg1Pt1.x < inSeg1Pt2.x ) {\n\n\t\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.x;\n\t\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.x;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.x;\n\t\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.x;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( inSeg2Pt1.x < inSeg2Pt2.x ) {\n\n\t\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.x;\n\t\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.x;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.x;\n\t\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.x;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// the segments are on a vertical line\n\t\t\t\t\t\tif ( inSeg1Pt1.y < inSeg1Pt2.y ) {\n\n\t\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.y;\n\t\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.y;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.y;\n\t\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.y;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( inSeg2Pt1.y < inSeg2Pt2.y ) {\n\n\t\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.y;\n\t\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.y;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.y;\n\t\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.y;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( seg1minVal <= seg2minVal ) {\n\n\t\t\t\t\t\tif ( seg1maxVal <  seg2minVal )\treturn [];\n\t\t\t\t\t\tif ( seg1maxVal === seg2minVal )\t{\n\n\t\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\n\t\t\t\t\t\t\treturn [ seg2min ];\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg2min, seg1max ];\n\t\t\t\t\t\treturn\t[ seg2min, seg2max ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( seg1minVal >  seg2maxVal )\treturn [];\n\t\t\t\t\t\tif ( seg1minVal === seg2maxVal )\t{\n\n\t\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\n\t\t\t\t\t\t\treturn [ seg1min ];\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg1min, seg1max ];\n\t\t\t\t\t\treturn\t[ seg1min, seg2max ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction isPointInsideAngle( inVertex, inLegFromPt, inLegToPt, inOtherPt ) {\n\n\t\t\t\t// The order of legs is important\n\n\t\t\t\t// translation of all points, so that Vertex is at (0,0)\n\t\t\t\tvar legFromPtX\t= inLegFromPt.x - inVertex.x,  legFromPtY\t= inLegFromPt.y - inVertex.y;\n\t\t\t\tvar legToPtX\t= inLegToPt.x\t- inVertex.x,  legToPtY\t\t= inLegToPt.y\t- inVertex.y;\n\t\t\t\tvar otherPtX\t= inOtherPt.x\t- inVertex.x,  otherPtY\t\t= inOtherPt.y\t- inVertex.y;\n\n\t\t\t\t// main angle >0: < 180 deg.; 0: 180 deg.; <0: > 180 deg.\n\t\t\t\tvar from2toAngle\t= legFromPtX * legToPtY - legFromPtY * legToPtX;\n\t\t\t\tvar from2otherAngle\t= legFromPtX * otherPtY - legFromPtY * otherPtX;\n\n\t\t\t\tif ( Math.abs( from2toAngle ) > Number.EPSILON ) {\n\n\t\t\t\t\t// angle != 180 deg.\n\n\t\t\t\t\tvar other2toAngle\t\t= otherPtX * legToPtY - otherPtY * legToPtX;\n\t\t\t\t\t// console.log( \"from2to: \" + from2toAngle + \", from2other: \" + from2otherAngle + \", other2to: \" + other2toAngle );\n\n\t\t\t\t\tif ( from2toAngle > 0 ) {\n\n\t\t\t\t\t\t// main angle < 180 deg.\n\t\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) && ( other2toAngle >= 0 ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// main angle > 180 deg.\n\t\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) || ( other2toAngle >= 0 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// angle == 180 deg.\n\t\t\t\t\t// console.log( \"from2to: 180 deg., from2other: \" + from2otherAngle  );\n\t\t\t\t\treturn\t( from2otherAngle > 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tfunction removeHoles( contour, holes ) {\n\n\t\t\t\tvar shape = contour.concat(); // work on this shape\n\t\t\t\tvar hole;\n\n\t\t\t\tfunction isCutLineInsideAngles( inShapeIdx, inHoleIdx ) {\n\n\t\t\t\t\t// Check if hole point lies within angle around shape point\n\t\t\t\t\tvar lastShapeIdx = shape.length - 1;\n\n\t\t\t\t\tvar prevShapeIdx = inShapeIdx - 1;\n\t\t\t\t\tif ( prevShapeIdx < 0 )\t\t\tprevShapeIdx = lastShapeIdx;\n\n\t\t\t\t\tvar nextShapeIdx = inShapeIdx + 1;\n\t\t\t\t\tif ( nextShapeIdx > lastShapeIdx )\tnextShapeIdx = 0;\n\n\t\t\t\t\tvar insideAngle = isPointInsideAngle( shape[ inShapeIdx ], shape[ prevShapeIdx ], shape[ nextShapeIdx ], hole[ inHoleIdx ] );\n\t\t\t\t\tif ( ! insideAngle ) {\n\n\t\t\t\t\t\t// console.log( \"Vertex (Shape): \" + inShapeIdx + \", Point: \" + hole[inHoleIdx].x + \"/\" + hole[inHoleIdx].y );\n\t\t\t\t\t\treturn\tfalse;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check if shape point lies within angle around hole point\n\t\t\t\t\tvar lastHoleIdx = hole.length - 1;\n\n\t\t\t\t\tvar prevHoleIdx = inHoleIdx - 1;\n\t\t\t\t\tif ( prevHoleIdx < 0 )\t\t\tprevHoleIdx = lastHoleIdx;\n\n\t\t\t\t\tvar nextHoleIdx = inHoleIdx + 1;\n\t\t\t\t\tif ( nextHoleIdx > lastHoleIdx )\tnextHoleIdx = 0;\n\n\t\t\t\t\tinsideAngle = isPointInsideAngle( hole[ inHoleIdx ], hole[ prevHoleIdx ], hole[ nextHoleIdx ], shape[ inShapeIdx ] );\n\t\t\t\t\tif ( ! insideAngle ) {\n\n\t\t\t\t\t\t// console.log( \"Vertex (Hole): \" + inHoleIdx + \", Point: \" + shape[inShapeIdx].x + \"/\" + shape[inShapeIdx].y );\n\t\t\t\t\t\treturn\tfalse;\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn\ttrue;\n\n\t\t\t\t}\n\n\t\t\t\tfunction intersectsShapeEdge( inShapePt, inHolePt ) {\n\n\t\t\t\t\t// checks for intersections with shape edges\n\t\t\t\t\tvar sIdx, nextIdx, intersection;\n\t\t\t\t\tfor ( sIdx = 0; sIdx < shape.length; sIdx ++ ) {\n\n\t\t\t\t\t\tnextIdx = sIdx + 1; nextIdx %= shape.length;\n\t\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, shape[ sIdx ], shape[ nextIdx ], true );\n\t\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn\tfalse;\n\n\t\t\t\t}\n\n\t\t\t\tvar indepHoles = [];\n\n\t\t\t\tfunction intersectsHoleEdge( inShapePt, inHolePt ) {\n\n\t\t\t\t\t// checks for intersections with hole edges\n\t\t\t\t\tvar ihIdx, chkHole,\n\t\t\t\t\t\thIdx, nextIdx, intersection;\n\t\t\t\t\tfor ( ihIdx = 0; ihIdx < indepHoles.length; ihIdx ++ ) {\n\n\t\t\t\t\t\tchkHole = holes[ indepHoles[ ihIdx ]];\n\t\t\t\t\t\tfor ( hIdx = 0; hIdx < chkHole.length; hIdx ++ ) {\n\n\t\t\t\t\t\t\tnextIdx = hIdx + 1; nextIdx %= chkHole.length;\n\t\t\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, chkHole[ hIdx ], chkHole[ nextIdx ], true );\n\t\t\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\treturn\tfalse;\n\n\t\t\t\t}\n\n\t\t\t\tvar holeIndex, shapeIndex,\n\t\t\t\t\tshapePt, holePt,\n\t\t\t\t\tholeIdx, cutKey, failedCuts = [],\n\t\t\t\t\ttmpShape1, tmpShape2,\n\t\t\t\t\ttmpHole1, tmpHole2;\n\n\t\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tindepHoles.push( h );\n\n\t\t\t\t}\n\n\t\t\t\tvar minShapeIndex = 0;\n\t\t\t\tvar counter = indepHoles.length * 2;\n\t\t\t\twhile ( indepHoles.length > 0 ) {\n\n\t\t\t\t\tcounter --;\n\t\t\t\t\tif ( counter < 0 ) {\n\n\t\t\t\t\t\tconsole.log( \"Infinite Loop! Holes left:\" + indepHoles.length + \", Probably Hole outside Shape!\" );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// search for shape-vertex and hole-vertex,\n\t\t\t\t\t// which can be connected without intersections\n\t\t\t\t\tfor ( shapeIndex = minShapeIndex; shapeIndex < shape.length; shapeIndex ++ ) {\n\n\t\t\t\t\t\tshapePt = shape[ shapeIndex ];\n\t\t\t\t\t\tholeIndex\t= - 1;\n\n\t\t\t\t\t\t// search for hole which can be reached without intersections\n\t\t\t\t\t\tfor ( var h = 0; h < indepHoles.length; h ++ ) {\n\n\t\t\t\t\t\t\tholeIdx = indepHoles[ h ];\n\n\t\t\t\t\t\t\t// prevent multiple checks\n\t\t\t\t\t\t\tcutKey = shapePt.x + \":\" + shapePt.y + \":\" + holeIdx;\n\t\t\t\t\t\t\tif ( failedCuts[ cutKey ] !== undefined )\t\t\tcontinue;\n\n\t\t\t\t\t\t\thole = holes[ holeIdx ];\n\t\t\t\t\t\t\tfor ( var h2 = 0; h2 < hole.length; h2 ++ ) {\n\n\t\t\t\t\t\t\t\tholePt = hole[ h2 ];\n\t\t\t\t\t\t\t\tif ( ! isCutLineInsideAngles( shapeIndex, h2 ) )\t\tcontinue;\n\t\t\t\t\t\t\t\tif ( intersectsShapeEdge( shapePt, holePt ) )\t\tcontinue;\n\t\t\t\t\t\t\t\tif ( intersectsHoleEdge( shapePt, holePt ) )\t\tcontinue;\n\n\t\t\t\t\t\t\t\tholeIndex = h2;\n\t\t\t\t\t\t\t\tindepHoles.splice( h, 1 );\n\n\t\t\t\t\t\t\t\ttmpShape1 = shape.slice( 0, shapeIndex + 1 );\n\t\t\t\t\t\t\t\ttmpShape2 = shape.slice( shapeIndex );\n\t\t\t\t\t\t\t\ttmpHole1 = hole.slice( holeIndex );\n\t\t\t\t\t\t\t\ttmpHole2 = hole.slice( 0, holeIndex + 1 );\n\n\t\t\t\t\t\t\t\tshape = tmpShape1.concat( tmpHole1 ).concat( tmpHole2 ).concat( tmpShape2 );\n\n\t\t\t\t\t\t\t\tminShapeIndex = shapeIndex;\n\n\t\t\t\t\t\t\t\t// Debug only, to show the selected cuts\n\t\t\t\t\t\t\t\t// glob_CutLines.push( [ shapePt, holePt ] );\n\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\n\n\t\t\t\t\t\t\tfailedCuts[ cutKey ] = true;\t\t\t// remember failure\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn shape; \t\t\t/* shape with no holes */\n\n\t\t\t}\n\n\n\t\t\tvar i, il, f, face,\n\t\t\t\tkey, index,\n\t\t\t\tallPointsMap = {};\n\n\t\t\t// To maintain reference to old shape, one must match coordinates, or offset the indices from original arrays. It's probably easier to do the first.\n\n\t\t\tvar allpoints = contour.concat();\n\n\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tArray.prototype.push.apply( allpoints, holes[ h ] );\n\n\t\t\t}\n\n\t\t\t//console.log( \"allpoints\",allpoints, allpoints.length );\n\n\t\t\t// prepare all points map\n\n\t\t\tfor ( i = 0, il = allpoints.length; i < il; i ++ ) {\n\n\t\t\t\tkey = allpoints[ i ].x + \":\" + allpoints[ i ].y;\n\n\t\t\t\tif ( allPointsMap[ key ] !== undefined ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.ShapeUtils: Duplicate point\", key, i );\n\n\t\t\t\t}\n\n\t\t\t\tallPointsMap[ key ] = i;\n\n\t\t\t}\n\n\t\t\t// remove holes by cutting paths to holes and adding them to the shape\n\t\t\tvar shapeWithoutHoles = removeHoles( contour, holes );\n\n\t\t\tvar triangles = THREE.ShapeUtils.triangulate( shapeWithoutHoles, false ); // True returns indices for points of spooled shape\n\t\t\t//console.log( \"triangles\",triangles, triangles.length );\n\n\t\t\t// check all face vertices against all points map\n\n\t\t\tfor ( i = 0, il = triangles.length; i < il; i ++ ) {\n\n\t\t\t\tface = triangles[ i ];\n\n\t\t\t\tfor ( f = 0; f < 3; f ++ ) {\n\n\t\t\t\t\tkey = face[ f ].x + \":\" + face[ f ].y;\n\n\t\t\t\t\tindex = allPointsMap[ key ];\n\n\t\t\t\t\tif ( index !== undefined ) {\n\n\t\t\t\t\t\tface[ f ] = index;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn triangles.concat();\n\n\t\t},\n\n\t\tisClockWise: function ( pts ) {\n\n\t\t\treturn THREE.ShapeUtils.area( pts ) < 0;\n\n\t\t},\n\n\t\t// Bezier Curves formulas obtained from\n\t\t// http://en.wikipedia.org/wiki/B%C3%A9zier_curve\n\n\t\t// Quad Bezier Functions\n\n\t\tb2: ( function () {\n\n\t\t\tfunction b2p0( t, p ) {\n\n\t\t\t\tvar k = 1 - t;\n\t\t\t\treturn k * k * p;\n\n\t\t\t}\n\n\t\t\tfunction b2p1( t, p ) {\n\n\t\t\t\treturn 2 * ( 1 - t ) * t * p;\n\n\t\t\t}\n\n\t\t\tfunction b2p2( t, p ) {\n\n\t\t\t\treturn t * t * p;\n\n\t\t\t}\n\n\t\t\treturn function b2( t, p0, p1, p2 ) {\n\n\t\t\t\treturn b2p0( t, p0 ) + b2p1( t, p1 ) + b2p2( t, p2 );\n\n\t\t\t};\n\n\t\t} )(),\n\n\t\t// Cubic Bezier Functions\n\n\t\tb3: ( function () {\n\n\t\t\tfunction b3p0( t, p ) {\n\n\t\t\t\tvar k = 1 - t;\n\t\t\t\treturn k * k * k * p;\n\n\t\t\t}\n\n\t\t\tfunction b3p1( t, p ) {\n\n\t\t\t\tvar k = 1 - t;\n\t\t\t\treturn 3 * k * k * t * p;\n\n\t\t\t}\n\n\t\t\tfunction b3p2( t, p ) {\n\n\t\t\t\tvar k = 1 - t;\n\t\t\t\treturn 3 * k * t * t * p;\n\n\t\t\t}\n\n\t\t\tfunction b3p3( t, p ) {\n\n\t\t\t\treturn t * t * t * p;\n\n\t\t\t}\n\n\t\t\treturn function b3( t, p0, p1, p2, p3 ) {\n\n\t\t\t\treturn b3p0( t, p0 ) + b3p1( t, p1 ) + b3p2( t, p2 ) + b3p3( t, p3 );\n\n\t\t\t};\n\n\t\t} )()\n\n\t};\n\n\t// File:src/extras/core/Curve.js\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * Extensible curve object\n\t *\n\t * Some common of Curve methods\n\t * .getPoint(t), getTangent(t)\n\t * .getPointAt(u), getTagentAt(u)\n\t * .getPoints(), .getSpacedPoints()\n\t * .getLength()\n\t * .updateArcLengths()\n\t *\n\t * This following classes subclasses THREE.Curve:\n\t *\n\t * -- 2d classes --\n\t * THREE.LineCurve\n\t * THREE.QuadraticBezierCurve\n\t * THREE.CubicBezierCurve\n\t * THREE.SplineCurve\n\t * THREE.ArcCurve\n\t * THREE.EllipseCurve\n\t *\n\t * -- 3d classes --\n\t * THREE.LineCurve3\n\t * THREE.QuadraticBezierCurve3\n\t * THREE.CubicBezierCurve3\n\t * THREE.SplineCurve3\n\t *\n\t * A series of curves can be represented as a THREE.CurvePath\n\t *\n\t **/\n\n\t/**************************************************************\n\t *\tAbstract Curve base class\n\t **************************************************************/\n\n\tTHREE.Curve = function () {\n\n\t};\n\n\tTHREE.Curve.prototype = {\n\n\t\tconstructor: THREE.Curve,\n\n\t\t// Virtual base class method to overwrite and implement in subclasses\n\t\t//\t- t [0 .. 1]\n\n\t\tgetPoint: function ( t ) {\n\n\t\t\tconsole.warn( \"THREE.Curve: Warning, getPoint() not implemented!\" );\n\t\t\treturn null;\n\n\t\t},\n\n\t\t// Get point at relative position in curve according to arc length\n\t\t// - u [0 .. 1]\n\n\t\tgetPointAt: function ( u ) {\n\n\t\t\tvar t = this.getUtoTmapping( u );\n\t\t\treturn this.getPoint( t );\n\n\t\t},\n\n\t\t// Get sequence of points using getPoint( t )\n\n\t\tgetPoints: function ( divisions ) {\n\n\t\t\tif ( ! divisions ) divisions = 5;\n\n\t\t\tvar points = [];\n\n\t\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t},\n\n\t\t// Get sequence of points using getPointAt( u )\n\n\t\tgetSpacedPoints: function ( divisions ) {\n\n\t\t\tif ( ! divisions ) divisions = 5;\n\n\t\t\tvar points = [];\n\n\t\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t},\n\n\t\t// Get total curve arc length\n\n\t\tgetLength: function () {\n\n\t\t\tvar lengths = this.getLengths();\n\t\t\treturn lengths[ lengths.length - 1 ];\n\n\t\t},\n\n\t\t// Get list of cumulative segment lengths\n\n\t\tgetLengths: function ( divisions ) {\n\n\t\t\tif ( ! divisions ) divisions = ( this.__arcLengthDivisions ) ? ( this.__arcLengthDivisions ) : 200;\n\n\t\t\tif ( this.cacheArcLengths\n\t\t\t\t&& ( this.cacheArcLengths.length === divisions + 1 )\n\t\t\t\t&& ! this.needsUpdate ) {\n\n\t\t\t\t//console.log( \"cached\", this.cacheArcLengths );\n\t\t\t\treturn this.cacheArcLengths;\n\n\t\t\t}\n\n\t\t\tthis.needsUpdate = false;\n\n\t\t\tvar cache = [];\n\t\t\tvar current, last = this.getPoint( 0 );\n\t\t\tvar p, sum = 0;\n\n\t\t\tcache.push( 0 );\n\n\t\t\tfor ( p = 1; p <= divisions; p ++ ) {\n\n\t\t\t\tcurrent = this.getPoint ( p / divisions );\n\t\t\t\tsum += current.distanceTo( last );\n\t\t\t\tcache.push( sum );\n\t\t\t\tlast = current;\n\n\t\t\t}\n\n\t\t\tthis.cacheArcLengths = cache;\n\n\t\t\treturn cache; // { sums: cache, sum:sum }; Sum is in the last element.\n\n\t\t},\n\n\t\tupdateArcLengths: function() {\n\n\t\t\tthis.needsUpdate = true;\n\t\t\tthis.getLengths();\n\n\t\t},\n\n\t\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\t\tgetUtoTmapping: function ( u, distance ) {\n\n\t\t\tvar arcLengths = this.getLengths();\n\n\t\t\tvar i = 0, il = arcLengths.length;\n\n\t\t\tvar targetArcLength; // The targeted u distance value to get\n\n\t\t\tif ( distance ) {\n\n\t\t\t\ttargetArcLength = distance;\n\n\t\t\t} else {\n\n\t\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t\t}\n\n\t\t\t//var time = Date.now();\n\n\t\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\t\tvar low = 0, high = il - 1, comparison;\n\n\t\t\twhile ( low <= high ) {\n\n\t\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\t\tlow = i + 1;\n\n\t\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\t\thigh = i - 1;\n\n\t\t\t\t} else {\n\n\t\t\t\t\thigh = i;\n\t\t\t\t\tbreak;\n\n\t\t\t\t\t// DONE\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ti = high;\n\n\t\t\t//console.log('b' , i, low, high, Date.now()- time);\n\n\t\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\t\tvar t = i / ( il - 1 );\n\t\t\t\treturn t;\n\n\t\t\t}\n\n\t\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\t\tvar lengthBefore = arcLengths[ i ];\n\t\t\tvar lengthAfter = arcLengths[ i + 1 ];\n\n\t\t\tvar segmentLength = lengthAfter - lengthBefore;\n\n\t\t\t// determine where we are between the 'before' and 'after' points\n\n\t\t\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t\t// add that fractional amount to t\n\n\t\t\tvar t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\t\treturn t;\n\n\t\t},\n\n\t\t// Returns a unit vector tangent at t\n\t\t// In case any sub curve does not implement its tangent derivation,\n\t\t// 2 points a small delta apart will be used to find its gradient\n\t\t// which seems to give a reasonable approximation\n\n\t\tgetTangent: function( t ) {\n\n\t\t\tvar delta = 0.0001;\n\t\t\tvar t1 = t - delta;\n\t\t\tvar t2 = t + delta;\n\n\t\t\t// Capping in case of danger\n\n\t\t\tif ( t1 < 0 ) t1 = 0;\n\t\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\t\tvar pt1 = this.getPoint( t1 );\n\t\t\tvar pt2 = this.getPoint( t2 );\n\n\t\t\tvar vec = pt2.clone().sub( pt1 );\n\t\t\treturn vec.normalize();\n\n\t\t},\n\n\t\tgetTangentAt: function ( u ) {\n\n\t\t\tvar t = this.getUtoTmapping( u );\n\t\t\treturn this.getTangent( t );\n\n\t\t}\n\n\t};\n\n\t// TODO: Transformation for Curves?\n\n\t/**************************************************************\n\t *\t3D Curves\n\t **************************************************************/\n\n\t// A Factory method for creating new curve subclasses\n\n\tTHREE.Curve.create = function ( constructor, getPointFunc ) {\n\n\t\tconstructor.prototype = Object.create( THREE.Curve.prototype );\n\t\tconstructor.prototype.constructor = constructor;\n\t\tconstructor.prototype.getPoint = getPointFunc;\n\n\t\treturn constructor;\n\n\t};\n\n\t// File:src/extras/core/CurvePath.js\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t *\n\t **/\n\n\t/**************************************************************\n\t *\tCurved Path - a curve path is simply a array of connected\n\t *  curves, but retains the api of a curve\n\t **************************************************************/\n\n\tTHREE.CurvePath = function () {\n\n\t\tthis.curves = [];\n\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t};\n\n\tTHREE.CurvePath.prototype = Object.assign( Object.create( THREE.Curve.prototype ), {\n\n\t\tconstructor: THREE.CurvePath,\n\n\t\tadd: function ( curve ) {\n\n\t\t\tthis.curves.push( curve );\n\n\t\t},\n\n\t\tclosePath: function () {\n\n\t\t\t// Add a line curve if start and end of lines are not connected\n\t\t\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\t\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\t\tthis.curves.push( new THREE.LineCurve( endPoint, startPoint ) );\n\n\t\t\t}\n\n\t\t},\n\n\t\t// To get accurate point with reference to\n\t\t// entire path distance at time t,\n\t\t// following has to be done:\n\n\t\t// 1. Length of each sub path have to be known\n\t\t// 2. Locate and identify type of curve\n\t\t// 3. Get t for the curve\n\t\t// 4. Return curve.getPointAt(t')\n\n\t\tgetPoint: function ( t ) {\n\n\t\t\tvar d = t * this.getLength();\n\t\t\tvar curveLengths = this.getCurveLengths();\n\t\t\tvar i = 0;\n\n\t\t\t// To think about boundaries points.\n\n\t\t\twhile ( i < curveLengths.length ) {\n\n\t\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\t\tvar diff = curveLengths[ i ] - d;\n\t\t\t\t\tvar curve = this.curves[ i ];\n\n\t\t\t\t\tvar segmentLength = curve.getLength();\n\t\t\t\t\tvar u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\t\treturn curve.getPointAt( u );\n\n\t\t\t\t}\n\n\t\t\t\ti ++;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t\t},\n\n\t\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t\t// getPoint() depends on getLength\n\n\t\tgetLength: function () {\n\n\t\t\tvar lens = this.getCurveLengths();\n\t\t\treturn lens[ lens.length - 1 ];\n\n\t\t},\n\n\t\t// cacheLengths must be recalculated.\n\t\tupdateArcLengths: function () {\n\n\t\t\tthis.needsUpdate = true;\n\t\t\tthis.cacheLengths = null;\n\t\t\tthis.getLengths();\n\n\t\t},\n\n\t\t// Compute lengths and cache them\n\t\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\t\tgetCurveLengths: function () {\n\n\t\t\t// We use cache values if curves and cache array are same length\n\n\t\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\t\treturn this.cacheLengths;\n\n\t\t\t}\n\n\t\t\t// Get length of sub-curve\n\t\t\t// Push sums into cached array\n\n\t\t\tvar lengths = [], sums = 0;\n\n\t\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\t\tsums += this.curves[ i ].getLength();\n\t\t\t\tlengths.push( sums );\n\n\t\t\t}\n\n\t\t\tthis.cacheLengths = lengths;\n\n\t\t\treturn lengths;\n\n\t\t},\n\n\t\tgetSpacedPoints: function ( divisions ) {\n\n\t\t\tif ( ! divisions ) divisions = 40;\n\n\t\t\tvar points = [];\n\n\t\t\tfor ( var i = 0; i <= divisions; i ++ ) {\n\n\t\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t\t}\n\n\t\t\tif ( this.autoClose ) {\n\n\t\t\t\tpoints.push( points[ 0 ] );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t},\n\n\t\tgetPoints: function ( divisions ) {\n\n\t\t\tdivisions = divisions || 12;\n\n\t\t\tvar points = [], last;\n\n\t\t\tfor ( var i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\t\tvar curve = curves[ i ];\n\t\t\t\tvar resolution = curve instanceof THREE.EllipseCurve ? divisions * 2\n\t\t\t\t\t: curve instanceof THREE.LineCurve ? 1\n\t\t\t\t\t: curve instanceof THREE.SplineCurve ? divisions * curve.points.length\n\t\t\t\t\t: divisions;\n\n\t\t\t\tvar pts = curve.getPoints( resolution );\n\n\t\t\t\tfor ( var j = 0; j < pts.length; j++ ) {\n\n\t\t\t\t\tvar point = pts[ j ];\n\n\t\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\t\tpoints.push( point );\n\t\t\t\t\tlast = point;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.autoClose && points.length > 1 && !points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\t\tpoints.push( points[ 0 ] );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t},\n\n\t\t/**************************************************************\n\t\t *\tCreate Geometries Helpers\n\t\t **************************************************************/\n\n\t\t/// Generate geometry from path points (for Line or Points objects)\n\n\t\tcreatePointsGeometry: function ( divisions ) {\n\n\t\t\tvar pts = this.getPoints( divisions );\n\t\t\treturn this.createGeometry( pts );\n\n\t\t},\n\n\t\t// Generate geometry from equidistant sampling along the path\n\n\t\tcreateSpacedPointsGeometry: function ( divisions ) {\n\n\t\t\tvar pts = this.getSpacedPoints( divisions );\n\t\t\treturn this.createGeometry( pts );\n\n\t\t},\n\n\t\tcreateGeometry: function ( points ) {\n\n\t\t\tvar geometry = new THREE.Geometry();\n\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tvar point = points[ i ];\n\t\t\t\tgeometry.vertices.push( new THREE.Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t\t}\n\n\t\t\treturn geometry;\n\n\t\t}\n\n\t} );\n\n\t// File:src/extras/core/Font.js\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.Font = function ( data ) {\n\n\t\tthis.data = data;\n\n\t};\n\n\tObject.assign( THREE.Font.prototype, {\n\n\t\tgenerateShapes: function ( text, size, divisions ) {\n\n\t\t\tfunction createPaths( text ) {\n\n\t\t\t\tvar chars = String( text ).split( '' );\n\t\t\t\tvar scale = size / data.resolution;\n\t\t\t\tvar offset = 0;\n\n\t\t\t\tvar paths = [];\n\n\t\t\t\tfor ( var i = 0; i < chars.length; i ++ ) {\n\n\t\t\t\t\tvar ret = createPath( chars[ i ], scale, offset );\n\t\t\t\t\toffset += ret.offset;\n\n\t\t\t\t\tpaths.push( ret.path );\n\n\t\t\t\t}\n\n\t\t\t\treturn paths;\n\n\t\t\t}\n\n\t\t\tfunction createPath( c, scale, offset ) {\n\n\t\t\t\tvar glyph = data.glyphs[ c ] || data.glyphs[ '?' ];\n\n\t\t\t\tif ( ! glyph ) return;\n\n\t\t\t\tvar path = new THREE.ShapePath();\n\n\t\t\t\tvar pts = [], b2 = THREE.ShapeUtils.b2, b3 = THREE.ShapeUtils.b3;\n\t\t\t\tvar x, y, cpx, cpy, cpx0, cpy0, cpx1, cpy1, cpx2, cpy2, laste;\n\n\t\t\t\tif ( glyph.o ) {\n\n\t\t\t\t\tvar outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\n\n\t\t\t\t\tfor ( var i = 0, l = outline.length; i < l; ) {\n\n\t\t\t\t\t\tvar action = outline[ i ++ ];\n\n\t\t\t\t\t\tswitch ( action ) {\n\n\t\t\t\t\t\t\tcase 'm': // moveTo\n\n\t\t\t\t\t\t\t\tx = outline[ i ++ ] * scale + offset;\n\t\t\t\t\t\t\t\ty = outline[ i ++ ] * scale;\n\n\t\t\t\t\t\t\t\tpath.moveTo( x, y );\n\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'l': // lineTo\n\n\t\t\t\t\t\t\t\tx = outline[ i ++ ] * scale + offset;\n\t\t\t\t\t\t\t\ty = outline[ i ++ ] * scale;\n\n\t\t\t\t\t\t\t\tpath.lineTo( x, y );\n\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'q': // quadraticCurveTo\n\n\t\t\t\t\t\t\t\tcpx  = outline[ i ++ ] * scale + offset;\n\t\t\t\t\t\t\t\tcpy  = outline[ i ++ ] * scale;\n\t\t\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offset;\n\t\t\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scale;\n\n\t\t\t\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\n\n\t\t\t\t\t\t\t\tlaste = pts[ pts.length - 1 ];\n\n\t\t\t\t\t\t\t\tif ( laste ) {\n\n\t\t\t\t\t\t\t\t\tcpx0 = laste.x;\n\t\t\t\t\t\t\t\t\tcpy0 = laste.y;\n\n\t\t\t\t\t\t\t\t\tfor ( var i2 = 1; i2 <= divisions; i2 ++ ) {\n\n\t\t\t\t\t\t\t\t\t\tvar t = i2 / divisions;\n\t\t\t\t\t\t\t\t\t\tb2( t, cpx0, cpx1, cpx );\n\t\t\t\t\t\t\t\t\t\tb2( t, cpy0, cpy1, cpy );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'b': // bezierCurveTo\n\n\t\t\t\t\t\t\t\tcpx  = outline[ i ++ ] * scale + offset;\n\t\t\t\t\t\t\t\tcpy  = outline[ i ++ ] * scale;\n\t\t\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offset;\n\t\t\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scale;\n\t\t\t\t\t\t\t\tcpx2 = outline[ i ++ ] * scale + offset;\n\t\t\t\t\t\t\t\tcpy2 = outline[ i ++ ] * scale;\n\n\t\t\t\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\n\n\t\t\t\t\t\t\t\tlaste = pts[ pts.length - 1 ];\n\n\t\t\t\t\t\t\t\tif ( laste ) {\n\n\t\t\t\t\t\t\t\t\tcpx0 = laste.x;\n\t\t\t\t\t\t\t\t\tcpy0 = laste.y;\n\n\t\t\t\t\t\t\t\t\tfor ( var i2 = 1; i2 <= divisions; i2 ++ ) {\n\n\t\t\t\t\t\t\t\t\t\tvar t = i2 / divisions;\n\t\t\t\t\t\t\t\t\t\tb3( t, cpx0, cpx1, cpx2, cpx );\n\t\t\t\t\t\t\t\t\t\tb3( t, cpy0, cpy1, cpy2, cpy );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn { offset: glyph.ha * scale, path: path };\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( size === undefined ) size = 100;\n\t\t\tif ( divisions === undefined ) divisions = 4;\n\n\t\t\tvar data = this.data;\n\n\t\t\tvar paths = createPaths( text );\n\t\t\tvar shapes = [];\n\n\t\t\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\n\n\t\t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t} );\n\n\t// File:src/extras/core/Path.js\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * Creates free form 2d path using series of points, lines or curves.\n\t *\n\t **/\n\n\tTHREE.Path = function ( points ) {\n\n\t\tTHREE.CurvePath.call( this );\n\t\tthis.currentPoint = new THREE.Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.fromPoints( points );\n\n\t\t}\n\n\t};\n\n\tTHREE.Path.prototype = Object.assign( Object.create( THREE.CurvePath.prototype ), {\n\n\t\tconstructor: THREE.Path,\n\n\t\t// Create path using straight lines to connect all points\n\t\t// - vectors: array of Vector2\n\t\tfromPoints: function ( vectors ) {\n\n\t\t\tthis.moveTo( vectors[ 0 ].x, vectors[ 0 ].y );\n\n\t\t\tfor ( var i = 1, l = vectors.length; i < l; i ++ ) {\n\n\t\t\t\tthis.lineTo( vectors[ i ].x, vectors[ i ].y );\n\n\t\t\t}\n\n\t\t},\n\n\t\tmoveTo: function ( x, y ) {\n\n\t\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\t},\n\n\t\tlineTo: function ( x, y ) {\n\n\t\t\tvar curve = new THREE.LineCurve( this.currentPoint.clone(), new THREE.Vector2( x, y ) );\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.set( x, y );\n\n\t\t},\n\n\t\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\t\tvar curve = new THREE.QuadraticBezierCurve(\n\t\t\t\tthis.currentPoint.clone(),\n\t\t\t\tnew THREE.Vector2( aCPx, aCPy ),\n\t\t\t\tnew THREE.Vector2( aX, aY )\n\t\t\t);\n\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.set( aX, aY );\n\n\t\t},\n\n\t\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\t\tvar curve = new THREE.CubicBezierCurve(\n\t\t\t\tthis.currentPoint.clone(),\n\t\t\t\tnew THREE.Vector2( aCP1x, aCP1y ),\n\t\t\t\tnew THREE.Vector2( aCP2x, aCP2y ),\n\t\t\t\tnew THREE.Vector2( aX, aY )\n\t\t\t);\n\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.set( aX, aY );\n\n\t\t},\n\n\t\tsplineThru: function ( pts /*Array of Vector*/ ) {\n\n\t\t\tvar npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\t\tvar curve = new THREE.SplineCurve( npts );\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\t},\n\n\t\tarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\t\tvar x0 = this.currentPoint.x;\n\t\t\tvar y0 = this.currentPoint.y;\n\n\t\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\t},\n\n\t\tabsarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\t},\n\n\t\tellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\t\tvar x0 = this.currentPoint.x;\n\t\t\tvar y0 = this.currentPoint.y;\n\n\t\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\t},\n\n\t\tabsellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\t\tvar curve = new THREE.EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t\t// if a previous curve is present, attempt to join\n\t\t\t\tvar firstPoint = curve.getPoint( 0 );\n\n\t\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.curves.push( curve );\n\n\t\t\tvar lastPoint = curve.getPoint( 1 );\n\t\t\tthis.currentPoint.copy( lastPoint );\n\n\t\t}\n\n\t} );\n\n\n\t// minimal class for proxing functions to Path. Replaces old \"extractSubpaths()\"\n\tTHREE.ShapePath = function() {\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\t}\n\n\tTHREE.ShapePath.prototype = {\n\t\tmoveTo: function ( x, y ) {\n\t\t\tthis.currentPath = new THREE.Path();\n\t\t\tthis.subPaths.push(this.currentPath);\n\t\t\tthis.currentPath.moveTo( x, y );\n\t\t},\n\t\tlineTo: function ( x, y ) {\n\t\t\tthis.currentPath.lineTo( x, y );\n\t\t},\n\t\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\t\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\t\t},\n\t\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\t\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\t\t},\n\t\tsplineThru: function ( pts ) {\n\t\t\tthis.currentPath.splineThru( pts );\n\t\t},\n\n\t\ttoShapes: function ( isCCW, noHoles ) {\n\n\t\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\t\tvar shapes = [];\n\n\t\t\t\tfor ( var i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar tmpPath = inSubpaths[ i ];\n\n\t\t\t\t\tvar tmpShape = new THREE.Shape();\n\t\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t\t}\n\n\t\t\t\treturn shapes;\n\n\t\t\t}\n\n\t\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\t\tvar polyLen = inPolygon.length;\n\n\t\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\t\tvar inside = false;\n\t\t\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\t\tvar edgeLowPt  = inPolygon[ p ];\n\t\t\t\t\tvar edgeHighPt = inPolygon[ q ];\n\n\t\t\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t\t// not parallel\n\t\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\t\tedgeLowPt  = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// parallel or collinear\n\t\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t\t// continue;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn\tinside;\n\n\t\t\t}\n\n\t\t\tvar isClockWise = THREE.ShapeUtils.isClockWise;\n\n\t\t\tvar subPaths = this.subPaths;\n\t\t\tif ( subPaths.length === 0 ) return [];\n\n\t\t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\t\tvar solid, tmpPath, tmpShape, shapes = [];\n\n\t\t\tif ( subPaths.length === 1 ) {\n\n\t\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\t\ttmpShape = new THREE.Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\t\tshapes.push( tmpShape );\n\t\t\t\treturn shapes;\n\n\t\t\t}\n\n\t\t\tvar holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\t\tvar betterShapeHoles = [];\n\t\t\tvar newShapes = [];\n\t\t\tvar newShapeHoles = [];\n\t\t\tvar mainIdx = 0;\n\t\t\tvar tmpPoints;\n\n\t\t\tnewShapes[ mainIdx ] = undefined;\n\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\tfor ( var i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\t\ttmpPath = subPaths[ i ];\n\t\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\t\tif ( solid ) {\n\n\t\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\t\tnewShapes[ mainIdx ] = { s: new THREE.Shape(), p: tmpPoints };\n\t\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t\t//console.log('cw', i);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t\t//console.log('ccw', i);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\t\tif ( newShapes.length > 1 ) {\n\n\t\t\t\tvar ambiguous = false;\n\t\t\t\tvar toChange = [];\n\n\t\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\t\tvar sho = newShapeHoles[ sIdx ];\n\n\t\t\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\t\tvar ho = sho[ hIdx ];\n\t\t\t\t\t\tvar hole_unassigned = true;\n\n\t\t\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\n\t\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\t// console.log(\"ambiguous: \", ambiguous);\n\t\t\t\tif ( toChange.length > 0 ) {\n\n\t\t\t\t\t// console.log(\"to change: \", toChange);\n\t\t\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar tmpHoles;\n\n\t\t\tfor ( var i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\t\tshapes.push( tmpShape );\n\t\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\t\tfor ( var j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//console.log(\"shape\", shapes);\n\n\t\t\treturn shapes;\n\n\t\t}\n\t}\n\n\t// File:src/extras/core/Shape.js\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * Defines a 2d shape plane using paths.\n\t **/\n\n\t// STEP 1 Create a path.\n\t// STEP 2 Turn path into shape.\n\t// STEP 3 ExtrudeGeometry takes in Shape/Shapes\n\t// STEP 3a - Extract points from each shape, turn to vertices\n\t// STEP 3b - Triangulate each shape, add faces.\n\n\tTHREE.Shape = function () {\n\n\t\tTHREE.Path.apply( this, arguments );\n\n\t\tthis.holes = [];\n\n\t};\n\n\tTHREE.Shape.prototype = Object.assign( Object.create( THREE.Path.prototype ), {\n\n\t\tconstructor: THREE.Shape,\n\n\t\t// Convenience method to return ExtrudeGeometry\n\n\t\textrude: function ( options ) {\n\n\t\t\treturn new THREE.ExtrudeGeometry( this, options );\n\n\t\t},\n\n\t\t// Convenience method to return ShapeGeometry\n\n\t\tmakeGeometry: function ( options ) {\n\n\t\t\treturn new THREE.ShapeGeometry( this, options );\n\n\t\t},\n\n\t\tgetPointsHoles: function ( divisions ) {\n\n\t\t\tvar holesPts = [];\n\n\t\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t\t}\n\n\t\t\treturn holesPts;\n\n\t\t},\n\n\t\t// Get points of shape and holes (keypoints based on segments parameter)\n\n\t\textractAllPoints: function ( divisions ) {\n\n\t\t\treturn {\n\n\t\t\t\tshape: this.getPoints( divisions ),\n\t\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t\t};\n\n\t\t},\n\n\t\textractPoints: function ( divisions ) {\n\n\t\t\treturn this.extractAllPoints( divisions );\n\n\t\t}\n\n\t} );\n\n\t// File:src/extras/curves/LineCurve.js\n\n\t/**************************************************************\n\t *\tLine\n\t **************************************************************/\n\n\tTHREE.LineCurve = function ( v1, v2 ) {\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t};\n\n\tTHREE.LineCurve.prototype = Object.create( THREE.Curve.prototype );\n\tTHREE.LineCurve.prototype.constructor = THREE.LineCurve;\n\n\tTHREE.LineCurve.prototype.getPoint = function ( t ) {\n\n\t\tif ( t === 1 ) {\n\n\t\t\treturn this.v2.clone();\n\n\t\t}\n\n\t\tvar point = this.v2.clone().sub( this.v1 );\n\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\treturn point;\n\n\t};\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\n\tTHREE.LineCurve.prototype.getPointAt = function ( u ) {\n\n\t\treturn this.getPoint( u );\n\n\t};\n\n\tTHREE.LineCurve.prototype.getTangent = function( t ) {\n\n\t\tvar tangent = this.v2.clone().sub( this.v1 );\n\n\t\treturn tangent.normalize();\n\n\t};\n\n\t// File:src/extras/curves/QuadraticBezierCurve.js\n\n\t/**************************************************************\n\t *\tQuadratic Bezier curve\n\t **************************************************************/\n\n\n\tTHREE.QuadraticBezierCurve = function ( v0, v1, v2 ) {\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t};\n\n\tTHREE.QuadraticBezierCurve.prototype = Object.create( THREE.Curve.prototype );\n\tTHREE.QuadraticBezierCurve.prototype.constructor = THREE.QuadraticBezierCurve;\n\n\n\tTHREE.QuadraticBezierCurve.prototype.getPoint = function ( t ) {\n\n\t\tvar b2 = THREE.ShapeUtils.b2;\n\n\t\treturn new THREE.Vector2(\n\t\t\tb2( t, this.v0.x, this.v1.x, this.v2.x ),\n\t\t\tb2( t, this.v0.y, this.v1.y, this.v2.y )\n\t\t);\n\n\t};\n\n\n\tTHREE.QuadraticBezierCurve.prototype.getTangent = function( t ) {\n\n\t\tvar tangentQuadraticBezier = THREE.CurveUtils.tangentQuadraticBezier;\n\n\t\treturn new THREE.Vector2(\n\t\t\ttangentQuadraticBezier( t, this.v0.x, this.v1.x, this.v2.x ),\n\t\t\ttangentQuadraticBezier( t, this.v0.y, this.v1.y, this.v2.y )\n\t\t).normalize();\n\n\t};\n\n\t// File:src/extras/curves/CubicBezierCurve.js\n\n\t/**************************************************************\n\t *\tCubic Bezier curve\n\t **************************************************************/\n\n\tTHREE.CubicBezierCurve = function ( v0, v1, v2, v3 ) {\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t};\n\n\tTHREE.CubicBezierCurve.prototype = Object.create( THREE.Curve.prototype );\n\tTHREE.CubicBezierCurve.prototype.constructor = THREE.CubicBezierCurve;\n\n\tTHREE.CubicBezierCurve.prototype.getPoint = function ( t ) {\n\n\t\tvar b3 = THREE.ShapeUtils.b3;\n\n\t\treturn new THREE.Vector2( \n\t\t\tb3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x ),\n\t\t\tb3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y )\n\t\t);\n\n\t};\n\n\tTHREE.CubicBezierCurve.prototype.getTangent = function( t ) {\n\n\t\tvar tangentCubicBezier = THREE.CurveUtils.tangentCubicBezier;\n\n\t\treturn new THREE.Vector2( \n\t\t\ttangentCubicBezier( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x ),\n\t\t\ttangentCubicBezier( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y )\n\t\t).normalize();\n\n\t};\n\n\t// File:src/extras/curves/SplineCurve.js\n\n\t/**************************************************************\n\t *\tSpline curve\n\t **************************************************************/\n\n\tTHREE.SplineCurve = function ( points /* array of Vector2 */ ) {\n\n\t\tthis.points = ( points == undefined ) ? [] : points;\n\n\t};\n\n\tTHREE.SplineCurve.prototype = Object.create( THREE.Curve.prototype );\n\tTHREE.SplineCurve.prototype.constructor = THREE.SplineCurve;\n\n\tTHREE.SplineCurve.prototype.getPoint = function ( t ) {\n\n\t\tvar points = this.points;\n\t\tvar point = ( points.length - 1 ) * t;\n\n\t\tvar intPoint = Math.floor( point );\n\t\tvar weight = point - intPoint;\n\n\t\tvar point0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tvar point1 = points[ intPoint ];\n\t\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tvar interpolate = THREE.CurveUtils.interpolate;\n\n\t\treturn new THREE.Vector2(\n\t\t\tinterpolate( point0.x, point1.x, point2.x, point3.x, weight ),\n\t\t\tinterpolate( point0.y, point1.y, point2.y, point3.y, weight )\n\t\t);\n\n\t};\n\n\t// File:src/extras/curves/EllipseCurve.js\n\n\t/**************************************************************\n\t *\tEllipse curve\n\t **************************************************************/\n\n\tTHREE.EllipseCurve = function( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tthis.aX = aX;\n\t\tthis.aY = aY;\n\n\t\tthis.xRadius = xRadius;\n\t\tthis.yRadius = yRadius;\n\n\t\tthis.aStartAngle = aStartAngle;\n\t\tthis.aEndAngle = aEndAngle;\n\n\t\tthis.aClockwise = aClockwise;\n\n\t\tthis.aRotation = aRotation || 0;\n\n\t};\n\n\tTHREE.EllipseCurve.prototype = Object.create( THREE.Curve.prototype );\n\tTHREE.EllipseCurve.prototype.constructor = THREE.EllipseCurve;\n\n\tTHREE.EllipseCurve.prototype.getPoint = function( t ) {\n\n\t\tvar twoPi = Math.PI * 2;\n\t\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tvar samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar angle = this.aStartAngle + t * deltaAngle;\n\t\tvar x = this.aX + this.xRadius * Math.cos( angle );\n\t\tvar y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tvar cos = Math.cos( this.aRotation );\n\t\t\tvar sin = Math.sin( this.aRotation );\n\n\t\t\tvar tx = x - this.aX;\n\t\t\tvar ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn new THREE.Vector2( x, y );\n\n\t};\n\n\t// File:src/extras/curves/ArcCurve.js\n\n\t/**************************************************************\n\t *\tArc curve\n\t **************************************************************/\n\n\tTHREE.ArcCurve = function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tTHREE.EllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t};\n\n\tTHREE.ArcCurve.prototype = Object.create( THREE.EllipseCurve.prototype );\n\tTHREE.ArcCurve.prototype.constructor = THREE.ArcCurve;\n\n\t// File:src/extras/curves/LineCurve3.js\n\n\t/**************************************************************\n\t *\tLine3D\n\t **************************************************************/\n\n\tTHREE.LineCurve3 = THREE.Curve.create(\n\n\t\tfunction ( v1, v2 ) {\n\n\t\t\tthis.v1 = v1;\n\t\t\tthis.v2 = v2;\n\n\t\t},\n\n\t\tfunction ( t ) {\n\n\t\t\tif ( t === 1 ) {\n\n\t\t\t\treturn this.v2.clone();\n\n\t\t\t}\n\n\t\t\tvar vector = new THREE.Vector3();\n\n\t\t\tvector.subVectors( this.v2, this.v1 ); // diff\n\t\t\tvector.multiplyScalar( t );\n\t\t\tvector.add( this.v1 );\n\n\t\t\treturn vector;\n\n\t\t}\n\n\t);\n\n\t// File:src/extras/curves/QuadraticBezierCurve3.js\n\n\t/**************************************************************\n\t *\tQuadratic Bezier 3D curve\n\t **************************************************************/\n\n\tTHREE.QuadraticBezierCurve3 = THREE.Curve.create(\n\n\t\tfunction ( v0, v1, v2 ) {\n\n\t\t\tthis.v0 = v0;\n\t\t\tthis.v1 = v1;\n\t\t\tthis.v2 = v2;\n\n\t\t},\n\n\t\tfunction ( t ) {\n\n\t\t\tvar b2 = THREE.ShapeUtils.b2;\t\t\n\n\t\t\treturn new THREE.Vector3(\n\t\t\t\tb2( t, this.v0.x, this.v1.x, this.v2.x ),\n\t\t\t\tb2( t, this.v0.y, this.v1.y, this.v2.y ),\n\t\t\t\tb2( t, this.v0.z, this.v1.z, this.v2.z )\n\t\t\t);\n\n\t\t}\n\n\t);\n\n\t// File:src/extras/curves/CubicBezierCurve3.js\n\n\t/**************************************************************\n\t *\tCubic Bezier 3D curve\n\t **************************************************************/\n\n\tTHREE.CubicBezierCurve3 = THREE.Curve.create(\n\n\t\tfunction ( v0, v1, v2, v3 ) {\n\n\t\t\tthis.v0 = v0;\n\t\t\tthis.v1 = v1;\n\t\t\tthis.v2 = v2;\n\t\t\tthis.v3 = v3;\n\n\t\t},\n\n\t\tfunction ( t ) {\n\n\t\t\tvar b3 = THREE.ShapeUtils.b3;\n\n\t\t\treturn new THREE.Vector3(\n\t\t\t\tb3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x ),\n\t\t\t\tb3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y ),\n\t\t\t\tb3( t, this.v0.z, this.v1.z, this.v2.z, this.v3.z )\n\t\t\t);\n\n\t\t}\n\n\t);\n\n\t// File:src/extras/curves/SplineCurve3.js\n\n\t/**************************************************************\n\t *\tSpline 3D curve\n\t **************************************************************/\n\n\n\tTHREE.SplineCurve3 = THREE.Curve.create(\n\n\t\tfunction ( points /* array of Vector3 */ ) {\n\n\t\t\tconsole.warn( 'THREE.SplineCurve3 will be deprecated. Please use THREE.CatmullRomCurve3' );\n\t\t\tthis.points = ( points == undefined ) ? [] : points;\n\n\t\t},\n\n\t\tfunction ( t ) {\n\n\t\t\tvar points = this.points;\n\t\t\tvar point = ( points.length - 1 ) * t;\n\n\t\t\tvar intPoint = Math.floor( point );\n\t\t\tvar weight = point - intPoint;\n\n\t\t\tvar point0 = points[ intPoint == 0 ? intPoint : intPoint - 1 ];\n\t\t\tvar point1 = points[ intPoint ];\n\t\t\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\t\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\t\tvar interpolate = THREE.CurveUtils.interpolate;\n\n\t\t\treturn new THREE.Vector3(\n\t\t\t\tinterpolate( point0.x, point1.x, point2.x, point3.x, weight ),\n\t\t\t\tinterpolate( point0.y, point1.y, point2.y, point3.y, weight ),\n\t\t\t\tinterpolate( point0.z, point1.z, point2.z, point3.z, weight )\n\t\t\t);\n\n\t\t}\n\n\t);\n\n\t// File:src/extras/curves/CatmullRomCurve3.js\n\n\t/**\n\t * @author zz85 https://github.com/zz85\n\t *\n\t * Centripetal CatmullRom Curve - which is useful for avoiding\n\t * cusps and self-intersections in non-uniform catmull rom curves.\n\t * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n\t *\n\t * curve.type accepts centripetal(default), chordal and catmullrom\n\t * curve.tension is used for catmullrom which defaults to 0.5\n\t */\n\n\tTHREE.CatmullRomCurve3 = ( function() {\n\n\t\tvar\n\t\t\ttmp = new THREE.Vector3(),\n\t\t\tpx = new CubicPoly(),\n\t\t\tpy = new CubicPoly(),\n\t\t\tpz = new CubicPoly();\n\n\t\t/*\n\t\tBased on an optimized c++ solution in\n\t\t - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n\t\t - http://ideone.com/NoEbVM\n\n\t\tThis CubicPoly class could be used for reusing some variables and calculations,\n\t\tbut for three.js curve use, it could be possible inlined and flatten into a single function call\n\t\twhich can be placed in CurveUtils.\n\t\t*/\n\n\t\tfunction CubicPoly() {\n\n\t\t}\n\n\t\t/*\n\t\t * Compute coefficients for a cubic polynomial\n\t\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t\t * such that\n\t\t *   p(0) = x0, p(1) = x1\n\t\t *  and\n\t\t *   p'(0) = t0, p'(1) = t1.\n\t\t */\n\t\tCubicPoly.prototype.init = function( x0, x1, t0, t1 ) {\n\n\t\t\tthis.c0 = x0;\n\t\t\tthis.c1 = t0;\n\t\t\tthis.c2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\t\tthis.c3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t\t};\n\n\t\tCubicPoly.prototype.initNonuniformCatmullRom = function( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\t// initCubicPoly\n\t\t\tthis.init( x1, x2, t1, t2 );\n\n\t\t};\n\n\t\t// standard Catmull-Rom spline: interpolate between x1 and x2 with previous/following points x1/x4\n\t\tCubicPoly.prototype.initCatmullRom = function( x0, x1, x2, x3, tension ) {\n\n\t\t\tthis.init( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t};\n\n\t\tCubicPoly.prototype.calc = function( t ) {\n\n\t\t\tvar t2 = t * t;\n\t\t\tvar t3 = t2 * t;\n\t\t\treturn this.c0 + this.c1 * t + this.c2 * t2 + this.c3 * t3;\n\n\t\t};\n\n\t\t// Subclass Three.js curve\n\t\treturn THREE.Curve.create(\n\n\t\t\tfunction ( p /* array of Vector3 */ ) {\n\n\t\t\t\tthis.points = p || [];\n\t\t\t\tthis.closed = false;\n\n\t\t\t},\n\n\t\t\tfunction ( t ) {\n\n\t\t\t\tvar points = this.points,\n\t\t\t\t\tpoint, intPoint, weight, l;\n\n\t\t\t\tl = points.length;\n\n\t\t\t\tif ( l < 2 ) console.log( 'duh, you need at least 2 points' );\n\n\t\t\t\tpoint = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\t\t\tintPoint = Math.floor( point );\n\t\t\t\tweight = point - intPoint;\n\n\t\t\t\tif ( this.closed ) {\n\n\t\t\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / points.length ) + 1 ) * points.length;\n\n\t\t\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\t\t\tintPoint = l - 2;\n\t\t\t\t\tweight = 1;\n\n\t\t\t\t}\n\n\t\t\t\tvar p0, p1, p2, p3; // 4 points\n\n\t\t\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// extrapolate first point\n\t\t\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\t\t\tp0 = tmp;\n\n\t\t\t\t}\n\n\t\t\t\tp1 = points[ intPoint % l ];\n\t\t\t\tp2 = points[ ( intPoint + 1 ) % l ];\n\n\t\t\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// extrapolate last point\n\t\t\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\t\t\tp3 = tmp;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.type === undefined || this.type === 'centripetal' || this.type === 'chordal' ) {\n\n\t\t\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\t\t\tvar pow = this.type === 'chordal' ? 0.5 : 0.25;\n\t\t\t\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\t\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\t\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t\t\t// safety check for repeated points\n\t\t\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t\t\t} else if ( this.type === 'catmullrom' ) {\n\n\t\t\t\t\tvar tension = this.tension !== undefined ? this.tension : 0.5;\n\t\t\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, tension );\n\t\t\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, tension );\n\t\t\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, tension );\n\n\t\t\t\t}\n\n\t\t\t\tvar v = new THREE.Vector3(\n\t\t\t\t\tpx.calc( weight ),\n\t\t\t\t\tpy.calc( weight ),\n\t\t\t\t\tpz.calc( weight )\n\t\t\t\t);\n\n\t\t\t\treturn v;\n\n\t\t\t}\n\n\t\t);\n\n\t} )();\n\n\t// File:src/extras/curves/ClosedSplineCurve3.js\n\n\t/**************************************************************\n\t *\tClosed Spline 3D curve\n\t **************************************************************/\n\n\n\tTHREE.ClosedSplineCurve3 = function ( points ) {\n\n\t\tconsole.warn( 'THREE.ClosedSplineCurve3 has been deprecated. Please use THREE.CatmullRomCurve3.' );\n\n\t\tTHREE.CatmullRomCurve3.call( this, points );\n\t\tthis.type = 'catmullrom';\n\t\tthis.closed = true;\n\n\t};\n\n\tTHREE.ClosedSplineCurve3.prototype = Object.create( THREE.CatmullRomCurve3.prototype );\n\n\t// File:src/extras/geometries/BoxGeometry.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Cube.as\n\t */\n\n\tTHREE.BoxGeometry = function ( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\t\tTHREE.Geometry.call( this );\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tthis.fromBufferGeometry( new THREE.BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) );\n\t\tthis.mergeVertices();\n\n\t};\n\n\tTHREE.BoxGeometry.prototype = Object.create( THREE.Geometry.prototype );\n\tTHREE.BoxGeometry.prototype.constructor = THREE.BoxGeometry;\n\n\tTHREE.CubeGeometry = THREE.BoxGeometry;\n\n\t// File:src/extras/geometries/BoxBufferGeometry.js\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tTHREE.BoxBufferGeometry = function ( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\t\tTHREE.BufferGeometry.call( this );\n\n\t\tthis.type = 'BoxBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tvar scope = this;\n\n\t\t// segments\n\t\twidthSegments = Math.floor( widthSegments ) || 1;\n\t\theightSegments = Math.floor( heightSegments ) || 1;\n\t\tdepthSegments = Math.floor( depthSegments ) || 1;\n\n\t\t// these are used to calculate buffer length\n\t\tvar vertexCount = calculateVertexCount( widthSegments, heightSegments, depthSegments );\n\t\tvar indexCount = calculateIndexCount( widthSegments, heightSegments, depthSegments );\n\n\t\t// buffers\n\t\tvar indices = new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount );\n\t\tvar vertices = new Float32Array( vertexCount * 3 );\n\t\tvar normals = new Float32Array( vertexCount * 3 );\n\t\tvar uvs = new Float32Array( vertexCount * 2 );\n\n\t\t// offset variables\n\t\tvar vertexBufferOffset = 0;\n\t\tvar uvBufferOffset = 0;\n\t\tvar indexBufferOffset = 0;\n\t\tvar numberOfVertices = 0;\n\n\t\t// group variables\n\t\tvar groupStart = 0;\n\n\t\t// build each side of the box geometry\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height,   width,  depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x',   1, - 1, depth, height, - width,  depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y',   1,   1, width, depth,    height, widthSegments, depthSegments,  2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y',   1, - 1, width, depth,  - height, widthSegments, depthSegments,  3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z',   1, - 1, width, height,   depth,  widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth,  widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\t\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ) );\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\n\n\t\t// helper functions\n\n\t\tfunction calculateVertexCount ( w, h, d ) {\n\n\t\t\tvar vertices = 0;\n\n\t\t\t// calculate the amount of vertices for each side (plane)\n\t\t\tvertices += (w + 1) * (h + 1) * 2; // xy\n\t\t\tvertices += (w + 1) * (d + 1) * 2; // xz\n\t\t\tvertices += (d + 1) * (h + 1) * 2; // zy\n\n\t\t\treturn vertices;\n\n\t\t}\n\n\t\tfunction calculateIndexCount ( w, h, d ) {\n\n\t\t\tvar index = 0;\n\n\t\t\t// calculate the amount of squares for each side\n\t\t\tindex += w * h * 2; // xy\n\t\t\tindex += w * d * 2; // xz\n\t\t\tindex += d * h * 2; // zy\n\n\t\t\treturn index * 6; // two triangles per square => six vertices per square\n\n\t\t}\n\n\t\tfunction buildPlane ( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tvar segmentWidth\t= width / gridX;\n\t\t\tvar segmentHeight = height / gridY;\n\n\t\t\tvar widthHalf = width / 2;\n\t\t\tvar heightHalf = height / 2;\n\t\t\tvar depthHalf = depth / 2;\n\n\t\t\tvar gridX1 = gridX + 1;\n\t\t\tvar gridY1 = gridY + 1;\n\n\t\t\tvar vertexCounter = 0;\n\t\t\tvar groupCount = 0;\n\n\t\t\tvar vector = new THREE.Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( var iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tvar y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( var ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tvar x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\t\t\t\t\tvertices[ vertexBufferOffset ] = vector.x;\n\t\t\t\t\tvertices[ vertexBufferOffset + 1 ] = vector.y;\n\t\t\t\t\tvertices[ vertexBufferOffset + 2 ] = vector.z;\n\n\t\t\t\t\t// set values to correct vector component\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\t\t\t\t\tnormals[ vertexBufferOffset ] = vector.x;\n\t\t\t\t\tnormals[ vertexBufferOffset + 1 ] = vector.y;\n\t\t\t\t\tnormals[ vertexBufferOffset + 2 ] = vector.z;\n\n\t\t\t\t\t// uvs\n\t\t\t\t\tuvs[ uvBufferOffset ] = ix / gridX;\n\t\t\t\t\tuvs[ uvBufferOffset + 1 ] = 1 - ( iy / gridY );\n\n\t\t\t\t\t// update offsets and counters\n\t\t\t\t\tvertexBufferOffset += 3;\n\t\t\t\t\tuvBufferOffset += 2;\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\t// indices\n\t\t\t\t\tvar a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tvar b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tvar c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tvar d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// face one\n\t\t\t\t\tindices[ indexBufferOffset ] = a;\n\t\t\t\t\tindices[ indexBufferOffset + 1 ] = b;\n\t\t\t\t\tindices[ indexBufferOffset + 2 ] = d;\n\n\t\t\t\t\t// face two\n\t\t\t\t\tindices[ indexBufferOffset + 3 ] = b;\n\t\t\t\t\tindices[ indexBufferOffset + 4 ] = c;\n\t\t\t\t\tindices[ indexBufferOffset + 5 ] = d;\n\n\t\t\t\t\t// update offsets and counters\n\t\t\t\t\tindexBufferOffset += 6;\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t};\n\n\tTHREE.BoxBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\n\tTHREE.BoxBufferGeometry.prototype.constructor = THREE.BoxBufferGeometry;\n\n\t// File:src/extras/geometries/CircleGeometry.js\n\n\t/**\n\t * @author hughes\n\t */\n\n\tTHREE.CircleGeometry = function ( radius, segments, thetaStart, thetaLength ) {\n\n\t\tTHREE.Geometry.call( this );\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new THREE.CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) );\n\n\t};\n\n\tTHREE.CircleGeometry.prototype = Object.create( THREE.Geometry.prototype );\n\tTHREE.CircleGeometry.prototype.constructor = THREE.CircleGeometry;\n\n\t// File:src/extras/geometries/CircleBufferGeometry.js\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tTHREE.CircleBufferGeometry = function ( radius, segments, thetaStart, thetaLength ) {\n\n\t\tTHREE.BufferGeometry.call( this );\n\n\t\tthis.type = 'CircleBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tradius = radius || 50;\n\t\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\n\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t\tvar vertices = segments + 2;\n\n\t\tvar positions = new Float32Array( vertices * 3 );\n\t\tvar normals = new Float32Array( vertices * 3 );\n\t\tvar uvs = new Float32Array( vertices * 2 );\n\n\t\t// center data is already zero, but need to set a few extras\n\t\tnormals[ 2 ] = 1.0;\n\t\tuvs[ 0 ] = 0.5;\n\t\tuvs[ 1 ] = 0.5;\n\n\t\tfor ( var s = 0, i = 3, ii = 2 ; s <= segments; s ++, i += 3, ii += 2 ) {\n\n\t\t\tvar segment = thetaStart + s / segments * thetaLength;\n\n\t\t\tpositions[ i ] = radius * Math.cos( segment );\n\t\t\tpositions[ i + 1 ] = radius * Math.sin( segment );\n\n\t\t\tnormals[ i + 2 ] = 1; // normal z\n\n\t\t\tuvs[ ii ] = ( positions[ i ] / radius + 1 ) / 2;\n\t\t\tuvs[ ii + 1 ] = ( positions[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t}\n\n\t\tvar indices = [];\n\n\t\tfor ( var i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\tthis.setIndex( new THREE.BufferAttribute( new Uint16Array( indices ), 1 ) );\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\n\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\n\n\t\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\n\n\t};\n\n\tTHREE.CircleBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\n\tTHREE.CircleBufferGeometry.prototype.constructor = THREE.CircleBufferGeometry;\n\n\t// File:src/extras/geometries/CylinderBufferGeometry.js\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tTHREE.CylinderBufferGeometry = function( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tTHREE.BufferGeometry.call( this );\n\n\t\tthis.type = 'CylinderBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tvar scope = this;\n\n\t\tradiusTop = radiusTop !== undefined ? radiusTop : 20;\n\t\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 20;\n\t\theight = height !== undefined ? height : 100;\n\n\t\tradialSegments = Math.floor( radialSegments ) || 8;\n\t\theightSegments = Math.floor( heightSegments ) || 1;\n\n\t\topenEnded = openEnded !== undefined ? openEnded : false;\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0.0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : 2.0 * Math.PI;\n\n\t\t// used to calculate buffer length\n\n\t\tvar nbCap = 0;\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) nbCap ++;\n\t\t\tif ( radiusBottom > 0 ) nbCap ++;\n\n\t\t}\n\n\t\tvar vertexCount = calculateVertexCount();\n\t\tvar indexCount = calculateIndexCount();\n\n\t\t// buffers\n\n\t\tvar indices = new THREE.BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ), 1 );\n\t\tvar vertices = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\n\t\tvar normals = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\n\t\tvar uvs = new THREE.BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\n\n\t\t// helper variables\n\n\t\tvar index = 0,\n\t\t    indexOffset = 0,\n\t\t    indexArray = [],\n\t\t    halfHeight = height / 2;\n\n\t\t// group variables\n\t\tvar groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', vertices );\n\t\tthis.addAttribute( 'normal', normals );\n\t\tthis.addAttribute( 'uv', uvs );\n\n\t\t// helper functions\n\n\t\tfunction calculateVertexCount() {\n\n\t\t\tvar count = ( radialSegments + 1 ) * ( heightSegments + 1 );\n\n\t\t\tif ( openEnded === false ) {\n\n\t\t\t\tcount += ( ( radialSegments + 1 ) * nbCap ) + ( radialSegments * nbCap );\n\n\t\t\t}\n\n\t\t\treturn count;\n\n\t\t}\n\n\t\tfunction calculateIndexCount() {\n\n\t\t\tvar count = radialSegments * heightSegments * 2 * 3;\n\n\t\t\tif ( openEnded === false ) {\n\n\t\t\t\tcount += radialSegments * nbCap * 3;\n\n\t\t\t}\n\n\t\t\treturn count;\n\n\t\t}\n\n\t\tfunction generateTorso() {\n\n\t\t\tvar x, y;\n\t\t\tvar normal = new THREE.Vector3();\n\t\t\tvar vertex = new THREE.Vector3();\n\n\t\t\tvar groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tvar tanTheta = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tvar indexRow = [];\n\n\t\t\t\tvar v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\t\t\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tvar u = x / radialSegments;\n\n\t\t\t\t\t// vertex\n\t\t\t\t\tvertex.x = radius * Math.sin( u * thetaLength + thetaStart );\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * Math.cos( u * thetaLength + thetaStart );\n\t\t\t\t\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\t\t\t\t\tnormal.copy( vertex );\n\n\t\t\t\t\t// handle special case if radiusTop/radiusBottom is zero\n\n\t\t\t\t\tif ( ( radiusTop === 0 && y === 0 ) || ( radiusBottom === 0 && y === heightSegments ) ) {\n\n\t\t\t\t\t\tnormal.x = Math.sin( u * thetaLength + thetaStart );\n\t\t\t\t\t\tnormal.z = Math.cos( u * thetaLength + thetaStart );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tnormal.setY( Math.sqrt( normal.x * normal.x + normal.z * normal.z ) * tanTheta ).normalize();\n\t\t\t\t\tnormals.setXYZ( index, normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\t\t\t\t\tuvs.setXY( index, u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\t\t\t\t\tindexRow.push( index );\n\n\t\t\t\t\t// increase index\n\t\t\t\t\tindex ++;\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\t\t\t\t\tvar i1 = indexArray[ y ][ x ];\n\t\t\t\t\tvar i2 = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tvar i3 = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tvar i4 = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// face one\n\t\t\t\t\tindices.setX( indexOffset, i1 ); indexOffset ++;\n\t\t\t\t\tindices.setX( indexOffset, i2 ); indexOffset ++;\n\t\t\t\t\tindices.setX( indexOffset, i4 ); indexOffset ++;\n\n\t\t\t\t\t// face two\n\t\t\t\t\tindices.setX( indexOffset, i2 ); indexOffset ++;\n\t\t\t\t\tindices.setX( indexOffset, i3 ); indexOffset ++;\n\t\t\t\t\tindices.setX( indexOffset, i4 ); indexOffset ++;\n\n\t\t\t\t\t// update counters\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\tvar x, centerIndexStart, centerIndexEnd;\n\n\t\t\tvar uv = new THREE.Vector2();\n\t\t\tvar vertex = new THREE.Vector3();\n\n\t\t\tvar groupCount = 0;\n\n\t\t\tvar radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tvar sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// save the index of the first center vertex\n\t\t\tcenterIndexStart = index;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\t\t\t\tvertices.setXYZ( index, 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\t\t\t\tnormals.setXYZ( index, 0, sign, 0 );\n\n\t\t\t\t// uv\n\t\t\t\tuv.x = 0.5;\n\t\t\t\tuv.y = 0.5;\n\n\t\t\t\tuvs.setXY( index, uv.x, uv.y );\n\n\t\t\t\t// increase index\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\t\t\tcenterIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tvar u = x / radialSegments;\n\t\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\t\tvar cosTheta = Math.cos( theta );\n\t\t\t\tvar sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\t\t\t\tnormals.setXYZ( index, 0, sign, 0 );\n\n\t\t\t\t// uv\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.setXY( index, uv.x, uv.y );\n\n\t\t\t\t// increase index\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tvar c = centerIndexStart + x;\n\t\t\t\tvar i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\t\t\t\t\tindices.setX( indexOffset, i ); indexOffset ++;\n\t\t\t\t\tindices.setX( indexOffset, i + 1 ); indexOffset ++;\n\t\t\t\t\tindices.setX( indexOffset, c ); indexOffset ++;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\t\t\t\t\tindices.setX( indexOffset, i + 1 ); indexOffset ++;\n\t\t\t\t\tindices.setX( indexOffset, i ); indexOffset ++;\n\t\t\t\t\tindices.setX( indexOffset, c ); indexOffset ++;\n\n\t\t\t\t}\n\n\t\t\t\t// update counters\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t};\n\n\tTHREE.CylinderBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\n\tTHREE.CylinderBufferGeometry.prototype.constructor = THREE.CylinderBufferGeometry;\n\n\t// File:src/extras/geometries/CylinderGeometry.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.CylinderGeometry = function ( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tTHREE.Geometry.call( this );\n\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new THREE.CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) );\n\t\tthis.mergeVertices();\n\n\t};\n\n\tTHREE.CylinderGeometry.prototype = Object.create( THREE.Geometry.prototype );\n\tTHREE.CylinderGeometry.prototype.constructor = THREE.CylinderGeometry;\n\n\t// File:src/extras/geometries/ConeBufferGeometry.js\n\n\t/*\n\t * @author: abelnation / http://github.com/abelnation\n\t */\n\n\tTHREE.ConeBufferGeometry = function (\n\t\tradius, height,\n\t\tradialSegments, heightSegments,\n\t\topenEnded, thetaStart, thetaLength ) {\n\n\t\tTHREE.CylinderBufferGeometry.call( this,\n\t\t\t0, radius, height,\n\t\t\tradialSegments, heightSegments,\n\t\t\topenEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t};\n\n\tTHREE.ConeBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\n\tTHREE.ConeBufferGeometry.prototype.constructor = THREE.ConeBufferGeometry;\n\n\t// File:src/extras/geometries/ConeGeometry.js\n\n\t/**\n\t * @author abelnation / http://github.com/abelnation\n\t */\n\n\tTHREE.ConeGeometry = function (\n\t\tradius, height,\n\t\tradialSegments, heightSegments,\n\t\topenEnded, thetaStart, thetaLength ) {\n\n\t\tTHREE.CylinderGeometry.call( this,\n\t\t\t0, radius, height,\n\t\t\tradialSegments, heightSegments,\n\t\t\topenEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t};\n\n\tTHREE.ConeGeometry.prototype = Object.create( THREE.CylinderGeometry.prototype );\n\tTHREE.ConeGeometry.prototype.constructor = THREE.ConeGeometry;\n\n\t// File:src/extras/geometries/EdgesGeometry.js\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tTHREE.EdgesGeometry = function ( geometry, thresholdAngle ) {\n\n\t\tTHREE.BufferGeometry.call( this );\n\n\t\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\n\n\t\tvar thresholdDot = Math.cos( THREE.Math.DEG2RAD * thresholdAngle );\n\n\t\tvar edge = [ 0, 0 ], hash = {};\n\n\t\tfunction sortFunction( a, b ) {\n\n\t\t\treturn a - b;\n\n\t\t}\n\n\t\tvar keys = [ 'a', 'b', 'c' ];\n\n\t\tvar geometry2;\n\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\n\n\t\t\tgeometry2 = new THREE.Geometry();\n\t\t\tgeometry2.fromBufferGeometry( geometry );\n\n\t\t} else {\n\n\t\t\tgeometry2 = geometry.clone();\n\n\t\t}\n\n\t\tgeometry2.mergeVertices();\n\t\tgeometry2.computeFaceNormals();\n\n\t\tvar vertices = geometry2.vertices;\n\t\tvar faces = geometry2.faces;\n\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\t\tedge[ 0 ] = face[ keys[ j ] ];\n\t\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\t\tedge.sort( sortFunction );\n\n\t\t\t\tvar key = edge.toString();\n\n\t\t\t\tif ( hash[ key ] === undefined ) {\n\n\t\t\t\t\thash[ key ] = { vert1: edge[ 0 ], vert2: edge[ 1 ], face1: i, face2: undefined };\n\n\t\t\t\t} else {\n\n\t\t\t\t\thash[ key ].face2 = i;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar coords = [];\n\n\t\tfor ( var key in hash ) {\n\n\t\t\tvar h = hash[ key ];\n\n\t\t\tif ( h.face2 === undefined || faces[ h.face1 ].normal.dot( faces[ h.face2 ].normal ) <= thresholdDot ) {\n\n\t\t\t\tvar vertex = vertices[ h.vert1 ];\n\t\t\t\tcoords.push( vertex.x );\n\t\t\t\tcoords.push( vertex.y );\n\t\t\t\tcoords.push( vertex.z );\n\n\t\t\t\tvertex = vertices[ h.vert2 ];\n\t\t\t\tcoords.push( vertex.x );\n\t\t\t\tcoords.push( vertex.y );\n\t\t\t\tcoords.push( vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( new Float32Array( coords ), 3 ) );\n\n\t};\n\n\tTHREE.EdgesGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\n\tTHREE.EdgesGeometry.prototype.constructor = THREE.EdgesGeometry;\n\n\t// File:src/extras/geometries/ExtrudeGeometry.js\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t *\n\t * Creates extruded geometry from a path shape.\n\t *\n\t * parameters = {\n\t *\n\t *  curveSegments: <int>, // number of points on the curves\n\t *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n\t *  amount: <int>, // Depth to extrude the shape\n\t *\n\t *  bevelEnabled: <bool>, // turn on bevel\n\t *  bevelThickness: <float>, // how deep into the original shape bevel goes\n\t *  bevelSize: <float>, // how far from shape outline is bevel\n\t *  bevelSegments: <int>, // number of bevel layers\n\t *\n\t *  extrudePath: <THREE.CurvePath> // 3d spline path to extrude shape along. (creates Frames if .frames aren't defined)\n\t *  frames: <THREE.TubeGeometry.FrenetFrames> // containing arrays of tangents, normals, binormals\n\t *\n\t *  uvGenerator: <Object> // object that provides UV generator functions\n\t *\n\t * }\n\t **/\n\n\tTHREE.ExtrudeGeometry = function ( shapes, options ) {\n\n\t\tif ( typeof( shapes ) === \"undefined\" ) {\n\n\t\t\tshapes = [];\n\t\t\treturn;\n\n\t\t}\n\n\t\tTHREE.Geometry.call( this );\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tthis.addShapeList( shapes, options );\n\n\t\tthis.computeFaceNormals();\n\n\t\t// can't really use automatic vertex normals\n\t\t// as then front and back sides get smoothed too\n\t\t// should do separate smoothing just for sides\n\n\t\t//this.computeVertexNormals();\n\n\t\t//console.log( \"took\", ( Date.now() - startTime ) );\n\n\t};\n\n\tTHREE.ExtrudeGeometry.prototype = Object.create( THREE.Geometry.prototype );\n\tTHREE.ExtrudeGeometry.prototype.constructor = THREE.ExtrudeGeometry;\n\n\tTHREE.ExtrudeGeometry.prototype.addShapeList = function ( shapes, options ) {\n\n\t\tvar sl = shapes.length;\n\n\t\tfor ( var s = 0; s < sl; s ++ ) {\n\n\t\t\tvar shape = shapes[ s ];\n\t\t\tthis.addShape( shape, options );\n\n\t\t}\n\n\t};\n\n\tTHREE.ExtrudeGeometry.prototype.addShape = function ( shape, options ) {\n\n\t\tvar amount = options.amount !== undefined ? options.amount : 100;\n\n\t\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6; // 10\n\t\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2; // 8\n\t\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true; // false\n\n\t\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\n\t\tvar steps = options.steps !== undefined ? options.steps : 1;\n\n\t\tvar extrudePath = options.extrudePath;\n\t\tvar extrudePts, extrudeByPath = false;\n\n\t\t// Use default WorldUVGenerator if no UV generators are specified.\n\t\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : THREE.ExtrudeGeometry.WorldUVGenerator;\n\n\t\tvar splineTube, binormal, normal, position2;\n\t\tif ( extrudePath ) {\n\n\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\textrudeByPath = true;\n\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t// SETUP TNB variables\n\n\t\t\t// Reuse TNB from TubeGeomtry for now.\n\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\tsplineTube = options.frames !== undefined ? options.frames : new THREE.TubeGeometry.FrenetFrames( extrudePath, steps, false );\n\n\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\tbinormal = new THREE.Vector3();\n\t\t\tnormal = new THREE.Vector3();\n\t\t\tposition2 = new THREE.Vector3();\n\n\t\t}\n\n\t\t// Safeguards if bevels are not enabled\n\n\t\tif ( ! bevelEnabled ) {\n\n\t\t\tbevelSegments = 0;\n\t\t\tbevelThickness = 0;\n\t\t\tbevelSize = 0;\n\n\t\t}\n\n\t\t// Variables initialization\n\n\t\tvar ahole, h, hl; // looping of holes\n\t\tvar scope = this;\n\n\t\tvar shapesOffset = this.vertices.length;\n\n\t\tvar shapePoints = shape.extractPoints( curveSegments );\n\n\t\tvar vertices = shapePoints.shape;\n\t\tvar holes = shapePoints.holes;\n\n\t\tvar reverse = ! THREE.ShapeUtils.isClockWise( vertices );\n\n\t\tif ( reverse ) {\n\n\t\t\tvertices = vertices.reverse();\n\n\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\n\t\t\t\tif ( THREE.ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treverse = false; // If vertices are in order now, we shouldn't need to worry about them again (hopefully)!\n\n\t\t}\n\n\n\t\tvar faces = THREE.ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t/* Vertices */\n\n\t\tvar contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\n\t\t\tvertices = vertices.concat( ahole );\n\n\t\t}\n\n\n\t\tfunction scalePt2 ( pt, vec, size ) {\n\n\t\t\tif ( ! vec ) console.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\n\n\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\n\n\t\t}\n\n\t\tvar b, bs, t, z,\n\t\t\tvert, vlen = vertices.length,\n\t\t\tface, flen = faces.length;\n\n\n\t\t// Find directions for point movement\n\n\n\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t//\n\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\tvar v_trans_x, v_trans_y, shrink_by = 1;\t\t// resulting translation vector for inPt\n\n\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\tvar v_prev_x = inPt.x - inPrev.x, v_prev_y = inPt.y - inPrev.y;\n\t\t\tvar v_next_x = inNext.x - inPt.x, v_next_y = inNext.y - inPt.y;\n\n\t\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t// check for collinear edges\n\t\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t// not collinear\n\n\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\tvar sf = (  ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x    ) /\n\t\t\t\t\t\t  ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t//  but prevent crazy spikes\n\t\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\treturn\tnew THREE.Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\tvar direction_eq = false;\t\t// assumes: opposite\n\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\tv_trans_y =  v_prev_x;\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tnew THREE.Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t}\n\n\n\t\tvar contourMovements = [];\n\n\t\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\tif ( j === il ) j = 0;\n\t\t\tif ( k === il ) k = 0;\n\n\t\t\t//  (j)---(i)---(k)\n\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t}\n\n\t\tvar holesMovements = [], oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\n\t\t\toneHoleMovements = [];\n\n\t\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t}\n\n\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t}\n\n\n\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\tfor ( b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\tt = b / bevelSegments;\n\t\t\tz = bevelThickness * ( 1 - t );\n\n\t\t\t//z = bevelThickness * t;\n\t\t\tbs = bevelSize * ( Math.sin ( t * Math.PI / 2 ) ); // curved\n\t\t\t//bs = bevelSize * t; // linear\n\n\t\t\t// contract shape\n\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\tv( vert.x, vert.y,  - z );\n\n\t\t\t}\n\n\t\t\t// expand holes\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y,  - z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tbs = bevelSize;\n\n\t\t// Back facing vertices\n\n\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t} else {\n\n\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Add stepped vertices...\n\t\t// Including front facing vertices\n\n\t\tvar s;\n\n\t\tfor ( s = 1; s <= steps; s ++ ) {\n\n\t\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, amount / steps * s );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// Add bevel segments planes\n\n\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\tt = b / bevelSegments;\n\t\t\tz = bevelThickness * ( 1 - t );\n\t\t\t//bs = bevelSize * ( 1-Math.sin ( ( 1 - t ) * Math.PI/2 ) );\n\t\t\tbs = bevelSize * Math.sin ( t * Math.PI / 2 );\n\n\t\t\t// contract shape\n\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\tv( vert.x, vert.y,  amount + z );\n\n\t\t\t}\n\n\t\t\t// expand holes\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y,  amount + z );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t/* Faces */\n\n\t\t// Top and bottom faces\n\n\t\tbuildLidFaces();\n\n\t\t// Sides faces\n\n\t\tbuildSideFaces();\n\n\n\t\t/////  Internal functions\n\n\t\tfunction buildLidFaces() {\n\n\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\tvar layer = 0; // steps + 1\n\t\t\t\tvar offset = vlen * layer;\n\n\t\t\t\t// Bottom faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t}\n\n\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t// Top faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Bottom faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t}\n\n\t\t\t\t// Top faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Create faces for the z-sides of the shape\n\n\t\tfunction buildSideFaces() {\n\n\t\t\tvar layeroffset = 0;\n\t\t\tsidewalls( contour, layeroffset );\n\t\t\tlayeroffset += contour.length;\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t//, true\n\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\tvar j, k;\n\t\t\ti = contour.length;\n\n\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\tj = i;\n\t\t\t\tk = i - 1;\n\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\tvar s = 0, sl = steps  + bevelSegments * 2;\n\n\t\t\t\tfor ( s = 0; s < sl; s ++ ) {\n\n\t\t\t\t\tvar slen1 = vlen * s;\n\t\t\t\t\tvar slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\tvar a = layeroffset + j + slen1,\n\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\tf4( a, b, c, d, contour, s, sl, j, k );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tfunction v( x, y, z ) {\n\n\t\t\tscope.vertices.push( new THREE.Vector3( x, y, z ) );\n\n\t\t}\n\n\t\tfunction f3( a, b, c ) {\n\n\t\t\ta += shapesOffset;\n\t\t\tb += shapesOffset;\n\t\t\tc += shapesOffset;\n\n\t\t\tscope.faces.push( new THREE.Face3( a, b, c, null, null, 0 ) );\n\n\t\t\tvar uvs = uvgen.generateTopUV( scope, a, b, c );\n\n\t\t\tscope.faceVertexUvs[ 0 ].push( uvs );\n\n\t\t}\n\n\t\tfunction f4( a, b, c, d, wallContour, stepIndex, stepsLength, contourIndex1, contourIndex2 ) {\n\n\t\t\ta += shapesOffset;\n\t\t\tb += shapesOffset;\n\t\t\tc += shapesOffset;\n\t\t\td += shapesOffset;\n\n\t\t\tscope.faces.push( new THREE.Face3( a, b, d, null, null, 1 ) );\n\t\t\tscope.faces.push( new THREE.Face3( b, c, d, null, null, 1 ) );\n\n\t\t\tvar uvs = uvgen.generateSideWallUV( scope, a, b, c, d );\n\n\t\t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 0 ], uvs[ 1 ], uvs[ 3 ] ] );\n\t\t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 1 ], uvs[ 2 ], uvs[ 3 ] ] );\n\n\t\t}\n\n\t};\n\n\tTHREE.ExtrudeGeometry.WorldUVGenerator = {\n\n\t\tgenerateTopUV: function ( geometry, indexA, indexB, indexC ) {\n\n\t\t\tvar vertices = geometry.vertices;\n\n\t\t\tvar a = vertices[ indexA ];\n\t\t\tvar b = vertices[ indexB ];\n\t\t\tvar c = vertices[ indexC ];\n\n\t\t\treturn [\n\t\t\t\tnew THREE.Vector2( a.x, a.y ),\n\t\t\t\tnew THREE.Vector2( b.x, b.y ),\n\t\t\t\tnew THREE.Vector2( c.x, c.y )\n\t\t\t];\n\n\t\t},\n\n\t\tgenerateSideWallUV: function ( geometry, indexA, indexB, indexC, indexD ) {\n\n\t\t\tvar vertices = geometry.vertices;\n\n\t\t\tvar a = vertices[ indexA ];\n\t\t\tvar b = vertices[ indexB ];\n\t\t\tvar c = vertices[ indexC ];\n\t\t\tvar d = vertices[ indexD ];\n\n\t\t\tif ( Math.abs( a.y - b.y ) < 0.01 ) {\n\n\t\t\t\treturn [\n\t\t\t\t\tnew THREE.Vector2( a.x, 1 - a.z ),\n\t\t\t\t\tnew THREE.Vector2( b.x, 1 - b.z ),\n\t\t\t\t\tnew THREE.Vector2( c.x, 1 - c.z ),\n\t\t\t\t\tnew THREE.Vector2( d.x, 1 - d.z )\n\t\t\t\t];\n\n\t\t\t} else {\n\n\t\t\t\treturn [\n\t\t\t\t\tnew THREE.Vector2( a.y, 1 - a.z ),\n\t\t\t\t\tnew THREE.Vector2( b.y, 1 - b.z ),\n\t\t\t\t\tnew THREE.Vector2( c.y, 1 - c.z ),\n\t\t\t\t\tnew THREE.Vector2( d.y, 1 - d.z )\n\t\t\t\t];\n\n\t\t\t}\n\n\t\t}\n\t};\n\n\t// File:src/extras/geometries/ShapeGeometry.js\n\n\t/**\n\t * @author jonobr1 / http://jonobr1.com\n\t *\n\t * Creates a one-sided polygonal geometry from a path shape. Similar to\n\t * ExtrudeGeometry.\n\t *\n\t * parameters = {\n\t *\n\t *\tcurveSegments: <int>, // number of points on the curves. NOT USED AT THE MOMENT.\n\t *\n\t *\tmaterial: <int> // material index for front and back faces\n\t *\tuvGenerator: <Object> // object that provides UV generator functions\n\t *\n\t * }\n\t **/\n\n\tTHREE.ShapeGeometry = function ( shapes, options ) {\n\n\t\tTHREE.Geometry.call( this );\n\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tif ( Array.isArray( shapes ) === false ) shapes = [ shapes ];\n\n\t\tthis.addShapeList( shapes, options );\n\n\t\tthis.computeFaceNormals();\n\n\t};\n\n\tTHREE.ShapeGeometry.prototype = Object.create( THREE.Geometry.prototype );\n\tTHREE.ShapeGeometry.prototype.constructor = THREE.ShapeGeometry;\n\n\t/**\n\t * Add an array of shapes to THREE.ShapeGeometry.\n\t */\n\tTHREE.ShapeGeometry.prototype.addShapeList = function ( shapes, options ) {\n\n\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tthis.addShape( shapes[ i ], options );\n\n\t\t}\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * Adds a shape to THREE.ShapeGeometry, based on THREE.ExtrudeGeometry.\n\t */\n\tTHREE.ShapeGeometry.prototype.addShape = function ( shape, options ) {\n\n\t\tif ( options === undefined ) options = {};\n\t\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\n\t\tvar material = options.material;\n\t\tvar uvgen = options.UVGenerator === undefined ? THREE.ExtrudeGeometry.WorldUVGenerator : options.UVGenerator;\n\n\t\t//\n\n\t\tvar i, l, hole;\n\n\t\tvar shapesOffset = this.vertices.length;\n\t\tvar shapePoints = shape.extractPoints( curveSegments );\n\n\t\tvar vertices = shapePoints.shape;\n\t\tvar holes = shapePoints.holes;\n\n\t\tvar reverse = ! THREE.ShapeUtils.isClockWise( vertices );\n\n\t\tif ( reverse ) {\n\n\t\t\tvertices = vertices.reverse();\n\n\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe...\n\n\t\t\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\n\n\t\t\t\thole = holes[ i ];\n\n\t\t\t\tif ( THREE.ShapeUtils.isClockWise( hole ) ) {\n\n\t\t\t\t\tholes[ i ] = hole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treverse = false;\n\n\t\t}\n\n\t\tvar faces = THREE.ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t// Vertices\n\n\t\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\n\n\t\t\thole = holes[ i ];\n\t\t\tvertices = vertices.concat( hole );\n\n\t\t}\n\n\t\t//\n\n\t\tvar vert, vlen = vertices.length;\n\t\tvar face, flen = faces.length;\n\n\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\tvert = vertices[ i ];\n\n\t\t\tthis.vertices.push( new THREE.Vector3( vert.x, vert.y, 0 ) );\n\n\t\t}\n\n\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\tface = faces[ i ];\n\n\t\t\tvar a = face[ 0 ] + shapesOffset;\n\t\t\tvar b = face[ 1 ] + shapesOffset;\n\t\t\tvar c = face[ 2 ] + shapesOffset;\n\n\t\t\tthis.faces.push( new THREE.Face3( a, b, c, null, null, material ) );\n\t\t\tthis.faceVertexUvs[ 0 ].push( uvgen.generateTopUV( this, a, b, c ) );\n\n\t\t}\n\n\t};\n\n\t// File:src/extras/geometries/LatheBufferGeometry.js\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t // points - to create a closed torus, one must use a set of points\n\t //    like so: [ a, b, c, d, a ], see first is the same as last.\n\t // segments - the number of circumference segments to create\n\t // phiStart - the starting radian\n\t // phiLength - the radian (0 to 2PI) range of the lathed section\n\t //    2PI is a closed lathe, less than 2PI is a portion.\n\n\tTHREE.LatheBufferGeometry = function ( points, segments, phiStart, phiLength ) {\n\n\t\tTHREE.BufferGeometry.call( this );\n\n\t\tthis.type = 'LatheBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments ) || 12;\n\t\tphiStart = phiStart || 0;\n\t\tphiLength = phiLength || Math.PI * 2;\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\t\tphiLength = THREE.Math.clamp( phiLength, 0, Math.PI * 2 );\n\n\t\t// these are used to calculate buffer length\n\t\tvar vertexCount = ( segments + 1 ) * points.length;\n\t\tvar indexCount = segments * points.length * 2 * 3;\n\n\t\t// buffers\n\t\tvar indices = new THREE.BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ) , 1 );\n\t\tvar vertices = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\n\t\tvar uvs = new THREE.BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\n\n\t\t// helper variables\n\t\tvar index = 0, indexOffset = 0, base;\n\t\tvar inversePointLength = 1.0 / ( points.length - 1 );\n\t\tvar inverseSegments = 1.0 / segments;\n\t\tvar vertex = new THREE.Vector3();\n\t\tvar uv = new THREE.Vector2();\n\t\tvar i, j;\n\n\t\t// generate vertices and uvs\n\n\t\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\t\tvar phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tvar sin = Math.sin( phi );\n\t\t\tvar cos = Math.cos( phi );\n\n\t\t\tfor ( j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\t\t\t\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\t\t\t\tuvs.setXY( index, uv.x, uv.y );\n\n\t\t\t\t// increase index\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tbase = j + i * points.length;\n\n\t\t\t\t// indices\n\t\t\t\tvar a = base;\n\t\t\t\tvar b = base + points.length;\n\t\t\t\tvar c = base + points.length + 1;\n\t\t\t\tvar d = base + 1;\n\n\t\t\t\t// face one\n\t\t\t\tindices.setX( indexOffset, a ); indexOffset++;\n\t\t\t\tindices.setX( indexOffset, b ); indexOffset++;\n\t\t\t\tindices.setX( indexOffset, d ); indexOffset++;\n\n\t\t\t\t// face two\n\t\t\t\tindices.setX( indexOffset, b ); indexOffset++;\n\t\t\t\tindices.setX( indexOffset, c ); indexOffset++;\n\t\t\t\tindices.setX( indexOffset, d ); indexOffset++;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', vertices );\n\t\tthis.addAttribute( 'uv', uvs );\n\n\t\t// generate normals\n\n\t\tthis.computeVertexNormals();\n\n\t\t// if the geometry is closed, we need to average the normals along the seam.\n\t\t// because the corresponding vertices are identical (but still have different UVs).\n\n\t\tif( phiLength === Math.PI * 2 ) {\n\n\t\t\tvar normals = this.attributes.normal.array;\n\t\t\tvar n1 = new THREE.Vector3();\n\t\t\tvar n2 = new THREE.Vector3();\n\t\t\tvar n = new THREE.Vector3();\n\n\t\t\t// this is the buffer offset for the last line of vertices\n\t\t\tbase = segments * points.length * 3;\n\n\t\t\tfor( i = 0, j = 0; i < points.length; i ++, j += 3 ) {\n\n\t\t\t\t// select the normal of the vertex in the first line\n\t\t\t\tn1.x = normals[ j + 0 ];\n\t\t\t\tn1.y = normals[ j + 1 ];\n\t\t\t\tn1.z = normals[ j + 2 ];\n\n\t\t\t\t// select the normal of the vertex in the last line\n\t\t\t\tn2.x = normals[ base + j + 0 ];\n\t\t\t\tn2.y = normals[ base + j + 1 ];\n\t\t\t\tn2.z = normals[ base + j + 2 ];\n\n\t\t\t\t// average normals\n\t\t\t\tn.addVectors( n1, n2 ).normalize();\n\n\t\t\t\t// assign the new values to both normals\n\t\t\t\tnormals[ j + 0 ] = normals[ base + j + 0 ] = n.x;\n\t\t\t\tnormals[ j + 1 ] = normals[ base + j + 1 ] = n.y;\n\t\t\t\tnormals[ j + 2 ] = normals[ base + j + 2 ] = n.z;\n\n\t\t\t} // next row\n\n\t\t}\n\n\t};\n\n\tTHREE.LatheBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\n\tTHREE.LatheBufferGeometry.prototype.constructor = THREE.LatheBufferGeometry;\n\n\t// File:src/extras/geometries/LatheGeometry.js\n\n\t/**\n\t * @author astrodud / http://astrodud.isgreat.org/\n\t * @author zz85 / https://github.com/zz85\n\t * @author bhouston / http://clara.io\n\t */\n\n\t// points - to create a closed torus, one must use a set of points\n\t//    like so: [ a, b, c, d, a ], see first is the same as last.\n\t// segments - the number of circumference segments to create\n\t// phiStart - the starting radian\n\t// phiLength - the radian (0 to 2PI) range of the lathed section\n\t//    2PI is a closed lathe, less than 2PI is a portion.\n\n\tTHREE.LatheGeometry = function ( points, segments, phiStart, phiLength ) {\n\n\t\tTHREE.Geometry.call( this );\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new THREE.LatheBufferGeometry( points, segments, phiStart, phiLength ) );\n\t\tthis.mergeVertices();\n\n\t};\n\n\tTHREE.LatheGeometry.prototype = Object.create( THREE.Geometry.prototype );\n\tTHREE.LatheGeometry.prototype.constructor = THREE.LatheGeometry;\n\n\t// File:src/extras/geometries/PlaneGeometry.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\n\t */\n\n\tTHREE.PlaneGeometry = function ( width, height, widthSegments, heightSegments ) {\n\n\t\tTHREE.Geometry.call( this );\n\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tthis.fromBufferGeometry( new THREE.PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\n\n\t};\n\n\tTHREE.PlaneGeometry.prototype = Object.create( THREE.Geometry.prototype );\n\tTHREE.PlaneGeometry.prototype.constructor = THREE.PlaneGeometry;\n\n\t// File:src/extras/geometries/PlaneBufferGeometry.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\n\t */\n\n\tTHREE.PlaneBufferGeometry = function ( width, height, widthSegments, heightSegments ) {\n\n\t\tTHREE.BufferGeometry.call( this );\n\n\t\tthis.type = 'PlaneBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tvar width_half = width / 2;\n\t\tvar height_half = height / 2;\n\n\t\tvar gridX = Math.floor( widthSegments ) || 1;\n\t\tvar gridY = Math.floor( heightSegments ) || 1;\n\n\t\tvar gridX1 = gridX + 1;\n\t\tvar gridY1 = gridY + 1;\n\n\t\tvar segment_width = width / gridX;\n\t\tvar segment_height = height / gridY;\n\n\t\tvar vertices = new Float32Array( gridX1 * gridY1 * 3 );\n\t\tvar normals = new Float32Array( gridX1 * gridY1 * 3 );\n\t\tvar uvs = new Float32Array( gridX1 * gridY1 * 2 );\n\n\t\tvar offset = 0;\n\t\tvar offset2 = 0;\n\n\t\tfor ( var iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tvar y = iy * segment_height - height_half;\n\n\t\t\tfor ( var ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tvar x = ix * segment_width - width_half;\n\n\t\t\t\tvertices[ offset ] = x;\n\t\t\t\tvertices[ offset + 1 ] = - y;\n\n\t\t\t\tnormals[ offset + 2 ] = 1;\n\n\t\t\t\tuvs[ offset2 ] = ix / gridX;\n\t\t\t\tuvs[ offset2 + 1 ] = 1 - ( iy / gridY );\n\n\t\t\t\toffset += 3;\n\t\t\t\toffset2 += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\toffset = 0;\n\n\t\tvar indices = new ( ( vertices.length / 3 ) > 65535 ? Uint32Array : Uint16Array )( gridX * gridY * 6 );\n\n\t\tfor ( var iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( var ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tvar a = ix + gridX1 * iy;\n\t\t\t\tvar b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\tindices[ offset ] = a;\n\t\t\t\tindices[ offset + 1 ] = b;\n\t\t\t\tindices[ offset + 2 ] = d;\n\n\t\t\t\tindices[ offset + 3 ] = b;\n\t\t\t\tindices[ offset + 4 ] = c;\n\t\t\t\tindices[ offset + 5 ] = d;\n\n\t\t\t\toffset += 6;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ) );\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\n\n\t};\n\n\tTHREE.PlaneBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\n\tTHREE.PlaneBufferGeometry.prototype.constructor = THREE.PlaneBufferGeometry;\n\n\t// File:src/extras/geometries/RingBufferGeometry.js\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tTHREE.RingBufferGeometry = function ( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\t\tTHREE.BufferGeometry.call( this );\n\n\t\tthis.type = 'RingBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tinnerRadius = innerRadius || 20;\n\t\touterRadius = outerRadius || 50;\n\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\n\t\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 1;\n\n\t\t// these are used to calculate buffer length\n\t\tvar vertexCount = ( thetaSegments + 1 ) * ( phiSegments + 1 );\n\t\tvar indexCount = thetaSegments * phiSegments * 2 * 3;\n\n\t\t// buffers\n\t\tvar indices = new THREE.BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ) , 1 );\n\t\tvar vertices = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\n\t\tvar normals = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\n\t\tvar uvs = new THREE.BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\n\n\t\t// some helper variables\n\t\tvar index = 0, indexOffset = 0, segment;\n\t\tvar radius = innerRadius;\n\t\tvar radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tvar vertex = new THREE.Vector3();\n\t\tvar uv = new THREE.Vector2();\n\t\tvar j, i;\n\n\t\t// generate vertices, normals and uvs\n\n\t\t// values are generate from the inside of the ring to the outside\n\n\t\tfor ( j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\tsegment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\t\t\t\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\t\t\t\tnormals.setXYZ( index, 0, 0, 1 );\n\n\t\t\t\t// uv\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\t\t\t\tuvs.setXY( index, uv.x, uv.y );\n\n\t\t\t\t// increase index\n\t\t\t\tindex++;\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tvar thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tsegment = i + thetaSegmentLevel;\n\n\t\t\t\t// indices\n\t\t\t\tvar a = segment;\n\t\t\t\tvar b = segment + thetaSegments + 1;\n\t\t\t\tvar c = segment + thetaSegments + 2;\n\t\t\t\tvar d = segment + 1;\n\n\t\t\t\t// face one\n\t\t\t\tindices.setX( indexOffset, a ); indexOffset++;\n\t\t\t\tindices.setX( indexOffset, b ); indexOffset++;\n\t\t\t\tindices.setX( indexOffset, c ); indexOffset++;\n\n\t\t\t\t// face two\n\t\t\t\tindices.setX( indexOffset, a ); indexOffset++;\n\t\t\t\tindices.setX( indexOffset, c ); indexOffset++;\n\t\t\t\tindices.setX( indexOffset, d ); indexOffset++;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', vertices );\n\t\tthis.addAttribute( 'normal', normals );\n\t\tthis.addAttribute( 'uv', uvs );\n\n\t};\n\n\tTHREE.RingBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\n\tTHREE.RingBufferGeometry.prototype.constructor = THREE.RingBufferGeometry;\n\n\t// File:src/extras/geometries/RingGeometry.js\n\n\t/**\n\t * @author Kaleb Murphy\n\t */\n\n\tTHREE.RingGeometry = function ( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\t\tTHREE.Geometry.call( this );\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new THREE.RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) );\n\n\t};\n\n\tTHREE.RingGeometry.prototype = Object.create( THREE.Geometry.prototype );\n\tTHREE.RingGeometry.prototype.constructor = THREE.RingGeometry;\n\n\t// File:src/extras/geometries/SphereGeometry.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.SphereGeometry = function ( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\t\tTHREE.Geometry.call( this );\n\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new THREE.SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\n\n\t};\n\n\tTHREE.SphereGeometry.prototype = Object.create( THREE.Geometry.prototype );\n\tTHREE.SphereGeometry.prototype.constructor = THREE.SphereGeometry;\n\n\t// File:src/extras/geometries/SphereBufferGeometry.js\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t * based on THREE.SphereGeometry\n\t */\n\n\tTHREE.SphereBufferGeometry = function ( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\t\tTHREE.BufferGeometry.call( this );\n\n\t\tthis.type = 'SphereBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tradius = radius || 50;\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\n\n\t\tphiStart = phiStart !== undefined ? phiStart : 0;\n\t\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\n\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\n\n\t\tvar thetaEnd = thetaStart + thetaLength;\n\n\t\tvar vertexCount = ( ( widthSegments + 1 ) * ( heightSegments + 1 ) );\n\n\t\tvar positions = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\n\t\tvar normals = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\n\t\tvar uvs = new THREE.BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\n\n\t\tvar index = 0, vertices = [], normal = new THREE.Vector3();\n\n\t\tfor ( var y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\tvar verticesRow = [];\n\n\t\t\tvar v = y / heightSegments;\n\n\t\t\tfor ( var x = 0; x <= widthSegments; x ++ ) {\n\n\t\t\t\tvar u = x / widthSegments;\n\n\t\t\t\tvar px = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvar py = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvar pz = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tnormal.set( px, py, pz ).normalize();\n\n\t\t\t\tpositions.setXYZ( index, px, py, pz );\n\t\t\t\tnormals.setXYZ( index, normal.x, normal.y, normal.z );\n\t\t\t\tuvs.setXY( index, u, 1 - v );\n\n\t\t\t\tverticesRow.push( index );\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\tvertices.push( verticesRow );\n\n\t\t}\n\n\t\tvar indices = [];\n\n\t\tfor ( var y = 0; y < heightSegments; y ++ ) {\n\n\t\t\tfor ( var x = 0; x < widthSegments; x ++ ) {\n\n\t\t\t\tvar v1 = vertices[ y ][ x + 1 ];\n\t\t\t\tvar v2 = vertices[ y ][ x ];\n\t\t\t\tvar v3 = vertices[ y + 1 ][ x ];\n\t\t\t\tvar v4 = vertices[ y + 1 ][ x + 1 ];\n\n\t\t\t\tif ( y !== 0 || thetaStart > 0 ) indices.push( v1, v2, v4 );\n\t\t\t\tif ( y !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( v2, v3, v4 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( new ( positions.count > 65535 ? THREE.Uint32Attribute : THREE.Uint16Attribute )( indices, 1 ) );\n\t\tthis.addAttribute( 'position', positions );\n\t\tthis.addAttribute( 'normal', normals );\n\t\tthis.addAttribute( 'uv', uvs );\n\n\t\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\n\n\t};\n\n\tTHREE.SphereBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\n\tTHREE.SphereBufferGeometry.prototype.constructor = THREE.SphereBufferGeometry;\n\n\t// File:src/extras/geometries/TextGeometry.js\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * Text = 3D Text\n\t *\n\t * parameters = {\n\t *  font: <THREE.Font>, // font\n\t *\n\t *  size: <float>, // size of the text\n\t *  height: <float>, // thickness to extrude text\n\t *  curveSegments: <int>, // number of points on the curves\n\t *\n\t *  bevelEnabled: <bool>, // turn on bevel\n\t *  bevelThickness: <float>, // how deep into text bevel goes\n\t *  bevelSize: <float> // how far from text outline is bevel\n\t * }\n\t */\n\n\tTHREE.TextGeometry = function ( text, parameters ) {\n\n\t\tparameters = parameters || {};\n\n\t\tvar font = parameters.font;\n\n\t\tif ( font instanceof THREE.Font === false ) {\n\n\t\t\tconsole.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );\n\t\t\treturn new THREE.Geometry();\n\n\t\t}\n\n\t\tvar shapes = font.generateShapes( text, parameters.size, parameters.curveSegments );\n\n\t\t// translate parameters to ExtrudeGeometry API\n\n\t\tparameters.amount = parameters.height !== undefined ? parameters.height : 50;\n\n\t\t// defaults\n\n\t\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\n\t\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\n\t\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\n\n\t\tTHREE.ExtrudeGeometry.call( this, shapes, parameters );\n\n\t\tthis.type = 'TextGeometry';\n\n\t};\n\n\tTHREE.TextGeometry.prototype = Object.create( THREE.ExtrudeGeometry.prototype );\n\tTHREE.TextGeometry.prototype.constructor = THREE.TextGeometry;\n\n\t// File:src/extras/geometries/TorusBufferGeometry.js\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tTHREE.TorusBufferGeometry = function ( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\t\tTHREE.BufferGeometry.call( this );\n\n\t\tthis.type = 'TorusBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradius = radius || 100;\n\t\ttube = tube || 40;\n\t\tradialSegments = Math.floor( radialSegments ) || 8;\n\t\ttubularSegments = Math.floor( tubularSegments ) || 6;\n\t\tarc = arc || Math.PI * 2;\n\n\t\t// used to calculate buffer length\n\t\tvar vertexCount = ( ( radialSegments + 1 ) * ( tubularSegments + 1 ) );\n\t\tvar indexCount = radialSegments * tubularSegments * 2 * 3;\n\n\t\t// buffers\n\t\tvar indices = new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount );\n\t\tvar vertices = new Float32Array( vertexCount * 3 );\n\t\tvar normals = new Float32Array( vertexCount * 3 );\n\t\tvar uvs = new Float32Array( vertexCount * 2 );\n\n\t\t// offset variables\n\t\tvar vertexBufferOffset = 0;\n\t\tvar uvBufferOffset = 0;\n\t\tvar indexBufferOffset = 0;\n\n\t\t// helper variables\n\t\tvar center = new THREE.Vector3();\n\t\tvar vertex = new THREE.Vector3();\n\t\tvar normal = new THREE.Vector3();\n\n\t\tvar j, i;\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tvar u = i / tubularSegments * arc;\n\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices[ vertexBufferOffset ] = vertex.x;\n\t\t\t\tvertices[ vertexBufferOffset + 1 ] = vertex.y;\n\t\t\t\tvertices[ vertexBufferOffset + 2 ] = vertex.z;\n\n\t\t\t\t// this vector is used to calculate the normal\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\n\t\t\t\t// normal\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals[ vertexBufferOffset ] = normal.x;\n\t\t\t\tnormals[ vertexBufferOffset + 1 ] = normal.y;\n\t\t\t\tnormals[ vertexBufferOffset + 2 ] = normal.z;\n\n\t\t\t\t// uv\n\t\t\t\tuvs[ uvBufferOffset ] = i / tubularSegments;\n\t\t\t\tuvs[ uvBufferOffset + 1 ] = j / radialSegments;\n\n\t\t\t\t// update offsets\n\t\t\t\tvertexBufferOffset += 3;\n\t\t\t\tuvBufferOffset += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\t\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// face one\n\t\t\t\tindices[ indexBufferOffset ] = a;\n\t\t\t\tindices[ indexBufferOffset + 1 ] = b;\n\t\t\t\tindices[ indexBufferOffset + 2 ] = d;\n\n\t\t\t\t// face two\n\t\t\t\tindices[ indexBufferOffset + 3 ] = b;\n\t\t\t\tindices[ indexBufferOffset + 4 ] = c;\n\t\t\t\tindices[ indexBufferOffset + 5 ] = d;\n\n\t\t\t\t// update offset\n\t\t\t\tindexBufferOffset += 6;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\t\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ) );\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\n\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\n\t\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\n\n\t};\n\n\tTHREE.TorusBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\n\tTHREE.TorusBufferGeometry.prototype.constructor = THREE.TorusBufferGeometry;\n\n\t// File:src/extras/geometries/TorusGeometry.js\n\n\t/**\n\t * @author oosmoxiecode\n\t * @author mrdoob / http://mrdoob.com/\n\t * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3DLite/src/away3dlite/primitives/Torus.as?r=2888\n\t */\n\n\tTHREE.TorusGeometry = function ( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\t\tTHREE.Geometry.call( this );\n\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tthis.fromBufferGeometry( new THREE.TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) );\n\n\t};\n\n\tTHREE.TorusGeometry.prototype = Object.create( THREE.Geometry.prototype );\n\tTHREE.TorusGeometry.prototype.constructor = THREE.TorusGeometry;\n\n\t// File:src/extras/geometries/TorusKnotBufferGeometry.js\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t * see: http://www.blackpawn.com/texts/pqtorus/\n\t */\n\tTHREE.TorusKnotBufferGeometry = function ( radius, tube, tubularSegments, radialSegments, p, q ) {\n\n\t\tTHREE.BufferGeometry.call( this );\n\n\t\tthis.type = 'TorusKnotBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\tradius = radius || 100;\n\t\ttube = tube || 40;\n\t\ttubularSegments = Math.floor( tubularSegments ) || 64;\n\t\tradialSegments = Math.floor( radialSegments ) || 8;\n\t\tp = p || 2;\n\t\tq = q || 3;\n\n\t\t// used to calculate buffer length\n\t\tvar vertexCount = ( ( radialSegments + 1 ) * ( tubularSegments + 1 ) );\n\t\tvar indexCount = radialSegments * tubularSegments * 2 * 3;\n\n\t\t// buffers\n\t\tvar indices = new THREE.BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ) , 1 );\n\t\tvar vertices = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\n\t\tvar normals = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\n\t\tvar uvs = new THREE.BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\n\n\t\t// helper variables\n\t\tvar i, j, index = 0, indexOffset = 0;\n\n\t\tvar vertex = new THREE.Vector3();\n\t\tvar normal = new THREE.Vector3();\n\t\tvar uv = new THREE.Vector2();\n\n\t\tvar P1 = new THREE.Vector3();\n\t\tvar P2 = new THREE.Vector3();\n\n\t\tvar B = new THREE.Vector3();\n\t\tvar T = new THREE.Vector3();\n\t\tvar N = new THREE.Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n\n\t\t\tvar u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\t\t\t\tvar cx = - tube * Math.cos( v );\n\t\t\t\tvar cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\t// vertex\n\t\t\t\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\t\t\t\tnormals.setXYZ( index, normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\tuv.y = j / radialSegments;\n\t\t\t\tuvs.setXY( index, uv.x, uv.y );\n\n\t\t\t\t// increase index\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\t\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// face one\n\t\t\t\tindices.setX( indexOffset, a ); indexOffset++;\n\t\t\t\tindices.setX( indexOffset, b ); indexOffset++;\n\t\t\t\tindices.setX( indexOffset, d ); indexOffset++;\n\n\t\t\t\t// face two\n\t\t\t\tindices.setX( indexOffset, b ); indexOffset++;\n\t\t\t\tindices.setX( indexOffset, c ); indexOffset++;\n\t\t\t\tindices.setX( indexOffset, d ); indexOffset++;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.addAttribute( 'position', vertices );\n\t\tthis.addAttribute( 'normal', normals );\n\t\tthis.addAttribute( 'uv', uvs );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tvar cu = Math.cos( u );\n\t\t\tvar su = Math.sin( u );\n\t\t\tvar quOverP = q / p * u;\n\t\t\tvar cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t};\n\n\tTHREE.TorusKnotBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\n\tTHREE.TorusKnotBufferGeometry.prototype.constructor = THREE.TorusKnotBufferGeometry;\n\n\t// File:src/extras/geometries/TorusKnotGeometry.js\n\n\t/**\n\t * @author oosmoxiecode\n\t */\n\n\tTHREE.TorusKnotGeometry = function ( radius, tube, tubularSegments, radialSegments, p, q, heightScale ) {\n\n\t\tTHREE.Geometry.call( this );\n\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\tif( heightScale !== undefined ) console.warn( 'THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.' );\n\n\t\tthis.fromBufferGeometry( new THREE.TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) );\n\t\tthis.mergeVertices();\n\n\t};\n\n\tTHREE.TorusKnotGeometry.prototype = Object.create( THREE.Geometry.prototype );\n\tTHREE.TorusKnotGeometry.prototype.constructor = THREE.TorusKnotGeometry;\n\n\t// File:src/extras/geometries/TubeGeometry.js\n\n\t/**\n\t * @author WestLangley / https://github.com/WestLangley\n\t * @author zz85 / https://github.com/zz85\n\t * @author miningold / https://github.com/miningold\n\t * @author jonobr1 / https://github.com/jonobr1\n\t *\n\t * Modified from the TorusKnotGeometry by @oosmoxiecode\n\t *\n\t * Creates a tube which extrudes along a 3d spline\n\t *\n\t * Uses parallel transport frames as described in\n\t * http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\t */\n\n\tTHREE.TubeGeometry = function ( path, segments, radius, radialSegments, closed, taper ) {\n\n\t\tTHREE.Geometry.call( this );\n\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\tsegments: segments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed,\n\t\t\ttaper: taper\n\t\t};\n\n\t\tsegments = segments || 64;\n\t\tradius = radius || 1;\n\t\tradialSegments = radialSegments || 8;\n\t\tclosed = closed || false;\n\t\ttaper = taper || THREE.TubeGeometry.NoTaper;\n\n\t\tvar grid = [];\n\n\t\tvar scope = this,\n\n\t\t\ttangent,\n\t\t\tnormal,\n\t\t\tbinormal,\n\n\t\t\tnumpoints = segments + 1,\n\n\t\t\tu, v, r,\n\n\t\t\tcx, cy,\n\t\t\tpos, pos2 = new THREE.Vector3(),\n\t\t\ti, j,\n\t\t\tip, jp,\n\t\t\ta, b, c, d,\n\t\t\tuva, uvb, uvc, uvd;\n\n\t\tvar frames = new THREE.TubeGeometry.FrenetFrames( path, segments, closed ),\n\t\t\ttangents = frames.tangents,\n\t\t\tnormals = frames.normals,\n\t\t\tbinormals = frames.binormals;\n\n\t\t// proxy internals\n\t\tthis.tangents = tangents;\n\t\tthis.normals = normals;\n\t\tthis.binormals = binormals;\n\n\t\tfunction vert( x, y, z ) {\n\n\t\t\treturn scope.vertices.push( new THREE.Vector3( x, y, z ) ) - 1;\n\n\t\t}\n\n\t\t// construct the grid\n\n\t\tfor ( i = 0; i < numpoints; i ++ ) {\n\n\t\t\tgrid[ i ] = [];\n\n\t\t\tu = i / ( numpoints - 1 );\n\n\t\t\tpos = path.getPointAt( u );\n\n\t\t\ttangent = tangents[ i ];\n\t\t\tnormal = normals[ i ];\n\t\t\tbinormal = binormals[ i ];\n\n\t\t\tr = radius * taper( u );\n\n\t\t\tfor ( j = 0; j < radialSegments; j ++ ) {\n\n\t\t\t\tv = j / radialSegments * 2 * Math.PI;\n\n\t\t\t\tcx = - r * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.\n\t\t\t\tcy = r * Math.sin( v );\n\n\t\t\t\tpos2.copy( pos );\n\t\t\t\tpos2.x += cx * normal.x + cy * binormal.x;\n\t\t\t\tpos2.y += cx * normal.y + cy * binormal.y;\n\t\t\t\tpos2.z += cx * normal.z + cy * binormal.z;\n\n\t\t\t\tgrid[ i ][ j ] = vert( pos2.x, pos2.y, pos2.z );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// construct the mesh\n\n\t\tfor ( i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( j = 0; j < radialSegments; j ++ ) {\n\n\t\t\t\tip = ( closed ) ? ( i + 1 ) % segments : i + 1;\n\t\t\t\tjp = ( j + 1 ) % radialSegments;\n\n\t\t\t\ta = grid[ i ][ j ];\t\t// *** NOT NECESSARILY PLANAR ! ***\n\t\t\t\tb = grid[ ip ][ j ];\n\t\t\t\tc = grid[ ip ][ jp ];\n\t\t\t\td = grid[ i ][ jp ];\n\n\t\t\t\tuva = new THREE.Vector2( i / segments, j / radialSegments );\n\t\t\t\tuvb = new THREE.Vector2( ( i + 1 ) / segments, j / radialSegments );\n\t\t\t\tuvc = new THREE.Vector2( ( i + 1 ) / segments, ( j + 1 ) / radialSegments );\n\t\t\t\tuvd = new THREE.Vector2( i / segments, ( j + 1 ) / radialSegments );\n\n\t\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\n\n\t\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.computeFaceNormals();\n\t\tthis.computeVertexNormals();\n\n\t};\n\n\tTHREE.TubeGeometry.prototype = Object.create( THREE.Geometry.prototype );\n\tTHREE.TubeGeometry.prototype.constructor = THREE.TubeGeometry;\n\n\tTHREE.TubeGeometry.NoTaper = function ( u ) {\n\n\t\treturn 1;\n\n\t};\n\n\tTHREE.TubeGeometry.SinusoidalTaper = function ( u ) {\n\n\t\treturn Math.sin( Math.PI * u );\n\n\t};\n\n\t// For computing of Frenet frames, exposing the tangents, normals and binormals the spline\n\tTHREE.TubeGeometry.FrenetFrames = function ( path, segments, closed ) {\n\n\t\tvar\tnormal = new THREE.Vector3(),\n\n\t\t\ttangents = [],\n\t\t\tnormals = [],\n\t\t\tbinormals = [],\n\n\t\t\tvec = new THREE.Vector3(),\n\t\t\tmat = new THREE.Matrix4(),\n\n\t\t\tnumpoints = segments + 1,\n\t\t\ttheta,\n\t\t\tsmallest,\n\n\t\t\ttx, ty, tz,\n\t\t\ti, u;\n\n\n\t\t// expose internals\n\t\tthis.tangents = tangents;\n\t\tthis.normals = normals;\n\t\tthis.binormals = binormals;\n\n\t\t// compute the tangent vectors for each segment on the path\n\n\t\tfor ( i = 0; i < numpoints; i ++ ) {\n\n\t\t\tu = i / ( numpoints - 1 );\n\n\t\t\ttangents[ i ] = path.getTangentAt( u );\n\t\t\ttangents[ i ].normalize();\n\n\t\t}\n\n\t\tinitialNormal3();\n\n\t\t/*\n\t\tfunction initialNormal1(lastBinormal) {\n\t\t\t// fixed start binormal. Has dangers of 0 vectors\n\t\t\tnormals[ 0 ] = new THREE.Vector3();\n\t\t\tbinormals[ 0 ] = new THREE.Vector3();\n\t\t\tif (lastBinormal===undefined) lastBinormal = new THREE.Vector3( 0, 0, 1 );\n\t\t\tnormals[ 0 ].crossVectors( lastBinormal, tangents[ 0 ] ).normalize();\n\t\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\n\t\t}\n\n\t\tfunction initialNormal2() {\n\n\t\t\t// This uses the Frenet-Serret formula for deriving binormal\n\t\t\tvar t2 = path.getTangentAt( epsilon );\n\n\t\t\tnormals[ 0 ] = new THREE.Vector3().subVectors( t2, tangents[ 0 ] ).normalize();\n\t\t\tbinormals[ 0 ] = new THREE.Vector3().crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\t\t\tnormals[ 0 ].crossVectors( binormals[ 0 ], tangents[ 0 ] ).normalize(); // last binormal x tangent\n\t\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\n\n\t\t}\n\t\t*/\n\n\t\tfunction initialNormal3() {\n\n\t\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t\t// and in the direction of the smallest tangent xyz component\n\n\t\t\tnormals[ 0 ] = new THREE.Vector3();\n\t\t\tbinormals[ 0 ] = new THREE.Vector3();\n\t\t\tsmallest = Number.MAX_VALUE;\n\t\t\ttx = Math.abs( tangents[ 0 ].x );\n\t\t\tty = Math.abs( tangents[ 0 ].y );\n\t\t\ttz = Math.abs( tangents[ 0 ].z );\n\n\t\t\tif ( tx <= smallest ) {\n\n\t\t\t\tsmallest = tx;\n\t\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( ty <= smallest ) {\n\n\t\t\t\tsmallest = ty;\n\t\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t\t}\n\n\t\t\tif ( tz <= smallest ) {\n\n\t\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t\t}\n\n\t\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\t\t}\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the path\n\n\t\tfor ( i = 1; i < numpoints; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\ttheta = Math.acos( THREE.Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed ) {\n\n\t\t\ttheta = Math.acos( THREE.Math.clamp( normals[ 0 ].dot( normals[ numpoints - 1 ] ), - 1, 1 ) );\n\t\t\ttheta /= ( numpoints - 1 );\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ numpoints - 1 ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( i = 1; i < numpoints; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\t// File:src/extras/geometries/PolyhedronGeometry.js\n\n\t/**\n\t * @author clockworkgeek / https://github.com/clockworkgeek\n\t * @author timothypratley / https://github.com/timothypratley\n\t * @author WestLangley / http://github.com/WestLangley\n\t*/\n\n\tTHREE.PolyhedronGeometry = function ( vertices, indices, radius, detail ) {\n\n\t\tTHREE.Geometry.call( this );\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tradius = radius || 1;\n\t\tdetail = detail || 0;\n\n\t\tvar that = this;\n\n\t\tfor ( var i = 0, l = vertices.length; i < l; i += 3 ) {\n\n\t\t\tprepare( new THREE.Vector3( vertices[ i ], vertices[ i + 1 ], vertices[ i + 2 ] ) );\n\n\t\t}\n\n\t\tvar p = this.vertices;\n\n\t\tvar faces = [];\n\n\t\tfor ( var i = 0, j = 0, l = indices.length; i < l; i += 3, j ++ ) {\n\n\t\t\tvar v1 = p[ indices[ i ] ];\n\t\t\tvar v2 = p[ indices[ i + 1 ] ];\n\t\t\tvar v3 = p[ indices[ i + 2 ] ];\n\n\t\t\tfaces[ j ] = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ] );\n\n\t\t}\n\n\t\tvar centroid = new THREE.Vector3();\n\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tsubdivide( faces[ i ], detail );\n\n\t\t}\n\n\n\t\t// Handle case when face straddles the seam\n\n\t\tfor ( var i = 0, l = this.faceVertexUvs[ 0 ].length; i < l; i ++ ) {\n\n\t\t\tvar uvs = this.faceVertexUvs[ 0 ][ i ];\n\n\t\t\tvar x0 = uvs[ 0 ].x;\n\t\t\tvar x1 = uvs[ 1 ].x;\n\t\t\tvar x2 = uvs[ 2 ].x;\n\n\t\t\tvar max = Math.max( x0, x1, x2 );\n\t\t\tvar min = Math.min( x0, x1, x2 );\n\n\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( x0 < 0.2 ) uvs[ 0 ].x += 1;\n\t\t\t\tif ( x1 < 0.2 ) uvs[ 1 ].x += 1;\n\t\t\t\tif ( x2 < 0.2 ) uvs[ 2 ].x += 1;\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// Apply radius\n\n\t\tfor ( var i = 0, l = this.vertices.length; i < l; i ++ ) {\n\n\t\t\tthis.vertices[ i ].multiplyScalar( radius );\n\n\t\t}\n\n\n\t\t// Merge vertices\n\n\t\tthis.mergeVertices();\n\n\t\tthis.computeFaceNormals();\n\n\t\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\n\n\n\t\t// Project vector onto sphere's surface\n\n\t\tfunction prepare( vector ) {\n\n\t\t\tvar vertex = vector.normalize().clone();\n\t\t\tvertex.index = that.vertices.push( vertex ) - 1;\n\n\t\t\t// Texture coords are equivalent to map coords, calculate angle and convert to fraction of a circle.\n\n\t\t\tvar u = azimuth( vector ) / 2 / Math.PI + 0.5;\n\t\t\tvar v = inclination( vector ) / Math.PI + 0.5;\n\t\t\tvertex.uv = new THREE.Vector2( u, 1 - v );\n\n\t\t\treturn vertex;\n\n\t\t}\n\n\n\t\t// Approximate a curved face with recursively sub-divided triangles.\n\n\t\tfunction make( v1, v2, v3 ) {\n\n\t\t\tvar face = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ] );\n\t\t\tthat.faces.push( face );\n\n\t\t\tcentroid.copy( v1 ).add( v2 ).add( v3 ).divideScalar( 3 );\n\n\t\t\tvar azi = azimuth( centroid );\n\n\t\t\tthat.faceVertexUvs[ 0 ].push( [\n\t\t\t\tcorrectUV( v1.uv, v1, azi ),\n\t\t\t\tcorrectUV( v2.uv, v2, azi ),\n\t\t\t\tcorrectUV( v3.uv, v3, azi )\n\t\t\t] );\n\n\t\t}\n\n\n\t\t// Analytically subdivide a face to the required detail level.\n\n\t\tfunction subdivide( face, detail ) {\n\n\t\t\tvar cols = Math.pow( 2, detail );\n\t\t\tvar a = prepare( that.vertices[ face.a ] );\n\t\t\tvar b = prepare( that.vertices[ face.b ] );\n\t\t\tvar c = prepare( that.vertices[ face.c ] );\n\t\t\tvar v = [];\n\n\t\t\t// Construct all of the vertices for this subdivision.\n\n\t\t\tfor ( var i = 0 ; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tvar aj = prepare( a.clone().lerp( c, i / cols ) );\n\t\t\t\tvar bj = prepare( b.clone().lerp( c, i / cols ) );\n\t\t\t\tvar rows = cols - i;\n\n\t\t\t\tfor ( var j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = prepare( aj.clone().lerp( bj, j / rows ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Construct all of the faces.\n\n\t\t\tfor ( var i = 0; i < cols ; i ++ ) {\n\n\t\t\t\tfor ( var j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tvar k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tmake(\n\t\t\t\t\t\t\tv[ i ][ k + 1 ],\n\t\t\t\t\t\t\tv[ i + 1 ][ k ],\n\t\t\t\t\t\t\tv[ i ][ k ]\n\t\t\t\t\t\t);\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tmake(\n\t\t\t\t\t\t\tv[ i ][ k + 1 ],\n\t\t\t\t\t\t\tv[ i + 1 ][ k + 1 ],\n\t\t\t\t\t\t\tv[ i + 1 ][ k ]\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\n\t\t// Texture fixing helper. Spheres have some odd behaviours.\n\n\t\tfunction correctUV( uv, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) uv = new THREE.Vector2( uv.x - 1, uv.y );\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) uv = new THREE.Vector2( azimuth / 2 / Math.PI + 0.5, uv.y );\n\t\t\treturn uv.clone();\n\n\t\t}\n\n\n\t};\n\n\tTHREE.PolyhedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\n\tTHREE.PolyhedronGeometry.prototype.constructor = THREE.PolyhedronGeometry;\n\n\t// File:src/extras/geometries/DodecahedronGeometry.js\n\n\t/**\n\t * @author Abe Pazos / https://hamoid.com\n\t */\n\n\tTHREE.DodecahedronGeometry = function ( radius, detail ) {\n\n\t\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tvar r = 1 / t;\n\n\t\tvar vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,    - 1, - 1,  1,\n\t\t\t- 1,  1, - 1,    - 1,  1,  1,\n\t\t\t 1, - 1, - 1,     1, - 1,  1,\n\t\t\t 1,  1, - 1,     1,  1,  1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t 0, - r, - t,     0, - r,  t,\n\t\t\t 0,  r, - t,     0,  r,  t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t,  0,    - r,  t,  0,\n\t\t\t r, - t,  0,     r,  t,  0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t,  0, - r,     t,  0, - r,\n\t\t\t- t,  0,  r,     t,  0,  r\n\t\t];\n\n\t\tvar indices = [\n\t\t\t 3, 11,  7,      3,  7, 15,      3, 15, 13,\n\t\t\t 7, 19, 17,      7, 17,  6,      7,  6, 15,\n\t\t\t17,  4,  8,     17,  8, 10,     17, 10,  6,\n\t\t\t 8,  0, 16,      8, 16,  2,      8,  2, 10,\n\t\t\t 0, 12,  1,      0,  1, 18,      0, 18, 16,\n\t\t\t 6, 10,  2,      6,  2, 13,      6, 13, 15,\n\t\t\t 2, 16, 18,      2, 18,  3,      2,  3, 13,\n\t\t\t18,  1,  9,     18,  9, 11,     18, 11,  3,\n\t\t\t 4, 14, 12,      4, 12,  0,      4,  0,  8,\n\t\t\t11,  9,  5,     11,  5, 19,     11, 19,  7,\n\t\t\t19,  5, 14,     19, 14,  4,     19,  4, 17,\n\t\t\t 1, 12, 14,      1, 14,  5,      1,  5,  9\n\t\t];\n\n\t\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t};\n\n\tTHREE.DodecahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\n\tTHREE.DodecahedronGeometry.prototype.constructor = THREE.DodecahedronGeometry;\n\n\t// File:src/extras/geometries/IcosahedronGeometry.js\n\n\t/**\n\t * @author timothypratley / https://github.com/timothypratley\n\t */\n\n\tTHREE.IcosahedronGeometry = function ( radius, detail ) {\n\n\t\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tvar vertices = [\n\t\t\t- 1,  t,  0,    1,  t,  0,   - 1, - t,  0,    1, - t,  0,\n\t\t\t 0, - 1,  t,    0,  1,  t,    0, - 1, - t,    0,  1, - t,\n\t\t\t t,  0, - 1,    t,  0,  1,   - t,  0, - 1,   - t,  0,  1\n\t\t];\n\n\t\tvar indices = [\n\t\t\t 0, 11,  5,    0,  5,  1,    0,  1,  7,    0,  7, 10,    0, 10, 11,\n\t\t\t 1,  5,  9,    5, 11,  4,   11, 10,  2,   10,  7,  6,    7,  1,  8,\n\t\t\t 3,  9,  4,    3,  4,  2,    3,  2,  6,    3,  6,  8,    3,  8,  9,\n\t\t\t 4,  9,  5,    2,  4, 11,    6,  2, 10,    8,  6,  7,    9,  8,  1\n\t\t];\n\n\t\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t};\n\n\tTHREE.IcosahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\n\tTHREE.IcosahedronGeometry.prototype.constructor = THREE.IcosahedronGeometry;\n\n\t// File:src/extras/geometries/OctahedronGeometry.js\n\n\t/**\n\t * @author timothypratley / https://github.com/timothypratley\n\t */\n\n\tTHREE.OctahedronGeometry = function ( radius, detail ) {\n\n\t\tvar vertices = [\n\t\t\t1, 0, 0,   - 1, 0, 0,    0, 1, 0,    0, - 1, 0,    0, 0, 1,    0, 0, - 1\n\t\t];\n\n\t\tvar indices = [\n\t\t\t0, 2, 4,    0, 4, 3,    0, 3, 5,    0, 5, 2,    1, 2, 5,    1, 5, 3,    1, 3, 4,    1, 4, 2\n\t\t];\n\n\t\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t};\n\n\tTHREE.OctahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\n\tTHREE.OctahedronGeometry.prototype.constructor = THREE.OctahedronGeometry;\n\n\t// File:src/extras/geometries/TetrahedronGeometry.js\n\n\t/**\n\t * @author timothypratley / https://github.com/timothypratley\n\t */\n\n\tTHREE.TetrahedronGeometry = function ( radius, detail ) {\n\n\t\tvar vertices = [\n\t\t\t 1,  1,  1,   - 1, - 1,  1,   - 1,  1, - 1,    1, - 1, - 1\n\t\t];\n\n\t\tvar indices = [\n\t\t\t 2,  1,  0,    0,  3,  2,    1,  3,  0,    2,  3,  1\n\t\t];\n\n\t\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t};\n\n\tTHREE.TetrahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\n\tTHREE.TetrahedronGeometry.prototype.constructor = THREE.TetrahedronGeometry;\n\n\t// File:src/extras/geometries/ParametricGeometry.js\n\n\t/**\n\t * @author zz85 / https://github.com/zz85\n\t * Parametric Surfaces Geometry\n\t * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\n\t *\n\t * new THREE.ParametricGeometry( parametricFunction, uSegments, ySegements );\n\t *\n\t */\n\n\tTHREE.ParametricGeometry = function ( func, slices, stacks ) {\n\n\t\tTHREE.Geometry.call( this );\n\n\t\tthis.type = 'ParametricGeometry';\n\n\t\tthis.parameters = {\n\t\t\tfunc: func,\n\t\t\tslices: slices,\n\t\t\tstacks: stacks\n\t\t};\n\n\t\tvar verts = this.vertices;\n\t\tvar faces = this.faces;\n\t\tvar uvs = this.faceVertexUvs[ 0 ];\n\n\t\tvar i, j, p;\n\t\tvar u, v;\n\n\t\tvar sliceCount = slices + 1;\n\n\t\tfor ( i = 0; i <= stacks; i ++ ) {\n\n\t\t\tv = i / stacks;\n\n\t\t\tfor ( j = 0; j <= slices; j ++ ) {\n\n\t\t\t\tu = j / slices;\n\n\t\t\t\tp = func( u, v );\n\t\t\t\tverts.push( p );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar a, b, c, d;\n\t\tvar uva, uvb, uvc, uvd;\n\n\t\tfor ( i = 0; i < stacks; i ++ ) {\n\n\t\t\tfor ( j = 0; j < slices; j ++ ) {\n\n\t\t\t\ta = i * sliceCount + j;\n\t\t\t\tb = i * sliceCount + j + 1;\n\t\t\t\tc = ( i + 1 ) * sliceCount + j + 1;\n\t\t\t\td = ( i + 1 ) * sliceCount + j;\n\n\t\t\t\tuva = new THREE.Vector2( j / slices, i / stacks );\n\t\t\t\tuvb = new THREE.Vector2( ( j + 1 ) / slices, i / stacks );\n\t\t\t\tuvc = new THREE.Vector2( ( j + 1 ) / slices, ( i + 1 ) / stacks );\n\t\t\t\tuvd = new THREE.Vector2( j / slices, ( i + 1 ) / stacks );\n\n\t\t\t\tfaces.push( new THREE.Face3( a, b, d ) );\n\t\t\t\tuvs.push( [ uva, uvb, uvd ] );\n\n\t\t\t\tfaces.push( new THREE.Face3( b, c, d ) );\n\t\t\t\tuvs.push( [ uvb.clone(), uvc, uvd.clone() ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// console.log(this);\n\n\t\t// magic bullet\n\t\t// var diff = this.mergeVertices();\n\t\t// console.log('removed ', diff, ' vertices by merging');\n\n\t\tthis.computeFaceNormals();\n\t\tthis.computeVertexNormals();\n\n\t};\n\n\tTHREE.ParametricGeometry.prototype = Object.create( THREE.Geometry.prototype );\n\tTHREE.ParametricGeometry.prototype.constructor = THREE.ParametricGeometry;\n\n\t// File:src/extras/geometries/WireframeGeometry.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.WireframeGeometry = function ( geometry ) {\n\n\t\tTHREE.BufferGeometry.call( this );\n\n\t\tvar edge = [ 0, 0 ], hash = {};\n\n\t\tfunction sortFunction( a, b ) {\n\n\t\t\treturn a - b;\n\n\t\t}\n\n\t\tvar keys = [ 'a', 'b', 'c' ];\n\n\t\tif ( geometry instanceof THREE.Geometry ) {\n\n\t\t\tvar vertices = geometry.vertices;\n\t\t\tvar faces = geometry.faces;\n\t\t\tvar numEdges = 0;\n\n\t\t\t// allocate maximal size\n\t\t\tvar edges = new Uint32Array( 6 * faces.length );\n\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\tedge[ 0 ] = face[ keys[ j ] ];\n\t\t\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\t\t\tedge.sort( sortFunction );\n\n\t\t\t\t\tvar key = edge.toString();\n\n\t\t\t\t\tif ( hash[ key ] === undefined ) {\n\n\t\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\n\t\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\n\t\t\t\t\t\thash[ key ] = true;\n\t\t\t\t\t\tnumEdges ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\n\n\t\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\n\n\t\t\t\tfor ( var j = 0; j < 2; j ++ ) {\n\n\t\t\t\t\tvar vertex = vertices[ edges [ 2 * i + j ] ];\n\n\t\t\t\t\tvar index = 6 * i + 3 * j;\n\t\t\t\t\tcoords[ index + 0 ] = vertex.x;\n\t\t\t\t\tcoords[ index + 1 ] = vertex.y;\n\t\t\t\t\tcoords[ index + 2 ] = vertex.z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\n\n\t\t} else if ( geometry instanceof THREE.BufferGeometry ) {\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// Indexed BufferGeometry\n\n\t\t\t\tvar indices = geometry.index.array;\n\t\t\t\tvar vertices = geometry.attributes.position;\n\t\t\t\tvar groups = geometry.groups;\n\t\t\t\tvar numEdges = 0;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgeometry.addGroup( 0, indices.length );\n\n\t\t\t\t}\n\n\t\t\t\t// allocate maximal size\n\t\t\t\tvar edges = new Uint32Array( 2 * indices.length );\n\n\t\t\t\tfor ( var o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tvar group = groups[ o ];\n\n\t\t\t\t\tvar start = group.start;\n\t\t\t\t\tvar count = group.count;\n\n\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\n\n\t\t\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\tedge[ 0 ] = indices[ i + j ];\n\t\t\t\t\t\t\tedge[ 1 ] = indices[ i + ( j + 1 ) % 3 ];\n\t\t\t\t\t\t\tedge.sort( sortFunction );\n\n\t\t\t\t\t\t\tvar key = edge.toString();\n\n\t\t\t\t\t\t\tif ( hash[ key ] === undefined ) {\n\n\t\t\t\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\n\t\t\t\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\n\t\t\t\t\t\t\t\thash[ key ] = true;\n\t\t\t\t\t\t\t\tnumEdges ++;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\n\n\t\t\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\n\n\t\t\t\t\tfor ( var j = 0; j < 2; j ++ ) {\n\n\t\t\t\t\t\tvar index = 6 * i + 3 * j;\n\t\t\t\t\t\tvar index2 = edges[ 2 * i + j ];\n\n\t\t\t\t\t\tcoords[ index + 0 ] = vertices.getX( index2 );\n\t\t\t\t\t\tcoords[ index + 1 ] = vertices.getY( index2 );\n\t\t\t\t\t\tcoords[ index + 2 ] = vertices.getZ( index2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tvar vertices = geometry.attributes.position.array;\n\t\t\t\tvar numEdges = vertices.length / 3;\n\t\t\t\tvar numTris = numEdges / 3;\n\n\t\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\n\n\t\t\t\tfor ( var i = 0, l = numTris; i < l; i ++ ) {\n\n\t\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\tvar index = 18 * i + 6 * j;\n\n\t\t\t\t\t\tvar index1 = 9 * i + 3 * j;\n\t\t\t\t\t\tcoords[ index + 0 ] = vertices[ index1 ];\n\t\t\t\t\t\tcoords[ index + 1 ] = vertices[ index1 + 1 ];\n\t\t\t\t\t\tcoords[ index + 2 ] = vertices[ index1 + 2 ];\n\n\t\t\t\t\t\tvar index2 = 9 * i + 3 * ( ( j + 1 ) % 3 );\n\t\t\t\t\t\tcoords[ index + 3 ] = vertices[ index2 ];\n\t\t\t\t\t\tcoords[ index + 4 ] = vertices[ index2 + 1 ];\n\t\t\t\t\t\tcoords[ index + 5 ] = vertices[ index2 + 2 ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tTHREE.WireframeGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\n\tTHREE.WireframeGeometry.prototype.constructor = THREE.WireframeGeometry;\n\n\t// File:src/extras/helpers/AxisHelper.js\n\n\t/**\n\t * @author sroucheray / http://sroucheray.org/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.AxisHelper = function ( size ) {\n\n\t\tsize = size || 1;\n\n\t\tvar vertices = new Float32Array( [\n\t\t\t0, 0, 0,  size, 0, 0,\n\t\t\t0, 0, 0,  0, size, 0,\n\t\t\t0, 0, 0,  0, 0, size\n\t\t] );\n\n\t\tvar colors = new Float32Array( [\n\t\t\t1, 0, 0,  1, 0.6, 0,\n\t\t\t0, 1, 0,  0.6, 1, 0,\n\t\t\t0, 0, 1,  0, 0.6, 1\n\t\t] );\n\n\t\tvar geometry = new THREE.BufferGeometry();\n\t\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\n\t\tgeometry.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ) );\n\n\t\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\n\n\t\tTHREE.LineSegments.call( this, geometry, material );\n\n\t};\n\n\tTHREE.AxisHelper.prototype = Object.create( THREE.LineSegments.prototype );\n\tTHREE.AxisHelper.prototype.constructor = THREE.AxisHelper;\n\n\t// File:src/extras/helpers/ArrowHelper.js\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author zz85 / http://github.com/zz85\n\t * @author bhouston / http://clara.io\n\t *\n\t * Creates an arrow for visualizing directions\n\t *\n\t * Parameters:\n\t *  dir - Vector3\n\t *  origin - Vector3\n\t *  length - Number\n\t *  color - color in hex value\n\t *  headLength - Number\n\t *  headWidth - Number\n\t */\n\n\tTHREE.ArrowHelper = ( function () {\n\n\t\tvar lineGeometry = new THREE.BufferGeometry();\n\t\tlineGeometry.addAttribute( 'position', new THREE.Float32Attribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\tvar coneGeometry = new THREE.CylinderBufferGeometry( 0, 0.5, 1, 5, 1 );\n\t\tconeGeometry.translate( 0, - 0.5, 0 );\n\n\t\treturn function ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\n\n\t\t\t// dir is assumed to be normalized\n\n\t\t\tTHREE.Object3D.call( this );\n\n\t\t\tif ( color === undefined ) color = 0xffff00;\n\t\t\tif ( length === undefined ) length = 1;\n\t\t\tif ( headLength === undefined ) headLength = 0.2 * length;\n\t\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\t\t\tthis.position.copy( origin );\n\n\t\t\tthis.line = new THREE.Line( lineGeometry, new THREE.LineBasicMaterial( { color: color } ) );\n\t\t\tthis.line.matrixAutoUpdate = false;\n\t\t\tthis.add( this.line );\n\n\t\t\tthis.cone = new THREE.Mesh( coneGeometry, new THREE.MeshBasicMaterial( { color: color } ) );\n\t\t\tthis.cone.matrixAutoUpdate = false;\n\t\t\tthis.add( this.cone );\n\n\t\t\tthis.setDirection( dir );\n\t\t\tthis.setLength( length, headLength, headWidth );\n\n\t\t};\n\n\t}() );\n\n\tTHREE.ArrowHelper.prototype = Object.create( THREE.Object3D.prototype );\n\tTHREE.ArrowHelper.prototype.constructor = THREE.ArrowHelper;\n\n\tTHREE.ArrowHelper.prototype.setDirection = ( function () {\n\n\t\tvar axis = new THREE.Vector3();\n\t\tvar radians;\n\n\t\treturn function setDirection( dir ) {\n\n\t\t\t// dir is assumed to be normalized\n\n\t\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\t\tradians = Math.acos( dir.y );\n\n\t\t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\n\n\t\t\t}\n\n\t\t};\n\n\t}() );\n\n\tTHREE.ArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\n\n\t\tif ( headLength === undefined ) headLength = 0.2 * length;\n\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\t\tthis.line.scale.set( 1, Math.max( 0, length - headLength ), 1 );\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t};\n\n\tTHREE.ArrowHelper.prototype.setColor = function ( color ) {\n\n\t\tthis.line.material.color.copy( color );\n\t\tthis.cone.material.color.copy( color );\n\n\t};\n\n\t// File:src/extras/helpers/BoxHelper.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.BoxHelper = function ( object, color ) {\n\n\t\tif ( color === undefined ) color = 0xffff00;\n\n\t\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tvar positions = new Float32Array( 8 * 3 );\n\n\t\tvar geometry = new THREE.BufferGeometry();\n\t\tgeometry.setIndex( new THREE.BufferAttribute( indices, 1 ) );\n\t\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\n\n\t\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: color } ) );\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tthis.update( object );\n\n\t\t}\n\n\t};\n\n\tTHREE.BoxHelper.prototype = Object.create( THREE.LineSegments.prototype );\n\tTHREE.BoxHelper.prototype.constructor = THREE.BoxHelper;\n\n\tTHREE.BoxHelper.prototype.update = ( function () {\n\n\t\tvar box = new THREE.Box3();\n\n\t\treturn function update( object ) {\n\n\t\t\tif ( object instanceof THREE.Box3 ) {\n\n\t\t\t\tbox.copy( object );\n\n\t\t\t} else {\n\n\t\t\t\tbox.setFromObject( object );\n\n\t\t\t}\n\n\t\t\tif ( box.isEmpty() ) return;\n\n\t\t\tvar min = box.min;\n\t\t\tvar max = box.max;\n\n\t\t\t/*\n\t\t\t  5____4\n\t\t\t1/___0/|\n\t\t\t| 6__|_7\n\t\t\t2/___3/\n\n\t\t\t0: max.x, max.y, max.z\n\t\t\t1: min.x, max.y, max.z\n\t\t\t2: min.x, min.y, max.z\n\t\t\t3: max.x, min.y, max.z\n\t\t\t4: max.x, max.y, min.z\n\t\t\t5: min.x, max.y, min.z\n\t\t\t6: min.x, min.y, min.z\n\t\t\t7: max.x, min.y, min.z\n\t\t\t*/\n\n\t\t\tvar position = this.geometry.attributes.position;\n\t\t\tvar array = position.array;\n\n\t\t\tarray[  0 ] = max.x; array[  1 ] = max.y; array[  2 ] = max.z;\n\t\t\tarray[  3 ] = min.x; array[  4 ] = max.y; array[  5 ] = max.z;\n\t\t\tarray[  6 ] = min.x; array[  7 ] = min.y; array[  8 ] = max.z;\n\t\t\tarray[  9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t\tthis.geometry.computeBoundingSphere();\n\n\t\t};\n\n\t} )();\n\n\t// File:src/extras/helpers/BoundingBoxHelper.js\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\t// a helper to show the world-axis-aligned bounding box for an object\n\n\tTHREE.BoundingBoxHelper = function ( object, hex ) {\n\n\t\tvar color = ( hex !== undefined ) ? hex : 0x888888;\n\n\t\tthis.object = object;\n\n\t\tthis.box = new THREE.Box3();\n\n\t\tTHREE.Mesh.call( this, new THREE.BoxGeometry( 1, 1, 1 ), new THREE.MeshBasicMaterial( { color: color, wireframe: true } ) );\n\n\t};\n\n\tTHREE.BoundingBoxHelper.prototype = Object.create( THREE.Mesh.prototype );\n\tTHREE.BoundingBoxHelper.prototype.constructor = THREE.BoundingBoxHelper;\n\n\tTHREE.BoundingBoxHelper.prototype.update = function () {\n\n\t\tthis.box.setFromObject( this.object );\n\n\t\tthis.box.size( this.scale );\n\n\t\tthis.box.center( this.position );\n\n\t};\n\n\t// File:src/extras/helpers/CameraHelper.js\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t *\t- shows frustum, line of sight and up of the camera\n\t *\t- suitable for fast updates\n\t * \t- based on frustum visualization in lightgl.js shadowmap example\n\t *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n\t */\n\n\tTHREE.CameraHelper = function ( camera ) {\n\n\t\tvar geometry = new THREE.Geometry();\n\t\tvar material = new THREE.LineBasicMaterial( { color: 0xffffff, vertexColors: THREE.FaceColors } );\n\n\t\tvar pointMap = {};\n\n\t\t// colors\n\n\t\tvar hexFrustum = 0xffaa00;\n\t\tvar hexCone = 0xff0000;\n\t\tvar hexUp = 0x00aaff;\n\t\tvar hexTarget = 0xffffff;\n\t\tvar hexCross = 0x333333;\n\n\t\t// near\n\n\t\taddLine( \"n1\", \"n2\", hexFrustum );\n\t\taddLine( \"n2\", \"n4\", hexFrustum );\n\t\taddLine( \"n4\", \"n3\", hexFrustum );\n\t\taddLine( \"n3\", \"n1\", hexFrustum );\n\n\t\t// far\n\n\t\taddLine( \"f1\", \"f2\", hexFrustum );\n\t\taddLine( \"f2\", \"f4\", hexFrustum );\n\t\taddLine( \"f4\", \"f3\", hexFrustum );\n\t\taddLine( \"f3\", \"f1\", hexFrustum );\n\n\t\t// sides\n\n\t\taddLine( \"n1\", \"f1\", hexFrustum );\n\t\taddLine( \"n2\", \"f2\", hexFrustum );\n\t\taddLine( \"n3\", \"f3\", hexFrustum );\n\t\taddLine( \"n4\", \"f4\", hexFrustum );\n\n\t\t// cone\n\n\t\taddLine( \"p\", \"n1\", hexCone );\n\t\taddLine( \"p\", \"n2\", hexCone );\n\t\taddLine( \"p\", \"n3\", hexCone );\n\t\taddLine( \"p\", \"n4\", hexCone );\n\n\t\t// up\n\n\t\taddLine( \"u1\", \"u2\", hexUp );\n\t\taddLine( \"u2\", \"u3\", hexUp );\n\t\taddLine( \"u3\", \"u1\", hexUp );\n\n\t\t// target\n\n\t\taddLine( \"c\", \"t\", hexTarget );\n\t\taddLine( \"p\", \"c\", hexCross );\n\n\t\t// cross\n\n\t\taddLine( \"cn1\", \"cn2\", hexCross );\n\t\taddLine( \"cn3\", \"cn4\", hexCross );\n\n\t\taddLine( \"cf1\", \"cf2\", hexCross );\n\t\taddLine( \"cf3\", \"cf4\", hexCross );\n\n\t\tfunction addLine( a, b, hex ) {\n\n\t\t\taddPoint( a, hex );\n\t\t\taddPoint( b, hex );\n\n\t\t}\n\n\t\tfunction addPoint( id, hex ) {\n\n\t\t\tgeometry.vertices.push( new THREE.Vector3() );\n\t\t\tgeometry.colors.push( new THREE.Color( hex ) );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( geometry.vertices.length - 1 );\n\n\t\t}\n\n\t\tTHREE.LineSegments.call( this, geometry, material );\n\n\t\tthis.camera = camera;\n\t\tif( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t};\n\n\tTHREE.CameraHelper.prototype = Object.create( THREE.LineSegments.prototype );\n\tTHREE.CameraHelper.prototype.constructor = THREE.CameraHelper;\n\n\tTHREE.CameraHelper.prototype.update = function () {\n\n\t\tvar geometry, pointMap;\n\n\t\tvar vector = new THREE.Vector3();\n\t\tvar camera = new THREE.Camera();\n\n\t\tfunction setPoint( point, x, y, z ) {\n\n\t\t\tvector.set( x, y, z ).unproject( camera );\n\n\t\t\tvar points = pointMap[ point ];\n\n\t\t\tif ( points !== undefined ) {\n\n\t\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\t\tgeometry.vertices[ points[ i ] ].copy( vector );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn function update() {\n\n\t\t\tgeometry = this.geometry;\n\t\t\tpointMap = this.pointMap;\n\n\t\t\tvar w = 1, h = 1;\n\n\t\t\t// we need just camera projection matrix\n\t\t\t// world matrix must be identity\n\n\t\t\tcamera.projectionMatrix.copy( this.camera.projectionMatrix );\n\n\t\t\t// center / target\n\n\t\t\tsetPoint( \"c\", 0, 0, - 1 );\n\t\t\tsetPoint( \"t\", 0, 0,  1 );\n\n\t\t\t// near\n\n\t\t\tsetPoint( \"n1\", - w, - h, - 1 );\n\t\t\tsetPoint( \"n2\",   w, - h, - 1 );\n\t\t\tsetPoint( \"n3\", - w,   h, - 1 );\n\t\t\tsetPoint( \"n4\",   w,   h, - 1 );\n\n\t\t\t// far\n\n\t\t\tsetPoint( \"f1\", - w, - h, 1 );\n\t\t\tsetPoint( \"f2\",   w, - h, 1 );\n\t\t\tsetPoint( \"f3\", - w,   h, 1 );\n\t\t\tsetPoint( \"f4\",   w,   h, 1 );\n\n\t\t\t// up\n\n\t\t\tsetPoint( \"u1\",   w * 0.7, h * 1.1, - 1 );\n\t\t\tsetPoint( \"u2\", - w * 0.7, h * 1.1, - 1 );\n\t\t\tsetPoint( \"u3\",         0, h * 2,   - 1 );\n\n\t\t\t// cross\n\n\t\t\tsetPoint( \"cf1\", - w,   0, 1 );\n\t\t\tsetPoint( \"cf2\",   w,   0, 1 );\n\t\t\tsetPoint( \"cf3\",   0, - h, 1 );\n\t\t\tsetPoint( \"cf4\",   0,   h, 1 );\n\n\t\t\tsetPoint( \"cn1\", - w,   0, - 1 );\n\t\t\tsetPoint( \"cn2\",   w,   0, - 1 );\n\t\t\tsetPoint( \"cn3\",   0, - h, - 1 );\n\t\t\tsetPoint( \"cn4\",   0,   h, - 1 );\n\n\t\t\tgeometry.verticesNeedUpdate = true;\n\n\t\t};\n\n\t}();\n\n\t// File:src/extras/helpers/DirectionalLightHelper.js\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tTHREE.DirectionalLightHelper = function ( light, size ) {\n\n\t\tTHREE.Object3D.call( this );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tvar geometry = new THREE.BufferGeometry();\n\t\tgeometry.addAttribute( 'position', new THREE.Float32Attribute( [\n\t\t\t- size,   size, 0,\n\t\t\t  size,   size, 0,\n\t\t\t  size, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size,   size, 0\n\t\t], 3 ) );\n\n\t\tvar material = new THREE.LineBasicMaterial( { fog: false } );\n\n\t\tthis.add( new THREE.Line( geometry, material ) );\n\n\t\tgeometry = new THREE.BufferGeometry();\n\t\tgeometry.addAttribute( 'position', new THREE.Float32Attribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.add( new THREE.Line( geometry, material ));\n\n\t\tthis.update();\n\n\t};\n\n\tTHREE.DirectionalLightHelper.prototype = Object.create( THREE.Object3D.prototype );\n\tTHREE.DirectionalLightHelper.prototype.constructor = THREE.DirectionalLightHelper;\n\n\tTHREE.DirectionalLightHelper.prototype.dispose = function () {\n\n\t\tvar lightPlane = this.children[ 0 ];\n\t\tvar targetLine = this.children[ 1 ];\n\n\t\tlightPlane.geometry.dispose();\n\t\tlightPlane.material.dispose();\n\t\ttargetLine.geometry.dispose();\n\t\ttargetLine.material.dispose();\n\n\t};\n\n\tTHREE.DirectionalLightHelper.prototype.update = function () {\n\n\t\tvar v1 = new THREE.Vector3();\n\t\tvar v2 = new THREE.Vector3();\n\t\tvar v3 = new THREE.Vector3();\n\n\t\treturn function update() {\n\n\t\t\tv1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t\tv3.subVectors( v2, v1 );\n\n\t\t\tvar lightPlane = this.children[ 0 ];\n\t\t\tvar targetLine = this.children[ 1 ];\n\n\t\t\tlightPlane.lookAt( v3 );\n\t\t\tlightPlane.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\n\n\t\t\ttargetLine.lookAt( v3 );\n\t\t\ttargetLine.scale.z = v3.length();\n\n\t\t};\n\n\t}();\n\n\t// File:src/extras/helpers/EdgesHelper.js\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @param object THREE.Mesh whose geometry will be used\n\t * @param hex line color\n\t * @param thresholdAngle the minimum angle (in degrees),\n\t * between the face normals of adjacent faces,\n\t * that is required to render an edge. A value of 10 means\n\t * an edge is only rendered if the angle is at least 10 degrees.\n\t */\n\n\tTHREE.EdgesHelper = function ( object, hex, thresholdAngle ) {\n\n\t\tvar color = ( hex !== undefined ) ? hex : 0xffffff;\n\n\t\tTHREE.LineSegments.call( this, new THREE.EdgesGeometry( object.geometry, thresholdAngle ), new THREE.LineBasicMaterial( { color: color } ) );\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t};\n\n\tTHREE.EdgesHelper.prototype = Object.create( THREE.LineSegments.prototype );\n\tTHREE.EdgesHelper.prototype.constructor = THREE.EdgesHelper;\n\n\t// File:src/extras/helpers/FaceNormalsHelper.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t*/\n\n\tTHREE.FaceNormalsHelper = function ( object, size, hex, linewidth ) {\n\n\t\t// FaceNormalsHelper only supports THREE.Geometry\n\n\t\tthis.object = object;\n\n\t\tthis.size = ( size !== undefined ) ? size : 1;\n\n\t\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\t\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t\t//\n\n\t\tvar nNormals = 0;\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tif ( objGeometry instanceof THREE.Geometry ) {\n\n\t\t\tnNormals = objGeometry.faces.length;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\n\n\t\t}\n\n\t\t//\n\n\t\tvar geometry = new THREE.BufferGeometry();\n\n\t\tvar positions = new THREE.Float32Attribute( nNormals * 2 * 3, 3 );\n\n\t\tgeometry.addAttribute( 'position', positions );\n\n\t\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t\t//\n\n\t\tthis.matrixAutoUpdate = false;\n\t\tthis.update();\n\n\t};\n\n\tTHREE.FaceNormalsHelper.prototype = Object.create( THREE.LineSegments.prototype );\n\tTHREE.FaceNormalsHelper.prototype.constructor = THREE.FaceNormalsHelper;\n\n\tTHREE.FaceNormalsHelper.prototype.update = ( function () {\n\n\t\tvar v1 = new THREE.Vector3();\n\t\tvar v2 = new THREE.Vector3();\n\t\tvar normalMatrix = new THREE.Matrix3();\n\n\t\treturn function update() {\n\n\t\t\tthis.object.updateMatrixWorld( true );\n\n\t\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\t\tvar position = this.geometry.attributes.position;\n\n\t\t\t//\n\n\t\t\tvar objGeometry = this.object.geometry;\n\n\t\t\tvar vertices = objGeometry.vertices;\n\n\t\t\tvar faces = objGeometry.faces;\n\n\t\t\tvar idx = 0;\n\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tvar normal = face.normal;\n\n\t\t\t\tv1.copy( vertices[ face.a ] )\n\t\t\t\t\t.add( vertices[ face.b ] )\n\t\t\t\t\t.add( vertices[ face.c ] )\n\t\t\t\t\t.divideScalar( 3 )\n\t\t\t\t\t.applyMatrix4( matrixWorld );\n\n\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t}\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}() );\n\n\t// File:src/extras/helpers/GridHelper.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.GridHelper = function ( size, divisions, color1, color2 ) {\n\n\t\tdivisions = divisions || 1;\n\t\tcolor1 = new THREE.Color( color1 !== undefined ? color1 : 0x444444 );\n\t\tcolor2 = new THREE.Color( color2 !== undefined ? color2 : 0x888888 );\n\n\t\tvar center = divisions / 2;\n\t\tvar step = ( size * 2 ) / divisions;\n\t\tvar vertices = [], colors = [];\n\n\t\tfor ( var i = 0, j = 0, k = - size; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - size, 0, k, size, 0, k );\n\t\t\tvertices.push( k, 0, - size, k, 0, size );\n\n\t\t\tvar color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tvar geometry = new THREE.BufferGeometry();\n\t\tgeometry.addAttribute( 'position', new THREE.Float32Attribute( vertices, 3 ) );\n\t\tgeometry.addAttribute( 'color', new THREE.Float32Attribute( colors, 3 ) );\n\n\t\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\n\n\t\tTHREE.LineSegments.call( this, geometry, material );\n\n\t};\n\n\tTHREE.GridHelper.prototype = Object.create( THREE.LineSegments.prototype );\n\tTHREE.GridHelper.prototype.constructor = THREE.GridHelper;\n\n\tTHREE.GridHelper.prototype.setColors = function () {\n\n\t\tconsole.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );\n\n\t};\n\n\t// File:src/extras/helpers/HemisphereLightHelper.js\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.HemisphereLightHelper = function ( light, sphereSize ) {\n\n\t\tTHREE.Object3D.call( this );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.colors = [ new THREE.Color(), new THREE.Color() ];\n\n\t\tvar geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );\n\t\tgeometry.rotateX( - Math.PI / 2 );\n\n\t\tfor ( var i = 0, il = 8; i < il; i ++ ) {\n\n\t\t\tgeometry.faces[ i ].color = this.colors[ i < 4 ? 0 : 1 ];\n\n\t\t}\n\n\t\tvar material = new THREE.MeshBasicMaterial( { vertexColors: THREE.FaceColors, wireframe: true } );\n\n\t\tthis.lightSphere = new THREE.Mesh( geometry, material );\n\t\tthis.add( this.lightSphere );\n\n\t\tthis.update();\n\n\t};\n\n\tTHREE.HemisphereLightHelper.prototype = Object.create( THREE.Object3D.prototype );\n\tTHREE.HemisphereLightHelper.prototype.constructor = THREE.HemisphereLightHelper;\n\n\tTHREE.HemisphereLightHelper.prototype.dispose = function () {\n\n\t\tthis.lightSphere.geometry.dispose();\n\t\tthis.lightSphere.material.dispose();\n\n\t};\n\n\tTHREE.HemisphereLightHelper.prototype.update = function () {\n\n\t\tvar vector = new THREE.Vector3();\n\n\t\treturn function update() {\n\n\t\t\tthis.colors[ 0 ].copy( this.light.color ).multiplyScalar( this.light.intensity );\n\t\t\tthis.colors[ 1 ].copy( this.light.groundColor ).multiplyScalar( this.light.intensity );\n\n\t\t\tthis.lightSphere.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\t\t\tthis.lightSphere.geometry.colorsNeedUpdate = true;\n\n\t\t};\n\n\t}();\n\n\t// File:src/extras/helpers/PointLightHelper.js\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.PointLightHelper = function ( light, sphereSize ) {\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tvar geometry = new THREE.SphereBufferGeometry( sphereSize, 4, 2 );\n\t\tvar material = new THREE.MeshBasicMaterial( { wireframe: true, fog: false } );\n\t\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\n\n\t\tTHREE.Mesh.call( this, geometry, material );\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\t/*\n\t\tvar distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\t\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\t\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\t\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\t\tvar d = light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\n\t\tthis.add( this.lightDistance );\n\t\t*/\n\n\t};\n\n\tTHREE.PointLightHelper.prototype = Object.create( THREE.Mesh.prototype );\n\tTHREE.PointLightHelper.prototype.constructor = THREE.PointLightHelper;\n\n\tTHREE.PointLightHelper.prototype.dispose = function () {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t};\n\n\tTHREE.PointLightHelper.prototype.update = function () {\n\n\t\tthis.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\n\n\t\t/*\n\t\tvar d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t};\n\n\t// File:src/extras/helpers/SkeletonHelper.js\n\n\t/**\n\t * @author Sean Griffin / http://twitter.com/sgrif\n\t * @author Michael Guerrero / http://realitymeltdown.com\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author ikerr / http://verold.com\n\t */\n\n\tTHREE.SkeletonHelper = function ( object ) {\n\n\t\tthis.bones = this.getBoneList( object );\n\n\t\tvar geometry = new THREE.Geometry();\n\n\t\tfor ( var i = 0; i < this.bones.length; i ++ ) {\n\n\t\t\tvar bone = this.bones[ i ];\n\n\t\t\tif ( bone.parent instanceof THREE.Bone ) {\n\n\t\t\t\tgeometry.vertices.push( new THREE.Vector3() );\n\t\t\t\tgeometry.vertices.push( new THREE.Vector3() );\n\t\t\t\tgeometry.colors.push( new THREE.Color( 0, 0, 1 ) );\n\t\t\t\tgeometry.colors.push( new THREE.Color( 0, 1, 0 ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.dynamic = true;\n\n\t\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors, depthTest: false, depthWrite: false, transparent: true } );\n\n\t\tTHREE.LineSegments.call( this, geometry, material );\n\n\t\tthis.root = object;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t};\n\n\n\tTHREE.SkeletonHelper.prototype = Object.create( THREE.LineSegments.prototype );\n\tTHREE.SkeletonHelper.prototype.constructor = THREE.SkeletonHelper;\n\n\tTHREE.SkeletonHelper.prototype.getBoneList = function( object ) {\n\n\t\tvar boneList = [];\n\n\t\tif ( object instanceof THREE.Bone ) {\n\n\t\t\tboneList.push( object );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < object.children.length; i ++ ) {\n\n\t\t\tboneList.push.apply( boneList, this.getBoneList( object.children[ i ] ) );\n\n\t\t}\n\n\t\treturn boneList;\n\n\t};\n\n\tTHREE.SkeletonHelper.prototype.update = function () {\n\n\t\tvar geometry = this.geometry;\n\n\t\tvar matrixWorldInv = new THREE.Matrix4().getInverse( this.root.matrixWorld );\n\n\t\tvar boneMatrix = new THREE.Matrix4();\n\n\t\tvar j = 0;\n\n\t\tfor ( var i = 0; i < this.bones.length; i ++ ) {\n\n\t\t\tvar bone = this.bones[ i ];\n\n\t\t\tif ( bone.parent instanceof THREE.Bone ) {\n\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\n\t\t\t\tgeometry.vertices[ j ].setFromMatrixPosition( boneMatrix );\n\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\tgeometry.vertices[ j + 1 ].setFromMatrixPosition( boneMatrix );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.verticesNeedUpdate = true;\n\n\t\tgeometry.computeBoundingSphere();\n\n\t};\n\n\t// File:src/extras/helpers/SpotLightHelper.js\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t*/\n\n\tTHREE.SpotLightHelper = function ( light ) {\n\n\t\tTHREE.Object3D.call( this );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tvar geometry = new THREE.BufferGeometry();\n\n\t\tvar positions = [\n\t\t\t0, 0, 0,   0,   0,   1,\n\t\t\t0, 0, 0,   1,   0,   1,\n\t\t\t0, 0, 0, - 1,   0,   1,\n\t\t\t0, 0, 0,   0,   1,   1,\n\t\t\t0, 0, 0,   0, - 1,   1\n\t\t];\n\n\t\tfor ( var i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tvar p1 = ( i / l ) * Math.PI * 2;\n\t\t\tvar p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.addAttribute( 'position', new THREE.Float32Attribute( positions, 3 ) );\n\n\t\tvar material = new THREE.LineBasicMaterial( { fog: false } );\n\n\t\tthis.cone = new THREE.LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t};\n\n\tTHREE.SpotLightHelper.prototype = Object.create( THREE.Object3D.prototype );\n\tTHREE.SpotLightHelper.prototype.constructor = THREE.SpotLightHelper;\n\n\tTHREE.SpotLightHelper.prototype.dispose = function () {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t};\n\n\tTHREE.SpotLightHelper.prototype.update = function () {\n\n\t\tvar vector = new THREE.Vector3();\n\t\tvar vector2 = new THREE.Vector3();\n\n\t\treturn function update() {\n\n\t\t\tvar coneLength = this.light.distance ? this.light.distance : 1000;\n\t\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t\tvector.setFromMatrixPosition( this.light.matrixWorld );\n\t\t\tvector2.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\t\tthis.cone.lookAt( vector2.sub( vector ) );\n\n\t\t\tthis.cone.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\n\n\t\t};\n\n\t}();\n\n\t// File:src/extras/helpers/VertexNormalsHelper.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t*/\n\n\tTHREE.VertexNormalsHelper = function ( object, size, hex, linewidth ) {\n\n\t\tthis.object = object;\n\n\t\tthis.size = ( size !== undefined ) ? size : 1;\n\n\t\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\n\n\t\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t\t//\n\n\t\tvar nNormals = 0;\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tif ( objGeometry instanceof THREE.Geometry ) {\n\n\t\t\tnNormals = objGeometry.faces.length * 3;\n\n\t\t} else if ( objGeometry instanceof THREE.BufferGeometry ) {\n\n\t\t\tnNormals = objGeometry.attributes.normal.count;\n\n\t\t}\n\n\t\t//\n\n\t\tvar geometry = new THREE.BufferGeometry();\n\n\t\tvar positions = new THREE.Float32Attribute( nNormals * 2 * 3, 3 );\n\n\t\tgeometry.addAttribute( 'position', positions );\n\n\t\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t\t//\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t};\n\n\tTHREE.VertexNormalsHelper.prototype = Object.create( THREE.LineSegments.prototype );\n\tTHREE.VertexNormalsHelper.prototype.constructor = THREE.VertexNormalsHelper;\n\n\tTHREE.VertexNormalsHelper.prototype.update = ( function () {\n\n\t\tvar v1 = new THREE.Vector3();\n\t\tvar v2 = new THREE.Vector3();\n\t\tvar normalMatrix = new THREE.Matrix3();\n\n\t\treturn function update() {\n\n\t\t\tvar keys = [ 'a', 'b', 'c' ];\n\n\t\t\tthis.object.updateMatrixWorld( true );\n\n\t\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\t\tvar position = this.geometry.attributes.position;\n\n\t\t\t//\n\n\t\t\tvar objGeometry = this.object.geometry;\n\n\t\t\tif ( objGeometry instanceof THREE.Geometry ) {\n\n\t\t\t\tvar vertices = objGeometry.vertices;\n\n\t\t\t\tvar faces = objGeometry.faces;\n\n\t\t\t\tvar idx = 0;\n\n\t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar vertex = vertices[ face[ keys[ j ] ] ];\n\n\t\t\t\t\t\tvar normal = face.vertexNormals[ j ];\n\n\t\t\t\t\t\tv1.copy( vertex ).applyMatrix4( matrixWorld );\n\n\t\t\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( objGeometry instanceof THREE.BufferGeometry ) {\n\n\t\t\t\tvar objPos = objGeometry.attributes.position;\n\n\t\t\t\tvar objNorm = objGeometry.attributes.normal;\n\n\t\t\t\tvar idx = 0;\n\n\t\t\t\t// for simplicity, ignore index and drawcalls, and render every normal\n\n\t\t\t\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\n\n\t\t\t\t\tv1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\n\n\t\t\t\t\tv2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\n\n\t\t\t\t\tv2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}() );\n\n\t// File:src/extras/helpers/WireframeHelper.js\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.WireframeHelper = function ( object, hex ) {\n\n\t\tvar color = ( hex !== undefined ) ? hex : 0xffffff;\n\n\t\tTHREE.LineSegments.call( this, new THREE.WireframeGeometry( object.geometry ), new THREE.LineBasicMaterial( { color: color } ) );\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t};\n\n\tTHREE.WireframeHelper.prototype = Object.create( THREE.LineSegments.prototype );\n\tTHREE.WireframeHelper.prototype.constructor = THREE.WireframeHelper;\n\n\t// File:src/extras/objects/ImmediateRenderObject.js\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tTHREE.ImmediateRenderObject = function ( material ) {\n\n\t\tTHREE.Object3D.call( this );\n\n\t\tthis.material = material;\n\t\tthis.render = function ( renderCallback ) {};\n\n\t};\n\n\tTHREE.ImmediateRenderObject.prototype = Object.create( THREE.Object3D.prototype );\n\tTHREE.ImmediateRenderObject.prototype.constructor = THREE.ImmediateRenderObject;\n\n\t// File:src/extras/objects/MorphBlendMesh.js\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tTHREE.MorphBlendMesh = function( geometry, material ) {\n\n\t\tTHREE.Mesh.call( this, geometry, material );\n\n\t\tthis.animationsMap = {};\n\t\tthis.animationsList = [];\n\n\t\t// prepare default animation\n\t\t// (all frames played together in 1 second)\n\n\t\tvar numFrames = this.geometry.morphTargets.length;\n\n\t\tvar name = \"__default\";\n\n\t\tvar startFrame = 0;\n\t\tvar endFrame = numFrames - 1;\n\n\t\tvar fps = numFrames / 1;\n\n\t\tthis.createAnimation( name, startFrame, endFrame, fps );\n\t\tthis.setAnimationWeight( name, 1 );\n\n\t};\n\n\tTHREE.MorphBlendMesh.prototype = Object.create( THREE.Mesh.prototype );\n\tTHREE.MorphBlendMesh.prototype.constructor = THREE.MorphBlendMesh;\n\n\tTHREE.MorphBlendMesh.prototype.createAnimation = function ( name, start, end, fps ) {\n\n\t\tvar animation = {\n\n\t\t\tstart: start,\n\t\t\tend: end,\n\n\t\t\tlength: end - start + 1,\n\n\t\t\tfps: fps,\n\t\t\tduration: ( end - start ) / fps,\n\n\t\t\tlastFrame: 0,\n\t\t\tcurrentFrame: 0,\n\n\t\t\tactive: false,\n\n\t\t\ttime: 0,\n\t\t\tdirection: 1,\n\t\t\tweight: 1,\n\n\t\t\tdirectionBackwards: false,\n\t\t\tmirroredLoop: false\n\n\t\t};\n\n\t\tthis.animationsMap[ name ] = animation;\n\t\tthis.animationsList.push( animation );\n\n\t};\n\n\tTHREE.MorphBlendMesh.prototype.autoCreateAnimations = function ( fps ) {\n\n\t\tvar pattern = /([a-z]+)_?(\\d+)/i;\n\n\t\tvar firstAnimation, frameRanges = {};\n\n\t\tvar geometry = this.geometry;\n\n\t\tfor ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\n\n\t\t\tvar morph = geometry.morphTargets[ i ];\n\t\t\tvar chunks = morph.name.match( pattern );\n\n\t\t\tif ( chunks && chunks.length > 1 ) {\n\n\t\t\t\tvar name = chunks[ 1 ];\n\n\t\t\t\tif ( ! frameRanges[ name ] ) frameRanges[ name ] = { start: Infinity, end: - Infinity };\n\n\t\t\t\tvar range = frameRanges[ name ];\n\n\t\t\t\tif ( i < range.start ) range.start = i;\n\t\t\t\tif ( i > range.end ) range.end = i;\n\n\t\t\t\tif ( ! firstAnimation ) firstAnimation = name;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( var name in frameRanges ) {\n\n\t\t\tvar range = frameRanges[ name ];\n\t\t\tthis.createAnimation( name, range.start, range.end, fps );\n\n\t\t}\n\n\t\tthis.firstAnimation = firstAnimation;\n\n\t};\n\n\tTHREE.MorphBlendMesh.prototype.setAnimationDirectionForward = function ( name ) {\n\n\t\tvar animation = this.animationsMap[ name ];\n\n\t\tif ( animation ) {\n\n\t\t\tanimation.direction = 1;\n\t\t\tanimation.directionBackwards = false;\n\n\t\t}\n\n\t};\n\n\tTHREE.MorphBlendMesh.prototype.setAnimationDirectionBackward = function ( name ) {\n\n\t\tvar animation = this.animationsMap[ name ];\n\n\t\tif ( animation ) {\n\n\t\t\tanimation.direction = - 1;\n\t\t\tanimation.directionBackwards = true;\n\n\t\t}\n\n\t};\n\n\tTHREE.MorphBlendMesh.prototype.setAnimationFPS = function ( name, fps ) {\n\n\t\tvar animation = this.animationsMap[ name ];\n\n\t\tif ( animation ) {\n\n\t\t\tanimation.fps = fps;\n\t\t\tanimation.duration = ( animation.end - animation.start ) / animation.fps;\n\n\t\t}\n\n\t};\n\n\tTHREE.MorphBlendMesh.prototype.setAnimationDuration = function ( name, duration ) {\n\n\t\tvar animation = this.animationsMap[ name ];\n\n\t\tif ( animation ) {\n\n\t\t\tanimation.duration = duration;\n\t\t\tanimation.fps = ( animation.end - animation.start ) / animation.duration;\n\n\t\t}\n\n\t};\n\n\tTHREE.MorphBlendMesh.prototype.setAnimationWeight = function ( name, weight ) {\n\n\t\tvar animation = this.animationsMap[ name ];\n\n\t\tif ( animation ) {\n\n\t\t\tanimation.weight = weight;\n\n\t\t}\n\n\t};\n\n\tTHREE.MorphBlendMesh.prototype.setAnimationTime = function ( name, time ) {\n\n\t\tvar animation = this.animationsMap[ name ];\n\n\t\tif ( animation ) {\n\n\t\t\tanimation.time = time;\n\n\t\t}\n\n\t};\n\n\tTHREE.MorphBlendMesh.prototype.getAnimationTime = function ( name ) {\n\n\t\tvar time = 0;\n\n\t\tvar animation = this.animationsMap[ name ];\n\n\t\tif ( animation ) {\n\n\t\t\ttime = animation.time;\n\n\t\t}\n\n\t\treturn time;\n\n\t};\n\n\tTHREE.MorphBlendMesh.prototype.getAnimationDuration = function ( name ) {\n\n\t\tvar duration = - 1;\n\n\t\tvar animation = this.animationsMap[ name ];\n\n\t\tif ( animation ) {\n\n\t\t\tduration = animation.duration;\n\n\t\t}\n\n\t\treturn duration;\n\n\t};\n\n\tTHREE.MorphBlendMesh.prototype.playAnimation = function ( name ) {\n\n\t\tvar animation = this.animationsMap[ name ];\n\n\t\tif ( animation ) {\n\n\t\t\tanimation.time = 0;\n\t\t\tanimation.active = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( \"THREE.MorphBlendMesh: animation[\" + name + \"] undefined in .playAnimation()\" );\n\n\t\t}\n\n\t};\n\n\tTHREE.MorphBlendMesh.prototype.stopAnimation = function ( name ) {\n\n\t\tvar animation = this.animationsMap[ name ];\n\n\t\tif ( animation ) {\n\n\t\t\tanimation.active = false;\n\n\t\t}\n\n\t};\n\n\tTHREE.MorphBlendMesh.prototype.update = function ( delta ) {\n\n\t\tfor ( var i = 0, il = this.animationsList.length; i < il; i ++ ) {\n\n\t\t\tvar animation = this.animationsList[ i ];\n\n\t\t\tif ( ! animation.active ) continue;\n\n\t\t\tvar frameTime = animation.duration / animation.length;\n\n\t\t\tanimation.time += animation.direction * delta;\n\n\t\t\tif ( animation.mirroredLoop ) {\n\n\t\t\t\tif ( animation.time > animation.duration || animation.time < 0 ) {\n\n\t\t\t\t\tanimation.direction *= - 1;\n\n\t\t\t\t\tif ( animation.time > animation.duration ) {\n\n\t\t\t\t\t\tanimation.time = animation.duration;\n\t\t\t\t\t\tanimation.directionBackwards = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( animation.time < 0 ) {\n\n\t\t\t\t\t\tanimation.time = 0;\n\t\t\t\t\t\tanimation.directionBackwards = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tanimation.time = animation.time % animation.duration;\n\n\t\t\t\tif ( animation.time < 0 ) animation.time += animation.duration;\n\n\t\t\t}\n\n\t\t\tvar keyframe = animation.start + THREE.Math.clamp( Math.floor( animation.time / frameTime ), 0, animation.length - 1 );\n\t\t\tvar weight = animation.weight;\n\n\t\t\tif ( keyframe !== animation.currentFrame ) {\n\n\t\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = 0;\n\t\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = 1 * weight;\n\n\t\t\t\tthis.morphTargetInfluences[ keyframe ] = 0;\n\n\t\t\t\tanimation.lastFrame = animation.currentFrame;\n\t\t\t\tanimation.currentFrame = keyframe;\n\n\t\t\t}\n\n\t\t\tvar mix = ( animation.time % frameTime ) / frameTime;\n\n\t\t\tif ( animation.directionBackwards ) mix = 1 - mix;\n\n\t\t\tif ( animation.currentFrame !== animation.lastFrame ) {\n\n\t\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = mix * weight;\n\t\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = ( 1 - mix ) * weight;\n\n\t\t\t} else {\n\n\t\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = weight;\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tif( typeof define !== \"undefined\" && define instanceof Function && define.amd != undefined ){\n\n\t\tdefine(function(){\n\n\t\t\treturn THREE;\n\n\t\t});\n\n\t}\n\telse if( typeof module !== \"undefined\" && module.exports ){\n\n\t\tmodule.exports = THREE;\n\n\t}\n\telse if( this != undefined ){\n\n\t\tthis.THREE = THREE;\n\n\t};\n\n})(this || {});","module.exports = function() {\n\tthrow new Error(\"define cannot be used indirect\");\n};\n","/* globals __webpack_amd_options__ */\nmodule.exports = __webpack_amd_options__;\n","var map = {\n\t\"./AdaptiveToneMappingPass.js\": 58,\n\t\"./BasicShader.js\": 59,\n\t\"./BleachBypassShader.js\": 60,\n\t\"./BlendShader.js\": 61,\n\t\"./BloomPass.js\": 62,\n\t\"./BokehPass.js\": 63,\n\t\"./BokehShader.js\": 64,\n\t\"./BokehShader2.js\": 65,\n\t\"./BrightnessContrastShader.js\": 66,\n\t\"./CanvasRenderer.js\": 67,\n\t\"./ColorCorrectionShader.js\": 68,\n\t\"./ColorifyShader.js\": 69,\n\t\"./ConvolutionShader.js\": 70,\n\t\"./CopyShader.js\": 71,\n\t\"./DDSLoader.js\": 72,\n\t\"./DOFMipMapShader.js\": 73,\n\t\"./DigitalGlitch.js\": 74,\n\t\"./DotScreenPass.js\": 75,\n\t\"./DotScreenShader.js\": 76,\n\t\"./EdgeShader.js\": 77,\n\t\"./EdgeShader2.js\": 78,\n\t\"./EffectComposer.js\": 79,\n\t\"./FXAAShader.js\": 80,\n\t\"./FilmPass.js\": 81,\n\t\"./FilmShader.js\": 82,\n\t\"./FocusShader.js\": 83,\n\t\"./FresnelShader.js\": 84,\n\t\"./GammaCorrectionShader.js\": 85,\n\t\"./GlitchPass.js\": 86,\n\t\"./HorizontalBlurShader.js\": 87,\n\t\"./HorizontalTiltShiftShader.js\": 88,\n\t\"./HueSaturationShader.js\": 89,\n\t\"./JSONLoader.js\": 90,\n\t\"./KaleidoShader.js\": 91,\n\t\"./LuminosityShader.js\": 92,\n\t\"./MTLLoader.js\": 93,\n\t\"./MarchingCubes.js\": 94,\n\t\"./MaskPass.js\": 95,\n\t\"./MirrorShader.js\": 96,\n\t\"./NormalMapShader.js\": 97,\n\t\"./OBJLoader.js\": 98,\n\t\"./OceanShaders.js\": 99,\n\t\"./OrbitControls.js\": 100,\n\t\"./ParallaxShader.js\": 101,\n\t\"./Projector.js\": 102,\n\t\"./RGBShiftShader.js\": 103,\n\t\"./RenderPass.js\": 104,\n\t\"./SSAOShader.js\": 105,\n\t\"./SVGLoader.js\": 106,\n\t\"./SavePass.js\": 107,\n\t\"./SepiaShader.js\": 108,\n\t\"./ShaderPass.js\": 109,\n\t\"./TechnicolorShader.js\": 110,\n\t\"./TexturePass.js\": 111,\n\t\"./ToneMapShader.js\": 112,\n\t\"./TriangleBlurShader.js\": 113,\n\t\"./UnpackDepthRGBAShader.js\": 114,\n\t\"./VerticalBlurShader.js\": 115,\n\t\"./VerticalTiltShiftShader.js\": 116,\n\t\"./VignetteShader.js\": 117\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 57;","module.exports = function( THREE ){\n\n\t/**\n\t * @author miibond\n\t * Generate a texture that represents the luminosity of the current scene, adapted over time\n\t * to simulate the optic nerve responding to the amount of light it is receiving.\n\t * Based on a GDC2007 presentation by Wolfgang Engel titled \"Post-Processing Pipeline\"\n\t *\n\t * Full-screen tone-mapping shader based on http://www.graphics.cornell.edu/~jaf/publications/sig02_paper.pdf\n\t */\n\n\tTHREE.AdaptiveToneMappingPass = function ( adaptive, resolution ) {\n\n\t\tthis.resolution = ( resolution !== undefined ) ? resolution : 256;\n\t\tthis.needsInit = true;\n\t\tthis.adaptive = adaptive !== undefined ? !! adaptive : true;\n\n\t\tthis.luminanceRT = null;\n\t\tthis.previousLuminanceRT = null;\n\t\tthis.currentLuminanceRT = null;\n\n\t\tif ( THREE.CopyShader === undefined )\n\t\t\tconsole.error( \"THREE.AdaptiveToneMappingPass relies on THREE.CopyShader\" );\n\n\t\tvar copyShader = THREE.CopyShader;\n\n\t\tthis.copyUniforms = THREE.UniformsUtils.clone( copyShader.uniforms );\n\n\t\tthis.materialCopy = new THREE.ShaderMaterial( {\n\n\t\t\tuniforms: this.copyUniforms,\n\t\t\tvertexShader: copyShader.vertexShader,\n\t\t\tfragmentShader: copyShader.fragmentShader,\n\t\t\tblending: THREE.NoBlending,\n\t\t\tdepthTest: false\n\n\t\t} );\n\n\t\tif ( THREE.LuminosityShader === undefined )\n\t\t\tconsole.error( \"THREE.AdaptiveToneMappingPass relies on THREE.LuminosityShader\" );\n\n\t\tthis.materialLuminance = new THREE.ShaderMaterial( {\n\n\t\t\tuniforms: THREE.UniformsUtils.clone( THREE.LuminosityShader.uniforms ),\n\t\t\tvertexShader: THREE.LuminosityShader.vertexShader,\n\t\t\tfragmentShader: THREE.LuminosityShader.fragmentShader,\n\t\t\tblending: THREE.NoBlending,\n\t\t} );\n\n\t\tthis.adaptLuminanceShader = {\n\t\t\tdefines: {\n\t\t\t\t\"MIP_LEVEL_1X1\" : ( Math.log( this.resolution ) / Math.log( 2.0 ) ).toFixed( 1 ),\n\t\t\t},\n\t\t\tuniforms: {\n\t\t\t\t\"lastLum\": { type: \"t\", value: null },\n\t\t\t\t\"currentLum\": { type: \"t\", value: null },\n\t\t\t\t\"delta\": { type: 'f', value: 0.016 },\n\t\t\t\t\"tau\": { type: 'f', value: 1.0 }\n\t\t\t},\n\t\t\tvertexShader: [\n\t\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\t\"void main() {\",\n\n\t\t\t\t\t\"vUv = uv;\",\n\t\t\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\t\t\"}\"\n\t\t\t].join( '\\n' ),\n\t\t\tfragmentShader: [\n\t\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\t\"uniform sampler2D lastLum;\",\n\t\t\t\t\"uniform sampler2D currentLum;\",\n\t\t\t\t\"uniform float delta;\",\n\t\t\t\t\"uniform float tau;\",\n\n\t\t\t\t\"void main() {\",\n\n\t\t\t\t\t\"vec4 lastLum = texture2D( lastLum, vUv, MIP_LEVEL_1X1 );\",\n\t\t\t\t\t\"vec4 currentLum = texture2D( currentLum, vUv, MIP_LEVEL_1X1 );\",\n\n\t\t\t\t\t\"float fLastLum = lastLum.r;\",\n\t\t\t\t\t\"float fCurrentLum = currentLum.r;\",\n\n\t\t\t\t\t//The adaption seems to work better in extreme lighting differences\n\t\t\t\t\t//if the input luminance is squared.\n\t\t\t\t\t\"fCurrentLum *= fCurrentLum;\",\n\n\t\t\t\t\t// Adapt the luminance using Pattanaik's technique\n\t\t\t\t\t\"float fAdaptedLum = fLastLum + (fCurrentLum - fLastLum) * (1.0 - exp(-delta * tau));\",\n\t\t\t\t\t// \"fAdaptedLum = sqrt(fAdaptedLum);\",\n\t\t\t\t\t\"gl_FragColor = vec4( vec3( fAdaptedLum ), 1.0 );\",\n\t\t\t\t\"}\",\n\t\t\t].join( '\\n' )\n\t\t};\n\n\t\tthis.materialAdaptiveLum = new THREE.ShaderMaterial( {\n\n\t\t\tuniforms: THREE.UniformsUtils.clone( this.adaptLuminanceShader.uniforms ),\n\t\t\tvertexShader: this.adaptLuminanceShader.vertexShader,\n\t\t\tfragmentShader: this.adaptLuminanceShader.fragmentShader,\n\t\t\tdefines: this.adaptLuminanceShader.defines,\n\t\t\tblending: THREE.NoBlending\n\t\t} );\n\n\t\tif ( THREE.ToneMapShader === undefined )\n\t\t\tconsole.error( \"THREE.AdaptiveToneMappingPass relies on THREE.ToneMapShader\" );\n\n\t\tthis.materialToneMap = new THREE.ShaderMaterial( {\n\n\t\t\tuniforms: THREE.UniformsUtils.clone( THREE.ToneMapShader.uniforms ),\n\t\t\tvertexShader: THREE.ToneMapShader.vertexShader,\n\t\t\tfragmentShader: THREE.ToneMapShader.fragmentShader,\n\t\t\tblending: THREE.NoBlending\n\t\t} );\n\n\t\tthis.enabled = true;\n\t\tthis.needsSwap = true;\n\t\tthis.clear = false;\n\n\t\tthis.camera = new THREE.OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\t\tthis.scene  = new THREE.Scene();\n\n\t\tthis.quad = new THREE.Mesh( new THREE.PlaneBufferGeometry( 2, 2 ), null );\n\t\tthis.scene.add( this.quad );\n\n\t};\n\n\tTHREE.AdaptiveToneMappingPass.prototype = {\n\n\t\trender: function ( renderer, writeBuffer, readBuffer, delta, maskActive ) {\n\n\t\t\tif ( this.needsInit ) {\n\n\t\t\t\tthis.reset( renderer );\n\t\t\t\tthis.luminanceRT.type = readBuffer.type;\n\t\t\t\tthis.previousLuminanceRT.type = readBuffer.type;\n\t\t\t\tthis.currentLuminanceRT.type = readBuffer.type;\n\t\t\t\tthis.needsInit = false;\n\n\t\t\t}\n\n\t\t\tif ( this.adaptive ) {\n\n\t\t\t\t//Render the luminance of the current scene into a render target with mipmapping enabled\n\t\t\t\tthis.quad.material = this.materialLuminance;\n\t\t\t\tthis.materialLuminance.uniforms.tDiffuse.value = readBuffer;\n\t\t\t\trenderer.render( this.scene, this.camera, this.currentLuminanceRT );\n\n\t\t\t\t//Use the new luminance values, the previous luminance and the frame delta to\n\t\t\t\t//adapt the luminance over time.\n\t\t\t\tthis.quad.material = this.materialAdaptiveLum;\n\t\t\t\tthis.materialAdaptiveLum.uniforms.delta.value = delta;\n\t\t\t\tthis.materialAdaptiveLum.uniforms.lastLum.value = this.previousLuminanceRT;\n\t\t\t\tthis.materialAdaptiveLum.uniforms.currentLum.value = this.currentLuminanceRT;\n\t\t\t\trenderer.render( this.scene, this.camera, this.luminanceRT );\n\n\t\t\t\t//Copy the new adapted luminance value so that it can be used by the next frame.\n\t\t\t\tthis.quad.material = this.materialCopy;\n\t\t\t\tthis.copyUniforms.tDiffuse.value = this.luminanceRT;\n\t\t\t\trenderer.render( this.scene, this.camera, this.previousLuminanceRT );\n\n\t\t\t}\n\n\t\t\tthis.quad.material = this.materialToneMap;\n\t\t\tthis.materialToneMap.uniforms.tDiffuse.value = readBuffer;\n\t\t\trenderer.render( this.scene, this.camera, writeBuffer, this.clear );\n\n\t\t},\n\n\t\treset: function( renderer ) {\n\n\t\t\t// render targets\n\t\t\tif ( this.luminanceRT ) {\n\n\t\t\t\tthis.luminanceRT.dispose();\n\n\t\t\t}\n\t\t\tif ( this.currentLuminanceRT ) {\n\n\t\t\t\tthis.currentLuminanceRT.dispose();\n\n\t\t\t}\n\t\t\tif ( this.previousLuminanceRT ) {\n\n\t\t\t\tthis.previousLuminanceRT.dispose();\n\n\t\t\t}\n\t\t\tvar pars = { minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBFormat };\n\n\t\t\tthis.luminanceRT = new THREE.WebGLRenderTarget( this.resolution, this.resolution, pars );\n\t\t\tthis.luminanceRT.generateMipmaps = false;\n\t\t\tthis.previousLuminanceRT = new THREE.WebGLRenderTarget( this.resolution, this.resolution, pars );\n\t\t\tthis.previousLuminanceRT.generateMipmaps = false;\n\n\t\t\t//We only need mipmapping for the current luminosity because we want a down-sampled version to sample in our adaptive shader\n\t\t\tpars.minFilter = THREE.LinearMipMapLinearFilter;\n\t\t\tthis.currentLuminanceRT = new THREE.WebGLRenderTarget( this.resolution, this.resolution, pars );\n\n\t\t\tif ( this.adaptive ) {\n\n\t\t\t\tthis.materialToneMap.defines[ \"ADAPTED_LUMINANCE\" ] = \"\";\n\t\t\t\tthis.materialToneMap.uniforms.luminanceMap.value = this.luminanceRT;\n\n\t\t\t}\n\t\t\t//Put something in the adaptive luminance texture so that the scene can render initially\n\t\t\tthis.quad.material = new THREE.MeshBasicMaterial( { color: 0x777777 } );\n\t\t\tthis.materialLuminance.needsUpdate = true;\n\t\t\tthis.materialAdaptiveLum.needsUpdate = true;\n\t\t\tthis.materialToneMap.needsUpdate = true;\n\t\t\t// renderer.render( this.scene, this.camera, this.luminanceRT );\n\t\t\t// renderer.render( this.scene, this.camera, this.previousLuminanceRT );\n\t\t\t// renderer.render( this.scene, this.camera, this.currentLuminanceRT );\n\n\t\t},\n\n\t\tsetAdaptive: function( adaptive ) {\n\n\t\t\tif ( adaptive ) {\n\n\t\t\t\tthis.adaptive = true;\n\t\t\t\tthis.materialToneMap.defines[ \"ADAPTED_LUMINANCE\" ] = \"\";\n\t\t\t\tthis.materialToneMap.uniforms.luminanceMap.value = this.luminanceRT;\n\n\t\t\t} else {\n\n\t\t\t\tthis.adaptive = false;\n\t\t\t\tdelete this.materialToneMap.defines[ \"ADAPTED_LUMINANCE\" ];\n\t\t\t\tthis.materialToneMap.uniforms.luminanceMap.value = undefined;\n\n\t\t\t}\n\t\t\tthis.materialToneMap.needsUpdate = true;\n\n\t\t},\n\n\t\tsetAdaptionRate: function( rate ) {\n\n\t\t\tif ( rate ) {\n\n\t\t\t\tthis.materialAdaptiveLum.uniforms.tau.value = Math.abs( rate );\n\n\t\t\t}\n\n\t\t},\n\n\t\tsetMaxLuminance: function( maxLum ) {\n\n\t\t\tif ( maxLum ) {\n\n\t\t\t\tthis.materialToneMap.uniforms.maxLuminance.value = maxLum;\n\n\t\t\t}\n\n\t\t},\n\n\t\tsetAverageLuminance: function( avgLum ) {\n\n\t\t\tif ( avgLum ) {\n\n\t\t\t\tthis.materialToneMap.uniforms.averageLuminance.value = avgLum;\n\n\t\t\t}\n\n\t\t},\n\n\t\tsetMiddleGrey: function( middleGrey ) {\n\n\t\t\tif ( middleGrey ) {\n\n\t\t\t\tthis.materialToneMap.uniforms.middleGrey.value = middleGrey;\n\n\t\t\t}\n\n\t\t},\n\n\t\tdispose: function() {\n\n\t\t\tif ( this.luminanceRT ) {\n\n\t\t\t\tthis.luminanceRT.dispose();\n\n\t\t\t}\n\t\t\tif ( this.previousLuminanceRT ) {\n\n\t\t\t\tthis.previousLuminanceRT.dispose();\n\n\t\t\t}\n\t\t\tif ( this.currentLuminanceRT ) {\n\n\t\t\t\tthis.currentLuminanceRT.dispose();\n\n\t\t\t}\n\t\t\tif ( this.materialLuminance ) {\n\n\t\t\t\tthis.materialLuminance.dispose();\n\n\t\t\t}\n\t\t\tif ( this.materialAdaptiveLum ) {\n\n\t\t\t\tthis.materialAdaptiveLum.dispose();\n\n\t\t\t}\n\t\t\tif ( this.materialCopy ) {\n\n\t\t\t\tthis.materialCopy.dispose();\n\n\t\t\t}\n\t\t\tif ( this.materialToneMap ) {\n\n\t\t\t\tthis.materialToneMap.dispose();\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n}\n","module.exports = function( THREE ){\n\t/**\n\t * @author mrdoob / http://www.mrdoob.com\n\t *\n\t * Simple test shader\n\t */\n\n\tTHREE.BasicShader = {\n\n\t\tuniforms: {},\n\n\t\tvertexShader: [\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" ),\n\n\t\tfragmentShader: [\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"gl_FragColor = vec4( 1.0, 0.0, 0.0, 0.5 );\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" )\n\n\t};\n\n}\n","module.exports = function( THREE ){\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * Bleach bypass shader [http://en.wikipedia.org/wiki/Bleach_bypass]\n\t * - based on Nvidia example\n\t * http://developer.download.nvidia.com/shaderlibrary/webpages/shader_library.html#post_bleach_bypass\n\t */\n\n\tTHREE.BleachBypassShader = {\n\n\t\tuniforms: {\n\n\t\t\t\"tDiffuse\": { type: \"t\", value: null },\n\t\t\t\"opacity\":  { type: \"f\", value: 1.0 }\n\n\t\t},\n\n\t\tvertexShader: [\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vUv = uv;\",\n\t\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" ),\n\n\t\tfragmentShader: [\n\n\t\t\t\"uniform float opacity;\",\n\n\t\t\t\"uniform sampler2D tDiffuse;\",\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vec4 base = texture2D( tDiffuse, vUv );\",\n\n\t\t\t\t\"vec3 lumCoeff = vec3( 0.25, 0.65, 0.1 );\",\n\t\t\t\t\"float lum = dot( lumCoeff, base.rgb );\",\n\t\t\t\t\"vec3 blend = vec3( lum );\",\n\n\t\t\t\t\"float L = min( 1.0, max( 0.0, 10.0 * ( lum - 0.45 ) ) );\",\n\n\t\t\t\t\"vec3 result1 = 2.0 * base.rgb * blend;\",\n\t\t\t\t\"vec3 result2 = 1.0 - 2.0 * ( 1.0 - blend ) * ( 1.0 - base.rgb );\",\n\n\t\t\t\t\"vec3 newColor = mix( result1, result2, L );\",\n\n\t\t\t\t\"float A2 = opacity * base.a;\",\n\t\t\t\t\"vec3 mixRGB = A2 * newColor.rgb;\",\n\t\t\t\t\"mixRGB += ( ( 1.0 - A2 ) * base.rgb );\",\n\n\t\t\t\t\"gl_FragColor = vec4( mixRGB, base.a );\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" )\n\n\t};\n\n}\n","module.exports = function( THREE ){\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * Blend two textures\n\t */\n\n\tTHREE.BlendShader = {\n\n\t\tuniforms: {\n\n\t\t\t\"tDiffuse1\": { type: \"t\", value: null },\n\t\t\t\"tDiffuse2\": { type: \"t\", value: null },\n\t\t\t\"mixRatio\":  { type: \"f\", value: 0.5 },\n\t\t\t\"opacity\":   { type: \"f\", value: 1.0 }\n\n\t\t},\n\n\t\tvertexShader: [\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vUv = uv;\",\n\t\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" ),\n\n\t\tfragmentShader: [\n\n\t\t\t\"uniform float opacity;\",\n\t\t\t\"uniform float mixRatio;\",\n\n\t\t\t\"uniform sampler2D tDiffuse1;\",\n\t\t\t\"uniform sampler2D tDiffuse2;\",\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vec4 texel1 = texture2D( tDiffuse1, vUv );\",\n\t\t\t\t\"vec4 texel2 = texture2D( tDiffuse2, vUv );\",\n\t\t\t\t\"gl_FragColor = opacity * mix( texel1, texel2, mixRatio );\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" )\n\n\t};\n\n}","module.exports = function( THREE ){\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tTHREE.BloomPass = function ( strength, kernelSize, sigma, resolution ) {\n\n\t\tstrength = ( strength !== undefined ) ? strength : 1;\n\t\tkernelSize = ( kernelSize !== undefined ) ? kernelSize : 25;\n\t\tsigma = ( sigma !== undefined ) ? sigma : 4.0;\n\t\tresolution = ( resolution !== undefined ) ? resolution : 256;\n\n\t\t// render targets\n\n\t\tvar pars = { minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBFormat };\n\n\t\tthis.renderTargetX = new THREE.WebGLRenderTarget( resolution, resolution, pars );\n\t\tthis.renderTargetY = new THREE.WebGLRenderTarget( resolution, resolution, pars );\n\n\t\t// copy material\n\n\t\tif ( THREE.CopyShader === undefined )\n\t\t\tconsole.error( \"THREE.BloomPass relies on THREE.CopyShader\" );\n\n\t\tvar copyShader = THREE.CopyShader;\n\n\t\tthis.copyUniforms = THREE.UniformsUtils.clone( copyShader.uniforms );\n\n\t\tthis.copyUniforms[ \"opacity\" ].value = strength;\n\n\t\tthis.materialCopy = new THREE.ShaderMaterial( {\n\n\t\t\tuniforms: this.copyUniforms,\n\t\t\tvertexShader: copyShader.vertexShader,\n\t\t\tfragmentShader: copyShader.fragmentShader,\n\t\t\tblending: THREE.AdditiveBlending,\n\t\t\ttransparent: true\n\n\t\t} );\n\n\t\t// convolution material\n\n\t\tif ( THREE.ConvolutionShader === undefined )\n\t\t\tconsole.error( \"THREE.BloomPass relies on THREE.ConvolutionShader\" );\n\n\t\tvar convolutionShader = THREE.ConvolutionShader;\n\n\t\tthis.convolutionUniforms = THREE.UniformsUtils.clone( convolutionShader.uniforms );\n\n\t\tthis.convolutionUniforms[ \"uImageIncrement\" ].value = THREE.BloomPass.blurX;\n\t\tthis.convolutionUniforms[ \"cKernel\" ].value = THREE.ConvolutionShader.buildKernel( sigma );\n\n\t\tthis.materialConvolution = new THREE.ShaderMaterial( {\n\n\t\t\tuniforms: this.convolutionUniforms,\n\t\t\tvertexShader:  convolutionShader.vertexShader,\n\t\t\tfragmentShader: convolutionShader.fragmentShader,\n\t\t\tdefines: {\n\t\t\t\t\"KERNEL_SIZE_FLOAT\": kernelSize.toFixed( 1 ),\n\t\t\t\t\"KERNEL_SIZE_INT\": kernelSize.toFixed( 0 )\n\t\t\t}\n\n\t\t} );\n\n\t\tthis.enabled = true;\n\t\tthis.needsSwap = false;\n\t\tthis.clear = false;\n\n\n\t\tthis.camera = new THREE.OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\t\tthis.scene  = new THREE.Scene();\n\n\t\tthis.quad = new THREE.Mesh( new THREE.PlaneBufferGeometry( 2, 2 ), null );\n\t\tthis.scene.add( this.quad );\n\n\t};\n\n\tTHREE.BloomPass.prototype = {\n\n\t\trender: function ( renderer, writeBuffer, readBuffer, delta, maskActive ) {\n\n\t\t\tif ( maskActive ) renderer.context.disable( renderer.context.STENCIL_TEST );\n\n\t\t\t// Render quad with blured scene into texture (convolution pass 1)\n\n\t\t\tthis.quad.material = this.materialConvolution;\n\n\t\t\tthis.convolutionUniforms[ \"tDiffuse\" ].value = readBuffer;\n\t\t\tthis.convolutionUniforms[ \"uImageIncrement\" ].value = THREE.BloomPass.blurX;\n\n\t\t\trenderer.render( this.scene, this.camera, this.renderTargetX, true );\n\n\n\t\t\t// Render quad with blured scene into texture (convolution pass 2)\n\n\t\t\tthis.convolutionUniforms[ \"tDiffuse\" ].value = this.renderTargetX;\n\t\t\tthis.convolutionUniforms[ \"uImageIncrement\" ].value = THREE.BloomPass.blurY;\n\n\t\t\trenderer.render( this.scene, this.camera, this.renderTargetY, true );\n\n\t\t\t// Render original scene with superimposed blur to texture\n\n\t\t\tthis.quad.material = this.materialCopy;\n\n\t\t\tthis.copyUniforms[ \"tDiffuse\" ].value = this.renderTargetY;\n\n\t\t\tif ( maskActive ) renderer.context.enable( renderer.context.STENCIL_TEST );\n\n\t\t\trenderer.render( this.scene, this.camera, readBuffer, this.clear );\n\n\t\t}\n\n\t};\n\n\tTHREE.BloomPass.blurX = new THREE.Vector2( 0.001953125, 0.0 );\n\tTHREE.BloomPass.blurY = new THREE.Vector2( 0.0, 0.001953125 );\n\n};\n","module.exports = function( THREE ){\n\n\t/**\n\t * Depth-of-field post-process with bokeh shader\n\t */\n\n\n\tTHREE.BokehPass = function ( scene, camera, params ) {\n\n\t\tthis.scene = scene;\n\t\tthis.camera = camera;\n\n\t\tvar focus = ( params.focus !== undefined ) ? params.focus : 1.0;\n\t\tvar aspect = ( params.aspect !== undefined ) ? params.aspect : camera.aspect;\n\t\tvar aperture = ( params.aperture !== undefined ) ? params.aperture : 0.025;\n\t\tvar maxblur = ( params.maxblur !== undefined ) ? params.maxblur : 1.0;\n\n\t\t// render targets\n\n\t\tvar width = params.width || window.innerWidth || 1;\n\t\tvar height = params.height || window.innerHeight || 1;\n\n\t\tthis.renderTargetColor = new THREE.WebGLRenderTarget( width, height, {\n\t\t\tminFilter: THREE.LinearFilter,\n\t\t\tmagFilter: THREE.LinearFilter,\n\t\t\tformat: THREE.RGBFormat\n\t\t} );\n\n\t\tthis.renderTargetDepth = this.renderTargetColor.clone();\n\n\t\t// depth material\n\n\t\tthis.materialDepth = new THREE.MeshDepthMaterial();\n\n\t\t// bokeh material\n\n\t\tif ( THREE.BokehShader === undefined ) {\n\n\t\t\tconsole.error( \"THREE.BokehPass relies on THREE.BokehShader\" );\n\n\t\t}\n\t\t\n\t\tvar bokehShader = THREE.BokehShader;\n\t\tvar bokehUniforms = THREE.UniformsUtils.clone( bokehShader.uniforms );\n\n\t\tbokehUniforms[ \"tDepth\" ].value = this.renderTargetDepth;\n\n\t\tbokehUniforms[ \"focus\" ].value = focus;\n\t\tbokehUniforms[ \"aspect\" ].value = aspect;\n\t\tbokehUniforms[ \"aperture\" ].value = aperture;\n\t\tbokehUniforms[ \"maxblur\" ].value = maxblur;\n\n\t\tthis.materialBokeh = new THREE.ShaderMaterial( {\n\t\t\tuniforms: bokehUniforms,\n\t\t\tvertexShader: bokehShader.vertexShader,\n\t\t\tfragmentShader: bokehShader.fragmentShader\n\t\t} );\n\n\t\tthis.uniforms = bokehUniforms;\n\t\tthis.enabled = true;\n\t\tthis.needsSwap = false;\n\t\tthis.renderToScreen = false;\n\t\tthis.clear = false;\n\n\t\tthis.camera2 = new THREE.OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\t\tthis.scene2  = new THREE.Scene();\n\n\t\tthis.quad2 = new THREE.Mesh( new THREE.PlaneBufferGeometry( 2, 2 ), null );\n\t\tthis.scene2.add( this.quad2 );\n\n\t};\n\n\tTHREE.BokehPass.prototype = {\n\n\t\trender: function ( renderer, writeBuffer, readBuffer, delta, maskActive ) {\n\n\t\t\tthis.quad2.material = this.materialBokeh;\n\n\t\t\t// Render depth into texture\n\n\t\t\tthis.scene.overrideMaterial = this.materialDepth;\n\n\t\t\trenderer.render( this.scene, this.camera, this.renderTargetDepth, true );\n\n\t\t\t// Render bokeh composite\n\n\t\t\tthis.uniforms[ \"tColor\" ].value = readBuffer;\n\n\t\t\tif ( this.renderToScreen ) {\n\n\t\t\t\trenderer.render( this.scene2, this.camera2 );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.render( this.scene2, this.camera2, writeBuffer, this.clear );\n\n\t\t\t}\n\n\t\t\tthis.scene.overrideMaterial = null;\n\n\t\t}\n\n\t};\n\n};\n\n","module.exports = function( THREE ){\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * Depth-of-field shader with bokeh\n\t * ported from GLSL shader by Martins Upitis\n\t * http://artmartinsh.blogspot.com/2010/02/glsl-lens-blur-filter-with-bokeh.html\n\t */\n\n\tTHREE.BokehShader = {\n\n\t\tuniforms: {\n\n\t\t\t\"tColor\":   { type: \"t\", value: null },\n\t\t\t\"tDepth\":   { type: \"t\", value: null },\n\t\t\t\"focus\":    { type: \"f\", value: 1.0 },\n\t\t\t\"aspect\":   { type: \"f\", value: 1.0 },\n\t\t\t\"aperture\": { type: \"f\", value: 0.025 },\n\t\t\t\"maxblur\":  { type: \"f\", value: 1.0 }\n\n\t\t},\n\n\t\tvertexShader: [\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vUv = uv;\",\n\t\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" ),\n\n\t\tfragmentShader: [\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"uniform sampler2D tColor;\",\n\t\t\t\"uniform sampler2D tDepth;\",\n\n\t\t\t\"uniform float maxblur;\",  // max blur amount\n\t\t\t\"uniform float aperture;\", // aperture - bigger values for shallower depth of field\n\n\t\t\t\"uniform float focus;\",\n\t\t\t\"uniform float aspect;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vec2 aspectcorrect = vec2( 1.0, aspect );\",\n\n\t\t\t\t\"vec4 depth1 = texture2D( tDepth, vUv );\",\n\n\t\t\t\t\"float factor = depth1.x - focus;\",\n\n\t\t\t\t\"vec2 dofblur = vec2 ( clamp( factor * aperture, -maxblur, maxblur ) );\",\n\n\t\t\t\t\"vec2 dofblur9 = dofblur * 0.9;\",\n\t\t\t\t\"vec2 dofblur7 = dofblur * 0.7;\",\n\t\t\t\t\"vec2 dofblur4 = dofblur * 0.4;\",\n\n\t\t\t\t\"vec4 col = vec4( 0.0 );\",\n\n\t\t\t\t\"col += texture2D( tColor, vUv.xy );\",\n\t\t\t\t\"col += texture2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur );\",\n\t\t\t\t\"col += texture2D( tColor, vUv.xy + ( vec2(  0.15,  0.37 ) * aspectcorrect ) * dofblur );\",\n\t\t\t\t\"col += texture2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur );\",\n\t\t\t\t\"col += texture2D( tColor, vUv.xy + ( vec2( -0.37,  0.15 ) * aspectcorrect ) * dofblur );\",\n\t\t\t\t\"col += texture2D( tColor, vUv.xy + ( vec2(  0.40,  0.0  ) * aspectcorrect ) * dofblur );\",\n\t\t\t\t\"col += texture2D( tColor, vUv.xy + ( vec2(  0.37, -0.15 ) * aspectcorrect ) * dofblur );\",\n\t\t\t\t\"col += texture2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur );\",\n\t\t\t\t\"col += texture2D( tColor, vUv.xy + ( vec2( -0.15, -0.37 ) * aspectcorrect ) * dofblur );\",\n\t\t\t\t\"col += texture2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur );\",\n\t\t\t\t\"col += texture2D( tColor, vUv.xy + ( vec2( -0.15,  0.37 ) * aspectcorrect ) * dofblur );\",\n\t\t\t\t\"col += texture2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur );\",\n\t\t\t\t\"col += texture2D( tColor, vUv.xy + ( vec2(  0.37,  0.15 ) * aspectcorrect ) * dofblur );\",\n\t\t\t\t\"col += texture2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur );\",\n\t\t\t\t\"col += texture2D( tColor, vUv.xy + ( vec2( -0.37, -0.15 ) * aspectcorrect ) * dofblur );\",\n\t\t\t\t\"col += texture2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur );\",\n\t\t\t\t\"col += texture2D( tColor, vUv.xy + ( vec2(  0.15, -0.37 ) * aspectcorrect ) * dofblur );\",\n\n\t\t\t\t\"col += texture2D( tColor, vUv.xy + ( vec2(  0.15,  0.37 ) * aspectcorrect ) * dofblur9 );\",\n\t\t\t\t\"col += texture2D( tColor, vUv.xy + ( vec2( -0.37,  0.15 ) * aspectcorrect ) * dofblur9 );\",\n\t\t\t\t\"col += texture2D( tColor, vUv.xy + ( vec2(  0.37, -0.15 ) * aspectcorrect ) * dofblur9 );\",\n\t\t\t\t\"col += texture2D( tColor, vUv.xy + ( vec2( -0.15, -0.37 ) * aspectcorrect ) * dofblur9 );\",\n\t\t\t\t\"col += texture2D( tColor, vUv.xy + ( vec2( -0.15,  0.37 ) * aspectcorrect ) * dofblur9 );\",\n\t\t\t\t\"col += texture2D( tColor, vUv.xy + ( vec2(  0.37,  0.15 ) * aspectcorrect ) * dofblur9 );\",\n\t\t\t\t\"col += texture2D( tColor, vUv.xy + ( vec2( -0.37, -0.15 ) * aspectcorrect ) * dofblur9 );\",\n\t\t\t\t\"col += texture2D( tColor, vUv.xy + ( vec2(  0.15, -0.37 ) * aspectcorrect ) * dofblur9 );\",\n\n\t\t\t\t\"col += texture2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur7 );\",\n\t\t\t\t\"col += texture2D( tColor, vUv.xy + ( vec2(  0.40,  0.0  ) * aspectcorrect ) * dofblur7 );\",\n\t\t\t\t\"col += texture2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur7 );\",\n\t\t\t\t\"col += texture2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur7 );\",\n\t\t\t\t\"col += texture2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur7 );\",\n\t\t\t\t\"col += texture2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur7 );\",\n\t\t\t\t\"col += texture2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur7 );\",\n\t\t\t\t\"col += texture2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur7 );\",\n\n\t\t\t\t\"col += texture2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur4 );\",\n\t\t\t\t\"col += texture2D( tColor, vUv.xy + ( vec2(  0.4,   0.0  ) * aspectcorrect ) * dofblur4 );\",\n\t\t\t\t\"col += texture2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur4 );\",\n\t\t\t\t\"col += texture2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur4 );\",\n\t\t\t\t\"col += texture2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur4 );\",\n\t\t\t\t\"col += texture2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur4 );\",\n\t\t\t\t\"col += texture2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur4 );\",\n\t\t\t\t\"col += texture2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur4 );\",\n\n\t\t\t\t\"gl_FragColor = col / 41.0;\",\n\t\t\t\t\"gl_FragColor.a = 1.0;\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" )\n\n\t};\n\n}\n","module.exports = function( THREE ){\n\t/**\n\t * @author zz85 / https://github.com/zz85 | twitter.com/blurspline\n\t *\n\t * Depth-of-field shader with bokeh\n\t * ported from GLSL shader by Martins Upitis\n\t * http://blenderartists.org/forum/showthread.php?237488-GLSL-depth-of-field-with-bokeh-v2-4-(update)\n\t *\n\t * Requires #define RINGS and SAMPLES integers\n\t */\n\n\n\n\tTHREE.BokehShader = {\n\n\t\tuniforms: {\n\n\t\t\t\"textureWidth\":  { type: \"f\", value: 1.0 },\n\t\t\t\"textureHeight\":  { type: \"f\", value: 1.0 },\n\n\t\t\t\"focalDepth\":   { type: \"f\", value: 1.0 },\n\t\t\t\"focalLength\":   { type: \"f\", value: 24.0 },\n\t\t\t\"fstop\": { type: \"f\", value: 0.9 },\n\n\t\t\t\"tColor\":   { type: \"t\", value: null },\n\t\t\t\"tDepth\":   { type: \"t\", value: null },\n\n\t\t\t\"maxblur\":  { type: \"f\", value: 1.0 },\n\n\t\t\t\"showFocus\":   { type: \"i\", value: 0 },\n\t\t\t\"manualdof\":   { type: \"i\", value: 0 },\n\t\t\t\"vignetting\":   { type: \"i\", value: 0 },\n\t\t\t\"depthblur\":   { type: \"i\", value: 0 },\n\n\t\t\t\"threshold\":  { type: \"f\", value: 0.5 },\n\t\t\t\"gain\":  { type: \"f\", value: 2.0 },\n\t\t\t\"bias\":  { type: \"f\", value: 0.5 },\n\t\t\t\"fringe\":  { type: \"f\", value: 0.7 },\n\n\t\t\t\"znear\":  { type: \"f\", value: 0.1 },\n\t\t\t\"zfar\":  { type: \"f\", value: 100 },\n\n\t\t\t\"noise\":  { type: \"i\", value: 1 },\n\t\t\t\"dithering\":  { type: \"f\", value: 0.0001 },\n\t\t\t\"pentagon\": { type: \"i\", value: 0 },\n\n\t\t\t\"shaderFocus\":  { type: \"i\", value: 1 },\n\t\t\t\"focusCoords\":  { type: \"v2\", value: new THREE.Vector2() },\n\n\n\t\t},\n\n\t\tvertexShader: [\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vUv = uv;\",\n\t\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" ),\n\n\t\tfragmentShader: [\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"uniform sampler2D tColor;\",\n\t\t\t\"uniform sampler2D tDepth;\",\n\t\t\t\"uniform float textureWidth;\",\n\t\t\t\"uniform float textureHeight;\",\n\n\t\t\t\"const float PI = 3.14159265;\",\n\n\t\t\t\"uniform float focalDepth;  //focal distance value in meters, but you may use autofocus option below\",\n\t\t\t\"uniform float focalLength; //focal length in mm\",\n\t\t\t\"uniform float fstop; //f-stop value\",\n\t\t\t\"uniform bool showFocus; //show debug focus point and focal range (red = focal point, green = focal range)\",\n\n\t\t\t\"/*\",\n\t\t\t\"make sure that these two values are the same for your camera, otherwise distances will be wrong.\",\n\t\t\t\"*/\",\n\n\t\t\t\"uniform float znear; // camera clipping start\",\n\t\t\t\"uniform float zfar; // camera clipping end\",\n\n\t\t\t\"//------------------------------------------\",\n\t\t\t\"//user variables\",\n\n\t\t\t\"const int samples = SAMPLES; //samples on the first ring\",\n\t\t\t\"const int rings = RINGS; //ring count\",\n\n\t\t\t\"const int maxringsamples = rings * samples;\",\n\n\t\t\t\"uniform bool manualdof; // manual dof calculation\",\n\t\t\t\"float ndofstart = 1.0; // near dof blur start\",\n\t\t\t\"float ndofdist = 2.0; // near dof blur falloff distance\",\n\t\t\t\"float fdofstart = 1.0; // far dof blur start\",\n\t\t\t\"float fdofdist = 3.0; // far dof blur falloff distance\",\n\n\t\t\t\"float CoC = 0.03; //circle of confusion size in mm (35mm film = 0.03mm)\",\n\n\t\t\t\"uniform bool vignetting; // use optical lens vignetting\",\n\n\t\t\t\"float vignout = 1.3; // vignetting outer border\",\n\t\t\t\"float vignin = 0.0; // vignetting inner border\",\n\t\t\t\"float vignfade = 22.0; // f-stops till vignete fades\",\n\n\t\t\t\"uniform bool shaderFocus;\",\n\t\t\t\"// disable if you use external focalDepth value\",\n\n\t\t\t\"uniform vec2 focusCoords;\",\n\t\t\t\"// autofocus point on screen (0.0,0.0 - left lower corner, 1.0,1.0 - upper right)\",\n\t\t\t\"// if center of screen use vec2(0.5, 0.5);\",\n\n\t\t\t\"uniform float maxblur;\",\n\t\t\t\"//clamp value of max blur (0.0 = no blur, 1.0 default)\",\n\n\t\t\t\"uniform float threshold; // highlight threshold;\",\n\t\t\t\"uniform float gain; // highlight gain;\",\n\n\t\t\t\"uniform float bias; // bokeh edge bias\",\n\t\t\t\"uniform float fringe; // bokeh chromatic aberration / fringing\",\n\n\t\t\t\"uniform bool noise; //use noise instead of pattern for sample dithering\",\n\n\t\t\t\"uniform float dithering;\",\n\n\t\t\t\"uniform bool depthblur; // blur the depth buffer\",\n\t\t\t\"float dbsize = 1.25; // depth blur size\",\n\n\t\t\t\"/*\",\n\t\t\t\"next part is experimental\",\n\t\t\t\"not looking good with small sample and ring count\",\n\t\t\t\"looks okay starting from samples = 4, rings = 4\",\n\t\t\t\"*/\",\n\n\t\t\t\"uniform bool pentagon; //use pentagon as bokeh shape?\",\n\t\t\t\"float feather = 0.4; //pentagon shape feather\",\n\n\t\t\t\"//------------------------------------------\",\n\n\t\t\t\"float penta(vec2 coords) {\",\n\t\t\t\t\"//pentagonal shape\",\n\t\t\t\t\"float scale = float(rings) - 1.3;\",\n\t\t\t\t\"vec4  HS0 = vec4( 1.0,         0.0,         0.0,  1.0);\",\n\t\t\t\t\"vec4  HS1 = vec4( 0.309016994, 0.951056516, 0.0,  1.0);\",\n\t\t\t\t\"vec4  HS2 = vec4(-0.809016994, 0.587785252, 0.0,  1.0);\",\n\t\t\t\t\"vec4  HS3 = vec4(-0.809016994,-0.587785252, 0.0,  1.0);\",\n\t\t\t\t\"vec4  HS4 = vec4( 0.309016994,-0.951056516, 0.0,  1.0);\",\n\t\t\t\t\"vec4  HS5 = vec4( 0.0        ,0.0         , 1.0,  1.0);\",\n\n\t\t\t\t\"vec4  one = vec4( 1.0 );\",\n\n\t\t\t\t\"vec4 P = vec4((coords),vec2(scale, scale));\",\n\n\t\t\t\t\"vec4 dist = vec4(0.0);\",\n\t\t\t\t\"float inorout = -4.0;\",\n\n\t\t\t\t\"dist.x = dot( P, HS0 );\",\n\t\t\t\t\"dist.y = dot( P, HS1 );\",\n\t\t\t\t\"dist.z = dot( P, HS2 );\",\n\t\t\t\t\"dist.w = dot( P, HS3 );\",\n\n\t\t\t\t\"dist = smoothstep( -feather, feather, dist );\",\n\n\t\t\t\t\"inorout += dot( dist, one );\",\n\n\t\t\t\t\"dist.x = dot( P, HS4 );\",\n\t\t\t\t\"dist.y = HS5.w - abs( P.z );\",\n\n\t\t\t\t\"dist = smoothstep( -feather, feather, dist );\",\n\t\t\t\t\"inorout += dist.x;\",\n\n\t\t\t\t\"return clamp( inorout, 0.0, 1.0 );\",\n\t\t\t\"}\",\n\n\t\t\t\"float bdepth(vec2 coords) {\",\n\t\t\t\t\"// Depth buffer blur\",\n\t\t\t\t\"float d = 0.0;\",\n\t\t\t\t\"float kernel[9];\",\n\t\t\t\t\"vec2 offset[9];\",\n\n\t\t\t\t\"vec2 wh = vec2(1.0/textureWidth,1.0/textureHeight) * dbsize;\",\n\n\t\t\t\t\"offset[0] = vec2(-wh.x,-wh.y);\",\n\t\t\t\t\"offset[1] = vec2( 0.0, -wh.y);\",\n\t\t\t\t\"offset[2] = vec2( wh.x -wh.y);\",\n\n\t\t\t\t\"offset[3] = vec2(-wh.x,  0.0);\",\n\t\t\t\t\"offset[4] = vec2( 0.0,   0.0);\",\n\t\t\t\t\"offset[5] = vec2( wh.x,  0.0);\",\n\n\t\t\t\t\"offset[6] = vec2(-wh.x, wh.y);\",\n\t\t\t\t\"offset[7] = vec2( 0.0,  wh.y);\",\n\t\t\t\t\"offset[8] = vec2( wh.x, wh.y);\",\n\n\t\t\t\t\"kernel[0] = 1.0/16.0;   kernel[1] = 2.0/16.0;   kernel[2] = 1.0/16.0;\",\n\t\t\t\t\"kernel[3] = 2.0/16.0;   kernel[4] = 4.0/16.0;   kernel[5] = 2.0/16.0;\",\n\t\t\t\t\"kernel[6] = 1.0/16.0;   kernel[7] = 2.0/16.0;   kernel[8] = 1.0/16.0;\",\n\n\n\t\t\t\t\"for( int i=0; i<9; i++ ) {\",\n\t\t\t\t\t\"float tmp = texture2D(tDepth, coords + offset[i]).r;\",\n\t\t\t\t\t\"d += tmp * kernel[i];\",\n\t\t\t\t\"}\",\n\n\t\t\t\t\"return d;\",\n\t\t\t\"}\",\n\n\n\t\t\t\"vec3 color(vec2 coords,float blur) {\",\n\t\t\t\t\"//processing the sample\",\n\n\t\t\t\t\"vec3 col = vec3(0.0);\",\n\t\t\t\t\"vec2 texel = vec2(1.0/textureWidth,1.0/textureHeight);\",\n\n\t\t\t\t\"col.r = texture2D(tColor,coords + vec2(0.0,1.0)*texel*fringe*blur).r;\",\n\t\t\t\t\"col.g = texture2D(tColor,coords + vec2(-0.866,-0.5)*texel*fringe*blur).g;\",\n\t\t\t\t\"col.b = texture2D(tColor,coords + vec2(0.866,-0.5)*texel*fringe*blur).b;\",\n\n\t\t\t\t\"vec3 lumcoeff = vec3(0.299,0.587,0.114);\",\n\t\t\t\t\"float lum = dot(col.rgb, lumcoeff);\",\n\t\t\t\t\"float thresh = max((lum-threshold)*gain, 0.0);\",\n\t\t\t\t\"return col+mix(vec3(0.0),col,thresh*blur);\",\n\t\t\t\"}\",\n\n\t\t\t\"vec2 rand(vec2 coord) {\",\n\t\t\t\t\"// generating noise / pattern texture for dithering\",\n\n\t\t\t\t\"float noiseX = ((fract(1.0-coord.s*(textureWidth/2.0))*0.25)+(fract(coord.t*(textureHeight/2.0))*0.75))*2.0-1.0;\",\n\t\t\t\t\"float noiseY = ((fract(1.0-coord.s*(textureWidth/2.0))*0.75)+(fract(coord.t*(textureHeight/2.0))*0.25))*2.0-1.0;\",\n\n\t\t\t\t\"if (noise) {\",\n\t\t\t\t\t\"noiseX = clamp(fract(sin(dot(coord ,vec2(12.9898,78.233))) * 43758.5453),0.0,1.0)*2.0-1.0;\",\n\t\t\t\t\t\"noiseY = clamp(fract(sin(dot(coord ,vec2(12.9898,78.233)*2.0)) * 43758.5453),0.0,1.0)*2.0-1.0;\",\n\t\t\t\t\"}\",\n\n\t\t\t\t\"return vec2(noiseX,noiseY);\",\n\t\t\t\"}\",\n\n\t\t\t\"vec3 debugFocus(vec3 col, float blur, float depth) {\",\n\t\t\t\t\"float edge = 0.002*depth; //distance based edge smoothing\",\n\t\t\t\t\"float m = clamp(smoothstep(0.0,edge,blur),0.0,1.0);\",\n\t\t\t\t\"float e = clamp(smoothstep(1.0-edge,1.0,blur),0.0,1.0);\",\n\n\t\t\t\t\"col = mix(col,vec3(1.0,0.5,0.0),(1.0-m)*0.6);\",\n\t\t\t\t\"col = mix(col,vec3(0.0,0.5,1.0),((1.0-e)-(1.0-m))*0.2);\",\n\n\t\t\t\t\"return col;\",\n\t\t\t\"}\",\n\n\t\t\t\"float linearize(float depth) {\",\n\t\t\t\t\"return -zfar * znear / (depth * (zfar - znear) - zfar);\",\n\t\t\t\"}\",\n\n\n\t\t\t\"float vignette() {\",\n\t\t\t\t\"float dist = distance(vUv.xy, vec2(0.5,0.5));\",\n\t\t\t\t\"dist = smoothstep(vignout+(fstop/vignfade), vignin+(fstop/vignfade), dist);\",\n\t\t\t\t\"return clamp(dist,0.0,1.0);\",\n\t\t\t\"}\",\n\n\t\t\t\"float gather(float i, float j, int ringsamples, inout vec3 col, float w, float h, float blur) {\",\n\t\t\t\t\"float rings2 = float(rings);\",\n\t\t\t\t\"float step = PI*2.0 / float(ringsamples);\",\n\t\t\t\t\"float pw = cos(j*step)*i;\",\n\t\t\t\t\"float ph = sin(j*step)*i;\",\n\t\t\t\t\"float p = 1.0;\",\n\t\t\t\t\"if (pentagon) {\",\n\t\t\t\t\t\"p = penta(vec2(pw,ph));\",\n\t\t\t\t\"}\",\n\t\t\t\t\"col += color(vUv.xy + vec2(pw*w,ph*h), blur) * mix(1.0, i/rings2, bias) * p;\",\n\t\t\t\t\"return 1.0 * mix(1.0, i /rings2, bias) * p;\",\n\t\t\t\"}\",\n\n\t\t\t\"void main() {\",\n\t\t\t\t\"//scene depth calculation\",\n\n\t\t\t\t\"float depth = linearize(texture2D(tDepth,vUv.xy).x);\",\n\n\t\t\t\t\"// Blur depth?\",\n\t\t\t\t\"if (depthblur) {\",\n\t\t\t\t\t\"depth = linearize(bdepth(vUv.xy));\",\n\t\t\t\t\"}\",\n\n\t\t\t\t\"//focal plane calculation\",\n\n\t\t\t\t\"float fDepth = focalDepth;\",\n\n\t\t\t\t\"if (shaderFocus) {\",\n\n\t\t\t\t\t\"fDepth = linearize(texture2D(tDepth,focusCoords).x);\",\n\n\t\t\t\t\"}\",\n\n\t\t\t\t\"// dof blur factor calculation\",\n\n\t\t\t\t\"float blur = 0.0;\",\n\n\t\t\t\t\"if (manualdof) {\",\n\t\t\t\t\t\"float a = depth-fDepth; // Focal plane\",\n\t\t\t\t\t\"float b = (a-fdofstart)/fdofdist; // Far DoF\",\n\t\t\t\t\t\"float c = (-a-ndofstart)/ndofdist; // Near Dof\",\n\t\t\t\t\t\"blur = (a>0.0) ? b : c;\",\n\t\t\t\t\"} else {\",\n\t\t\t\t\t\"float f = focalLength; // focal length in mm\",\n\t\t\t\t\t\"float d = fDepth*1000.0; // focal plane in mm\",\n\t\t\t\t\t\"float o = depth*1000.0; // depth in mm\",\n\n\t\t\t\t\t\"float a = (o*f)/(o-f);\",\n\t\t\t\t\t\"float b = (d*f)/(d-f);\",\n\t\t\t\t\t\"float c = (d-f)/(d*fstop*CoC);\",\n\n\t\t\t\t\t\"blur = abs(a-b)*c;\",\n\t\t\t\t\"}\",\n\n\t\t\t\t\"blur = clamp(blur,0.0,1.0);\",\n\n\t\t\t\t\"// calculation of pattern for dithering\",\n\n\t\t\t\t\"vec2 noise = rand(vUv.xy)*dithering*blur;\",\n\n\t\t\t\t\"// getting blur x and y step factor\",\n\n\t\t\t\t\"float w = (1.0/textureWidth)*blur*maxblur+noise.x;\",\n\t\t\t\t\"float h = (1.0/textureHeight)*blur*maxblur+noise.y;\",\n\n\t\t\t\t\"// calculation of final color\",\n\n\t\t\t\t\"vec3 col = vec3(0.0);\",\n\n\t\t\t\t\"if(blur < 0.05) {\",\n\t\t\t\t\t\"//some optimization thingy\",\n\t\t\t\t\t\"col = texture2D(tColor, vUv.xy).rgb;\",\n\t\t\t\t\"} else {\",\n\t\t\t\t\t\"col = texture2D(tColor, vUv.xy).rgb;\",\n\t\t\t\t\t\"float s = 1.0;\",\n\t\t\t\t\t\"int ringsamples;\",\n\n\t\t\t\t\t\"for (int i = 1; i <= rings; i++) {\",\n\t\t\t\t\t\t\"/*unboxstart*/\",\n\t\t\t\t\t\t\"ringsamples = i * samples;\",\n\n\t\t\t\t\t\t\"for (int j = 0 ; j < maxringsamples ; j++) {\",\n\t\t\t\t\t\t\t\"if (j >= ringsamples) break;\",\n\t\t\t\t\t\t\t\"s += gather(float(i), float(j), ringsamples, col, w, h, blur);\",\n\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\"/*unboxend*/\",\n\t\t\t\t\t\"}\",\n\n\t\t\t\t\t\"col /= s; //divide by sample count\",\n\t\t\t\t\"}\",\n\n\t\t\t\t\"if (showFocus) {\",\n\t\t\t\t\t\"col = debugFocus(col, blur, depth);\",\n\t\t\t\t\"}\",\n\n\t\t\t\t\"if (vignetting) {\",\n\t\t\t\t\t\"col *= vignette();\",\n\t\t\t\t\"}\",\n\n\t\t\t\t\"gl_FragColor.rgb = col;\",\n\t\t\t\t\"gl_FragColor.a = 1.0;\",\n\t\t\t\"} \"\n\n\t\t].join( \"\\n\" )\n\n\t};\n\n}\n","module.exports = function( THREE ){\n\t/**\n\t * @author tapio / http://tapio.github.com/\n\t *\n\t * Brightness and contrast adjustment\n\t * https://github.com/evanw/glfx.js\n\t * brightness: -1 to 1 (-1 is solid black, 0 is no change, and 1 is solid white)\n\t * contrast: -1 to 1 (-1 is solid gray, 0 is no change, and 1 is maximum contrast)\n\t */\n\n\tTHREE.BrightnessContrastShader = {\n\n\t\tuniforms: {\n\n\t\t\t\"tDiffuse\":   { type: \"t\", value: null },\n\t\t\t\"brightness\": { type: \"f\", value: 0 },\n\t\t\t\"contrast\":   { type: \"f\", value: 0 }\n\n\t\t},\n\n\t\tvertexShader: [\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vUv = uv;\",\n\n\t\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" ),\n\n\t\tfragmentShader: [\n\n\t\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\t\"uniform float brightness;\",\n\t\t\t\"uniform float contrast;\",\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"gl_FragColor = texture2D( tDiffuse, vUv );\",\n\n\t\t\t\t\"gl_FragColor.rgb += brightness;\",\n\n\t\t\t\t\"if (contrast > 0.0) {\",\n\t\t\t\t\t\"gl_FragColor.rgb = (gl_FragColor.rgb - 0.5) / (1.0 - contrast) + 0.5;\",\n\t\t\t\t\"} else {\",\n\t\t\t\t\t\"gl_FragColor.rgb = (gl_FragColor.rgb - 0.5) * (1.0 + contrast) + 0.5;\",\n\t\t\t\t\"}\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" )\n\n\t};\n\n}\n","module.exports = function( THREE ){\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.SpriteCanvasMaterial = function ( parameters ) {\n\n\t\tTHREE.Material.call( this );\n\n\t\tthis.type = 'SpriteCanvasMaterial';\n\n\t\tthis.color = new THREE.Color( 0xffffff );\n\t\tthis.program = function ( context, color ) {};\n\n\t\tthis.setValues( parameters );\n\n\t};\n\n\tTHREE.SpriteCanvasMaterial.prototype = Object.create( THREE.Material.prototype );\n\tTHREE.SpriteCanvasMaterial.prototype.constructor = THREE.SpriteCanvasMaterial;\n\n\tTHREE.SpriteCanvasMaterial.prototype.clone = function () {\n\n\t\tvar material = new THREE.SpriteCanvasMaterial();\n\n\t\tmaterial.copy( this );\n\t\tmaterial.color.copy( this.color );\n\t\tmaterial.program = this.program;\n\n\t\treturn material;\n\n\t};\n\n\t//\n\n\tTHREE.CanvasRenderer = function ( parameters ) {\n\n\t\tconsole.log( 'THREE.CanvasRenderer', THREE.REVISION );\n\n\t\tparameters = parameters || {};\n\n\t\tvar _this = this,\n\t\t_renderData, _elements, _lights,\n\t\t_projector = new THREE.Projector(),\n\n\t\t_canvas = parameters.canvas !== undefined\n\t\t\t\t ? parameters.canvas\n\t\t\t\t : document.createElement( 'canvas' ),\n\n\t\t_canvasWidth = _canvas.width,\n\t\t_canvasHeight = _canvas.height,\n\t\t_canvasWidthHalf = Math.floor( _canvasWidth / 2 ),\n\t\t_canvasHeightHalf = Math.floor( _canvasHeight / 2 ),\n\n\t\t_viewportX = 0,\n\t\t_viewportY = 0,\n\t\t_viewportWidth = _canvasWidth,\n\t\t_viewportHeight = _canvasHeight,\n\n\t\t_pixelRatio = 1,\n\n\t\t_context = _canvas.getContext( '2d', {\n\t\t\talpha: parameters.alpha === true\n\t\t} ),\n\n\t\t_clearColor = new THREE.Color( 0x000000 ),\n\t\t_clearAlpha = parameters.alpha === true ? 0 : 1,\n\n\t\t_contextGlobalAlpha = 1,\n\t\t_contextGlobalCompositeOperation = 0,\n\t\t_contextStrokeStyle = null,\n\t\t_contextFillStyle = null,\n\t\t_contextLineWidth = null,\n\t\t_contextLineCap = null,\n\t\t_contextLineJoin = null,\n\t\t_contextLineDash = [],\n\n\t\t_camera,\n\n\t\t_v1, _v2, _v3, _v4,\n\t\t_v5 = new THREE.RenderableVertex(),\n\t\t_v6 = new THREE.RenderableVertex(),\n\n\t\t_v1x, _v1y, _v2x, _v2y, _v3x, _v3y,\n\t\t_v4x, _v4y, _v5x, _v5y, _v6x, _v6y,\n\n\t\t_color = new THREE.Color(),\n\t\t_color1 = new THREE.Color(),\n\t\t_color2 = new THREE.Color(),\n\t\t_color3 = new THREE.Color(),\n\t\t_color4 = new THREE.Color(),\n\n\t\t_diffuseColor = new THREE.Color(),\n\t\t_emissiveColor = new THREE.Color(),\n\n\t\t_lightColor = new THREE.Color(),\n\n\t\t_patterns = {},\n\n\t\t_image, _uvs,\n\t\t_uv1x, _uv1y, _uv2x, _uv2y, _uv3x, _uv3y,\n\n\t\t_clipBox = new THREE.Box2(),\n\t\t_clearBox = new THREE.Box2(),\n\t\t_elemBox = new THREE.Box2(),\n\n\t\t_ambientLight = new THREE.Color(),\n\t\t_directionalLights = new THREE.Color(),\n\t\t_pointLights = new THREE.Color(),\n\n\t\t_vector3 = new THREE.Vector3(), // Needed for PointLight\n\t\t_centroid = new THREE.Vector3(),\n\t\t_normal = new THREE.Vector3(),\n\t\t_normalViewMatrix = new THREE.Matrix3();\n\n\t\t/* TODO\n\t\t_canvas.mozImageSmoothingEnabled = false;\n\t\t_canvas.webkitImageSmoothingEnabled = false;\n\t\t_canvas.msImageSmoothingEnabled = false;\n\t\t_canvas.imageSmoothingEnabled = false;\n\t\t*/\n\n\t\t// dash+gap fallbacks for Firefox and everything else\n\n\t\tif ( _context.setLineDash === undefined ) {\n\n\t\t\t_context.setLineDash = function () {};\n\n\t\t}\n\n\t\tthis.domElement = _canvas;\n\n\t\tthis.autoClear = true;\n\t\tthis.sortObjects = true;\n\t\tthis.sortElements = true;\n\n\t\tthis.info = {\n\n\t\t\trender: {\n\n\t\t\t\tvertices: 0,\n\t\t\t\tfaces: 0\n\n\t\t\t}\n\n\t\t};\n\n\t\t// WebGLRenderer compatibility\n\n\t\tthis.supportsVertexTextures = function () {};\n\t\tthis.setFaceCulling = function () {};\n\n\t\t// API\n\n\t\tthis.getContext = function () {\n\n\t\t\treturn _context;\n\n\t\t};\n\n\t\tthis.getContextAttributes = function () {\n\n\t\t\treturn _context.getContextAttributes();\n\n\t\t};\n\n\t\tthis.getPixelRatio = function () {\n\n\t\t\treturn _pixelRatio;\n\n\t\t};\n\n\t\tthis.setPixelRatio = function ( value ) {\n\n\t\t\tif ( value !== undefined ) _pixelRatio = value;\n\n\t\t};\n\n\t\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\t\t_canvasWidth = width * _pixelRatio;\n\t\t\t_canvasHeight = height * _pixelRatio;\n\n\t\t\t_canvas.width = _canvasWidth;\n\t\t\t_canvas.height = _canvasHeight;\n\n\t\t\t_canvasWidthHalf = Math.floor( _canvasWidth / 2 );\n\t\t\t_canvasHeightHalf = Math.floor( _canvasHeight / 2 );\n\n\t\t\tif ( updateStyle !== false ) {\n\n\t\t\t\t_canvas.style.width = width + 'px';\n\t\t\t\t_canvas.style.height = height + 'px';\n\n\t\t\t}\n\n\t\t\t_clipBox.min.set( - _canvasWidthHalf, - _canvasHeightHalf );\n\t\t\t_clipBox.max.set(   _canvasWidthHalf,   _canvasHeightHalf );\n\n\t\t\t_clearBox.min.set( - _canvasWidthHalf, - _canvasHeightHalf );\n\t\t\t_clearBox.max.set(   _canvasWidthHalf,   _canvasHeightHalf );\n\n\t\t\t_contextGlobalAlpha = 1;\n\t\t\t_contextGlobalCompositeOperation = 0;\n\t\t\t_contextStrokeStyle = null;\n\t\t\t_contextFillStyle = null;\n\t\t\t_contextLineWidth = null;\n\t\t\t_contextLineCap = null;\n\t\t\t_contextLineJoin = null;\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t\t_viewportX = x * _pixelRatio;\n\t\t\t_viewportY = y * _pixelRatio;\n\n\t\t\t_viewportWidth = width * _pixelRatio;\n\t\t\t_viewportHeight = height * _pixelRatio;\n\n\t\t};\n\n\t\tthis.setScissor = function () {};\n\t\tthis.setScissorTest = function () {};\n\n\t\tthis.setClearColor = function ( color, alpha ) {\n\n\t\t\t_clearColor.set( color );\n\t\t\t_clearAlpha = alpha !== undefined ? alpha : 1;\n\n\t\t\t_clearBox.min.set( - _canvasWidthHalf, - _canvasHeightHalf );\n\t\t\t_clearBox.max.set(   _canvasWidthHalf,   _canvasHeightHalf );\n\n\t\t};\n\n\t\tthis.setClearColorHex = function ( hex, alpha ) {\n\n\t\t\tconsole.warn( 'THREE.CanvasRenderer: .setClearColorHex() is being removed. Use .setClearColor() instead.' );\n\t\t\tthis.setClearColor( hex, alpha );\n\n\t\t};\n\n\t\tthis.getClearColor = function () {\n\n\t\t\treturn _clearColor;\n\n\t\t};\n\n\t\tthis.getClearAlpha = function () {\n\n\t\t\treturn _clearAlpha;\n\n\t\t};\n\n\t\tthis.getMaxAnisotropy = function () {\n\n\t\t\treturn 0;\n\n\t\t};\n\n\t\tthis.clear = function () {\n\n\t\t\tif ( _clearBox.isEmpty() === false ) {\n\n\t\t\t\t_clearBox.intersect( _clipBox );\n\t\t\t\t_clearBox.expandByScalar( 2 );\n\n\t\t\t\t_clearBox.min.x = _clearBox.min.x + _canvasWidthHalf;\n\t\t\t\t_clearBox.min.y =  - _clearBox.min.y + _canvasHeightHalf;\t\t// higher y value !\n\t\t\t\t_clearBox.max.x = _clearBox.max.x + _canvasWidthHalf;\n\t\t\t\t_clearBox.max.y =  - _clearBox.max.y + _canvasHeightHalf;\t\t// lower y value !\n\n\t\t\t\tif ( _clearAlpha < 1 ) {\n\n\t\t\t\t\t_context.clearRect(\n\t\t\t\t\t\t_clearBox.min.x | 0,\n\t\t\t\t\t\t_clearBox.max.y | 0,\n\t\t\t\t\t\t( _clearBox.max.x - _clearBox.min.x ) | 0,\n\t\t\t\t\t\t( _clearBox.min.y - _clearBox.max.y ) | 0\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t\tif ( _clearAlpha > 0 ) {\n\n\t\t\t\t\tsetBlending( THREE.NormalBlending );\n\t\t\t\t\tsetOpacity( 1 );\n\n\t\t\t\t\tsetFillStyle( 'rgba(' + Math.floor( _clearColor.r * 255 ) + ',' + Math.floor( _clearColor.g * 255 ) + ',' + Math.floor( _clearColor.b * 255 ) + ',' + _clearAlpha + ')' );\n\n\t\t\t\t\t_context.fillRect(\n\t\t\t\t\t\t_clearBox.min.x | 0,\n\t\t\t\t\t\t_clearBox.max.y | 0,\n\t\t\t\t\t\t( _clearBox.max.x - _clearBox.min.x ) | 0,\n\t\t\t\t\t\t( _clearBox.min.y - _clearBox.max.y ) | 0\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t\t_clearBox.makeEmpty();\n\n\t\t\t}\n\n\t\t};\n\n\t\t// compatibility\n\n\t\tthis.clearColor = function () {};\n\t\tthis.clearDepth = function () {};\n\t\tthis.clearStencil = function () {};\n\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\tif ( camera instanceof THREE.Camera === false ) {\n\n\t\t\t\tconsole.error( 'THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( this.autoClear === true ) this.clear();\n\n\t\t\t_this.info.render.vertices = 0;\n\t\t\t_this.info.render.faces = 0;\n\n\t\t\t_context.setTransform( _viewportWidth / _canvasWidth, 0, 0, - _viewportHeight / _canvasHeight, _viewportX, _canvasHeight - _viewportY );\n\t\t\t_context.translate( _canvasWidthHalf, _canvasHeightHalf );\n\n\t\t\t_renderData = _projector.projectScene( scene, camera, this.sortObjects, this.sortElements );\n\t\t\t_elements = _renderData.elements;\n\t\t\t_lights = _renderData.lights;\n\t\t\t_camera = camera;\n\n\t\t\t_normalViewMatrix.getNormalMatrix( camera.matrixWorldInverse );\n\n\t\t\t/* DEBUG\n\t\t\tsetFillStyle( 'rgba( 0, 255, 255, 0.5 )' );\n\t\t\t_context.fillRect( _clipBox.min.x, _clipBox.min.y, _clipBox.max.x - _clipBox.min.x, _clipBox.max.y - _clipBox.min.y );\n\t\t\t*/\n\n\t\t\tcalculateLights();\n\n\t\t\tfor ( var e = 0, el = _elements.length; e < el; e ++ ) {\n\n\t\t\t\tvar element = _elements[ e ];\n\n\t\t\t\tvar material = element.material;\n\n\t\t\t\tif ( material === undefined || material.opacity === 0 ) continue;\n\n\t\t\t\t_elemBox.makeEmpty();\n\n\t\t\t\tif ( element instanceof THREE.RenderableSprite ) {\n\n\t\t\t\t\t_v1 = element;\n\t\t\t\t\t_v1.x *= _canvasWidthHalf; _v1.y *= _canvasHeightHalf;\n\n\t\t\t\t\trenderSprite( _v1, element, material );\n\n\t\t\t\t} else if ( element instanceof THREE.RenderableLine ) {\n\n\t\t\t\t\t_v1 = element.v1; _v2 = element.v2;\n\n\t\t\t\t\t_v1.positionScreen.x *= _canvasWidthHalf; _v1.positionScreen.y *= _canvasHeightHalf;\n\t\t\t\t\t_v2.positionScreen.x *= _canvasWidthHalf; _v2.positionScreen.y *= _canvasHeightHalf;\n\n\t\t\t\t\t_elemBox.setFromPoints( [\n\t\t\t\t\t\t_v1.positionScreen,\n\t\t\t\t\t\t_v2.positionScreen\n\t\t\t\t\t] );\n\n\t\t\t\t\tif ( _clipBox.intersectsBox( _elemBox ) === true ) {\n\n\t\t\t\t\t\trenderLine( _v1, _v2, element, material );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( element instanceof THREE.RenderableFace ) {\n\n\t\t\t\t\t_v1 = element.v1; _v2 = element.v2; _v3 = element.v3;\n\n\t\t\t\t\tif ( _v1.positionScreen.z < - 1 || _v1.positionScreen.z > 1 ) continue;\n\t\t\t\t\tif ( _v2.positionScreen.z < - 1 || _v2.positionScreen.z > 1 ) continue;\n\t\t\t\t\tif ( _v3.positionScreen.z < - 1 || _v3.positionScreen.z > 1 ) continue;\n\n\t\t\t\t\t_v1.positionScreen.x *= _canvasWidthHalf; _v1.positionScreen.y *= _canvasHeightHalf;\n\t\t\t\t\t_v2.positionScreen.x *= _canvasWidthHalf; _v2.positionScreen.y *= _canvasHeightHalf;\n\t\t\t\t\t_v3.positionScreen.x *= _canvasWidthHalf; _v3.positionScreen.y *= _canvasHeightHalf;\n\n\t\t\t\t\tif ( material.overdraw > 0 ) {\n\n\t\t\t\t\t\texpand( _v1.positionScreen, _v2.positionScreen, material.overdraw );\n\t\t\t\t\t\texpand( _v2.positionScreen, _v3.positionScreen, material.overdraw );\n\t\t\t\t\t\texpand( _v3.positionScreen, _v1.positionScreen, material.overdraw );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_elemBox.setFromPoints( [\n\t\t\t\t\t\t_v1.positionScreen,\n\t\t\t\t\t\t_v2.positionScreen,\n\t\t\t\t\t\t_v3.positionScreen\n\t\t\t\t\t] );\n\n\t\t\t\t\tif ( _clipBox.intersectsBox( _elemBox ) === true ) {\n\n\t\t\t\t\t\trenderFace3( _v1, _v2, _v3, 0, 1, 2, element, material );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t/* DEBUG\n\t\t\t\tsetLineWidth( 1 );\n\t\t\t\tsetStrokeStyle( 'rgba( 0, 255, 0, 0.5 )' );\n\t\t\t\t_context.strokeRect( _elemBox.min.x, _elemBox.min.y, _elemBox.max.x - _elemBox.min.x, _elemBox.max.y - _elemBox.min.y );\n\t\t\t\t*/\n\n\t\t\t\t_clearBox.union( _elemBox );\n\n\t\t\t}\n\n\t\t\t/* DEBUG\n\t\t\tsetLineWidth( 1 );\n\t\t\tsetStrokeStyle( 'rgba( 255, 0, 0, 0.5 )' );\n\t\t\t_context.strokeRect( _clearBox.min.x, _clearBox.min.y, _clearBox.max.x - _clearBox.min.x, _clearBox.max.y - _clearBox.min.y );\n\t\t\t*/\n\n\t\t\t_context.setTransform( 1, 0, 0, 1, 0, 0 );\n\n\t\t};\n\n\t\t//\n\n\t\tfunction calculateLights() {\n\n\t\t\t_ambientLight.setRGB( 0, 0, 0 );\n\t\t\t_directionalLights.setRGB( 0, 0, 0 );\n\t\t\t_pointLights.setRGB( 0, 0, 0 );\n\n\t\t\tfor ( var l = 0, ll = _lights.length; l < ll; l ++ ) {\n\n\t\t\t\tvar light = _lights[ l ];\n\t\t\t\tvar lightColor = light.color;\n\n\t\t\t\tif ( light instanceof THREE.AmbientLight ) {\n\n\t\t\t\t\t_ambientLight.add( lightColor );\n\n\t\t\t\t} else if ( light instanceof THREE.DirectionalLight ) {\n\n\t\t\t\t\t// for sprites\n\n\t\t\t\t\t_directionalLights.add( lightColor );\n\n\t\t\t\t} else if ( light instanceof THREE.PointLight ) {\n\n\t\t\t\t\t// for sprites\n\n\t\t\t\t\t_pointLights.add( lightColor );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction calculateLight( position, normal, color ) {\n\n\t\t\tfor ( var l = 0, ll = _lights.length; l < ll; l ++ ) {\n\n\t\t\t\tvar light = _lights[ l ];\n\n\t\t\t\t_lightColor.copy( light.color );\n\n\t\t\t\tif ( light instanceof THREE.DirectionalLight ) {\n\n\t\t\t\t\tvar lightPosition = _vector3.setFromMatrixPosition( light.matrixWorld ).normalize();\n\n\t\t\t\t\tvar amount = normal.dot( lightPosition );\n\n\t\t\t\t\tif ( amount <= 0 ) continue;\n\n\t\t\t\t\tamount *= light.intensity;\n\n\t\t\t\t\tcolor.add( _lightColor.multiplyScalar( amount ) );\n\n\t\t\t\t} else if ( light instanceof THREE.PointLight ) {\n\n\t\t\t\t\tvar lightPosition = _vector3.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\t\tvar amount = normal.dot( _vector3.subVectors( lightPosition, position ).normalize() );\n\n\t\t\t\t\tif ( amount <= 0 ) continue;\n\n\t\t\t\t\tamount *= light.distance == 0 ? 1 : 1 - Math.min( position.distanceTo( lightPosition ) / light.distance, 1 );\n\n\t\t\t\t\tif ( amount == 0 ) continue;\n\n\t\t\t\t\tamount *= light.intensity;\n\n\t\t\t\t\tcolor.add( _lightColor.multiplyScalar( amount ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderSprite( v1, element, material ) {\n\n\t\t\tsetOpacity( material.opacity );\n\t\t\tsetBlending( material.blending );\n\n\t\t\tvar scaleX = element.scale.x * _canvasWidthHalf;\n\t\t\tvar scaleY = element.scale.y * _canvasHeightHalf;\n\n\t\t\tvar dist = 0.5 * Math.sqrt( scaleX * scaleX + scaleY * scaleY ); // allow for rotated sprite\n\t\t\t_elemBox.min.set( v1.x - dist, v1.y - dist );\n\t\t\t_elemBox.max.set( v1.x + dist, v1.y + dist );\n\n\t\t\tif ( material instanceof THREE.SpriteMaterial ) {\n\n\t\t\t\tvar texture = material.map;\n\n\t\t\t\tif ( texture !== null ) {\n\n\t\t\t\t\tvar pattern = _patterns[ texture.id ];\n\n\t\t\t\t\tif ( pattern === undefined || pattern.version !== texture.version ) {\n\n\t\t\t\t\t\tpattern = textureToPattern( texture );\n\t\t\t\t\t\t_patterns[ texture.id ] = pattern;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( pattern.canvas !== undefined ) {\n\n\t\t\t\t\t\tsetFillStyle( pattern.canvas );\n\n\t\t\t\t\t\tvar bitmap = texture.image;\n\n\t\t\t\t\t\tvar ox = bitmap.width * texture.offset.x;\n\t\t\t\t\t\tvar oy = bitmap.height * texture.offset.y;\n\n\t\t\t\t\t\tvar sx = bitmap.width * texture.repeat.x;\n\t\t\t\t\t\tvar sy = bitmap.height * texture.repeat.y;\n\n\t\t\t\t\t\tvar cx = scaleX / sx;\n\t\t\t\t\t\tvar cy = scaleY / sy;\n\n\t\t\t\t\t\t_context.save();\n\t\t\t\t\t\t_context.translate( v1.x, v1.y );\n\t\t\t\t\t\tif ( material.rotation !== 0 ) _context.rotate( material.rotation );\n\t\t\t\t\t\t_context.translate( - scaleX / 2, - scaleY / 2 );\n\t\t\t\t\t\t_context.scale( cx, cy );\n\t\t\t\t\t\t_context.translate( - ox, - oy );\n\t\t\t\t\t\t_context.fillRect( ox, oy, sx, sy );\n\t\t\t\t\t\t_context.restore();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// no texture\n\n\t\t\t\t\tsetFillStyle( material.color.getStyle() );\n\n\t\t\t\t\t_context.save();\n\t\t\t\t\t_context.translate( v1.x, v1.y );\n\t\t\t\t\tif ( material.rotation !== 0 ) _context.rotate( material.rotation );\n\t\t\t\t\t_context.scale( scaleX, - scaleY );\n\t\t\t\t\t_context.fillRect( - 0.5, - 0.5, 1, 1 );\n\t\t\t\t\t_context.restore();\n\n\t\t\t\t}\n\n\t\t\t} else if ( material instanceof THREE.SpriteCanvasMaterial ) {\n\n\t\t\t\tsetStrokeStyle( material.color.getStyle() );\n\t\t\t\tsetFillStyle( material.color.getStyle() );\n\n\t\t\t\t_context.save();\n\t\t\t\t_context.translate( v1.x, v1.y );\n\t\t\t\tif ( material.rotation !== 0 ) _context.rotate( material.rotation );\n\t\t\t\t_context.scale( scaleX, scaleY );\n\n\t\t\t\tmaterial.program( _context );\n\n\t\t\t\t_context.restore();\n\n\t\t\t}\n\n\t\t\t/* DEBUG\n\t\t\tsetStrokeStyle( 'rgb(255,255,0)' );\n\t\t\t_context.beginPath();\n\t\t\t_context.moveTo( v1.x - 10, v1.y );\n\t\t\t_context.lineTo( v1.x + 10, v1.y );\n\t\t\t_context.moveTo( v1.x, v1.y - 10 );\n\t\t\t_context.lineTo( v1.x, v1.y + 10 );\n\t\t\t_context.stroke();\n\t\t\t*/\n\n\t\t}\n\n\t\tfunction renderLine( v1, v2, element, material ) {\n\n\t\t\tsetOpacity( material.opacity );\n\t\t\tsetBlending( material.blending );\n\n\t\t\t_context.beginPath();\n\t\t\t_context.moveTo( v1.positionScreen.x, v1.positionScreen.y );\n\t\t\t_context.lineTo( v2.positionScreen.x, v2.positionScreen.y );\n\n\t\t\tif ( material instanceof THREE.LineBasicMaterial ) {\n\n\t\t\t\tsetLineWidth( material.linewidth );\n\t\t\t\tsetLineCap( material.linecap );\n\t\t\t\tsetLineJoin( material.linejoin );\n\n\t\t\t\tif ( material.vertexColors !== THREE.VertexColors ) {\n\n\t\t\t\t\tsetStrokeStyle( material.color.getStyle() );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar colorStyle1 = element.vertexColors[ 0 ].getStyle();\n\t\t\t\t\tvar colorStyle2 = element.vertexColors[ 1 ].getStyle();\n\n\t\t\t\t\tif ( colorStyle1 === colorStyle2 ) {\n\n\t\t\t\t\t\tsetStrokeStyle( colorStyle1 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttry {\n\n\t\t\t\t\t\t\tvar grad = _context.createLinearGradient(\n\t\t\t\t\t\t\t\tv1.positionScreen.x,\n\t\t\t\t\t\t\t\tv1.positionScreen.y,\n\t\t\t\t\t\t\t\tv2.positionScreen.x,\n\t\t\t\t\t\t\t\tv2.positionScreen.y\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tgrad.addColorStop( 0, colorStyle1 );\n\t\t\t\t\t\t\tgrad.addColorStop( 1, colorStyle2 );\n\n\t\t\t\t\t\t} catch ( exception ) {\n\n\t\t\t\t\t\t\tgrad = colorStyle1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tsetStrokeStyle( grad );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t_context.stroke();\n\t\t\t\t_elemBox.expandByScalar( material.linewidth * 2 );\n\n\t\t\t} else if ( material instanceof THREE.LineDashedMaterial ) {\n\n\t\t\t\tsetLineWidth( material.linewidth );\n\t\t\t\tsetLineCap( material.linecap );\n\t\t\t\tsetLineJoin( material.linejoin );\n\t\t\t\tsetStrokeStyle( material.color.getStyle() );\n\t\t\t\tsetLineDash( [ material.dashSize, material.gapSize ] );\n\n\t\t\t\t_context.stroke();\n\n\t\t\t\t_elemBox.expandByScalar( material.linewidth * 2 );\n\n\t\t\t\tsetLineDash( [] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderFace3( v1, v2, v3, uv1, uv2, uv3, element, material ) {\n\n\t\t\t_this.info.render.vertices += 3;\n\t\t\t_this.info.render.faces ++;\n\n\t\t\tsetOpacity( material.opacity );\n\t\t\tsetBlending( material.blending );\n\n\t\t\t_v1x = v1.positionScreen.x; _v1y = v1.positionScreen.y;\n\t\t\t_v2x = v2.positionScreen.x; _v2y = v2.positionScreen.y;\n\t\t\t_v3x = v3.positionScreen.x; _v3y = v3.positionScreen.y;\n\n\t\t\tdrawTriangle( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y );\n\n\t\t\tif ( ( material instanceof THREE.MeshLambertMaterial || material instanceof THREE.MeshPhongMaterial ) && material.map === null ) {\n\n\t\t\t\t_diffuseColor.copy( material.color );\n\t\t\t\t_emissiveColor.copy( material.emissive );\n\n\t\t\t\tif ( material.vertexColors === THREE.FaceColors ) {\n\n\t\t\t\t\t_diffuseColor.multiply( element.color );\n\n\t\t\t\t}\n\n\t\t\t\t_color.copy( _ambientLight );\n\n\t\t\t\t_centroid.copy( v1.positionWorld ).add( v2.positionWorld ).add( v3.positionWorld ).divideScalar( 3 );\n\n\t\t\t\tcalculateLight( _centroid, element.normalModel, _color );\n\n\t\t\t\t_color.multiply( _diffuseColor ).add( _emissiveColor );\n\n\t\t\t\tmaterial.wireframe === true\n\t\t\t\t\t ? strokePath( _color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin )\n\t\t\t\t\t : fillPath( _color );\n\n\t\t\t} else if ( material instanceof THREE.MeshBasicMaterial ||\n\t\t\t\t\t    material instanceof THREE.MeshLambertMaterial ||\n\t\t\t\t\t    material instanceof THREE.MeshPhongMaterial ) {\n\n\t\t\t\tif ( material.map !== null ) {\n\n\t\t\t\t\tvar mapping = material.map.mapping;\n\n\t\t\t\t\tif ( mapping === THREE.UVMapping ) {\n\n\t\t\t\t\t\t_uvs = element.uvs;\n\t\t\t\t\t\tpatternPath( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _uvs[ uv1 ].x, _uvs[ uv1 ].y, _uvs[ uv2 ].x, _uvs[ uv2 ].y, _uvs[ uv3 ].x, _uvs[ uv3 ].y, material.map );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.envMap !== null ) {\n\n\t\t\t\t\tif ( material.envMap.mapping === THREE.SphericalReflectionMapping ) {\n\n\t\t\t\t\t\t_normal.copy( element.vertexNormalsModel[ uv1 ] ).applyMatrix3( _normalViewMatrix );\n\t\t\t\t\t\t_uv1x = 0.5 * _normal.x + 0.5;\n\t\t\t\t\t\t_uv1y = 0.5 * _normal.y + 0.5;\n\n\t\t\t\t\t\t_normal.copy( element.vertexNormalsModel[ uv2 ] ).applyMatrix3( _normalViewMatrix );\n\t\t\t\t\t\t_uv2x = 0.5 * _normal.x + 0.5;\n\t\t\t\t\t\t_uv2y = 0.5 * _normal.y + 0.5;\n\n\t\t\t\t\t\t_normal.copy( element.vertexNormalsModel[ uv3 ] ).applyMatrix3( _normalViewMatrix );\n\t\t\t\t\t\t_uv3x = 0.5 * _normal.x + 0.5;\n\t\t\t\t\t\t_uv3y = 0.5 * _normal.y + 0.5;\n\n\t\t\t\t\t\tpatternPath( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _uv1x, _uv1y, _uv2x, _uv2y, _uv3x, _uv3y, material.envMap );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_color.copy( material.color );\n\n\t\t\t\t\tif ( material.vertexColors === THREE.FaceColors ) {\n\n\t\t\t\t\t\t_color.multiply( element.color );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterial.wireframe === true\n\t\t\t\t\t\t ? strokePath( _color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin )\n\t\t\t\t\t\t : fillPath( _color );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material instanceof THREE.MeshNormalMaterial ) {\n\n\t\t\t\t_normal.copy( element.normalModel ).applyMatrix3( _normalViewMatrix );\n\n\t\t\t\t_color.setRGB( _normal.x, _normal.y, _normal.z ).multiplyScalar( 0.5 ).addScalar( 0.5 );\n\n\t\t\t\tmaterial.wireframe === true\n\t\t\t\t\t ? strokePath( _color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin )\n\t\t\t\t\t : fillPath( _color );\n\n\t\t\t} else {\n\n\t\t\t\t_color.setRGB( 1, 1, 1 );\n\n\t\t\t\tmaterial.wireframe === true\n\t\t\t\t\t ? strokePath( _color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin )\n\t\t\t\t\t : fillPath( _color );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfunction drawTriangle( x0, y0, x1, y1, x2, y2 ) {\n\n\t\t\t_context.beginPath();\n\t\t\t_context.moveTo( x0, y0 );\n\t\t\t_context.lineTo( x1, y1 );\n\t\t\t_context.lineTo( x2, y2 );\n\t\t\t_context.closePath();\n\n\t\t}\n\n\t\tfunction strokePath( color, linewidth, linecap, linejoin ) {\n\n\t\t\tsetLineWidth( linewidth );\n\t\t\tsetLineCap( linecap );\n\t\t\tsetLineJoin( linejoin );\n\t\t\tsetStrokeStyle( color.getStyle() );\n\n\t\t\t_context.stroke();\n\n\t\t\t_elemBox.expandByScalar( linewidth * 2 );\n\n\t\t}\n\n\t\tfunction fillPath( color ) {\n\n\t\t\tsetFillStyle( color.getStyle() );\n\t\t\t_context.fill();\n\n\t\t}\n\n\t\tfunction textureToPattern( texture ) {\n\n\t\t\tif ( texture.version === 0 ||\n\t\t\t\ttexture instanceof THREE.CompressedTexture ||\n\t\t\t\ttexture instanceof THREE.DataTexture ) {\n\n\t\t\t\treturn {\n\t\t\t\t\tcanvas: undefined,\n\t\t\t\t\tversion: texture.version\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tvar image = texture.image;\n\n\t\t\tif ( image.complete === false ) {\n\n\t\t\t\treturn {\n\t\t\t\t\tcanvas: undefined,\n\t\t\t\t\tversion: 0\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tvar canvas = document.createElement( 'canvas' );\n\t\t\tcanvas.width = image.width;\n\t\t\tcanvas.height = image.height;\n\n\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\tcontext.setTransform( 1, 0, 0, - 1, 0, image.height );\n\t\t\tcontext.drawImage( image, 0, 0 );\n\n\t\t\tvar repeatX = texture.wrapS === THREE.RepeatWrapping;\n\t\t\tvar repeatY = texture.wrapT === THREE.RepeatWrapping;\n\n\t\t\tvar repeat = 'no-repeat';\n\n\t\t\tif ( repeatX === true && repeatY === true ) {\n\n\t\t\t\trepeat = 'repeat';\n\n\t\t\t} else if ( repeatX === true ) {\n\n\t\t\t\trepeat = 'repeat-x';\n\n\t\t\t} else if ( repeatY === true ) {\n\n\t\t\t\trepeat = 'repeat-y';\n\n\t\t\t}\n\n\t\t\tvar pattern = _context.createPattern( canvas, repeat );\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t\treturn {\n\t\t\t\tcanvas: pattern,\n\t\t\t\tversion: texture.version\n\t\t\t};\n\n\t\t}\n\n\t\tfunction patternPath( x0, y0, x1, y1, x2, y2, u0, v0, u1, v1, u2, v2, texture ) {\n\n\t\t\tvar pattern = _patterns[ texture.id ];\n\n\t\t\tif ( pattern === undefined || pattern.version !== texture.version ) {\n\n\t\t\t\tpattern = textureToPattern( texture );\n\t\t\t\t_patterns[ texture.id ] = pattern;\n\n\t\t\t}\n\n\t\t\tif ( pattern.canvas !== undefined ) {\n\n\t\t\t\tsetFillStyle( pattern.canvas );\n\n\t\t\t} else {\n\n\t\t\t\tsetFillStyle( 'rgba( 0, 0, 0, 1)' );\n\t\t\t\t_context.fill();\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// http://extremelysatisfactorytotalitarianism.com/blog/?p=2120\n\n\t\t\tvar a, b, c, d, e, f, det, idet,\n\t\t\toffsetX = texture.offset.x / texture.repeat.x,\n\t\t\toffsetY = texture.offset.y / texture.repeat.y,\n\t\t\twidth = texture.image.width * texture.repeat.x,\n\t\t\theight = texture.image.height * texture.repeat.y;\n\n\t\t\tu0 = ( u0 + offsetX ) * width;\n\t\t\tv0 = ( v0 + offsetY ) * height;\n\n\t\t\tu1 = ( u1 + offsetX ) * width;\n\t\t\tv1 = ( v1 + offsetY ) * height;\n\n\t\t\tu2 = ( u2 + offsetX ) * width;\n\t\t\tv2 = ( v2 + offsetY ) * height;\n\n\t\t\tx1 -= x0; y1 -= y0;\n\t\t\tx2 -= x0; y2 -= y0;\n\n\t\t\tu1 -= u0; v1 -= v0;\n\t\t\tu2 -= u0; v2 -= v0;\n\n\t\t\tdet = u1 * v2 - u2 * v1;\n\n\t\t\tif ( det === 0 ) return;\n\n\t\t\tidet = 1 / det;\n\n\t\t\ta = ( v2 * x1 - v1 * x2 ) * idet;\n\t\t\tb = ( v2 * y1 - v1 * y2 ) * idet;\n\t\t\tc = ( u1 * x2 - u2 * x1 ) * idet;\n\t\t\td = ( u1 * y2 - u2 * y1 ) * idet;\n\n\t\t\te = x0 - a * u0 - c * v0;\n\t\t\tf = y0 - b * u0 - d * v0;\n\n\t\t\t_context.save();\n\t\t\t_context.transform( a, b, c, d, e, f );\n\t\t\t_context.fill();\n\t\t\t_context.restore();\n\n\t\t}\n\n\t\tfunction clipImage( x0, y0, x1, y1, x2, y2, u0, v0, u1, v1, u2, v2, image ) {\n\n\t\t\t// http://extremelysatisfactorytotalitarianism.com/blog/?p=2120\n\n\t\t\tvar a, b, c, d, e, f, det, idet,\n\t\t\twidth = image.width - 1,\n\t\t\theight = image.height - 1;\n\n\t\t\tu0 *= width; v0 *= height;\n\t\t\tu1 *= width; v1 *= height;\n\t\t\tu2 *= width; v2 *= height;\n\n\t\t\tx1 -= x0; y1 -= y0;\n\t\t\tx2 -= x0; y2 -= y0;\n\n\t\t\tu1 -= u0; v1 -= v0;\n\t\t\tu2 -= u0; v2 -= v0;\n\n\t\t\tdet = u1 * v2 - u2 * v1;\n\n\t\t\tidet = 1 / det;\n\n\t\t\ta = ( v2 * x1 - v1 * x2 ) * idet;\n\t\t\tb = ( v2 * y1 - v1 * y2 ) * idet;\n\t\t\tc = ( u1 * x2 - u2 * x1 ) * idet;\n\t\t\td = ( u1 * y2 - u2 * y1 ) * idet;\n\n\t\t\te = x0 - a * u0 - c * v0;\n\t\t\tf = y0 - b * u0 - d * v0;\n\n\t\t\t_context.save();\n\t\t\t_context.transform( a, b, c, d, e, f );\n\t\t\t_context.clip();\n\t\t\t_context.drawImage( image, 0, 0 );\n\t\t\t_context.restore();\n\n\t\t}\n\n\t\t// Hide anti-alias gaps\n\n\t\tfunction expand( v1, v2, pixels ) {\n\n\t\t\tvar x = v2.x - v1.x, y = v2.y - v1.y,\n\t\t\tdet = x * x + y * y, idet;\n\n\t\t\tif ( det === 0 ) return;\n\n\t\t\tidet = pixels / Math.sqrt( det );\n\n\t\t\tx *= idet; y *= idet;\n\n\t\t\tv2.x += x; v2.y += y;\n\t\t\tv1.x -= x; v1.y -= y;\n\n\t\t}\n\n\t\t// Context cached methods.\n\n\t\tfunction setOpacity( value ) {\n\n\t\t\tif ( _contextGlobalAlpha !== value ) {\n\n\t\t\t\t_context.globalAlpha = value;\n\t\t\t\t_contextGlobalAlpha = value;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setBlending( value ) {\n\n\t\t\tif ( _contextGlobalCompositeOperation !== value ) {\n\n\t\t\t\tif ( value === THREE.NormalBlending ) {\n\n\t\t\t\t\t_context.globalCompositeOperation = 'source-over';\n\n\t\t\t\t} else if ( value === THREE.AdditiveBlending ) {\n\n\t\t\t\t\t_context.globalCompositeOperation = 'lighter';\n\n\t\t\t\t} else if ( value === THREE.SubtractiveBlending ) {\n\n\t\t\t\t\t_context.globalCompositeOperation = 'darker';\n\n\t\t\t\t}\n\n\t\t\t\t_contextGlobalCompositeOperation = value;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setLineWidth( value ) {\n\n\t\t\tif ( _contextLineWidth !== value ) {\n\n\t\t\t\t_context.lineWidth = value;\n\t\t\t\t_contextLineWidth = value;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setLineCap( value ) {\n\n\t\t\t// \"butt\", \"round\", \"square\"\n\n\t\t\tif ( _contextLineCap !== value ) {\n\n\t\t\t\t_context.lineCap = value;\n\t\t\t\t_contextLineCap = value;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setLineJoin( value ) {\n\n\t\t\t// \"round\", \"bevel\", \"miter\"\n\n\t\t\tif ( _contextLineJoin !== value ) {\n\n\t\t\t\t_context.lineJoin = value;\n\t\t\t\t_contextLineJoin = value;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setStrokeStyle( value ) {\n\n\t\t\tif ( _contextStrokeStyle !== value ) {\n\n\t\t\t\t_context.strokeStyle = value;\n\t\t\t\t_contextStrokeStyle = value;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setFillStyle( value ) {\n\n\t\t\tif ( _contextFillStyle !== value ) {\n\n\t\t\t\t_context.fillStyle = value;\n\t\t\t\t_contextFillStyle = value;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setLineDash( value ) {\n\n\t\t\tif ( _contextLineDash.length !== value.length ) {\n\n\t\t\t\t_context.setLineDash( value );\n\t\t\t\t_contextLineDash = value;\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n};","module.exports = function( THREE ){\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * Color correction\n\t */\n\n\tTHREE.ColorCorrectionShader = {\n\n\t\tuniforms: {\n\n\t\t\t\"tDiffuse\": { type: \"t\", value: null },\n\t\t\t\"powRGB\":   { type: \"v3\", value: new THREE.Vector3( 2, 2, 2 ) },\n\t\t\t\"mulRGB\":   { type: \"v3\", value: new THREE.Vector3( 1, 1, 1 ) },\n\t\t\t\"addRGB\":   { type: \"v3\", value: new THREE.Vector3( 0, 0, 0 ) }\n\n\t\t},\n\n\t\tvertexShader: [\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vUv = uv;\",\n\n\t\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" ),\n\n\t\tfragmentShader: [\n\n\t\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\t\"uniform vec3 powRGB;\",\n\t\t\t\"uniform vec3 mulRGB;\",\n\t\t\t\"uniform vec3 addRGB;\",\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"gl_FragColor = texture2D( tDiffuse, vUv );\",\n\t\t\t\t\"gl_FragColor.rgb = mulRGB * pow( ( gl_FragColor.rgb + addRGB ), powRGB );\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" )\n\n\t};\n\n}\n","module.exports = function( THREE ){\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * Colorify shader\n\t */\n\n\tTHREE.ColorifyShader = {\n\n\t\tuniforms: {\n\n\t\t\t\"tDiffuse\": { type: \"t\", value: null },\n\t\t\t\"color\":    { type: \"c\", value: new THREE.Color( 0xffffff ) }\n\n\t\t},\n\n\t\tvertexShader: [\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vUv = uv;\",\n\t\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" ),\n\n\t\tfragmentShader: [\n\n\t\t\t\"uniform vec3 color;\",\n\t\t\t\"uniform sampler2D tDiffuse;\",\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vec4 texel = texture2D( tDiffuse, vUv );\",\n\n\t\t\t\t\"vec3 luma = vec3( 0.299, 0.587, 0.114 );\",\n\t\t\t\t\"float v = dot( texel.xyz, luma );\",\n\n\t\t\t\t\"gl_FragColor = vec4( v * color, texel.w );\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" )\n\n\t};\n\n}\n","module.exports = function( THREE ){\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * Convolution shader\n\t * ported from o3d sample to WebGL / GLSL\n\t * http://o3d.googlecode.com/svn/trunk/samples/convolution.html\n\t */\n\n\tTHREE.ConvolutionShader = {\n\n\t\tdefines: {\n\n\t\t\t\"KERNEL_SIZE_FLOAT\": \"25.0\",\n\t\t\t\"KERNEL_SIZE_INT\": \"25\",\n\n\t\t},\n\n\t\tuniforms: {\n\n\t\t\t\"tDiffuse\":        { type: \"t\", value: null },\n\t\t\t\"uImageIncrement\": { type: \"v2\", value: new THREE.Vector2( 0.001953125, 0.0 ) },\n\t\t\t\"cKernel\":         { type: \"fv1\", value: [] }\n\n\t\t},\n\n\t\tvertexShader: [\n\n\t\t\t\"uniform vec2 uImageIncrement;\",\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vUv = uv - ( ( KERNEL_SIZE_FLOAT - 1.0 ) / 2.0 ) * uImageIncrement;\",\n\t\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" ),\n\n\t\tfragmentShader: [\n\n\t\t\t\"uniform float cKernel[ KERNEL_SIZE_INT ];\",\n\n\t\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\t\"uniform vec2 uImageIncrement;\",\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vec2 imageCoord = vUv;\",\n\t\t\t\t\"vec4 sum = vec4( 0.0, 0.0, 0.0, 0.0 );\",\n\n\t\t\t\t\"for( int i = 0; i < KERNEL_SIZE_INT; i ++ ) {\",\n\n\t\t\t\t\t\"sum += texture2D( tDiffuse, imageCoord ) * cKernel[ i ];\",\n\t\t\t\t\t\"imageCoord += uImageIncrement;\",\n\n\t\t\t\t\"}\",\n\n\t\t\t\t\"gl_FragColor = sum;\",\n\n\t\t\t\"}\"\n\n\n\t\t].join( \"\\n\" ),\n\n\t\tbuildKernel: function ( sigma ) {\n\n\t\t\t// We lop off the sqrt(2 * pi) * sigma term, since we're going to normalize anyway.\n\n\t\t\tfunction gauss( x, sigma ) {\n\n\t\t\t\treturn Math.exp( - ( x * x ) / ( 2.0 * sigma * sigma ) );\n\n\t\t\t}\n\n\t\t\tvar i, values, sum, halfWidth, kMaxKernelSize = 25, kernelSize = 2 * Math.ceil( sigma * 3.0 ) + 1;\n\n\t\t\tif ( kernelSize > kMaxKernelSize ) kernelSize = kMaxKernelSize;\n\t\t\thalfWidth = ( kernelSize - 1 ) * 0.5;\n\n\t\t\tvalues = new Array( kernelSize );\n\t\t\tsum = 0.0;\n\t\t\tfor ( i = 0; i < kernelSize; ++ i ) {\n\n\t\t\t\tvalues[ i ] = gauss( i - halfWidth, sigma );\n\t\t\t\tsum += values[ i ];\n\n\t\t\t}\n\n\t\t\t// normalize the kernel\n\n\t\t\tfor ( i = 0; i < kernelSize; ++ i ) values[ i ] /= sum;\n\n\t\t\treturn values;\n\n\t\t}\n\n\t};\n\n}\n","module.exports = function( THREE ){\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * Full-screen textured quad shader\n\t */\n\n\tTHREE.CopyShader = {\n\n\t\tuniforms: {\n\n\t\t\t\"tDiffuse\": { type: \"t\", value: null },\n\t\t\t\"opacity\":  { type: \"f\", value: 1.0 }\n\n\t\t},\n\n\t\tvertexShader: [\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vUv = uv;\",\n\t\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" ),\n\n\t\tfragmentShader: [\n\n\t\t\t\"uniform float opacity;\",\n\n\t\t\t\"uniform sampler2D tDiffuse;\",\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vec4 texel = texture2D( tDiffuse, vUv );\",\n\t\t\t\t\"gl_FragColor = opacity * texel;\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" )\n\n\t};\n\n}\n","module.exports = function( THREE ){\n\n\t/*\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.DDSLoader = function () {\n\n\t\tthis._parser = THREE.DDSLoader.parse;\n\n\t};\n\n\tTHREE.DDSLoader.prototype = Object.create( THREE.CompressedTextureLoader.prototype );\n\tTHREE.DDSLoader.prototype.constructor = THREE.DDSLoader;\n\n\tTHREE.DDSLoader.parse = function ( buffer, loadMipmaps ) {\n\n\t\tvar dds = { mipmaps: [], width: 0, height: 0, format: null, mipmapCount: 1 };\n\n\t\t// Adapted from @toji's DDS utils\n\t\t// https://github.com/toji/webgl-texture-utils/blob/master/texture-util/dds.js\n\n\t\t// All values and structures referenced from:\n\t\t// http://msdn.microsoft.com/en-us/library/bb943991.aspx/\n\n\t\tvar DDS_MAGIC = 0x20534444;\n\n\t\tvar DDSD_CAPS = 0x1,\n\t\t\tDDSD_HEIGHT = 0x2,\n\t\t\tDDSD_WIDTH = 0x4,\n\t\t\tDDSD_PITCH = 0x8,\n\t\t\tDDSD_PIXELFORMAT = 0x1000,\n\t\t\tDDSD_MIPMAPCOUNT = 0x20000,\n\t\t\tDDSD_LINEARSIZE = 0x80000,\n\t\t\tDDSD_DEPTH = 0x800000;\n\n\t\tvar DDSCAPS_COMPLEX = 0x8,\n\t\t\tDDSCAPS_MIPMAP = 0x400000,\n\t\t\tDDSCAPS_TEXTURE = 0x1000;\n\n\t\tvar DDSCAPS2_CUBEMAP = 0x200,\n\t\t\tDDSCAPS2_CUBEMAP_POSITIVEX = 0x400,\n\t\t\tDDSCAPS2_CUBEMAP_NEGATIVEX = 0x800,\n\t\t\tDDSCAPS2_CUBEMAP_POSITIVEY = 0x1000,\n\t\t\tDDSCAPS2_CUBEMAP_NEGATIVEY = 0x2000,\n\t\t\tDDSCAPS2_CUBEMAP_POSITIVEZ = 0x4000,\n\t\t\tDDSCAPS2_CUBEMAP_NEGATIVEZ = 0x8000,\n\t\t\tDDSCAPS2_VOLUME = 0x200000;\n\n\t\tvar DDPF_ALPHAPIXELS = 0x1,\n\t\t\tDDPF_ALPHA = 0x2,\n\t\t\tDDPF_FOURCC = 0x4,\n\t\t\tDDPF_RGB = 0x40,\n\t\t\tDDPF_YUV = 0x200,\n\t\t\tDDPF_LUMINANCE = 0x20000;\n\n\t\tfunction fourCCToInt32( value ) {\n\n\t\t\treturn value.charCodeAt( 0 ) +\n\t\t\t\t( value.charCodeAt( 1 ) << 8 ) +\n\t\t\t\t( value.charCodeAt( 2 ) << 16 ) +\n\t\t\t\t( value.charCodeAt( 3 ) << 24 );\n\n\t\t}\n\n\t\tfunction int32ToFourCC( value ) {\n\n\t\t\treturn String.fromCharCode(\n\t\t\t\tvalue & 0xff,\n\t\t\t\t( value >> 8 ) & 0xff,\n\t\t\t\t( value >> 16 ) & 0xff,\n\t\t\t\t( value >> 24 ) & 0xff\n\t\t\t);\n\n\t\t}\n\n\t\tfunction loadARGBMip( buffer, dataOffset, width, height ) {\n\n\t\t\tvar dataLength = width * height * 4;\n\t\t\tvar srcBuffer = new Uint8Array( buffer, dataOffset, dataLength );\n\t\t\tvar byteArray = new Uint8Array( dataLength );\n\t\t\tvar dst = 0;\n\t\t\tvar src = 0;\n\t\t\tfor ( var y = 0; y < height; y ++ ) {\n\n\t\t\t\tfor ( var x = 0; x < width; x ++ ) {\n\n\t\t\t\t\tvar b = srcBuffer[ src ]; src ++;\n\t\t\t\t\tvar g = srcBuffer[ src ]; src ++;\n\t\t\t\t\tvar r = srcBuffer[ src ]; src ++;\n\t\t\t\t\tvar a = srcBuffer[ src ]; src ++;\n\t\t\t\t\tbyteArray[ dst ] = r; dst ++;\t//r\n\t\t\t\t\tbyteArray[ dst ] = g; dst ++;\t//g\n\t\t\t\t\tbyteArray[ dst ] = b; dst ++;\t//b\n\t\t\t\t\tbyteArray[ dst ] = a; dst ++;\t//a\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t\treturn byteArray;\n\n\t\t}\n\n\t\tvar FOURCC_DXT1 = fourCCToInt32( \"DXT1\" );\n\t\tvar FOURCC_DXT3 = fourCCToInt32( \"DXT3\" );\n\t\tvar FOURCC_DXT5 = fourCCToInt32( \"DXT5\" );\n\t\tvar FOURCC_ETC1 = fourCCToInt32( \"ETC1\" );\n\n\t\tvar headerLengthInt = 31; // The header length in 32 bit ints\n\n\t\t// Offsets into the header array\n\n\t\tvar off_magic = 0;\n\n\t\tvar off_size = 1;\n\t\tvar off_flags = 2;\n\t\tvar off_height = 3;\n\t\tvar off_width = 4;\n\n\t\tvar off_mipmapCount = 7;\n\n\t\tvar off_pfFlags = 20;\n\t\tvar off_pfFourCC = 21;\n\t\tvar off_RGBBitCount = 22;\n\t\tvar off_RBitMask = 23;\n\t\tvar off_GBitMask = 24;\n\t\tvar off_BBitMask = 25;\n\t\tvar off_ABitMask = 26;\n\n\t\tvar off_caps = 27;\n\t\tvar off_caps2 = 28;\n\t\tvar off_caps3 = 29;\n\t\tvar off_caps4 = 30;\n\n\t\t// Parse header\n\n\t\tvar header = new Int32Array( buffer, 0, headerLengthInt );\n\n\t\tif ( header[ off_magic ] !== DDS_MAGIC ) {\n\n\t\t\tconsole.error( 'THREE.DDSLoader.parse: Invalid magic number in DDS header.' );\n\t\t\treturn dds;\n\n\t\t}\n\n\t\tif ( ! header[ off_pfFlags ] & DDPF_FOURCC ) {\n\n\t\t\tconsole.error( 'THREE.DDSLoader.parse: Unsupported format, must contain a FourCC code.' );\n\t\t\treturn dds;\n\n\t\t}\n\n\t\tvar blockBytes;\n\n\t\tvar fourCC = header[ off_pfFourCC ];\n\n\t\tvar isRGBAUncompressed = false;\n\n\t\tswitch ( fourCC ) {\n\n\t\t\tcase FOURCC_DXT1:\n\n\t\t\t\tblockBytes = 8;\n\t\t\t\tdds.format = THREE.RGB_S3TC_DXT1_Format;\n\t\t\t\tbreak;\n\n\t\t\tcase FOURCC_DXT3:\n\n\t\t\t\tblockBytes = 16;\n\t\t\t\tdds.format = THREE.RGBA_S3TC_DXT3_Format;\n\t\t\t\tbreak;\n\n\t\t\tcase FOURCC_DXT5:\n\n\t\t\t\tblockBytes = 16;\n\t\t\t\tdds.format = THREE.RGBA_S3TC_DXT5_Format;\n\t\t\t\tbreak;\n\n\t\t\tcase FOURCC_ETC1:\n\n\t\t\t\tblockBytes = 8;\n\t\t\t\tdds.format = THREE.RGB_ETC1_Format;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tif ( header[ off_RGBBitCount ] === 32\n\t\t\t\t\t&& header[ off_RBitMask ] & 0xff0000\n\t\t\t\t\t&& header[ off_GBitMask ] & 0xff00\n\t\t\t\t\t&& header[ off_BBitMask ] & 0xff\n\t\t\t\t\t&& header[ off_ABitMask ] & 0xff000000  ) {\n\n\t\t\t\t\tisRGBAUncompressed = true;\n\t\t\t\t\tblockBytes = 64;\n\t\t\t\t\tdds.format = THREE.RGBAFormat;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.DDSLoader.parse: Unsupported FourCC code ', int32ToFourCC( fourCC ) );\n\t\t\t\t\treturn dds;\n\n\t\t\t\t}\n\t\t}\n\n\t\tdds.mipmapCount = 1;\n\n\t\tif ( header[ off_flags ] & DDSD_MIPMAPCOUNT && loadMipmaps !== false ) {\n\n\t\t\tdds.mipmapCount = Math.max( 1, header[ off_mipmapCount ] );\n\n\t\t}\n\n\t\tvar caps2 = header[ off_caps2 ];\n\t\tdds.isCubemap = caps2 & DDSCAPS2_CUBEMAP ? true : false;\n\t\tif ( dds.isCubemap && (\n\t\t\t! ( caps2 & DDSCAPS2_CUBEMAP_POSITIVEX ) ||\n\t\t\t! ( caps2 & DDSCAPS2_CUBEMAP_NEGATIVEX ) ||\n\t\t\t! ( caps2 & DDSCAPS2_CUBEMAP_POSITIVEY ) ||\n\t\t\t! ( caps2 & DDSCAPS2_CUBEMAP_NEGATIVEY ) ||\n\t\t\t! ( caps2 & DDSCAPS2_CUBEMAP_POSITIVEZ ) ||\n\t\t\t! ( caps2 & DDSCAPS2_CUBEMAP_NEGATIVEZ )\n\t\t\t) ) {\n\n\t\t\tconsole.error( 'THREE.DDSLoader.parse: Incomplete cubemap faces' );\n\t\t\treturn dds;\n\n\t\t}\n\n\t\tdds.width = header[ off_width ];\n\t\tdds.height = header[ off_height ];\n\n\t\tvar dataOffset = header[ off_size ] + 4;\n\n\t\t// Extract mipmaps buffers\n\n\t\tvar faces = dds.isCubemap ? 6 : 1;\n\n\t\tfor ( var face = 0; face < faces; face ++ ) {\n\n\t\t\tvar width = dds.width;\n\t\t\tvar height = dds.height;\n\n\t\t\tfor ( var i = 0; i < dds.mipmapCount; i ++ ) {\n\n\t\t\t\tif ( isRGBAUncompressed ) {\n\n\t\t\t\t\tvar byteArray = loadARGBMip( buffer, dataOffset, width, height );\n\t\t\t\t\tvar dataLength = byteArray.length;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar dataLength = Math.max( 4, width ) / 4 * Math.max( 4, height ) / 4 * blockBytes;\n\t\t\t\t\tvar byteArray = new Uint8Array( buffer, dataOffset, dataLength );\n\n\t\t\t\t}\n\n\t\t\t\tvar mipmap = { \"data\": byteArray, \"width\": width, \"height\": height };\n\t\t\t\tdds.mipmaps.push( mipmap );\n\n\t\t\t\tdataOffset += dataLength;\n\n\t\t\t\twidth = Math.max( width >> 1, 1 );\n\t\t\t\theight = Math.max( height >> 1, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn dds;\n\n\t};\n\n};","module.exports = function( THREE ){\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * Depth-of-field shader using mipmaps\n\t * - from Matt Handley @applmak\n\t * - requires power-of-2 sized render target with enabled mipmaps\n\t */\n\n\tTHREE.DOFMipMapShader = {\n\n\t\tuniforms: {\n\n\t\t\t\"tColor\":   { type: \"t\", value: null },\n\t\t\t\"tDepth\":   { type: \"t\", value: null },\n\t\t\t\"focus\":    { type: \"f\", value: 1.0 },\n\t\t\t\"maxblur\":  { type: \"f\", value: 1.0 }\n\n\t\t},\n\n\t\tvertexShader: [\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vUv = uv;\",\n\t\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" ),\n\n\t\tfragmentShader: [\n\n\t\t\t\"uniform float focus;\",\n\t\t\t\"uniform float maxblur;\",\n\n\t\t\t\"uniform sampler2D tColor;\",\n\t\t\t\"uniform sampler2D tDepth;\",\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vec4 depth = texture2D( tDepth, vUv );\",\n\n\t\t\t\t\"float factor = depth.x - focus;\",\n\n\t\t\t\t\"vec4 col = texture2D( tColor, vUv, 2.0 * maxblur * abs( focus - depth.x ) );\",\n\n\t\t\t\t\"gl_FragColor = col;\",\n\t\t\t\t\"gl_FragColor.a = 1.0;\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" )\n\n\t};\n\n}\n","module.exports = function( THREE ){\n\t/**\n\t * @author felixturner / http://airtight.cc/\n\t *\n\t * RGB Shift Shader\n\t * Shifts red and blue channels from center in opposite directions\n\t * Ported from http://kriss.cx/tom/2009/05/rgb-shift/\n\t * by Tom Butterworth / http://kriss.cx/tom/\n\t *\n\t * amount: shift distance (1 is width of input)\n\t * angle: shift angle in radians\n\t */\n\n\tTHREE.DigitalGlitch = {\n\n\t\tuniforms: {\n\n\t\t\t\"tDiffuse\":\t\t{ type: \"t\", value: null },//diffuse texture\n\t\t\t\"tDisp\":\t\t{ type: \"t\", value: null },//displacement texture for digital glitch squares\n\t\t\t\"byp\":\t\t\t{ type: \"i\", value: 0 },//apply the glitch ?\n\t\t\t\"amount\":\t\t{ type: \"f\", value: 0.08 },\n\t\t\t\"angle\":\t\t{ type: \"f\", value: 0.02 },\n\t\t\t\"seed\":\t\t\t{ type: \"f\", value: 0.02 },\n\t\t\t\"seed_x\":\t\t{ type: \"f\", value: 0.02 },//-1,1\n\t\t\t\"seed_y\":\t\t{ type: \"f\", value: 0.02 },//-1,1\n\t\t\t\"distortion_x\":\t{ type: \"f\", value: 0.5 },\n\t\t\t\"distortion_y\":\t{ type: \"f\", value: 0.6 },\n\t\t\t\"col_s\":\t\t{ type: \"f\", value: 0.05 }\n\t\t},\n\n\t\tvertexShader: [\n\n\t\t\t\"varying vec2 vUv;\",\n\t\t\t\"void main() {\",\n\t\t\t\t\"vUv = uv;\",\n\t\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\t\t\t\"}\"\n\t\t].join( \"\\n\" ),\n\n\t\tfragmentShader: [\n\t\t\t\"uniform int byp;\",//should we apply the glitch ?\n\t\t\t\n\t\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\t\"uniform sampler2D tDisp;\",\n\t\t\t\n\t\t\t\"uniform float amount;\",\n\t\t\t\"uniform float angle;\",\n\t\t\t\"uniform float seed;\",\n\t\t\t\"uniform float seed_x;\",\n\t\t\t\"uniform float seed_y;\",\n\t\t\t\"uniform float distortion_x;\",\n\t\t\t\"uniform float distortion_y;\",\n\t\t\t\"uniform float col_s;\",\n\t\t\t\t\n\t\t\t\"varying vec2 vUv;\",\n\t\t\t\n\t\t\t\n\t\t\t\"float rand(vec2 co){\",\n\t\t\t\t\"return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\",\n\t\t\t\"}\",\n\t\t\t\t\t\n\t\t\t\"void main() {\",\n\t\t\t\t\"if(byp<1) {\",\n\t\t\t\t\t\"vec2 p = vUv;\",\n\t\t\t\t\t\"float xs = floor(gl_FragCoord.x / 0.5);\",\n\t\t\t\t\t\"float ys = floor(gl_FragCoord.y / 0.5);\",\n\t\t\t\t\t//based on staffantans glitch shader for unity https://github.com/staffantan/unityglitch\n\t\t\t\t\t\"vec4 normal = texture2D (tDisp, p*seed*seed);\",\n\t\t\t\t\t\"if(p.y<distortion_x+col_s && p.y>distortion_x-col_s*seed) {\",\n\t\t\t\t\t\t\"if(seed_x>0.){\",\n\t\t\t\t\t\t\t\"p.y = 1. - (p.y + distortion_y);\",\n\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\"else {\",\n\t\t\t\t\t\t\t\"p.y = distortion_y;\",\n\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\"}\",\n\t\t\t\t\t\"if(p.x<distortion_y+col_s && p.x>distortion_y-col_s*seed) {\",\n\t\t\t\t\t\t\"if(seed_y>0.){\",\n\t\t\t\t\t\t\t\"p.x=distortion_x;\",\n\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\"else {\",\n\t\t\t\t\t\t\t\"p.x = 1. - (p.x + distortion_x);\",\n\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\"}\",\n\t\t\t\t\t\"p.x+=normal.x*seed_x*(seed/5.);\",\n\t\t\t\t\t\"p.y+=normal.y*seed_y*(seed/5.);\",\n\t\t\t\t\t//base from RGB shift shader\n\t\t\t\t\t\"vec2 offset = amount * vec2( cos(angle), sin(angle));\",\n\t\t\t\t\t\"vec4 cr = texture2D(tDiffuse, p + offset);\",\n\t\t\t\t\t\"vec4 cga = texture2D(tDiffuse, p);\",\n\t\t\t\t\t\"vec4 cb = texture2D(tDiffuse, p - offset);\",\n\t\t\t\t\t\"gl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);\",\n\t\t\t\t\t//add noise\n\t\t\t\t\t\"vec4 snow = 200.*amount*vec4(rand(vec2(xs * seed,ys * seed*50.))*0.2);\",\n\t\t\t\t\t\"gl_FragColor = gl_FragColor+ snow;\",\n\t\t\t\t\"}\",\n\t\t\t\t\"else {\",\n\t\t\t\t\t\"gl_FragColor=texture2D (tDiffuse, vUv);\",\n\t\t\t\t\"}\",\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" )\n\n\t};\n\n}\n","module.exports = function( THREE ){\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tTHREE.DotScreenPass = function ( center, angle, scale ) {\n\n\t\tif ( THREE.DotScreenShader === undefined )\n\t\t\tconsole.error( \"THREE.DotScreenPass relies on THREE.DotScreenShader\" );\n\n\t\tvar shader = THREE.DotScreenShader;\n\n\t\tthis.uniforms = THREE.UniformsUtils.clone( shader.uniforms );\n\n\t\tif ( center !== undefined ) this.uniforms[ \"center\" ].value.copy( center );\n\t\tif ( angle !== undefined ) this.uniforms[ \"angle\" ].value = angle;\n\t\tif ( scale !== undefined ) this.uniforms[ \"scale\" ].value = scale;\n\n\t\tthis.material = new THREE.ShaderMaterial( {\n\n\t\t\tuniforms: this.uniforms,\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader\n\n\t\t} );\n\n\t\tthis.enabled = true;\n\t\tthis.renderToScreen = false;\n\t\tthis.needsSwap = true;\n\n\n\t\tthis.camera = new THREE.OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\t\tthis.scene  = new THREE.Scene();\n\n\t\tthis.quad = new THREE.Mesh( new THREE.PlaneBufferGeometry( 2, 2 ), null );\n\t\tthis.scene.add( this.quad );\n\n\t};\n\n\tTHREE.DotScreenPass.prototype = {\n\n\t\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\n\n\t\t\tthis.uniforms[ \"tDiffuse\" ].value = readBuffer;\n\t\t\tthis.uniforms[ \"tSize\" ].value.set( readBuffer.width, readBuffer.height );\n\n\t\t\tthis.quad.material = this.material;\n\n\t\t\tif ( this.renderToScreen ) {\n\n\t\t\t\trenderer.render( this.scene, this.camera );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.render( this.scene, this.camera, writeBuffer, false );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n};\n","module.exports = function( THREE ){\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * Dot screen shader\n\t * based on glfx.js sepia shader\n\t * https://github.com/evanw/glfx.js\n\t */\n\n\tTHREE.DotScreenShader = {\n\n\t\tuniforms: {\n\n\t\t\t\"tDiffuse\": { type: \"t\", value: null },\n\t\t\t\"tSize\":    { type: \"v2\", value: new THREE.Vector2( 256, 256 ) },\n\t\t\t\"center\":   { type: \"v2\", value: new THREE.Vector2( 0.5, 0.5 ) },\n\t\t\t\"angle\":    { type: \"f\", value: 1.57 },\n\t\t\t\"scale\":    { type: \"f\", value: 1.0 }\n\n\t\t},\n\n\t\tvertexShader: [\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vUv = uv;\",\n\t\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" ),\n\n\t\tfragmentShader: [\n\n\t\t\t\"uniform vec2 center;\",\n\t\t\t\"uniform float angle;\",\n\t\t\t\"uniform float scale;\",\n\t\t\t\"uniform vec2 tSize;\",\n\n\t\t\t\"uniform sampler2D tDiffuse;\",\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"float pattern() {\",\n\n\t\t\t\t\"float s = sin( angle ), c = cos( angle );\",\n\n\t\t\t\t\"vec2 tex = vUv * tSize - center;\",\n\t\t\t\t\"vec2 point = vec2( c * tex.x - s * tex.y, s * tex.x + c * tex.y ) * scale;\",\n\n\t\t\t\t\"return ( sin( point.x ) * sin( point.y ) ) * 4.0;\",\n\n\t\t\t\"}\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vec4 color = texture2D( tDiffuse, vUv );\",\n\n\t\t\t\t\"float average = ( color.r + color.g + color.b ) / 3.0;\",\n\n\t\t\t\t\"gl_FragColor = vec4( vec3( average * 10.0 - 5.0 + pattern() ), color.a );\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" )\n\n\t};\n\n}\n","module.exports = function( THREE ){\n\t/**\n\t * @author zz85 / https://github.com/zz85 | https://www.lab4games.net/zz85/blog\n\t *\n\t * Edge Detection Shader using Frei-Chen filter\n\t * Based on http://rastergrid.com/blog/2011/01/frei-chen-edge-detector\n\t *\n\t * aspect: vec2 of (1/width, 1/height)\n\t */\n\n\tTHREE.EdgeShader = {\n\n\t\tuniforms: {\n\n\t\t\t\"tDiffuse\": { type: \"t\", value: null },\n\t\t\t\"aspect\":    { type: \"v2\", value: new THREE.Vector2( 512, 512 ) },\n\t\t},\n\n\t\tvertexShader: [\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vUv = uv;\",\n\t\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" ),\n\n\t\tfragmentShader: [\n\n\t\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"uniform vec2 aspect;\",\n\n\t\t\t\"vec2 texel = vec2(1.0 / aspect.x, 1.0 / aspect.y);\",\n\n\n\t\t\t\"mat3 G[9];\",\n\n\t\t\t// hard coded matrix values!!!! as suggested in https://github.com/neilmendoza/ofxPostProcessing/blob/master/src/EdgePass.cpp#L45\n\n\t\t\t\"const mat3 g0 = mat3( 0.3535533845424652, 0, -0.3535533845424652, 0.5, 0, -0.5, 0.3535533845424652, 0, -0.3535533845424652 );\",\n\t\t\t\"const mat3 g1 = mat3( 0.3535533845424652, 0.5, 0.3535533845424652, 0, 0, 0, -0.3535533845424652, -0.5, -0.3535533845424652 );\",\n\t\t\t\"const mat3 g2 = mat3( 0, 0.3535533845424652, -0.5, -0.3535533845424652, 0, 0.3535533845424652, 0.5, -0.3535533845424652, 0 );\",\n\t\t\t\"const mat3 g3 = mat3( 0.5, -0.3535533845424652, 0, -0.3535533845424652, 0, 0.3535533845424652, 0, 0.3535533845424652, -0.5 );\",\n\t\t\t\"const mat3 g4 = mat3( 0, -0.5, 0, 0.5, 0, 0.5, 0, -0.5, 0 );\",\n\t\t\t\"const mat3 g5 = mat3( -0.5, 0, 0.5, 0, 0, 0, 0.5, 0, -0.5 );\",\n\t\t\t\"const mat3 g6 = mat3( 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.6666666865348816, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204 );\",\n\t\t\t\"const mat3 g7 = mat3( -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, 0.6666666865348816, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408 );\",\n\t\t\t\"const mat3 g8 = mat3( 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408 );\",\n\n\t\t\t\"void main(void)\",\n\t\t\t\"{\",\n\n\t\t\t\t\"G[0] = g0,\",\n\t\t\t\t\"G[1] = g1,\",\n\t\t\t\t\"G[2] = g2,\",\n\t\t\t\t\"G[3] = g3,\",\n\t\t\t\t\"G[4] = g4,\",\n\t\t\t\t\"G[5] = g5,\",\n\t\t\t\t\"G[6] = g6,\",\n\t\t\t\t\"G[7] = g7,\",\n\t\t\t\t\"G[8] = g8;\",\n\n\t\t\t\t\"mat3 I;\",\n\t\t\t\t\"float cnv[9];\",\n\t\t\t\t\"vec3 sample;\",\n\n\t\t\t\t/* fetch the 3x3 neighbourhood and use the RGB vector's length as intensity value */\n\t\t\t\t\"for (float i=0.0; i<3.0; i++) {\",\n\t\t\t\t\t\"for (float j=0.0; j<3.0; j++) {\",\n\t\t\t\t\t\t\"sample = texture2D(tDiffuse, vUv + texel * vec2(i-1.0,j-1.0) ).rgb;\",\n\t\t\t\t\t\t\"I[int(i)][int(j)] = length(sample);\",\n\t\t\t\t\t\"}\",\n\t\t\t\t\"}\",\n\n\t\t\t\t/* calculate the convolution values for all the masks */\n\t\t\t\t\"for (int i=0; i<9; i++) {\",\n\t\t\t\t\t\"float dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\",\n\t\t\t\t\t\"cnv[i] = dp3 * dp3;\",\n\t\t\t\t\"}\",\n\n\t\t\t\t\"float M = (cnv[0] + cnv[1]) + (cnv[2] + cnv[3]);\",\n\t\t\t\t\"float S = (cnv[4] + cnv[5]) + (cnv[6] + cnv[7]) + (cnv[8] + M);\",\n\n\t\t\t\t\"gl_FragColor = vec4(vec3(sqrt(M/S)), 1.0);\",\n\t\t\t\"}\",\n\n\t\t].join( \"\\n\" )\n\t};\n\n}\n","module.exports = function( THREE ){\n\t/**\n\t * @author zz85 / https://github.com/zz85 | https://www.lab4games.net/zz85/blog\n\t *\n\t * Edge Detection Shader using Sobel filter\n\t * Based on http://rastergrid.com/blog/2011/01/frei-chen-edge-detector\n\t *\n\t * aspect: vec2 of (1/width, 1/height)\n\t */\n\n\tTHREE.EdgeShader2 = {\n\n\t\tuniforms: {\n\n\t\t\t\"tDiffuse\": { type: \"t\", value: null },\n\t\t\t\"aspect\":    { type: \"v2\", value: new THREE.Vector2( 512, 512 ) },\n\t\t},\n\n\t\tvertexShader: [\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vUv = uv;\",\n\t\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" ),\n\n\t\tfragmentShader: [\n\n\t\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\t\"varying vec2 vUv;\",\n\t\t\t\"uniform vec2 aspect;\",\n\n\n\t\t\t\"vec2 texel = vec2(1.0 / aspect.x, 1.0 / aspect.y);\",\n\n\t\t\t\"mat3 G[2];\",\n\n\t\t\t\"const mat3 g0 = mat3( 1.0, 2.0, 1.0, 0.0, 0.0, 0.0, -1.0, -2.0, -1.0 );\",\n\t\t\t\"const mat3 g1 = mat3( 1.0, 0.0, -1.0, 2.0, 0.0, -2.0, 1.0, 0.0, -1.0 );\",\n\n\n\t\t\t\"void main(void)\",\n\t\t\t\"{\",\n\t\t\t\t\"mat3 I;\",\n\t\t\t\t\"float cnv[2];\",\n\t\t\t\t\"vec3 sample;\",\n\n\t\t\t\t\"G[0] = g0;\",\n\t\t\t\t\"G[1] = g1;\",\n\n\t\t\t\t/* fetch the 3x3 neighbourhood and use the RGB vector's length as intensity value */\n\t\t\t\t\"for (float i=0.0; i<3.0; i++)\",\n\t\t\t\t\"for (float j=0.0; j<3.0; j++) {\",\n\t\t\t\t\t\"sample = texture2D( tDiffuse, vUv + texel * vec2(i-1.0,j-1.0) ).rgb;\",\n\t\t\t\t\t\"I[int(i)][int(j)] = length(sample);\",\n\t\t\t\t\"}\",\n\n\t\t\t\t/* calculate the convolution values for all the masks */\n\t\t\t\t\"for (int i=0; i<2; i++) {\",\n\t\t\t\t\t\"float dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\",\n\t\t\t\t\t\"cnv[i] = dp3 * dp3; \",\n\t\t\t\t\"}\",\n\n\t\t\t\t\"gl_FragColor = vec4(0.5 * sqrt(cnv[0]*cnv[0]+cnv[1]*cnv[1]));\",\n\t\t\t\"} \",\n\n\t\t].join( \"\\n\" )\n\n\t};\n\n}\n","module.exports = function( THREE ){\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tTHREE.EffectComposer = function ( renderer, renderTarget ) {\n\n\t\tthis.renderer = renderer;\n\n\t\tif ( renderTarget === undefined ) {\n\n\t\t\tvar pixelRatio = renderer.getPixelRatio();\n\n\t\t\tvar width  = Math.floor( renderer.context.canvas.width  / pixelRatio ) || 1;\n\t\t\tvar height = Math.floor( renderer.context.canvas.height / pixelRatio ) || 1;\n\t\t\tvar parameters = { minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBFormat, stencilBuffer: false };\n\n\t\t\trenderTarget = new THREE.WebGLRenderTarget( width, height, parameters );\n\n\t\t}\n\n\t\tthis.renderTarget1 = renderTarget;\n\t\tthis.renderTarget2 = renderTarget.clone();\n\n\t\tthis.writeBuffer = this.renderTarget1;\n\t\tthis.readBuffer = this.renderTarget2;\n\n\t\tthis.passes = [];\n\n\t\tif ( THREE.CopyShader === undefined )\n\t\t\tconsole.error( \"THREE.EffectComposer relies on THREE.CopyShader\" );\n\n\t\tthis.copyPass = new THREE.ShaderPass( THREE.CopyShader );\n\n\t};\n\n\tTHREE.EffectComposer.prototype = {\n\n\t\tswapBuffers: function() {\n\n\t\t\tvar tmp = this.readBuffer;\n\t\t\tthis.readBuffer = this.writeBuffer;\n\t\t\tthis.writeBuffer = tmp;\n\n\t\t},\n\n\t\taddPass: function ( pass ) {\n\n\t\t\tthis.passes.push( pass );\n\n\t\t},\n\n\t\tinsertPass: function ( pass, index ) {\n\n\t\t\tthis.passes.splice( index, 0, pass );\n\n\t\t},\n\n\t\trender: function ( delta ) {\n\n\t\t\tthis.writeBuffer = this.renderTarget1;\n\t\t\tthis.readBuffer = this.renderTarget2;\n\n\t\t\tvar maskActive = false;\n\n\t\t\tvar pass, i, il = this.passes.length;\n\n\t\t\tfor ( i = 0; i < il; i ++ ) {\n\n\t\t\t\tpass = this.passes[ i ];\n\n\t\t\t\tif ( ! pass.enabled ) continue;\n\n\t\t\t\tpass.render( this.renderer, this.writeBuffer, this.readBuffer, delta, maskActive );\n\n\t\t\t\tif ( pass.needsSwap ) {\n\n\t\t\t\t\tif ( maskActive ) {\n\n\t\t\t\t\t\tvar context = this.renderer.context;\n\n\t\t\t\t\t\tcontext.stencilFunc( context.NOTEQUAL, 1, 0xffffffff );\n\n\t\t\t\t\t\tthis.copyPass.render( this.renderer, this.writeBuffer, this.readBuffer, delta );\n\n\t\t\t\t\t\tcontext.stencilFunc( context.EQUAL, 1, 0xffffffff );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.swapBuffers();\n\n\t\t\t\t}\n\n\t\t\t\tif ( pass instanceof THREE.MaskPass ) {\n\n\t\t\t\t\tmaskActive = true;\n\n\t\t\t\t} else if ( pass instanceof THREE.ClearMaskPass ) {\n\n\t\t\t\t\tmaskActive = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\treset: function ( renderTarget ) {\n\n\t\t\tif ( renderTarget === undefined ) {\n\n\t\t\t\trenderTarget = this.renderTarget1.clone();\n\n\t\t\t\tvar pixelRatio = this.renderer.getPixelRatio();\n\n\t\t\t\trenderTarget.width  = Math.floor( this.renderer.context.canvas.width  / pixelRatio );\n\t\t\t\trenderTarget.height = Math.floor( this.renderer.context.canvas.height / pixelRatio );\n\n\t\t\t}\n\n\t\t\tthis.renderTarget1.dispose();\n\t\t\tthis.renderTarget1 = renderTarget;\n\t\t\tthis.renderTarget2.dispose();\n\t\t\tthis.renderTarget2 = renderTarget.clone();\n\n\t\t\tthis.writeBuffer = this.renderTarget1;\n\t\t\tthis.readBuffer = this.renderTarget2;\n\n\t\t},\n\n\t\tsetSize: function ( width, height ) {\n\n\t\t\tthis.renderTarget1.setSize( width, height );\n\t\t\tthis.renderTarget2.setSize( width, height );\n\n\t\t}\n\n\t};\n\n};\n","module.exports = function( THREE ){\n\n\t/**\n\t * @author mattdsl / https://github.com/mattdesl/three-shader-fxaa\n\t */\n\t\n\tTHREE.FXAAShader = {\n\t\tuniforms: {\n\t\t\ttDiffuse: {\n\t\t\t\ttype: \"t\",\n\t\t\t\tvalue: new THREE.Texture()\n\t\t\t},\n\t\t\tresolution: {\n\t\t\t\ttype: \"v2\",\n\t\t\t\tvalue: new THREE.Vector2()\n\t\t\t}\n\t\t},\n\t\tvertexShader: \"#define GLSLIFY 1\\nvarying vec2 vUv;\\n\\nvarying vec2 v_rgbNW;\\nvarying vec2 v_rgbNE;\\nvarying vec2 v_rgbSW;\\nvarying vec2 v_rgbSE;\\nvarying vec2 v_rgbM;\\n\\nuniform vec2 resolution;\\n\\nvoid main() {\\n  vUv = uv;\\n  vec2 fragCoord = uv * resolution;\\n  vec2 inverseVP = 1.0 / resolution.xy;\\n  v_rgbNW = (fragCoord + vec2(-1.0, -1.0)) * inverseVP;\\n  v_rgbNE = (fragCoord + vec2(1.0, -1.0)) * inverseVP;\\n  v_rgbSW = (fragCoord + vec2(-1.0, 1.0)) * inverseVP;\\n  v_rgbSE = (fragCoord + vec2(1.0, 1.0)) * inverseVP;\\n  v_rgbM = vec2(fragCoord * inverseVP);\\n\\n  gl_Position = projectionMatrix *\\n              modelViewMatrix *\\n              vec4(position,1.0);\\n}\\n\",\n\t\tfragmentShader: \"#define GLSLIFY 1\\nvarying vec2 vUv;\\n\\n//texcoords computed in vertex step\\n//to avoid dependent texture reads\\nvarying vec2 v_rgbNW;\\nvarying vec2 v_rgbNE;\\nvarying vec2 v_rgbSW;\\nvarying vec2 v_rgbSE;\\nvarying vec2 v_rgbM;\\n\\n//make sure to have a resolution uniform set to the screen size\\nuniform vec2 resolution;\\nuniform sampler2D tDiffuse;\\n\\n/**\\nBasic FXAA implementation based on the code on geeks3d.com with the\\nmodification that the texture2DLod stuff was removed since it's\\nunsupported by WebGL.\\n\\n--\\n\\nFrom:\\nhttps://github.com/mitsuhiko/webgl-meincraft\\n\\nCopyright (c) 2011 by Armin Ronacher.\\n\\nSome rights reserved.\\n\\nRedistribution and use in source and binary forms, with or without\\nmodification, are permitted provided that the following conditions are\\nmet:\\n\\n    * Redistributions of source code must retain the above copyright\\n      notice, this list of conditions and the following disclaimer.\\n\\n    * Redistributions in binary form must reproduce the above\\n      copyright notice, this list of conditions and the following\\n      disclaimer in the documentation and/or other materials provided\\n      with the distribution.\\n\\n    * The names of the contributors may not be used to endorse or\\n      promote products derived from this software without specific\\n      prior written permission.\\n\\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\\n\\\"AS IS\\\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n*/\\n\\n#ifndef FXAA_REDUCE_MIN\\n    #define FXAA_REDUCE_MIN   (1.0/ 128.0)\\n#endif\\n#ifndef FXAA_REDUCE_MUL\\n    #define FXAA_REDUCE_MUL   (1.0 / 8.0)\\n#endif\\n#ifndef FXAA_SPAN_MAX\\n    #define FXAA_SPAN_MAX     8.0\\n#endif\\n\\n//optimized version for mobile, where dependent \\n//texture reads can be a bottleneck\\nvec4 fxaa_1540259130(sampler2D tex, vec2 fragCoord, vec2 resolution,\\n            vec2 v_rgbNW, vec2 v_rgbNE, \\n            vec2 v_rgbSW, vec2 v_rgbSE, \\n            vec2 v_rgbM) {\\n    vec4 color;\\n    mediump vec2 inverseVP = vec2(1.0 / resolution.x, 1.0 / resolution.y);\\n    vec3 rgbNW = texture2D(tex, v_rgbNW).xyz;\\n    vec3 rgbNE = texture2D(tex, v_rgbNE).xyz;\\n    vec3 rgbSW = texture2D(tex, v_rgbSW).xyz;\\n    vec3 rgbSE = texture2D(tex, v_rgbSE).xyz;\\n    vec4 texColor = texture2D(tex, v_rgbM);\\n    vec3 rgbM  = texColor.xyz;\\n    vec3 luma = vec3(0.299, 0.587, 0.114);\\n    float lumaNW = dot(rgbNW, luma);\\n    float lumaNE = dot(rgbNE, luma);\\n    float lumaSW = dot(rgbSW, luma);\\n    float lumaSE = dot(rgbSE, luma);\\n    float lumaM  = dot(rgbM,  luma);\\n    float lumaMin = min(lumaM, min(min(lumaNW, lumaNE), min(lumaSW, lumaSE)));\\n    float lumaMax = max(lumaM, max(max(lumaNW, lumaNE), max(lumaSW, lumaSE)));\\n    \\n    mediump vec2 dir;\\n    dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\\n    dir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\\n    \\n    float dirReduce = max((lumaNW + lumaNE + lumaSW + lumaSE) *\\n                          (0.25 * FXAA_REDUCE_MUL), FXAA_REDUCE_MIN);\\n    \\n    float rcpDirMin = 1.0 / (min(abs(dir.x), abs(dir.y)) + dirReduce);\\n    dir = min(vec2(FXAA_SPAN_MAX, FXAA_SPAN_MAX),\\n              max(vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),\\n              dir * rcpDirMin)) * inverseVP;\\n    \\n    vec3 rgbA = 0.5 * (\\n        texture2D(tex, fragCoord * inverseVP + dir * (1.0 / 3.0 - 0.5)).xyz +\\n        texture2D(tex, fragCoord * inverseVP + dir * (2.0 / 3.0 - 0.5)).xyz);\\n    vec3 rgbB = rgbA * 0.5 + 0.25 * (\\n        texture2D(tex, fragCoord * inverseVP + dir * -0.5).xyz +\\n        texture2D(tex, fragCoord * inverseVP + dir * 0.5).xyz);\\n\\n    float lumaB = dot(rgbB, luma);\\n    if ((lumaB < lumaMin) || (lumaB > lumaMax))\\n        color = vec4(rgbA, texColor.a);\\n    else\\n        color = vec4(rgbB, texColor.a);\\n    return color;\\n}\\n\\nvoid main() {\\n  vec2 fragCoord = vUv * resolution;   \\n  gl_FragColor = fxaa_1540259130(tDiffuse, fragCoord, resolution, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);\\n}\\n\"\n\t}\n\n}\n","module.exports = function( THREE ){\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tTHREE.FilmPass = function ( noiseIntensity, scanlinesIntensity, scanlinesCount, grayscale ) {\n\n\t\tif ( THREE.FilmShader === undefined )\n\t\t\tconsole.error( \"THREE.FilmPass relies on THREE.FilmShader\" );\n\n\t\tvar shader = THREE.FilmShader;\n\n\t\tthis.uniforms = THREE.UniformsUtils.clone( shader.uniforms );\n\n\t\tthis.material = new THREE.ShaderMaterial( {\n\n\t\t\tuniforms: this.uniforms,\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader\n\n\t\t} );\n\n\t\tif ( grayscale !== undefined )\tthis.uniforms.grayscale.value = grayscale;\n\t\tif ( noiseIntensity !== undefined ) this.uniforms.nIntensity.value = noiseIntensity;\n\t\tif ( scanlinesIntensity !== undefined ) this.uniforms.sIntensity.value = scanlinesIntensity;\n\t\tif ( scanlinesCount !== undefined ) this.uniforms.sCount.value = scanlinesCount;\n\n\t\tthis.enabled = true;\n\t\tthis.renderToScreen = false;\n\t\tthis.needsSwap = true;\n\n\n\t\tthis.camera = new THREE.OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\t\tthis.scene  = new THREE.Scene();\n\n\t\tthis.quad = new THREE.Mesh( new THREE.PlaneBufferGeometry( 2, 2 ), null );\n\t\tthis.scene.add( this.quad );\n\n\t};\n\n\tTHREE.FilmPass.prototype = {\n\n\t\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\n\n\t\t\tthis.uniforms[ \"tDiffuse\" ].value = readBuffer;\n\t\t\tthis.uniforms[ \"time\" ].value += delta;\n\n\t\t\tthis.quad.material = this.material;\n\n\t\t\tif ( this.renderToScreen ) {\n\n\t\t\t\trenderer.render( this.scene, this.camera );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.render( this.scene, this.camera, writeBuffer, false );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n};\n","module.exports = function( THREE ){\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * Film grain & scanlines shader\n\t *\n\t * - ported from HLSL to WebGL / GLSL\n\t * http://www.truevision3d.com/forums/showcase/staticnoise_colorblackwhite_scanline_shaders-t18698.0.html\n\t *\n\t * Screen Space Static Postprocessor\n\t *\n\t * Produces an analogue noise overlay similar to a film grain / TV static\n\t *\n\t * Original implementation and noise algorithm\n\t * Pat 'Hawthorne' Shearon\n\t *\n\t * Optimized scanlines + noise version with intensity scaling\n\t * Georg 'Leviathan' Steinrohder\n\t *\n\t * This version is provided under a Creative Commons Attribution 3.0 License\n\t * http://creativecommons.org/licenses/by/3.0/\n\t */\n\n\tTHREE.FilmShader = {\n\n\t\tuniforms: {\n\n\t\t\t\"tDiffuse\":   { type: \"t\", value: null },\n\t\t\t\"time\":       { type: \"f\", value: 0.0 },\n\t\t\t\"nIntensity\": { type: \"f\", value: 0.5 },\n\t\t\t\"sIntensity\": { type: \"f\", value: 0.05 },\n\t\t\t\"sCount\":     { type: \"f\", value: 4096 },\n\t\t\t\"grayscale\":  { type: \"i\", value: 1 }\n\n\t\t},\n\n\t\tvertexShader: [\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vUv = uv;\",\n\t\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" ),\n\n\t\tfragmentShader: [\n\n\t\t\t// control parameter\n\t\t\t\"uniform float time;\",\n\n\t\t\t\"uniform bool grayscale;\",\n\n\t\t\t// noise effect intensity value (0 = no effect, 1 = full effect)\n\t\t\t\"uniform float nIntensity;\",\n\n\t\t\t// scanlines effect intensity value (0 = no effect, 1 = full effect)\n\t\t\t\"uniform float sIntensity;\",\n\n\t\t\t// scanlines effect count value (0 = no effect, 4096 = full effect)\n\t\t\t\"uniform float sCount;\",\n\n\t\t\t\"uniform sampler2D tDiffuse;\",\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t// sample the source\n\t\t\t\t\"vec4 cTextureScreen = texture2D( tDiffuse, vUv );\",\n\n\t\t\t\t// make some noise\n\t\t\t\t\"float x = vUv.x * vUv.y * time *  1000.0;\",\n\t\t\t\t\"x = mod( x, 13.0 ) * mod( x, 123.0 );\",\n\t\t\t\t\"float dx = mod( x, 0.01 );\",\n\n\t\t\t\t// add noise\n\t\t\t\t\"vec3 cResult = cTextureScreen.rgb + cTextureScreen.rgb * clamp( 0.1 + dx * 100.0, 0.0, 1.0 );\",\n\n\t\t\t\t// get us a sine and cosine\n\t\t\t\t\"vec2 sc = vec2( sin( vUv.y * sCount ), cos( vUv.y * sCount ) );\",\n\n\t\t\t\t// add scanlines\n\t\t\t\t\"cResult += cTextureScreen.rgb * vec3( sc.x, sc.y, sc.x ) * sIntensity;\",\n\n\t\t\t\t// interpolate between source and result by intensity\n\t\t\t\t\"cResult = cTextureScreen.rgb + clamp( nIntensity, 0.0,1.0 ) * ( cResult - cTextureScreen.rgb );\",\n\n\t\t\t\t// convert to grayscale if desired\n\t\t\t\t\"if( grayscale ) {\",\n\n\t\t\t\t\t\"cResult = vec3( cResult.r * 0.3 + cResult.g * 0.59 + cResult.b * 0.11 );\",\n\n\t\t\t\t\"}\",\n\n\t\t\t\t\"gl_FragColor =  vec4( cResult, cTextureScreen.a );\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" )\n\n\t};\n\n}\n","module.exports = function( THREE ){\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * Focus shader\n\t * based on PaintEffect postprocess from ro.me\n\t * http://code.google.com/p/3-dreams-of-black/source/browse/deploy/js/effects/PaintEffect.js\n\t */\n\n\tTHREE.FocusShader = {\n\n\t\tuniforms : {\n\n\t\t\t\"tDiffuse\":       { type: \"t\", value: null },\n\t\t\t\"screenWidth\":    { type: \"f\", value: 1024 },\n\t\t\t\"screenHeight\":   { type: \"f\", value: 1024 },\n\t\t\t\"sampleDistance\": { type: \"f\", value: 0.94 },\n\t\t\t\"waveFactor\":     { type: \"f\", value: 0.00125 }\n\n\t\t},\n\n\t\tvertexShader: [\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vUv = uv;\",\n\t\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" ),\n\n\t\tfragmentShader: [\n\n\t\t\t\"uniform float screenWidth;\",\n\t\t\t\"uniform float screenHeight;\",\n\t\t\t\"uniform float sampleDistance;\",\n\t\t\t\"uniform float waveFactor;\",\n\n\t\t\t\"uniform sampler2D tDiffuse;\",\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vec4 color, org, tmp, add;\",\n\t\t\t\t\"float sample_dist, f;\",\n\t\t\t\t\"vec2 vin;\",\n\t\t\t\t\"vec2 uv = vUv;\",\n\n\t\t\t\t\"add = color = org = texture2D( tDiffuse, uv );\",\n\n\t\t\t\t\"vin = ( uv - vec2( 0.5 ) ) * vec2( 1.4 );\",\n\t\t\t\t\"sample_dist = dot( vin, vin ) * 2.0;\",\n\n\t\t\t\t\"f = ( waveFactor * 100.0 + sample_dist ) * sampleDistance * 4.0;\",\n\n\t\t\t\t\"vec2 sampleSize = vec2(  1.0 / screenWidth, 1.0 / screenHeight ) * vec2( f );\",\n\n\t\t\t\t\"add += tmp = texture2D( tDiffuse, uv + vec2( 0.111964, 0.993712 ) * sampleSize );\",\n\t\t\t\t\"if( tmp.b < color.b ) color = tmp;\",\n\n\t\t\t\t\"add += tmp = texture2D( tDiffuse, uv + vec2( 0.846724, 0.532032 ) * sampleSize );\",\n\t\t\t\t\"if( tmp.b < color.b ) color = tmp;\",\n\n\t\t\t\t\"add += tmp = texture2D( tDiffuse, uv + vec2( 0.943883, -0.330279 ) * sampleSize );\",\n\t\t\t\t\"if( tmp.b < color.b ) color = tmp;\",\n\n\t\t\t\t\"add += tmp = texture2D( tDiffuse, uv + vec2( 0.330279, -0.943883 ) * sampleSize );\",\n\t\t\t\t\"if( tmp.b < color.b ) color = tmp;\",\n\n\t\t\t\t\"add += tmp = texture2D( tDiffuse, uv + vec2( -0.532032, -0.846724 ) * sampleSize );\",\n\t\t\t\t\"if( tmp.b < color.b ) color = tmp;\",\n\n\t\t\t\t\"add += tmp = texture2D( tDiffuse, uv + vec2( -0.993712, -0.111964 ) * sampleSize );\",\n\t\t\t\t\"if( tmp.b < color.b ) color = tmp;\",\n\n\t\t\t\t\"add += tmp = texture2D( tDiffuse, uv + vec2( -0.707107, 0.707107 ) * sampleSize );\",\n\t\t\t\t\"if( tmp.b < color.b ) color = tmp;\",\n\n\t\t\t\t\"color = color * vec4( 2.0 ) - ( add / vec4( 8.0 ) );\",\n\t\t\t\t\"color = color + ( add / vec4( 8.0 ) - color ) * ( vec4( 1.0 ) - vec4( sample_dist * 0.5 ) );\",\n\n\t\t\t\t\"gl_FragColor = vec4( color.rgb * color.rgb * vec3( 0.95 ) + color.rgb, 1.0 );\",\n\n\t\t\t\"}\"\n\n\n\t\t].join( \"\\n\" )\n\t};\n\n}\n","module.exports = function( THREE ){\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * Based on Nvidia Cg tutorial\n\t */\n\n\tTHREE.FresnelShader = {\n\n\t\tuniforms: {\n\n\t\t\t\"mRefractionRatio\": { type: \"f\", value: 1.02 },\n\t\t\t\"mFresnelBias\": { type: \"f\", value: 0.1 },\n\t\t\t\"mFresnelPower\": { type: \"f\", value: 2.0 },\n\t\t\t\"mFresnelScale\": { type: \"f\", value: 1.0 },\n\t\t\t\"tCube\": { type: \"t\", value: null }\n\n\t\t},\n\n\t\tvertexShader: [\n\n\t\t\t\"uniform float mRefractionRatio;\",\n\t\t\t\"uniform float mFresnelBias;\",\n\t\t\t\"uniform float mFresnelScale;\",\n\t\t\t\"uniform float mFresnelPower;\",\n\n\t\t\t\"varying vec3 vReflect;\",\n\t\t\t\"varying vec3 vRefract[3];\",\n\t\t\t\"varying float vReflectionFactor;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\n\t\t\t\t\"vec4 worldPosition = modelMatrix * vec4( position, 1.0 );\",\n\n\t\t\t\t\"vec3 worldNormal = normalize( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\",\n\n\t\t\t\t\"vec3 I = worldPosition.xyz - cameraPosition;\",\n\n\t\t\t\t\"vReflect = reflect( I, worldNormal );\",\n\t\t\t\t\"vRefract[0] = refract( normalize( I ), worldNormal, mRefractionRatio );\",\n\t\t\t\t\"vRefract[1] = refract( normalize( I ), worldNormal, mRefractionRatio * 0.99 );\",\n\t\t\t\t\"vRefract[2] = refract( normalize( I ), worldNormal, mRefractionRatio * 0.98 );\",\n\t\t\t\t\"vReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), worldNormal ), mFresnelPower );\",\n\n\t\t\t\t\"gl_Position = projectionMatrix * mvPosition;\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" ),\n\n\t\tfragmentShader: [\n\n\t\t\t\"uniform samplerCube tCube;\",\n\n\t\t\t\"varying vec3 vReflect;\",\n\t\t\t\"varying vec3 vRefract[3];\",\n\t\t\t\"varying float vReflectionFactor;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\",\n\t\t\t\t\"vec4 refractedColor = vec4( 1.0 );\",\n\n\t\t\t\t\"refractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\",\n\t\t\t\t\"refractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\",\n\t\t\t\t\"refractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\",\n\n\t\t\t\t\"gl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" )\n\n\t};\n\n}\n","module.exports = function( THREE ){\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * Gamma Correction Shader\n\t * http://en.wikipedia.org/wiki/gamma_correction\n\t */\n\n\tTHREE.GammaCorrectionShader = {\n\n\t\tuniforms: {\n\n\t\t\t\"tDiffuse\": { type: \"t\", value: null },\n\n\t\t},\n\n\t\tvertexShader: [\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vUv = uv;\",\n\t\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" ),\n\n\t\tfragmentShader: [\n\n\t\t\t\"#define GAMMA_OUTPUT\",\n\t\t\t\"#define GAMMA_FACTOR 2\",\n\n\t\t\t\"uniform sampler2D tDiffuse;\",\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vec4 tex = texture2D( tDiffuse, vec2( vUv.x, vUv.y ) );\",\n\n\t\t\t\t\"gl_FragColor = vec4( linearToOutput( tex.rgb ), tex.a );\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" )\n\n\t};\n\n}\n","module.exports = function( THREE ){\n\n\t/**\n\t \n\t */\n\n\tTHREE.GlitchPass = function ( dt_size ) {\n\n\t\tif ( THREE.DigitalGlitch === undefined ) console.error( \"THREE.GlitchPass relies on THREE.DigitalGlitch\" );\n\t\t\n\t\tvar shader = THREE.DigitalGlitch;\n\t\tthis.uniforms = THREE.UniformsUtils.clone( shader.uniforms );\n\n\t\tif ( dt_size == undefined ) dt_size = 64;\n\t\t\n\t\t\n\t\tthis.uniforms[ \"tDisp\" ].value = this.generateHeightmap( dt_size );\n\t\t\n\n\t\tthis.material = new THREE.ShaderMaterial( {\n\t\t\tuniforms: this.uniforms,\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader\n\t\t} );\n\n\t\tthis.enabled = true;\n\t\tthis.renderToScreen = false;\n\t\tthis.needsSwap = true;\n\n\n\t\tthis.camera = new THREE.OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\t\tthis.scene  = new THREE.Scene();\n\n\t\tthis.quad = new THREE.Mesh( new THREE.PlaneBufferGeometry( 2, 2 ), null );\n\t\tthis.scene.add( this.quad );\n\t\t\n\t\tthis.goWild = false;\n\t\tthis.curF = 0;\n\t\tthis.generateTrigger();\n\t\t\n\t};\n\n\tTHREE.GlitchPass.prototype = {\n\n\t\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\n\n\t\t\tthis.uniforms[ \"tDiffuse\" ].value = readBuffer;\n\t\t\tthis.uniforms[ 'seed' ].value = Math.random();//default seeding\n\t\t\tthis.uniforms[ 'byp' ].value = 0;\n\t\t\t\n\t\t\tif ( this.curF % this.randX == 0 || this.goWild == true ) {\n\n\t\t\t\tthis.uniforms[ 'amount' ].value = Math.random() / 30;\n\t\t\t\tthis.uniforms[ 'angle' ].value = THREE.Math.randFloat( - Math.PI, Math.PI );\n\t\t\t\tthis.uniforms[ 'seed_x' ].value = THREE.Math.randFloat( - 1, 1 );\n\t\t\t\tthis.uniforms[ 'seed_y' ].value = THREE.Math.randFloat( - 1, 1 );\n\t\t\t\tthis.uniforms[ 'distortion_x' ].value = THREE.Math.randFloat( 0, 1 );\n\t\t\t\tthis.uniforms[ 'distortion_y' ].value = THREE.Math.randFloat( 0, 1 );\n\t\t\t\tthis.curF = 0;\n\t\t\t\tthis.generateTrigger();\n\n\t\t\t} else if ( this.curF % this.randX < this.randX / 5 ) {\n\n\t\t\t\tthis.uniforms[ 'amount' ].value = Math.random() / 90;\n\t\t\t\tthis.uniforms[ 'angle' ].value = THREE.Math.randFloat( - Math.PI, Math.PI );\n\t\t\t\tthis.uniforms[ 'distortion_x' ].value = THREE.Math.randFloat( 0, 1 );\n\t\t\t\tthis.uniforms[ 'distortion_y' ].value = THREE.Math.randFloat( 0, 1 );\n\t\t\t\tthis.uniforms[ 'seed_x' ].value = THREE.Math.randFloat( - 0.3, 0.3 );\n\t\t\t\tthis.uniforms[ 'seed_y' ].value = THREE.Math.randFloat( - 0.3, 0.3 );\n\n\t\t\t} else if ( this.goWild == false ) {\n\n\t\t\t\tthis.uniforms[ 'byp' ].value = 1;\n\n\t\t\t}\n\t\t\tthis.curF ++;\n\t\t\t\n\t\t\tthis.quad.material = this.material;\n\t\t\tif ( this.renderToScreen ) {\n\n\t\t\t\trenderer.render( this.scene, this.camera );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.render( this.scene, this.camera, writeBuffer, false );\n\n\t\t\t}\n\n\t\t},\n\t\tgenerateTrigger: function() {\n\n\t\t\tthis.randX = THREE.Math.randInt( 120, 240 );\n\n\t\t},\n\t\tgenerateHeightmap: function( dt_size ) {\n\n\t\t\tvar data_arr = new Float32Array( dt_size * dt_size * 3 );\n\t\t\tvar length = dt_size * dt_size;\n\t\t\t\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tvar val = THREE.Math.randFloat( 0, 1 );\n\t\t\t\tdata_arr[ i * 3 + 0 ] = val;\n\t\t\t\tdata_arr[ i * 3 + 1 ] = val;\n\t\t\t\tdata_arr[ i * 3 + 2 ] = val;\n\n\t\t\t}\n\t\t\t\n\t\t\tvar texture = new THREE.DataTexture( data_arr, dt_size, dt_size, THREE.RGBFormat, THREE.FloatType );\n\t\t\ttexture.needsUpdate = true;\n\t\t\treturn texture;\n\n\t\t}\n\t};\n\n};\n","module.exports = function( THREE ){\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t *\n\t * Two pass Gaussian blur filter (horizontal and vertical blur shaders)\n\t * - described in http://www.gamerendering.com/2008/10/11/gaussian-blur-filter-shader/\n\t *   and used in http://www.cake23.de/traveling-wavefronts-lit-up.html\n\t *\n\t * - 9 samples per pass\n\t * - standard deviation 2.7\n\t * - \"h\" and \"v\" parameters should be set to \"1 / width\" and \"1 / height\"\n\t */\n\n\tTHREE.HorizontalBlurShader = {\n\n\t\tuniforms: {\n\n\t\t\t\"tDiffuse\": { type: \"t\", value: null },\n\t\t\t\"h\":        { type: \"f\", value: 1.0 / 512.0 }\n\n\t\t},\n\n\t\tvertexShader: [\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vUv = uv;\",\n\t\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" ),\n\n\t\tfragmentShader: [\n\n\t\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\t\"uniform float h;\",\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vec4 sum = vec4( 0.0 );\",\n\n\t\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * h, vUv.y ) ) * 0.051;\",\n\t\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * h, vUv.y ) ) * 0.0918;\",\n\t\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * h, vUv.y ) ) * 0.12245;\",\n\t\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * h, vUv.y ) ) * 0.1531;\",\n\t\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;\",\n\t\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * h, vUv.y ) ) * 0.1531;\",\n\t\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * h, vUv.y ) ) * 0.12245;\",\n\t\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * h, vUv.y ) ) * 0.0918;\",\n\t\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * h, vUv.y ) ) * 0.051;\",\n\n\t\t\t\t\"gl_FragColor = sum;\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" )\n\n\t};\n\n}\n","module.exports = function( THREE ){\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * Simple fake tilt-shift effect, modulating two pass Gaussian blur (see above) by vertical position\n\t *\n\t * - 9 samples per pass\n\t * - standard deviation 2.7\n\t * - \"h\" and \"v\" parameters should be set to \"1 / width\" and \"1 / height\"\n\t * - \"r\" parameter control where \"focused\" horizontal line lies\n\t */\n\n\tTHREE.HorizontalTiltShiftShader = {\n\n\t\tuniforms: {\n\n\t\t\t\"tDiffuse\": { type: \"t\", value: null },\n\t\t\t\"h\":        { type: \"f\", value: 1.0 / 512.0 },\n\t\t\t\"r\":        { type: \"f\", value: 0.35 }\n\n\t\t},\n\n\t\tvertexShader: [\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vUv = uv;\",\n\t\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" ),\n\n\t\tfragmentShader: [\n\n\t\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\t\"uniform float h;\",\n\t\t\t\"uniform float r;\",\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vec4 sum = vec4( 0.0 );\",\n\n\t\t\t\t\"float hh = h * abs( r - vUv.y );\",\n\n\t\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * hh, vUv.y ) ) * 0.051;\",\n\t\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * hh, vUv.y ) ) * 0.0918;\",\n\t\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * hh, vUv.y ) ) * 0.12245;\",\n\t\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * hh, vUv.y ) ) * 0.1531;\",\n\t\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;\",\n\t\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * hh, vUv.y ) ) * 0.1531;\",\n\t\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * hh, vUv.y ) ) * 0.12245;\",\n\t\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * hh, vUv.y ) ) * 0.0918;\",\n\t\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * hh, vUv.y ) ) * 0.051;\",\n\n\t\t\t\t\"gl_FragColor = sum;\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" )\n\n\t};\n\n}\n","module.exports = function( THREE ){\n\t/**\n\t * @author tapio / http://tapio.github.com/\n\t *\n\t * Hue and saturation adjustment\n\t * https://github.com/evanw/glfx.js\n\t * hue: -1 to 1 (-1 is 180 degrees in the negative direction, 0 is no change, etc.\n\t * saturation: -1 to 1 (-1 is solid gray, 0 is no change, and 1 is maximum contrast)\n\t */\n\n\tTHREE.HueSaturationShader = {\n\n\t\tuniforms: {\n\n\t\t\t\"tDiffuse\":   { type: \"t\", value: null },\n\t\t\t\"hue\":        { type: \"f\", value: 0 },\n\t\t\t\"saturation\": { type: \"f\", value: 0 }\n\n\t\t},\n\n\t\tvertexShader: [\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vUv = uv;\",\n\n\t\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" ),\n\n\t\tfragmentShader: [\n\n\t\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\t\"uniform float hue;\",\n\t\t\t\"uniform float saturation;\",\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"gl_FragColor = texture2D( tDiffuse, vUv );\",\n\n\t\t\t\t// hue\n\t\t\t\t\"float angle = hue * 3.14159265;\",\n\t\t\t\t\"float s = sin(angle), c = cos(angle);\",\n\t\t\t\t\"vec3 weights = (vec3(2.0 * c, -sqrt(3.0) * s - c, sqrt(3.0) * s - c) + 1.0) / 3.0;\",\n\t\t\t\t\"float len = length(gl_FragColor.rgb);\",\n\t\t\t\t\"gl_FragColor.rgb = vec3(\",\n\t\t\t\t\t\"dot(gl_FragColor.rgb, weights.xyz),\",\n\t\t\t\t\t\"dot(gl_FragColor.rgb, weights.zxy),\",\n\t\t\t\t\t\"dot(gl_FragColor.rgb, weights.yzx)\",\n\t\t\t\t\");\",\n\n\t\t\t\t// saturation\n\t\t\t\t\"float average = (gl_FragColor.r + gl_FragColor.g + gl_FragColor.b) / 3.0;\",\n\t\t\t\t\"if (saturation > 0.0) {\",\n\t\t\t\t\t\"gl_FragColor.rgb += (average - gl_FragColor.rgb) * (1.0 - 1.0 / (1.001 - saturation));\",\n\t\t\t\t\"} else {\",\n\t\t\t\t\t\"gl_FragColor.rgb += (average - gl_FragColor.rgb) * (-saturation);\",\n\t\t\t\t\"}\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" )\n\n\t};\n\n}\n","module.exports = function( THREE ){\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tTHREE.JSONLoader = function ( manager ) {\n\n\t\tif ( typeof manager === 'boolean' ) {\n\n\t\t\tconsole.warn( 'THREE.JSONLoader: showStatus parameter has been removed from constructor.' );\n\t\t\tmanager = undefined;\n\n\t\t}\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n\t\tthis.withCredentials = false;\n\n\t};\n\n\tTHREE.JSONLoader.prototype = {\n\n\t\tconstructor: THREE.JSONLoader,\n\n\t\t// Deprecated\n\n\t\tget statusDomElement () {\n\n\t\t\tif ( this._statusDomElement === undefined ) {\n\n\t\t\t\tthis._statusDomElement = document.createElement( 'div' );\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.JSONLoader: .statusDomElement has been removed.' );\n\t\t\treturn this._statusDomElement;\n\n\t\t},\n\n\t\tload: function( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar texturePath = this.texturePath && ( typeof this.texturePath === \"string\" ) ? this.texturePath : THREE.Loader.prototype.extractUrlBase( url );\n\n\t\t\tvar loader = new THREE.XHRLoader( this.manager );\n\t\t\tloader.setWithCredentials( this.withCredentials );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tvar json = JSON.parse( text );\n\t\t\t\tvar metadata = json.metadata;\n\n\t\t\t\tif ( metadata !== undefined ) {\n\n\t\t\t\t\tvar type = metadata.type;\n\n\t\t\t\t\tif ( type !== undefined ) {\n\n\t\t\t\t\t\tif ( type.toLowerCase() === 'object' ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( type.toLowerCase() === 'scene' ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.SceneLoader instead.' );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar object = scope.parse( json, texturePath );\n\t\t\t\tonLoad( object.geometry, object.materials );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tsetTexturePath: function ( value ) {\n\n\t\t\tthis.texturePath = value;\n\n\t\t},\n\n\t\tparse: function ( json, texturePath ) {\n\n\t\t\tvar geometry = new THREE.Geometry(),\n\t\t\tscale = ( json.scale !== undefined ) ? 1.0 / json.scale : 1.0;\n\n\t\t\tparseModel( scale );\n\n\t\t\tparseSkin();\n\t\t\tparseMorphing( scale );\n\t\t\tparseAnimations();\n\n\t\t\tgeometry.computeFaceNormals();\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\tfunction parseModel( scale ) {\n\n\t\t\t\tfunction isBitSet( value, position ) {\n\n\t\t\t\t\treturn value & ( 1 << position );\n\n\t\t\t\t}\n\n\t\t\t\tvar i, j, fi,\n\n\t\t\t\toffset, zLength,\n\n\t\t\tcolorIndex, normalIndex, uvIndex, materialIndex,\n\n\t\t\t\ttype,\n\t\t\t\tisQuad,\n\t\t\t\thasMaterial,\n\t\t\t\thasFaceVertexUv,\n\t\t\t\thasFaceNormal, hasFaceVertexNormal,\n\t\t\t\thasFaceColor, hasFaceVertexColor,\n\n\t\t\tvertex, face, faceA, faceB, hex, normal,\n\n\t\t\t\tuvLayer, uv, u, v,\n\n\t\t\t\tfaces = json.faces,\n\t\t\t\tvertices = json.vertices,\n\t\t\t\tnormals = json.normals,\n\t\t\t\tcolors = json.colors,\n\n\t\t\t\tnUvLayers = 0;\n\n\t\t\t\tif ( json.uvs !== undefined ) {\n\n\t\t\t\t\t// disregard empty arrays\n\n\t\t\t\t\tfor ( i = 0; i < json.uvs.length; i ++ ) {\n\n\t\t\t\t\t\tif ( json.uvs[ i ].length ) nUvLayers ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\tgeometry.faceVertexUvs[ i ] = [];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\toffset = 0;\n\t\t\t\tzLength = vertices.length;\n\n\t\t\t\twhile ( offset < zLength ) {\n\n\t\t\t\t\tvertex = new THREE.Vector3();\n\n\t\t\t\t\tvertex.x = vertices[ offset ++ ] * scale;\n\t\t\t\t\tvertex.y = vertices[ offset ++ ] * scale;\n\t\t\t\t\tvertex.z = vertices[ offset ++ ] * scale;\n\n\t\t\t\t\tgeometry.vertices.push( vertex );\n\n\t\t\t\t}\n\n\t\t\t\toffset = 0;\n\t\t\t\tzLength = faces.length;\n\n\t\t\t\twhile ( offset < zLength ) {\n\n\t\t\t\t\ttype = faces[ offset ++ ];\n\n\n\t\t\t\t\tisQuad              = isBitSet( type, 0 );\n\t\t\t\t\thasMaterial         = isBitSet( type, 1 );\n\t\t\t\t\thasFaceVertexUv     = isBitSet( type, 3 );\n\t\t\t\t\thasFaceNormal       = isBitSet( type, 4 );\n\t\t\t\t\thasFaceVertexNormal = isBitSet( type, 5 );\n\t\t\t\t\thasFaceColor\t     = isBitSet( type, 6 );\n\t\t\t\t\thasFaceVertexColor  = isBitSet( type, 7 );\n\n\t\t\t\t\t// console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\n\n\t\t\t\t\tif ( isQuad ) {\n\n\t\t\t\t\t\tfaceA = new THREE.Face3();\n\t\t\t\t\t\tfaceA.a = faces[ offset ];\n\t\t\t\t\t\tfaceA.b = faces[ offset + 1 ];\n\t\t\t\t\t\tfaceA.c = faces[ offset + 3 ];\n\n\t\t\t\t\t\tfaceB = new THREE.Face3();\n\t\t\t\t\t\tfaceB.a = faces[ offset + 1 ];\n\t\t\t\t\t\tfaceB.b = faces[ offset + 2 ];\n\t\t\t\t\t\tfaceB.c = faces[ offset + 3 ];\n\n\t\t\t\t\t\toffset += 4;\n\n\t\t\t\t\t\tif ( hasMaterial ) {\n\n\t\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\tfaceA.materialIndex = materialIndex;\n\t\t\t\t\t\t\tfaceB.materialIndex = materialIndex;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// to get face <=> uv index correspondence\n\n\t\t\t\t\t\tfi = geometry.faces.length;\n\n\t\t\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = [];\n\n\t\t\t\t\t\t\t\tfor ( j = 0; j < 4; j ++ ) {\n\n\t\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\n\t\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n\t\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\n\t\t\t\t\t\t\t\t\tuv = new THREE.Vector2( u, v );\n\n\t\t\t\t\t\t\t\t\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\n\t\t\t\t\t\t\t\t\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\tfaceA.normal.set(\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tfaceB.normal.copy( faceA.normal );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\t\tnormal = new THREE.Vector3(\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t\t);\n\n\n\t\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\n\t\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\thex = colors[ colorIndex ];\n\n\t\t\t\t\t\t\tfaceA.color.setHex( hex );\n\t\t\t\t\t\t\tfaceB.color.setHex( hex );\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\t\thex = colors[ colorIndex ];\n\n\t\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexColors.push( new THREE.Color( hex ) );\n\t\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexColors.push( new THREE.Color( hex ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry.faces.push( faceA );\n\t\t\t\t\t\tgeometry.faces.push( faceB );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tface = new THREE.Face3();\n\t\t\t\t\t\tface.a = faces[ offset ++ ];\n\t\t\t\t\t\tface.b = faces[ offset ++ ];\n\t\t\t\t\t\tface.c = faces[ offset ++ ];\n\n\t\t\t\t\t\tif ( hasMaterial ) {\n\n\t\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\tface.materialIndex = materialIndex;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// to get face <=> uv index correspondence\n\n\t\t\t\t\t\tfi = geometry.faces.length;\n\n\t\t\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n\n\t\t\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\n\t\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n\t\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\n\t\t\t\t\t\t\t\t\tuv = new THREE.Vector2( u, v );\n\n\t\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\tface.normal.set(\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\t\tnormal = new THREE.Vector3(\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tface.vertexNormals.push( normal );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\tface.color.setHex( colors[ colorIndex ] );\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\t\tface.vertexColors.push( new THREE.Color( colors[ colorIndex ] ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry.faces.push( face );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t\tfunction parseSkin() {\n\n\t\t\t\tvar influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\n\n\t\t\t\tif ( json.skinWeights ) {\n\n\t\t\t\t\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\n\n\t\t\t\t\t\tvar x =                               json.skinWeights[ i ];\n\t\t\t\t\t\tvar y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\n\t\t\t\t\t\tvar z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\n\t\t\t\t\t\tvar w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\n\n\t\t\t\t\t\tgeometry.skinWeights.push( new THREE.Vector4( x, y, z, w ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( json.skinIndices ) {\n\n\t\t\t\t\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\n\n\t\t\t\t\t\tvar a =                               json.skinIndices[ i ];\n\t\t\t\t\t\tvar b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\n\t\t\t\t\t\tvar c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\n\t\t\t\t\t\tvar d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\n\n\t\t\t\t\t\tgeometry.skinIndices.push( new THREE.Vector4( a, b, c, d ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.bones = json.bones;\n\n\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\n\n\t\t\t\t\tconsole.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\n\t\t\t\t\t\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t\tfunction parseMorphing( scale ) {\n\n\t\t\t\tif ( json.morphTargets !== undefined ) {\n\n\t\t\t\t\tfor ( var i = 0, l = json.morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tgeometry.morphTargets[ i ] = {};\n\t\t\t\t\t\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\n\t\t\t\t\t\tgeometry.morphTargets[ i ].vertices = [];\n\n\t\t\t\t\t\tvar dstVertices = geometry.morphTargets[ i ].vertices;\n\t\t\t\t\t\tvar srcVertices = json.morphTargets[ i ].vertices;\n\n\t\t\t\t\t\tfor ( var v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\n\n\t\t\t\t\t\t\tvar vertex = new THREE.Vector3();\n\t\t\t\t\t\t\tvertex.x = srcVertices[ v ] * scale;\n\t\t\t\t\t\t\tvertex.y = srcVertices[ v + 1 ] * scale;\n\t\t\t\t\t\t\tvertex.z = srcVertices[ v + 2 ] * scale;\n\n\t\t\t\t\t\t\tdstVertices.push( vertex );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( json.morphColors !== undefined && json.morphColors.length > 0 ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.JSONLoader: \"morphColors\" no longer supported. Using them as face colors.' );\n\n\t\t\t\t\tvar faces = geometry.faces;\n\t\t\t\t\tvar morphColors = json.morphColors[ 0 ].colors;\n\n\t\t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tfaces[ i ].color.fromArray( morphColors, i * 3 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction parseAnimations() {\n\n\t\t\t\tvar outputAnimations = [];\n\n\t\t\t\t// parse old style Bone/Hierarchy animations\n\t\t\t\tvar animations = [];\n\n\t\t\t\tif ( json.animation !== undefined ) {\n\n\t\t\t\t\tanimations.push( json.animation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( json.animations !== undefined ) {\n\n\t\t\t\t\tif ( json.animations.length ) {\n\n\t\t\t\t\t\tanimations = animations.concat( json.animations );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tanimations.push( json.animations );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0; i < animations.length; i ++ ) {\n\n\t\t\t\t\tvar clip = THREE.AnimationClip.parseAnimation( animations[ i ], geometry.bones );\n\t\t\t\t\tif ( clip ) outputAnimations.push( clip );\n\n\t\t\t\t}\n\n\t\t\t\t// parse implicit morph animations\n\t\t\t\tif ( geometry.morphTargets ) {\n\n\t\t\t\t\t// TODO: Figure out what an appropraite FPS is for morph target animations -- defaulting to 10, but really it is completely arbitrary.\n\t\t\t\t\tvar morphAnimationClips = THREE.AnimationClip.CreateClipsFromMorphTargetSequences( geometry.morphTargets, 10 );\n\t\t\t\t\toutputAnimations = outputAnimations.concat( morphAnimationClips );\n\n\t\t\t\t}\n\n\t\t\t\tif ( outputAnimations.length > 0 ) geometry.animations = outputAnimations;\n\n\t\t\t};\n\n\t\t\tif ( json.materials === undefined || json.materials.length === 0 ) {\n\n\t\t\t\treturn { geometry: geometry };\n\n\t\t\t} else {\n\n\t\t\t\tvar materials = THREE.Loader.prototype.initMaterials( json.materials, texturePath, this.crossOrigin );\n\n\t\t\t\treturn { geometry: geometry, materials: materials };\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n};","module.exports = function( THREE ){\n\t/**\n\t * @author felixturner / http://airtight.cc/\n\t *\n\t * Kaleidoscope Shader\n\t * Radial reflection around center point\n\t * Ported from: http://pixelshaders.com/editor/\n\t * by Toby Schachman / http://tobyschachman.com/\n\t *\n\t * sides: number of reflections\n\t * angle: initial angle in radians\n\t */\n\n\tTHREE.KaleidoShader = {\n\n\t\tuniforms: {\n\n\t\t\t\"tDiffuse\": { type: \"t\", value: null },\n\t\t\t\"sides\":    { type: \"f\", value: 6.0 },\n\t\t\t\"angle\":    { type: \"f\", value: 0.0 }\n\n\t\t},\n\n\t\tvertexShader: [\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vUv = uv;\",\n\t\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" ),\n\n\t\tfragmentShader: [\n\n\t\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\t\"uniform float sides;\",\n\t\t\t\"uniform float angle;\",\n\t\t\t\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vec2 p = vUv - 0.5;\",\n\t\t\t\t\"float r = length(p);\",\n\t\t\t\t\"float a = atan(p.y, p.x) + angle;\",\n\t\t\t\t\"float tau = 2. * 3.1416 ;\",\n\t\t\t\t\"a = mod(a, tau/sides);\",\n\t\t\t\t\"a = abs(a - tau/sides/2.) ;\",\n\t\t\t\t\"p = r * vec2(cos(a), sin(a));\",\n\t\t\t\t\"vec4 color = texture2D(tDiffuse, p + 0.5);\",\n\t\t\t\t\"gl_FragColor = color;\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" )\n\n\t};\n\n}\n","module.exports = function( THREE ){\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * Luminosity\n\t * http://en.wikipedia.org/wiki/Luminosity\n\t */\n\n\tTHREE.LuminosityShader = {\n\n\t\tuniforms: {\n\n\t\t\t\"tDiffuse\": { type: \"t\", value: null }\n\n\t\t},\n\n\t\tvertexShader: [\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vUv = uv;\",\n\n\t\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" ),\n\n\t\tfragmentShader: [\n\n\t\t\t\"uniform sampler2D tDiffuse;\",\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vec4 texel = texture2D( tDiffuse, vUv );\",\n\n\t\t\t\t\"vec3 luma = vec3( 0.299, 0.587, 0.114 );\",\n\n\t\t\t\t\"float v = dot( texel.xyz, luma );\",\n\n\t\t\t\t\"gl_FragColor = vec4( v, v, v, texel.w );\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" )\n\n\t};\n\n}\n","module.exports = function( THREE ){\n\n\t/**\n\t * Loads a Wavefront .mtl file specifying materials\n\t *\n\t * @author angelxuanchang\n\t */\n\n\tTHREE.MTLLoader = function( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n\t};\n\n\tTHREE.MTLLoader.prototype = {\n\n\t\tconstructor: THREE.MTLLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new THREE.XHRLoader( this.manager );\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tonLoad( scope.parse( text ) );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\n\t\t},\n\n\t\tsetBaseUrl: function( value ) {\n\n\t\t\t// TODO: Merge with setPath()? Or rename to setTexturePath?\n\n\t\t\tthis.baseUrl = value;\n\n\t\t},\n\n\t\tsetCrossOrigin: function ( value ) {\n\n\t\t\tthis.crossOrigin = value;\n\n\t\t},\n\n\t\tsetMaterialOptions: function ( value ) {\n\n\t\t\tthis.materialOptions = value;\n\n\t\t},\n\n\t\t/**\n\t\t * Parses loaded MTL file\n\t\t * @param text - Content of MTL file\n\t\t * @return {THREE.MTLLoader.MaterialCreator}\n\t\t */\n\t\tparse: function ( text ) {\n\n\t\t\tvar lines = text.split( \"\\n\" );\n\t\t\tvar info = {};\n\t\t\tvar delimiter_pattern = /\\s+/;\n\t\t\tvar materialsInfo = {};\n\n\t\t\tfor ( var i = 0; i < lines.length; i ++ ) {\n\n\t\t\t\tvar line = lines[ i ];\n\t\t\t\tline = line.trim();\n\n\t\t\t\tif ( line.length === 0 || line.charAt( 0 ) === '#' ) {\n\n\t\t\t\t\t// Blank line or comment ignore\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tvar pos = line.indexOf( ' ' );\n\n\t\t\t\tvar key = ( pos >= 0 ) ? line.substring( 0, pos ) : line;\n\t\t\t\tkey = key.toLowerCase();\n\n\t\t\t\tvar value = ( pos >= 0 ) ? line.substring( pos + 1 ) : \"\";\n\t\t\t\tvalue = value.trim();\n\n\t\t\t\tif ( key === \"newmtl\" ) {\n\n\t\t\t\t\t// New material\n\n\t\t\t\t\tinfo = { name: value };\n\t\t\t\t\tmaterialsInfo[ value ] = info;\n\n\t\t\t\t} else if ( info ) {\n\n\t\t\t\t\tif ( key === \"ka\" || key === \"kd\" || key === \"ks\" ) {\n\n\t\t\t\t\t\tvar ss = value.split( delimiter_pattern, 3 );\n\t\t\t\t\t\tinfo[ key ] = [ parseFloat( ss[ 0 ] ), parseFloat( ss[ 1 ] ), parseFloat( ss[ 2 ] ) ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tinfo[ key ] = value;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar materialCreator = new THREE.MTLLoader.MaterialCreator( this.baseUrl, this.materialOptions );\n\t\t\tmaterialCreator.setCrossOrigin( this.crossOrigin );\n\t\t\tmaterialCreator.setManager( this.manager );\n\t\t\tmaterialCreator.setMaterials( materialsInfo );\n\t\t\treturn materialCreator;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * Create a new THREE-MTLLoader.MaterialCreator\n\t * @param baseUrl - Url relative to which textures are loaded\n\t * @param options - Set of options on how to construct the materials\n\t *                  side: Which side to apply the material\n\t *                        THREE.FrontSide (default), THREE.BackSide, THREE.DoubleSide\n\t *                  wrap: What type of wrapping to apply for textures\n\t *                        THREE.RepeatWrapping (default), THREE.ClampToEdgeWrapping, THREE.MirroredRepeatWrapping\n\t *                  normalizeRGB: RGBs need to be normalized to 0-1 from 0-255\n\t *                                Default: false, assumed to be already normalized\n\t *                  ignoreZeroRGBs: Ignore values of RGBs (Ka,Kd,Ks) that are all 0's\n\t *                                  Default: false\n\t * @constructor\n\t */\n\n\tTHREE.MTLLoader.MaterialCreator = function( baseUrl, options ) {\n\n\t\tthis.baseUrl = baseUrl;\n\t\tthis.options = options;\n\t\tthis.materialsInfo = {};\n\t\tthis.materials = {};\n\t\tthis.materialsArray = [];\n\t\tthis.nameLookup = {};\n\n\t\tthis.side = ( this.options && this.options.side ) ? this.options.side : THREE.FrontSide;\n\t\tthis.wrap = ( this.options && this.options.wrap ) ? this.options.wrap : THREE.RepeatWrapping;\n\n\t};\n\n\tTHREE.MTLLoader.MaterialCreator.prototype = {\n\n\t\tconstructor: THREE.MTLLoader.MaterialCreator,\n\n\t\tsetCrossOrigin: function ( value ) {\n\n\t\t\tthis.crossOrigin = value;\n\n\t\t},\n\n\t\tsetManager: function ( value ) {\n\n\t\t\tthis.manager = value;\n\n\t\t},\n\n\t\tsetMaterials: function( materialsInfo ) {\n\n\t\t\tthis.materialsInfo = this.convert( materialsInfo );\n\t\t\tthis.materials = {};\n\t\t\tthis.materialsArray = [];\n\t\t\tthis.nameLookup = {};\n\n\t\t},\n\n\t\tconvert: function( materialsInfo ) {\n\n\t\t\tif ( ! this.options ) return materialsInfo;\n\n\t\t\tvar converted = {};\n\n\t\t\tfor ( var mn in materialsInfo ) {\n\n\t\t\t\t// Convert materials info into normalized form based on options\n\n\t\t\t\tvar mat = materialsInfo[ mn ];\n\n\t\t\t\tvar covmat = {};\n\n\t\t\t\tconverted[ mn ] = covmat;\n\n\t\t\t\tfor ( var prop in mat ) {\n\n\t\t\t\t\tvar save = true;\n\t\t\t\t\tvar value = mat[ prop ];\n\t\t\t\t\tvar lprop = prop.toLowerCase();\n\n\t\t\t\t\tswitch ( lprop ) {\n\n\t\t\t\t\t\tcase 'kd':\n\t\t\t\t\t\tcase 'ka':\n\t\t\t\t\t\tcase 'ks':\n\n\t\t\t\t\t\t\t// Diffuse color (color under white light) using RGB values\n\n\t\t\t\t\t\t\tif ( this.options && this.options.normalizeRGB ) {\n\n\t\t\t\t\t\t\t\tvalue = [ value[ 0 ] / 255, value[ 1 ] / 255, value[ 2 ] / 255 ];\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( this.options && this.options.ignoreZeroRGBs ) {\n\n\t\t\t\t\t\t\t\tif ( value[ 0 ] === 0 && value[ 1 ] === 0 && value[ 1 ] === 0 ) {\n\n\t\t\t\t\t\t\t\t\t// ignore\n\n\t\t\t\t\t\t\t\t\tsave = false;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( save ) {\n\n\t\t\t\t\t\tcovmat[ lprop ] = value;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn converted;\n\n\t\t},\n\n\t\tpreload: function () {\n\n\t\t\tfor ( var mn in this.materialsInfo ) {\n\n\t\t\t\tthis.create( mn );\n\n\t\t\t}\n\n\t\t},\n\n\t\tgetIndex: function( materialName ) {\n\n\t\t\treturn this.nameLookup[ materialName ];\n\n\t\t},\n\n\t\tgetAsArray: function() {\n\n\t\t\tvar index = 0;\n\n\t\t\tfor ( var mn in this.materialsInfo ) {\n\n\t\t\t\tthis.materialsArray[ index ] = this.create( mn );\n\t\t\t\tthis.nameLookup[ mn ] = index;\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\treturn this.materialsArray;\n\n\t\t},\n\n\t\tcreate: function ( materialName ) {\n\n\t\t\tif ( this.materials[ materialName ] === undefined ) {\n\n\t\t\t\tthis.createMaterial_( materialName );\n\n\t\t\t}\n\n\t\t\treturn this.materials[ materialName ];\n\n\t\t},\n\n\t\tcreateMaterial_: function ( materialName ) {\n\n\t\t\t// Create material\n\n\t\t\tvar mat = this.materialsInfo[ materialName ];\n\t\t\tvar params = {\n\n\t\t\t\tname: materialName,\n\t\t\t\tside: this.side\n\n\t\t\t};\n\n\t\t\tfor ( var prop in mat ) {\n\n\t\t\t\tvar value = mat[ prop ];\n\n\t\t\t\tif ( value === '' ) continue;\n\n\t\t\t\tswitch ( prop.toLowerCase() ) {\n\n\t\t\t\t\t// Ns is material specular exponent\n\n\t\t\t\t\tcase 'kd':\n\n\t\t\t\t\t\t// Diffuse color (color under white light) using RGB values\n\n\t\t\t\t\t\tparams[ 'color' ] = new THREE.Color().fromArray( value );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ks':\n\n\t\t\t\t\t\t// Specular color (color when light is reflected from shiny surface) using RGB values\n\t\t\t\t\t\tparams[ 'specular' ] = new THREE.Color().fromArray( value );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'map_kd':\n\n\t\t\t\t\t\t// Diffuse texture map\n\n\t\t\t\t\t\tparams[ 'map' ] = this.loadTexture( this.baseUrl + value );\n\t\t\t\t\t\tparams[ 'map' ].wrapS = this.wrap;\n\t\t\t\t\t\tparams[ 'map' ].wrapT = this.wrap;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ns':\n\n\t\t\t\t\t\t// The specular exponent (defines the focus of the specular highlight)\n\t\t\t\t\t\t// A high exponent results in a tight, concentrated highlight. Ns values normally range from 0 to 1000.\n\n\t\t\t\t\t\tparams[ 'shininess' ] = parseFloat( value );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'd':\n\n\t\t\t\t\t\tif ( value < 1 ) {\n\n\t\t\t\t\t\t\tparams[ 'opacity' ] = value;\n\t\t\t\t\t\t\tparams[ 'transparent' ] = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Tr':\n\n\t\t\t\t\t\tif ( value > 0 ) {\n\n\t\t\t\t\t\t\tparams[ 'opacity' ] = 1 - value;\n\t\t\t\t\t\t\tparams[ 'transparent' ] = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'map_bump':\n\t\t\t\t\tcase 'bump':\n\n\t\t\t\t\t\t// Bump texture map\n\n\t\t\t\t\t\tif ( params[ 'bumpMap' ] ) break; // Avoid loading twice.\n\n\t\t\t\t\t\tparams[ 'bumpMap' ] = this.loadTexture( this.baseUrl + value );\n\t\t\t\t\t\tparams[ 'bumpMap' ].wrapS = this.wrap;\n\t\t\t\t\t\tparams[ 'bumpMap' ].wrapT = this.wrap;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.materials[ materialName ] = new THREE.MeshPhongMaterial( params );\n\t\t\treturn this.materials[ materialName ];\n\n\t\t},\n\n\n\t\tloadTexture: function ( url, mapping, onLoad, onProgress, onError ) {\n\n\t\t\tvar texture;\n\t\t\tvar loader = THREE.Loader.Handlers.get( url );\n\t\t\tvar manager = ( this.manager !== undefined ) ? this.manager : THREE.DefaultLoadingManager;\n\n\t\t\tif ( loader === null ) {\n\n\t\t\t\tloader = new THREE.TextureLoader( manager );\n\n\t\t\t}\n\n\t\t\tif ( loader.setCrossOrigin ) loader.setCrossOrigin( this.crossOrigin );\n\t\t\ttexture = loader.load( url, onLoad, onProgress, onError );\n\n\t\t\tif ( mapping !== undefined ) texture.mapping = mapping;\n\n\t\t\treturn texture;\n\n\t\t}\n\n\t};\n\n\tTHREE.EventDispatcher.prototype.apply( THREE.MTLLoader.prototype );\n\n};","module.exports = function( THREE ){\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * Port of greggman's ThreeD version of marching cubes to Three.js\n\t * http://webglsamples.googlecode.com/hg/blob/blob.html\n\t */\n\n\tTHREE.MarchingCubes = function ( resolution, material, enableUvs, enableColors ) {\n\n\t\tTHREE.ImmediateRenderObject.call( this, material );\n\n\t\tthis.enableUvs = enableUvs !== undefined ? enableUvs : false;\n\t\tthis.enableColors = enableColors !== undefined ? enableColors : false;\n\n\t\t// functions have to be object properties\n\t\t// prototype functions kill performance\n\t\t// (tested and it was 4x slower !!!)\n\n\t\tthis.init = function ( resolution ) {\n\n\t\t\tthis.resolution = resolution;\n\n\t\t\t// parameters\n\n\t\t\tthis.isolation = 80.0;\n\n\t\t\t// size of field, 32 is pushing it in Javascript :)\n\n\t\t\tthis.size = resolution;\n\t\t\tthis.size2 = this.size * this.size;\n\t\t\tthis.size3 = this.size2 * this.size;\n\t\t\tthis.halfsize = this.size / 2.0;\n\n\t\t\t// deltas\n\n\t\t\tthis.delta = 2.0 / this.size;\n\t\t\tthis.yd = this.size;\n\t\t\tthis.zd = this.size2;\n\n\t\t\tthis.field = new Float32Array( this.size3 );\n\t\t\tthis.normal_cache = new Float32Array( this.size3 * 3 );\n\n\t\t\t// temp buffers used in polygonize\n\n\t\t\tthis.vlist = new Float32Array( 12 * 3 );\n\t\t\tthis.nlist = new Float32Array( 12 * 3 );\n\n\t\t\t// immediate render mode simulator\n\n\t\t\tthis.maxCount = 4096; // TODO: find the fastest size for this buffer\n\t\t\tthis.count = 0;\n\n\t\t\tthis.hasPositions = false;\n\t\t\tthis.hasNormals = false;\n\t\t\tthis.hasColors = false;\n\t\t\tthis.hasUvs = false;\n\n\t\t\tthis.positionArray = new Float32Array( this.maxCount * 3 );\n\t\t\tthis.normalArray   = new Float32Array( this.maxCount * 3 );\n\n\t\t\tif ( this.enableUvs ) {\n\n\t\t\t\tthis.uvArray = new Float32Array( this.maxCount * 2 );\n\n\t\t\t}\n\n\t\t\tif ( this.enableColors ) {\n\n\t\t\t\tthis.colorArray   = new Float32Array( this.maxCount * 3 );\n\n\t\t\t}\n\n\t\t};\n\n\t\t///////////////////////\n\t\t// Polygonization\n\t\t///////////////////////\n\n\t\tthis.lerp = function( a, b, t ) {\n\n\t\t\treturn a + ( b - a ) * t;\n\n\t\t};\n\n\t\tthis.VIntX = function( q, pout, nout, offset, isol, x, y, z, valp1, valp2 ) {\n\n\t\t\tvar mu = ( isol - valp1 ) / ( valp2 - valp1 ),\n\t\t\tnc = this.normal_cache;\n\n\t\t\tpout[ offset ] \t   = x + mu * this.delta;\n\t\t\tpout[ offset + 1 ] = y;\n\t\t\tpout[ offset + 2 ] = z;\n\n\t\t\tnout[ offset ] \t   = this.lerp( nc[ q ],     nc[ q + 3 ], mu );\n\t\t\tnout[ offset + 1 ] = this.lerp( nc[ q + 1 ], nc[ q + 4 ], mu );\n\t\t\tnout[ offset + 2 ] = this.lerp( nc[ q + 2 ], nc[ q + 5 ], mu );\n\n\t\t};\n\n\t\tthis.VIntY = function( q, pout, nout, offset, isol, x, y, z, valp1, valp2 ) {\n\n\t\t\tvar mu = ( isol - valp1 ) / ( valp2 - valp1 ),\n\t\t\tnc = this.normal_cache;\n\n\t\t\tpout[ offset ] \t   = x;\n\t\t\tpout[ offset + 1 ] = y + mu * this.delta;\n\t\t\tpout[ offset + 2 ] = z;\n\n\t\t\tvar q2 = q + this.yd * 3;\n\n\t\t\tnout[ offset ] \t   = this.lerp( nc[ q ],     nc[ q2 ],     mu );\n\t\t\tnout[ offset + 1 ] = this.lerp( nc[ q + 1 ], nc[ q2 + 1 ], mu );\n\t\t\tnout[ offset + 2 ] = this.lerp( nc[ q + 2 ], nc[ q2 + 2 ], mu );\n\n\t\t};\n\n\t\tthis.VIntZ = function( q, pout, nout, offset, isol, x, y, z, valp1, valp2 ) {\n\n\t\t\tvar mu = ( isol - valp1 ) / ( valp2 - valp1 ),\n\t\t\tnc = this.normal_cache;\n\n\t\t\tpout[ offset ] \t   = x;\n\t\t\tpout[ offset + 1 ] = y;\n\t\t\tpout[ offset + 2 ] = z + mu * this.delta;\n\n\t\t\tvar q2 = q + this.zd * 3;\n\n\t\t\tnout[ offset ] \t   = this.lerp( nc[ q ],     nc[ q2 ],     mu );\n\t\t\tnout[ offset + 1 ] = this.lerp( nc[ q + 1 ], nc[ q2 + 1 ], mu );\n\t\t\tnout[ offset + 2 ] = this.lerp( nc[ q + 2 ], nc[ q2 + 2 ], mu );\n\n\t\t};\n\n\t\tthis.compNorm = function( q ) {\n\n\t\t\tvar q3 = q * 3;\n\n\t\t\tif ( this.normal_cache[ q3 ] === 0.0 ) {\n\n\t\t\t\tthis.normal_cache[ q3 ] = this.field[ q - 1 ] \t    - this.field[ q + 1 ];\n\t\t\t\tthis.normal_cache[ q3 + 1 ] = this.field[ q - this.yd ] - this.field[ q + this.yd ];\n\t\t\t\tthis.normal_cache[ q3 + 2 ] = this.field[ q - this.zd ] - this.field[ q + this.zd ];\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Returns total number of triangles. Fills triangles.\n\t\t// (this is where most of time is spent - it's inner work of O(n3) loop )\n\n\t\tthis.polygonize = function( fx, fy, fz, q, isol, renderCallback ) {\n\n\t\t\t// cache indices\n\t\t\tvar q1 = q + 1,\n\t\t\t\tqy = q + this.yd,\n\t\t\t\tqz = q + this.zd,\n\t\t\t\tq1y = q1 + this.yd,\n\t\t\t\tq1z = q1 + this.zd,\n\t\t\t\tqyz = q + this.yd + this.zd,\n\t\t\t\tq1yz = q1 + this.yd + this.zd;\n\n\t\t\tvar cubeindex = 0,\n\t\t\t\tfield0 = this.field[ q ],\n\t\t\t\tfield1 = this.field[ q1 ],\n\t\t\t\tfield2 = this.field[ qy ],\n\t\t\t\tfield3 = this.field[ q1y ],\n\t\t\t\tfield4 = this.field[ qz ],\n\t\t\t\tfield5 = this.field[ q1z ],\n\t\t\t\tfield6 = this.field[ qyz ],\n\t\t\t\tfield7 = this.field[ q1yz ];\n\n\t\t\tif ( field0 < isol ) cubeindex |= 1;\n\t\t\tif ( field1 < isol ) cubeindex |= 2;\n\t\t\tif ( field2 < isol ) cubeindex |= 8;\n\t\t\tif ( field3 < isol ) cubeindex |= 4;\n\t\t\tif ( field4 < isol ) cubeindex |= 16;\n\t\t\tif ( field5 < isol ) cubeindex |= 32;\n\t\t\tif ( field6 < isol ) cubeindex |= 128;\n\t\t\tif ( field7 < isol ) cubeindex |= 64;\n\n\t\t\t// if cube is entirely in/out of the surface - bail, nothing to draw\n\n\t\t\tvar bits = THREE.edgeTable[ cubeindex ];\n\t\t\tif ( bits === 0 ) return 0;\n\n\t\t\tvar d = this.delta,\n\t\t\t\tfx2 = fx + d,\n\t\t\t\tfy2 = fy + d,\n\t\t\t\tfz2 = fz + d;\n\n\t\t\t// top of the cube\n\n\t\t\tif ( bits & 1 ) {\n\n\t\t\t\tthis.compNorm( q );\n\t\t\t\tthis.compNorm( q1 );\n\t\t\t\tthis.VIntX( q * 3, this.vlist, this.nlist, 0, isol, fx, fy, fz, field0, field1 );\n\n\t\t\t}\n\n\t\t\tif ( bits & 2 ) {\n\n\t\t\t\tthis.compNorm( q1 );\n\t\t\t\tthis.compNorm( q1y );\n\t\t\t\tthis.VIntY( q1 * 3, this.vlist, this.nlist, 3, isol, fx2, fy, fz, field1, field3 );\n\n\t\t\t}\n\n\t\t\tif ( bits & 4 ) {\n\n\t\t\t\tthis.compNorm( qy );\n\t\t\t\tthis.compNorm( q1y );\n\t\t\t\tthis.VIntX( qy * 3, this.vlist, this.nlist, 6, isol, fx, fy2, fz, field2, field3 );\n\n\t\t\t}\n\n\t\t\tif ( bits & 8 ) {\n\n\t\t\t\tthis.compNorm( q );\n\t\t\t\tthis.compNorm( qy );\n\t\t\t\tthis.VIntY( q * 3, this.vlist, this.nlist, 9, isol, fx, fy, fz, field0, field2 );\n\n\t\t\t}\n\n\t\t\t// bottom of the cube\n\n\t\t\tif ( bits & 16 ) {\n\n\t\t\t\tthis.compNorm( qz );\n\t\t\t\tthis.compNorm( q1z );\n\t\t\t\tthis.VIntX( qz * 3, this.vlist, this.nlist, 12, isol, fx, fy, fz2, field4, field5 );\n\n\t\t\t}\n\n\t\t\tif ( bits & 32 ) {\n\n\t\t\t\tthis.compNorm( q1z );\n\t\t\t\tthis.compNorm( q1yz );\n\t\t\t\tthis.VIntY( q1z * 3,  this.vlist, this.nlist, 15, isol, fx2, fy, fz2, field5, field7 );\n\n\t\t\t}\n\n\t\t\tif ( bits & 64 ) {\n\n\t\t\t\tthis.compNorm( qyz );\n\t\t\t\tthis.compNorm( q1yz );\n\t\t\t\tthis.VIntX( qyz * 3, this.vlist, this.nlist, 18, isol, fx, fy2, fz2, field6, field7 );\n\n\t\t\t}\n\n\t\t\tif ( bits & 128 ) {\n\n\t\t\t\tthis.compNorm( qz );\n\t\t\t\tthis.compNorm( qyz );\n\t\t\t\tthis.VIntY( qz * 3,  this.vlist, this.nlist, 21, isol, fx, fy, fz2, field4, field6 );\n\n\t\t\t}\n\n\t\t\t// vertical lines of the cube\n\n\t\t\tif ( bits & 256 ) {\n\n\t\t\t\tthis.compNorm( q );\n\t\t\t\tthis.compNorm( qz );\n\t\t\t\tthis.VIntZ( q * 3, this.vlist, this.nlist, 24, isol, fx, fy, fz, field0, field4 );\n\n\t\t\t}\n\n\t\t\tif ( bits & 512 ) {\n\n\t\t\t\tthis.compNorm( q1 );\n\t\t\t\tthis.compNorm( q1z );\n\t\t\t\tthis.VIntZ( q1 * 3,  this.vlist, this.nlist, 27, isol, fx2, fy,  fz, field1, field5 );\n\n\t\t\t}\n\n\t\t\tif ( bits & 1024 ) {\n\n\t\t\t\tthis.compNorm( q1y );\n\t\t\t\tthis.compNorm( q1yz );\n\t\t\t\tthis.VIntZ( q1y * 3, this.vlist, this.nlist, 30, isol, fx2, fy2, fz, field3, field7 );\n\n\t\t\t}\n\n\t\t\tif ( bits & 2048 ) {\n\n\t\t\t\tthis.compNorm( qy );\n\t\t\t\tthis.compNorm( qyz );\n\t\t\t\tthis.VIntZ( qy * 3, this.vlist, this.nlist, 33, isol, fx,  fy2, fz, field2, field6 );\n\n\t\t\t}\n\n\t\t\tcubeindex <<= 4;  // re-purpose cubeindex into an offset into triTable\n\n\t\t\tvar o1, o2, o3, numtris = 0, i = 0;\n\n\t\t\t// here is where triangles are created\n\n\t\t\twhile ( THREE.triTable[ cubeindex + i ] != - 1 ) {\n\n\t\t\t\to1 = cubeindex + i;\n\t\t\t\to2 = o1 + 1;\n\t\t\t\to3 = o1 + 2;\n\n\t\t\t\tthis.posnormtriv( this.vlist, this.nlist,\n\t\t\t\t\t\t\t\t  3 * THREE.triTable[ o1 ],\n\t\t\t\t\t\t\t\t  3 * THREE.triTable[ o2 ],\n\t\t\t\t\t\t\t\t  3 * THREE.triTable[ o3 ],\n\t\t\t\t\t\t\t\t  renderCallback );\n\n\t\t\t\ti += 3;\n\t\t\t\tnumtris ++;\n\n\t\t\t}\n\n\t\t\treturn numtris;\n\n\t\t};\n\n\t\t/////////////////////////////////////\n\t\t// Immediate render mode simulator\n\t\t/////////////////////////////////////\n\n\t\tthis.posnormtriv = function( pos, norm, o1, o2, o3, renderCallback ) {\n\n\t\t\tvar c = this.count * 3;\n\n\t\t\t// positions\n\n\t\t\tthis.positionArray[ c ] \t= pos[ o1 ];\n\t\t\tthis.positionArray[ c + 1 ] = pos[ o1 + 1 ];\n\t\t\tthis.positionArray[ c + 2 ] = pos[ o1 + 2 ];\n\n\t\t\tthis.positionArray[ c + 3 ] = pos[ o2 ];\n\t\t\tthis.positionArray[ c + 4 ] = pos[ o2 + 1 ];\n\t\t\tthis.positionArray[ c + 5 ] = pos[ o2 + 2 ];\n\n\t\t\tthis.positionArray[ c + 6 ] = pos[ o3 ];\n\t\t\tthis.positionArray[ c + 7 ] = pos[ o3 + 1 ];\n\t\t\tthis.positionArray[ c + 8 ] = pos[ o3 + 2 ];\n\n\t\t\t// normals\n\n\t\t\tthis.normalArray[ c ] \t  = norm[ o1 ];\n\t\t\tthis.normalArray[ c + 1 ] = norm[ o1 + 1 ];\n\t\t\tthis.normalArray[ c + 2 ] = norm[ o1 + 2 ];\n\n\t\t\tthis.normalArray[ c + 3 ] = norm[ o2 ];\n\t\t\tthis.normalArray[ c + 4 ] = norm[ o2 + 1 ];\n\t\t\tthis.normalArray[ c + 5 ] = norm[ o2 + 2 ];\n\n\t\t\tthis.normalArray[ c + 6 ] = norm[ o3 ];\n\t\t\tthis.normalArray[ c + 7 ] = norm[ o3 + 1 ];\n\t\t\tthis.normalArray[ c + 8 ] = norm[ o3 + 2 ];\n\n\t\t\t// uvs\n\n\t\t\tif ( this.enableUvs ) {\n\n\t\t\t\tvar d = this.count * 2;\n\n\t\t\t\tthis.uvArray[ d ] \t  = pos[ o1 ];\n\t\t\t\tthis.uvArray[ d + 1 ] = pos[ o1 + 2 ];\n\n\t\t\t\tthis.uvArray[ d + 2 ] = pos[ o2 ];\n\t\t\t\tthis.uvArray[ d + 3 ] = pos[ o2 + 2 ];\n\n\t\t\t\tthis.uvArray[ d + 4 ] = pos[ o3 ];\n\t\t\t\tthis.uvArray[ d + 5 ] = pos[ o3 + 2 ];\n\n\t\t\t}\n\n\t\t\t// colors\n\n\t\t\tif ( this.enableColors ) {\n\n\t\t\t\tthis.colorArray[ c ] \t = pos[ o1 ];\n\t\t\t\tthis.colorArray[ c + 1 ] = pos[ o1 + 1 ];\n\t\t\t\tthis.colorArray[ c + 2 ] = pos[ o1 + 2 ];\n\n\t\t\t\tthis.colorArray[ c + 3 ] = pos[ o2 ];\n\t\t\t\tthis.colorArray[ c + 4 ] = pos[ o2 + 1 ];\n\t\t\t\tthis.colorArray[ c + 5 ] = pos[ o2 + 2 ];\n\n\t\t\t\tthis.colorArray[ c + 6 ] = pos[ o3 ];\n\t\t\t\tthis.colorArray[ c + 7 ] = pos[ o3 + 1 ];\n\t\t\t\tthis.colorArray[ c + 8 ] = pos[ o3 + 2 ];\n\n\t\t\t}\n\n\t\t\tthis.count += 3;\n\n\t\t\tif ( this.count >= this.maxCount - 3 ) {\n\n\t\t\t\tthis.hasPositions = true;\n\t\t\t\tthis.hasNormals = true;\n\n\t\t\t\tif ( this.enableUvs ) {\n\n\t\t\t\t\tthis.hasUvs = true;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.enableColors ) {\n\n\t\t\t\t\tthis.hasColors = true;\n\n\t\t\t\t}\n\n\t\t\t\trenderCallback( this );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.begin = function( ) {\n\n\t\t\tthis.count = 0;\n\n\t\t\tthis.hasPositions = false;\n\t\t\tthis.hasNormals = false;\n\t\t\tthis.hasUvs = false;\n\t\t\tthis.hasColors = false;\n\n\t\t};\n\n\t\tthis.end = function( renderCallback ) {\n\n\t\t\tif ( this.count === 0 ) return;\n\n\t\t\tfor ( var i = this.count * 3; i < this.positionArray.length; i ++ ) {\n\n\t\t\t\tthis.positionArray[ i ] = 0.0;\n\n\t\t\t}\n\n\t\t\tthis.hasPositions = true;\n\t\t\tthis.hasNormals = true;\n\n\t\t\tif ( this.enableUvs ) {\n\n\t\t\t\tthis.hasUvs = true;\n\n\t\t\t}\n\n\t\t\tif ( this.enableColors ) {\n\n\t\t\t\tthis.hasColors = true;\n\n\t\t\t}\n\n\t\t\trenderCallback( this );\n\n\t\t};\n\n\t\t/////////////////////////////////////\n\t\t// Metaballs\n\t\t/////////////////////////////////////\n\n\t\t// Adds a reciprocal ball (nice and blobby) that, to be fast, fades to zero after\n\t\t// a fixed distance, determined by strength and subtract.\n\n\t\tthis.addBall = function( ballx, bally, ballz, strength, subtract ) {\n\n\t\t\t// Let's solve the equation to find the radius:\n\t\t\t// 1.0 / (0.000001 + radius^2) * strength - subtract = 0\n\t\t\t// strength / (radius^2) = subtract\n\t\t\t// strength = subtract * radius^2\n\t\t\t// radius^2 = strength / subtract\n\t\t\t// radius = sqrt(strength / subtract)\n\n\t\t\tvar radius = this.size * Math.sqrt( strength / subtract ),\n\t\t\t\tzs = ballz * this.size,\n\t\t\t\tys = bally * this.size,\n\t\t\t\txs = ballx * this.size;\n\n\t\t\tvar min_z = Math.floor( zs - radius ); if ( min_z < 1 ) min_z = 1;\n\t\t\tvar max_z = Math.floor( zs + radius ); if ( max_z > this.size - 1 ) max_z = this.size - 1;\n\t\t\tvar min_y = Math.floor( ys - radius ); if ( min_y < 1 ) min_y = 1;\n\t\t\tvar max_y = Math.floor( ys + radius ); if ( max_y > this.size - 1 ) max_y = this.size - 1;\n\t\t\tvar min_x = Math.floor( xs - radius ); if ( min_x < 1  ) min_x = 1;\n\t\t\tvar max_x = Math.floor( xs + radius ); if ( max_x > this.size - 1 ) max_x = this.size - 1;\n\n\n\t\t\t// Don't polygonize in the outer layer because normals aren't\n\t\t\t// well-defined there.\n\n\t\t\tvar x, y, z, y_offset, z_offset, fx, fy, fz, fz2, fy2, val;\n\n\t\t\tfor ( z = min_z; z < max_z; z ++ ) {\n\n\t\t\t\tz_offset = this.size2 * z,\n\t\t\t\tfz = z / this.size - ballz,\n\t\t\t\tfz2 = fz * fz;\n\n\t\t\t\tfor ( y = min_y; y < max_y; y ++ ) {\n\n\t\t\t\t\ty_offset = z_offset + this.size * y;\n\t\t\t\t\tfy = y / this.size - bally;\n\t\t\t\t\tfy2 = fy * fy;\n\n\t\t\t\t\tfor ( x = min_x; x < max_x; x ++ ) {\n\n\t\t\t\t\t\tfx = x / this.size - ballx;\n\t\t\t\t\t\tval = strength / ( 0.000001 + fx * fx + fy2 + fz2 ) - subtract;\n\t\t\t\t\t\tif ( val > 0.0 ) this.field[ y_offset + x ] += val;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.addPlaneX = function( strength, subtract ) {\n\n\t\t\tvar x, y, z, xx, val, xdiv, cxy,\n\n\t\t\t\t// cache attribute lookups\n\t\t\t\tsize = this.size,\n\t\t\t\tyd = this.yd,\n\t\t\t\tzd = this.zd,\n\t\t\t\tfield = this.field,\n\n\t\t\t\tdist = size * Math.sqrt( strength / subtract );\n\n\t\t\tif ( dist > size ) dist = size;\n\n\t\t\tfor ( x = 0; x < dist; x ++ ) {\n\n\t\t\t\txdiv = x / size;\n\t\t\t\txx = xdiv * xdiv;\n\t\t\t\tval = strength / ( 0.0001 + xx ) - subtract;\n\n\t\t\t\tif ( val > 0.0 ) {\n\n\t\t\t\t\tfor ( y = 0; y < size; y ++ ) {\n\n\t\t\t\t\t\tcxy = x + y * yd;\n\n\t\t\t\t\t\tfor ( z = 0; z < size; z ++ ) {\n\n\t\t\t\t\t\t\tfield[ zd * z + cxy ] += val;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.addPlaneY = function( strength, subtract ) {\n\n\t\t\tvar x, y, z, yy, val, ydiv, cy, cxy,\n\n\t\t\t\t// cache attribute lookups\n\t\t\t\tsize = this.size,\n\t\t\t\tyd = this.yd,\n\t\t\t\tzd = this.zd,\n\t\t\t\tfield = this.field,\n\n\t\t\t\tdist = size * Math.sqrt( strength / subtract );\n\n\t\t\tif ( dist > size ) dist = size;\n\n\t\t\tfor ( y = 0; y < dist; y ++ ) {\n\n\t\t\t\tydiv = y / size;\n\t\t\t\tyy = ydiv * ydiv;\n\t\t\t\tval = strength / ( 0.0001 + yy ) - subtract;\n\n\t\t\t\tif ( val > 0.0 ) {\n\n\t\t\t\t\tcy = y * yd;\n\n\t\t\t\t\tfor ( x = 0; x < size; x ++ ) {\n\n\t\t\t\t\t\tcxy = cy + x;\n\n\t\t\t\t\t\tfor ( z = 0; z < size; z ++ )\n\t\t\t\t\t\t\tfield[ zd * z + cxy ] += val;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.addPlaneZ = function( strength, subtract ) {\n\n\t\t\tvar x, y, z, zz, val, zdiv, cz, cyz,\n\n\t\t\t\t// cache attribute lookups\n\t\t\t\tsize = this.size,\n\t\t\t\tyd = this.yd,\n\t\t\t\tzd = this.zd,\n\t\t\t\tfield = this.field,\n\n\t\t\t\tdist = size * Math.sqrt( strength / subtract );\n\n\t\t\tif ( dist > size ) dist = size;\n\n\t\t\tfor ( z = 0; z < dist; z ++ ) {\n\n\t\t\t\tzdiv = z / size;\n\t\t\t\tzz = zdiv * zdiv;\n\t\t\t\tval = strength / ( 0.0001 + zz ) - subtract;\n\t\t\t\tif ( val > 0.0 ) {\n\n\t\t\t\t\tcz = zd * z;\n\n\t\t\t\t\tfor ( y = 0; y < size; y ++ ) {\n\n\t\t\t\t\t\tcyz = cz + y * yd;\n\n\t\t\t\t\t\tfor ( x = 0; x < size; x ++ )\n\t\t\t\t\t\t\tfield[ cyz + x ] += val;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\t/////////////////////////////////////\n\t\t// Updates\n\t\t/////////////////////////////////////\n\n\t\tthis.reset = function () {\n\n\t\t\tvar i;\n\n\t\t\t// wipe the normal cache\n\n\t\t\tfor ( i = 0; i < this.size3; i ++ ) {\n\n\t\t\t\tthis.normal_cache[ i * 3 ] = 0.0;\n\t\t\t\tthis.field[ i ] = 0.0;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.render = function ( renderCallback ) {\n\n\t\t\tthis.begin();\n\n\t\t\t// Triangulate. Yeah, this is slow.\n\n\t\t\tvar smin2 = this.size - 2;\n\n\t\t\tfor ( var z = 1; z < smin2; z ++ ) {\n\n\t\t\t\tvar z_offset = this.size2 * z;\n\t\t\t\tvar fz = ( z - this.halfsize ) / this.halfsize; //+ 1\n\n\t\t\t\tfor ( var y = 1; y < smin2; y ++ ) {\n\n\t\t\t\t\tvar y_offset = z_offset + this.size * y;\n\t\t\t\t\tvar fy = ( y - this.halfsize ) / this.halfsize; //+ 1\n\n\t\t\t\t\tfor ( var x = 1; x < smin2; x ++ ) {\n\n\t\t\t\t\t\tvar fx = ( x - this.halfsize ) / this.halfsize; //+ 1\n\t\t\t\t\t\tvar q = y_offset + x;\n\n\t\t\t\t\t\tthis.polygonize( fx, fy, fz, q, this.isolation, renderCallback );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.end( renderCallback );\n\n\t\t};\n\n\t\tthis.generateGeometry = function() {\n\n\t\t\tvar start = 0, geo = new THREE.Geometry();\n\t\t\tvar normals = [];\n\n\t\t\tvar geo_callback = function( object ) {\n\n\t\t\t\tvar i, x, y, z, vertex, normal,\n\t\t\t\t\tface, a, b, c, na, nb, nc, nfaces;\n\n\n\t\t\t\tfor ( i = 0; i < object.count; i ++ ) {\n\n\t\t\t\t\ta = i * 3;\n\t\t\t\t\tb = a + 1;\n\t\t\t\t\tc = a + 2;\n\n\t\t\t\t\tx = object.positionArray[ a ];\n\t\t\t\t\ty = object.positionArray[ b ];\n\t\t\t\t\tz = object.positionArray[ c ];\n\t\t\t\t\tvertex = new THREE.Vector3( x, y, z );\n\n\t\t\t\t\tx = object.normalArray[ a ];\n\t\t\t\t\ty = object.normalArray[ b ];\n\t\t\t\t\tz = object.normalArray[ c ];\n\t\t\t\t\tnormal = new THREE.Vector3( x, y, z );\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tgeo.vertices.push( vertex );\n\t\t\t\t\tnormals.push( normal );\n\n\t\t\t\t}\n\n\t\t\t\tnfaces = object.count / 3;\n\n\t\t\t\tfor ( i = 0; i < nfaces; i ++ ) {\n\n\t\t\t\t\ta = ( start + i ) * 3;\n\t\t\t\t\tb = a + 1;\n\t\t\t\t\tc = a + 2;\n\n\t\t\t\t\tna = normals[ a ];\n\t\t\t\t\tnb = normals[ b ];\n\t\t\t\t\tnc = normals[ c ];\n\n\t\t\t\t\tface = new THREE.Face3( a, b, c, [ na, nb, nc ] );\n\n\t\t\t\t\tgeo.faces.push( face );\n\n\t\t\t\t}\n\n\t\t\t\tstart += nfaces;\n\t\t\t\tobject.count = 0;\n\n\t\t\t};\n\n\t\t\tthis.render( geo_callback );\n\n\t\t\t// console.log( \"generated \" + geo.faces.length + \" triangles\" );\n\n\t\t\treturn geo;\n\n\t\t};\n\n\t\tthis.init( resolution );\n\n\t};\n\n\tTHREE.MarchingCubes.prototype = Object.create( THREE.ImmediateRenderObject.prototype );\n\tTHREE.MarchingCubes.prototype.constructor = THREE.MarchingCubes;\n\n\n\t/////////////////////////////////////\n\t// Marching cubes lookup tables\n\t/////////////////////////////////////\n\n\t// These tables are straight from Paul Bourke's page:\n\t// http://local.wasp.uwa.edu.au/~pbourke/geometry/polygonise/\n\t// who in turn got them from Cory Gene Bloyd.\n\n\tTHREE.edgeTable = new Int32Array( [\n\t0x0, 0x109, 0x203, 0x30a, 0x406, 0x50f, 0x605, 0x70c,\n\t0x80c, 0x905, 0xa0f, 0xb06, 0xc0a, 0xd03, 0xe09, 0xf00,\n\t0x190, 0x99, 0x393, 0x29a, 0x596, 0x49f, 0x795, 0x69c,\n\t0x99c, 0x895, 0xb9f, 0xa96, 0xd9a, 0xc93, 0xf99, 0xe90,\n\t0x230, 0x339, 0x33, 0x13a, 0x636, 0x73f, 0x435, 0x53c,\n\t0xa3c, 0xb35, 0x83f, 0x936, 0xe3a, 0xf33, 0xc39, 0xd30,\n\t0x3a0, 0x2a9, 0x1a3, 0xaa, 0x7a6, 0x6af, 0x5a5, 0x4ac,\n\t0xbac, 0xaa5, 0x9af, 0x8a6, 0xfaa, 0xea3, 0xda9, 0xca0,\n\t0x460, 0x569, 0x663, 0x76a, 0x66, 0x16f, 0x265, 0x36c,\n\t0xc6c, 0xd65, 0xe6f, 0xf66, 0x86a, 0x963, 0xa69, 0xb60,\n\t0x5f0, 0x4f9, 0x7f3, 0x6fa, 0x1f6, 0xff, 0x3f5, 0x2fc,\n\t0xdfc, 0xcf5, 0xfff, 0xef6, 0x9fa, 0x8f3, 0xbf9, 0xaf0,\n\t0x650, 0x759, 0x453, 0x55a, 0x256, 0x35f, 0x55, 0x15c,\n\t0xe5c, 0xf55, 0xc5f, 0xd56, 0xa5a, 0xb53, 0x859, 0x950,\n\t0x7c0, 0x6c9, 0x5c3, 0x4ca, 0x3c6, 0x2cf, 0x1c5, 0xcc,\n\t0xfcc, 0xec5, 0xdcf, 0xcc6, 0xbca, 0xac3, 0x9c9, 0x8c0,\n\t0x8c0, 0x9c9, 0xac3, 0xbca, 0xcc6, 0xdcf, 0xec5, 0xfcc,\n\t0xcc, 0x1c5, 0x2cf, 0x3c6, 0x4ca, 0x5c3, 0x6c9, 0x7c0,\n\t0x950, 0x859, 0xb53, 0xa5a, 0xd56, 0xc5f, 0xf55, 0xe5c,\n\t0x15c, 0x55, 0x35f, 0x256, 0x55a, 0x453, 0x759, 0x650,\n\t0xaf0, 0xbf9, 0x8f3, 0x9fa, 0xef6, 0xfff, 0xcf5, 0xdfc,\n\t0x2fc, 0x3f5, 0xff, 0x1f6, 0x6fa, 0x7f3, 0x4f9, 0x5f0,\n\t0xb60, 0xa69, 0x963, 0x86a, 0xf66, 0xe6f, 0xd65, 0xc6c,\n\t0x36c, 0x265, 0x16f, 0x66, 0x76a, 0x663, 0x569, 0x460,\n\t0xca0, 0xda9, 0xea3, 0xfaa, 0x8a6, 0x9af, 0xaa5, 0xbac,\n\t0x4ac, 0x5a5, 0x6af, 0x7a6, 0xaa, 0x1a3, 0x2a9, 0x3a0,\n\t0xd30, 0xc39, 0xf33, 0xe3a, 0x936, 0x83f, 0xb35, 0xa3c,\n\t0x53c, 0x435, 0x73f, 0x636, 0x13a, 0x33, 0x339, 0x230,\n\t0xe90, 0xf99, 0xc93, 0xd9a, 0xa96, 0xb9f, 0x895, 0x99c,\n\t0x69c, 0x795, 0x49f, 0x596, 0x29a, 0x393, 0x99, 0x190,\n\t0xf00, 0xe09, 0xd03, 0xc0a, 0xb06, 0xa0f, 0x905, 0x80c,\n\t0x70c, 0x605, 0x50f, 0x406, 0x30a, 0x203, 0x109, 0x0 ] );\n\n\tTHREE.triTable = new Int32Array( [\n\t- 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 8, 3, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 1, 9, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 8, 3, 9, 8, 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 2, 10, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 8, 3, 1, 2, 10, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t9, 2, 10, 0, 2, 9, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t2, 8, 3, 2, 10, 8, 10, 9, 8, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t3, 11, 2, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 11, 2, 8, 11, 0, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 9, 0, 2, 3, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 11, 2, 1, 9, 11, 9, 8, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t3, 10, 1, 11, 10, 3, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 10, 1, 0, 8, 10, 8, 11, 10, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t3, 9, 0, 3, 11, 9, 11, 10, 9, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t9, 8, 10, 10, 8, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t4, 7, 8, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t4, 3, 0, 7, 3, 4, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 1, 9, 8, 4, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t4, 1, 9, 4, 7, 1, 7, 3, 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 2, 10, 8, 4, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t3, 4, 7, 3, 0, 4, 1, 2, 10, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t9, 2, 10, 9, 0, 2, 8, 4, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t2, 10, 9, 2, 9, 7, 2, 7, 3, 7, 9, 4, - 1, - 1, - 1, - 1,\n\t8, 4, 7, 3, 11, 2, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t11, 4, 7, 11, 2, 4, 2, 0, 4, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t9, 0, 1, 8, 4, 7, 2, 3, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t4, 7, 11, 9, 4, 11, 9, 11, 2, 9, 2, 1, - 1, - 1, - 1, - 1,\n\t3, 10, 1, 3, 11, 10, 7, 8, 4, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 11, 10, 1, 4, 11, 1, 0, 4, 7, 11, 4, - 1, - 1, - 1, - 1,\n\t4, 7, 8, 9, 0, 11, 9, 11, 10, 11, 0, 3, - 1, - 1, - 1, - 1,\n\t4, 7, 11, 4, 11, 9, 9, 11, 10, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t9, 5, 4, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t9, 5, 4, 0, 8, 3, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 5, 4, 1, 5, 0, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t8, 5, 4, 8, 3, 5, 3, 1, 5, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 2, 10, 9, 5, 4, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t3, 0, 8, 1, 2, 10, 4, 9, 5, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t5, 2, 10, 5, 4, 2, 4, 0, 2, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t2, 10, 5, 3, 2, 5, 3, 5, 4, 3, 4, 8, - 1, - 1, - 1, - 1,\n\t9, 5, 4, 2, 3, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 11, 2, 0, 8, 11, 4, 9, 5, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 5, 4, 0, 1, 5, 2, 3, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t2, 1, 5, 2, 5, 8, 2, 8, 11, 4, 8, 5, - 1, - 1, - 1, - 1,\n\t10, 3, 11, 10, 1, 3, 9, 5, 4, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t4, 9, 5, 0, 8, 1, 8, 10, 1, 8, 11, 10, - 1, - 1, - 1, - 1,\n\t5, 4, 0, 5, 0, 11, 5, 11, 10, 11, 0, 3, - 1, - 1, - 1, - 1,\n\t5, 4, 8, 5, 8, 10, 10, 8, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t9, 7, 8, 5, 7, 9, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t9, 3, 0, 9, 5, 3, 5, 7, 3, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 7, 8, 0, 1, 7, 1, 5, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 5, 3, 3, 5, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t9, 7, 8, 9, 5, 7, 10, 1, 2, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t10, 1, 2, 9, 5, 0, 5, 3, 0, 5, 7, 3, - 1, - 1, - 1, - 1,\n\t8, 0, 2, 8, 2, 5, 8, 5, 7, 10, 5, 2, - 1, - 1, - 1, - 1,\n\t2, 10, 5, 2, 5, 3, 3, 5, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t7, 9, 5, 7, 8, 9, 3, 11, 2, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t9, 5, 7, 9, 7, 2, 9, 2, 0, 2, 7, 11, - 1, - 1, - 1, - 1,\n\t2, 3, 11, 0, 1, 8, 1, 7, 8, 1, 5, 7, - 1, - 1, - 1, - 1,\n\t11, 2, 1, 11, 1, 7, 7, 1, 5, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t9, 5, 8, 8, 5, 7, 10, 1, 3, 10, 3, 11, - 1, - 1, - 1, - 1,\n\t5, 7, 0, 5, 0, 9, 7, 11, 0, 1, 0, 10, 11, 10, 0, - 1,\n\t11, 10, 0, 11, 0, 3, 10, 5, 0, 8, 0, 7, 5, 7, 0, - 1,\n\t11, 10, 5, 7, 11, 5, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t10, 6, 5, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 8, 3, 5, 10, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t9, 0, 1, 5, 10, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 8, 3, 1, 9, 8, 5, 10, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 6, 5, 2, 6, 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 6, 5, 1, 2, 6, 3, 0, 8, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t9, 6, 5, 9, 0, 6, 0, 2, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t5, 9, 8, 5, 8, 2, 5, 2, 6, 3, 2, 8, - 1, - 1, - 1, - 1,\n\t2, 3, 11, 10, 6, 5, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t11, 0, 8, 11, 2, 0, 10, 6, 5, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 1, 9, 2, 3, 11, 5, 10, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t5, 10, 6, 1, 9, 2, 9, 11, 2, 9, 8, 11, - 1, - 1, - 1, - 1,\n\t6, 3, 11, 6, 5, 3, 5, 1, 3, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 8, 11, 0, 11, 5, 0, 5, 1, 5, 11, 6, - 1, - 1, - 1, - 1,\n\t3, 11, 6, 0, 3, 6, 0, 6, 5, 0, 5, 9, - 1, - 1, - 1, - 1,\n\t6, 5, 9, 6, 9, 11, 11, 9, 8, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t5, 10, 6, 4, 7, 8, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t4, 3, 0, 4, 7, 3, 6, 5, 10, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 9, 0, 5, 10, 6, 8, 4, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t10, 6, 5, 1, 9, 7, 1, 7, 3, 7, 9, 4, - 1, - 1, - 1, - 1,\n\t6, 1, 2, 6, 5, 1, 4, 7, 8, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 2, 5, 5, 2, 6, 3, 0, 4, 3, 4, 7, - 1, - 1, - 1, - 1,\n\t8, 4, 7, 9, 0, 5, 0, 6, 5, 0, 2, 6, - 1, - 1, - 1, - 1,\n\t7, 3, 9, 7, 9, 4, 3, 2, 9, 5, 9, 6, 2, 6, 9, - 1,\n\t3, 11, 2, 7, 8, 4, 10, 6, 5, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t5, 10, 6, 4, 7, 2, 4, 2, 0, 2, 7, 11, - 1, - 1, - 1, - 1,\n\t0, 1, 9, 4, 7, 8, 2, 3, 11, 5, 10, 6, - 1, - 1, - 1, - 1,\n\t9, 2, 1, 9, 11, 2, 9, 4, 11, 7, 11, 4, 5, 10, 6, - 1,\n\t8, 4, 7, 3, 11, 5, 3, 5, 1, 5, 11, 6, - 1, - 1, - 1, - 1,\n\t5, 1, 11, 5, 11, 6, 1, 0, 11, 7, 11, 4, 0, 4, 11, - 1,\n\t0, 5, 9, 0, 6, 5, 0, 3, 6, 11, 6, 3, 8, 4, 7, - 1,\n\t6, 5, 9, 6, 9, 11, 4, 7, 9, 7, 11, 9, - 1, - 1, - 1, - 1,\n\t10, 4, 9, 6, 4, 10, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t4, 10, 6, 4, 9, 10, 0, 8, 3, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t10, 0, 1, 10, 6, 0, 6, 4, 0, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t8, 3, 1, 8, 1, 6, 8, 6, 4, 6, 1, 10, - 1, - 1, - 1, - 1,\n\t1, 4, 9, 1, 2, 4, 2, 6, 4, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t3, 0, 8, 1, 2, 9, 2, 4, 9, 2, 6, 4, - 1, - 1, - 1, - 1,\n\t0, 2, 4, 4, 2, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t8, 3, 2, 8, 2, 4, 4, 2, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t10, 4, 9, 10, 6, 4, 11, 2, 3, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 8, 2, 2, 8, 11, 4, 9, 10, 4, 10, 6, - 1, - 1, - 1, - 1,\n\t3, 11, 2, 0, 1, 6, 0, 6, 4, 6, 1, 10, - 1, - 1, - 1, - 1,\n\t6, 4, 1, 6, 1, 10, 4, 8, 1, 2, 1, 11, 8, 11, 1, - 1,\n\t9, 6, 4, 9, 3, 6, 9, 1, 3, 11, 6, 3, - 1, - 1, - 1, - 1,\n\t8, 11, 1, 8, 1, 0, 11, 6, 1, 9, 1, 4, 6, 4, 1, - 1,\n\t3, 11, 6, 3, 6, 0, 0, 6, 4, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t6, 4, 8, 11, 6, 8, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t7, 10, 6, 7, 8, 10, 8, 9, 10, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 7, 3, 0, 10, 7, 0, 9, 10, 6, 7, 10, - 1, - 1, - 1, - 1,\n\t10, 6, 7, 1, 10, 7, 1, 7, 8, 1, 8, 0, - 1, - 1, - 1, - 1,\n\t10, 6, 7, 10, 7, 1, 1, 7, 3, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 2, 6, 1, 6, 8, 1, 8, 9, 8, 6, 7, - 1, - 1, - 1, - 1,\n\t2, 6, 9, 2, 9, 1, 6, 7, 9, 0, 9, 3, 7, 3, 9, - 1,\n\t7, 8, 0, 7, 0, 6, 6, 0, 2, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t7, 3, 2, 6, 7, 2, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t2, 3, 11, 10, 6, 8, 10, 8, 9, 8, 6, 7, - 1, - 1, - 1, - 1,\n\t2, 0, 7, 2, 7, 11, 0, 9, 7, 6, 7, 10, 9, 10, 7, - 1,\n\t1, 8, 0, 1, 7, 8, 1, 10, 7, 6, 7, 10, 2, 3, 11, - 1,\n\t11, 2, 1, 11, 1, 7, 10, 6, 1, 6, 7, 1, - 1, - 1, - 1, - 1,\n\t8, 9, 6, 8, 6, 7, 9, 1, 6, 11, 6, 3, 1, 3, 6, - 1,\n\t0, 9, 1, 11, 6, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t7, 8, 0, 7, 0, 6, 3, 11, 0, 11, 6, 0, - 1, - 1, - 1, - 1,\n\t7, 11, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t7, 6, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t3, 0, 8, 11, 7, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 1, 9, 11, 7, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t8, 1, 9, 8, 3, 1, 11, 7, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t10, 1, 2, 6, 11, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 2, 10, 3, 0, 8, 6, 11, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t2, 9, 0, 2, 10, 9, 6, 11, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t6, 11, 7, 2, 10, 3, 10, 8, 3, 10, 9, 8, - 1, - 1, - 1, - 1,\n\t7, 2, 3, 6, 2, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t7, 0, 8, 7, 6, 0, 6, 2, 0, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t2, 7, 6, 2, 3, 7, 0, 1, 9, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 6, 2, 1, 8, 6, 1, 9, 8, 8, 7, 6, - 1, - 1, - 1, - 1,\n\t10, 7, 6, 10, 1, 7, 1, 3, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t10, 7, 6, 1, 7, 10, 1, 8, 7, 1, 0, 8, - 1, - 1, - 1, - 1,\n\t0, 3, 7, 0, 7, 10, 0, 10, 9, 6, 10, 7, - 1, - 1, - 1, - 1,\n\t7, 6, 10, 7, 10, 8, 8, 10, 9, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t6, 8, 4, 11, 8, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t3, 6, 11, 3, 0, 6, 0, 4, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t8, 6, 11, 8, 4, 6, 9, 0, 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t9, 4, 6, 9, 6, 3, 9, 3, 1, 11, 3, 6, - 1, - 1, - 1, - 1,\n\t6, 8, 4, 6, 11, 8, 2, 10, 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 2, 10, 3, 0, 11, 0, 6, 11, 0, 4, 6, - 1, - 1, - 1, - 1,\n\t4, 11, 8, 4, 6, 11, 0, 2, 9, 2, 10, 9, - 1, - 1, - 1, - 1,\n\t10, 9, 3, 10, 3, 2, 9, 4, 3, 11, 3, 6, 4, 6, 3, - 1,\n\t8, 2, 3, 8, 4, 2, 4, 6, 2, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 4, 2, 4, 6, 2, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 9, 0, 2, 3, 4, 2, 4, 6, 4, 3, 8, - 1, - 1, - 1, - 1,\n\t1, 9, 4, 1, 4, 2, 2, 4, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t8, 1, 3, 8, 6, 1, 8, 4, 6, 6, 10, 1, - 1, - 1, - 1, - 1,\n\t10, 1, 0, 10, 0, 6, 6, 0, 4, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t4, 6, 3, 4, 3, 8, 6, 10, 3, 0, 3, 9, 10, 9, 3, - 1,\n\t10, 9, 4, 6, 10, 4, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t4, 9, 5, 7, 6, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 8, 3, 4, 9, 5, 11, 7, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t5, 0, 1, 5, 4, 0, 7, 6, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t11, 7, 6, 8, 3, 4, 3, 5, 4, 3, 1, 5, - 1, - 1, - 1, - 1,\n\t9, 5, 4, 10, 1, 2, 7, 6, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t6, 11, 7, 1, 2, 10, 0, 8, 3, 4, 9, 5, - 1, - 1, - 1, - 1,\n\t7, 6, 11, 5, 4, 10, 4, 2, 10, 4, 0, 2, - 1, - 1, - 1, - 1,\n\t3, 4, 8, 3, 5, 4, 3, 2, 5, 10, 5, 2, 11, 7, 6, - 1,\n\t7, 2, 3, 7, 6, 2, 5, 4, 9, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t9, 5, 4, 0, 8, 6, 0, 6, 2, 6, 8, 7, - 1, - 1, - 1, - 1,\n\t3, 6, 2, 3, 7, 6, 1, 5, 0, 5, 4, 0, - 1, - 1, - 1, - 1,\n\t6, 2, 8, 6, 8, 7, 2, 1, 8, 4, 8, 5, 1, 5, 8, - 1,\n\t9, 5, 4, 10, 1, 6, 1, 7, 6, 1, 3, 7, - 1, - 1, - 1, - 1,\n\t1, 6, 10, 1, 7, 6, 1, 0, 7, 8, 7, 0, 9, 5, 4, - 1,\n\t4, 0, 10, 4, 10, 5, 0, 3, 10, 6, 10, 7, 3, 7, 10, - 1,\n\t7, 6, 10, 7, 10, 8, 5, 4, 10, 4, 8, 10, - 1, - 1, - 1, - 1,\n\t6, 9, 5, 6, 11, 9, 11, 8, 9, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t3, 6, 11, 0, 6, 3, 0, 5, 6, 0, 9, 5, - 1, - 1, - 1, - 1,\n\t0, 11, 8, 0, 5, 11, 0, 1, 5, 5, 6, 11, - 1, - 1, - 1, - 1,\n\t6, 11, 3, 6, 3, 5, 5, 3, 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 2, 10, 9, 5, 11, 9, 11, 8, 11, 5, 6, - 1, - 1, - 1, - 1,\n\t0, 11, 3, 0, 6, 11, 0, 9, 6, 5, 6, 9, 1, 2, 10, - 1,\n\t11, 8, 5, 11, 5, 6, 8, 0, 5, 10, 5, 2, 0, 2, 5, - 1,\n\t6, 11, 3, 6, 3, 5, 2, 10, 3, 10, 5, 3, - 1, - 1, - 1, - 1,\n\t5, 8, 9, 5, 2, 8, 5, 6, 2, 3, 8, 2, - 1, - 1, - 1, - 1,\n\t9, 5, 6, 9, 6, 0, 0, 6, 2, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 5, 8, 1, 8, 0, 5, 6, 8, 3, 8, 2, 6, 2, 8, - 1,\n\t1, 5, 6, 2, 1, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 3, 6, 1, 6, 10, 3, 8, 6, 5, 6, 9, 8, 9, 6, - 1,\n\t10, 1, 0, 10, 0, 6, 9, 5, 0, 5, 6, 0, - 1, - 1, - 1, - 1,\n\t0, 3, 8, 5, 6, 10, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t10, 5, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t11, 5, 10, 7, 5, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t11, 5, 10, 11, 7, 5, 8, 3, 0, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t5, 11, 7, 5, 10, 11, 1, 9, 0, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t10, 7, 5, 10, 11, 7, 9, 8, 1, 8, 3, 1, - 1, - 1, - 1, - 1,\n\t11, 1, 2, 11, 7, 1, 7, 5, 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 8, 3, 1, 2, 7, 1, 7, 5, 7, 2, 11, - 1, - 1, - 1, - 1,\n\t9, 7, 5, 9, 2, 7, 9, 0, 2, 2, 11, 7, - 1, - 1, - 1, - 1,\n\t7, 5, 2, 7, 2, 11, 5, 9, 2, 3, 2, 8, 9, 8, 2, - 1,\n\t2, 5, 10, 2, 3, 5, 3, 7, 5, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t8, 2, 0, 8, 5, 2, 8, 7, 5, 10, 2, 5, - 1, - 1, - 1, - 1,\n\t9, 0, 1, 5, 10, 3, 5, 3, 7, 3, 10, 2, - 1, - 1, - 1, - 1,\n\t9, 8, 2, 9, 2, 1, 8, 7, 2, 10, 2, 5, 7, 5, 2, - 1,\n\t1, 3, 5, 3, 7, 5, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 8, 7, 0, 7, 1, 1, 7, 5, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t9, 0, 3, 9, 3, 5, 5, 3, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t9, 8, 7, 5, 9, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t5, 8, 4, 5, 10, 8, 10, 11, 8, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t5, 0, 4, 5, 11, 0, 5, 10, 11, 11, 3, 0, - 1, - 1, - 1, - 1,\n\t0, 1, 9, 8, 4, 10, 8, 10, 11, 10, 4, 5, - 1, - 1, - 1, - 1,\n\t10, 11, 4, 10, 4, 5, 11, 3, 4, 9, 4, 1, 3, 1, 4, - 1,\n\t2, 5, 1, 2, 8, 5, 2, 11, 8, 4, 5, 8, - 1, - 1, - 1, - 1,\n\t0, 4, 11, 0, 11, 3, 4, 5, 11, 2, 11, 1, 5, 1, 11, - 1,\n\t0, 2, 5, 0, 5, 9, 2, 11, 5, 4, 5, 8, 11, 8, 5, - 1,\n\t9, 4, 5, 2, 11, 3, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t2, 5, 10, 3, 5, 2, 3, 4, 5, 3, 8, 4, - 1, - 1, - 1, - 1,\n\t5, 10, 2, 5, 2, 4, 4, 2, 0, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t3, 10, 2, 3, 5, 10, 3, 8, 5, 4, 5, 8, 0, 1, 9, - 1,\n\t5, 10, 2, 5, 2, 4, 1, 9, 2, 9, 4, 2, - 1, - 1, - 1, - 1,\n\t8, 4, 5, 8, 5, 3, 3, 5, 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 4, 5, 1, 0, 5, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t8, 4, 5, 8, 5, 3, 9, 0, 5, 0, 3, 5, - 1, - 1, - 1, - 1,\n\t9, 4, 5, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t4, 11, 7, 4, 9, 11, 9, 10, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 8, 3, 4, 9, 7, 9, 11, 7, 9, 10, 11, - 1, - 1, - 1, - 1,\n\t1, 10, 11, 1, 11, 4, 1, 4, 0, 7, 4, 11, - 1, - 1, - 1, - 1,\n\t3, 1, 4, 3, 4, 8, 1, 10, 4, 7, 4, 11, 10, 11, 4, - 1,\n\t4, 11, 7, 9, 11, 4, 9, 2, 11, 9, 1, 2, - 1, - 1, - 1, - 1,\n\t9, 7, 4, 9, 11, 7, 9, 1, 11, 2, 11, 1, 0, 8, 3, - 1,\n\t11, 7, 4, 11, 4, 2, 2, 4, 0, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t11, 7, 4, 11, 4, 2, 8, 3, 4, 3, 2, 4, - 1, - 1, - 1, - 1,\n\t2, 9, 10, 2, 7, 9, 2, 3, 7, 7, 4, 9, - 1, - 1, - 1, - 1,\n\t9, 10, 7, 9, 7, 4, 10, 2, 7, 8, 7, 0, 2, 0, 7, - 1,\n\t3, 7, 10, 3, 10, 2, 7, 4, 10, 1, 10, 0, 4, 0, 10, - 1,\n\t1, 10, 2, 8, 7, 4, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t4, 9, 1, 4, 1, 7, 7, 1, 3, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t4, 9, 1, 4, 1, 7, 0, 8, 1, 8, 7, 1, - 1, - 1, - 1, - 1,\n\t4, 0, 3, 7, 4, 3, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t4, 8, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t9, 10, 8, 10, 11, 8, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t3, 0, 9, 3, 9, 11, 11, 9, 10, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 1, 10, 0, 10, 8, 8, 10, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t3, 1, 10, 11, 3, 10, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 2, 11, 1, 11, 9, 9, 11, 8, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t3, 0, 9, 3, 9, 11, 1, 2, 9, 2, 11, 9, - 1, - 1, - 1, - 1,\n\t0, 2, 11, 8, 0, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t3, 2, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t2, 3, 8, 2, 8, 10, 10, 8, 9, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t9, 10, 2, 0, 9, 2, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t2, 3, 8, 2, 8, 10, 0, 1, 8, 1, 10, 8, - 1, - 1, - 1, - 1,\n\t1, 10, 2, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 3, 8, 9, 1, 8, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 9, 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 3, 8, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t- 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1 ] );\n\n};","module.exports = function( THREE ){\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tTHREE.MaskPass = function ( scene, camera ) {\n\n\t\tthis.scene = scene;\n\t\tthis.camera = camera;\n\n\t\tthis.enabled = true;\n\t\tthis.clear = true;\n\t\tthis.needsSwap = false;\n\n\t\tthis.inverse = false;\n\n\t};\n\n\tTHREE.MaskPass.prototype = {\n\n\t\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\n\n\t\t\tvar context = renderer.context;\n\n\t\t\t// don't update color or depth\n\n\t\t\tcontext.colorMask( false, false, false, false );\n\t\t\tcontext.depthMask( false );\n\n\t\t\t// set up stencil\n\n\t\t\tvar writeValue, clearValue;\n\n\t\t\tif ( this.inverse ) {\n\n\t\t\t\twriteValue = 0;\n\t\t\t\tclearValue = 1;\n\n\t\t\t} else {\n\n\t\t\t\twriteValue = 1;\n\t\t\t\tclearValue = 0;\n\n\t\t\t}\n\n\t\t\tcontext.enable( context.STENCIL_TEST );\n\t\t\tcontext.stencilOp( context.REPLACE, context.REPLACE, context.REPLACE );\n\t\t\tcontext.stencilFunc( context.ALWAYS, writeValue, 0xffffffff );\n\t\t\tcontext.clearStencil( clearValue );\n\n\t\t\t// draw into the stencil buffer\n\n\t\t\trenderer.render( this.scene, this.camera, readBuffer, this.clear );\n\t\t\trenderer.render( this.scene, this.camera, writeBuffer, this.clear );\n\n\t\t\t// re-enable update of color and depth\n\n\t\t\tcontext.colorMask( true, true, true, true );\n\t\t\tcontext.depthMask( true );\n\n\t\t\t// only render where stencil is set to 1\n\n\t\t\tcontext.stencilFunc( context.EQUAL, 1, 0xffffffff );  // draw if == 1\n\t\t\tcontext.stencilOp( context.KEEP, context.KEEP, context.KEEP );\n\n\t\t}\n\n\t};\n\n\n\tTHREE.ClearMaskPass = function () {\n\n\t\tthis.enabled = true;\n\n\t};\n\n\tTHREE.ClearMaskPass.prototype = {\n\n\t\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\n\n\t\t\tvar context = renderer.context;\n\n\t\t\tcontext.disable( context.STENCIL_TEST );\n\n\t\t}\n\n\t};\n\n};\n","module.exports = function( THREE ){\n\t/**\n\t * @author felixturner / http://airtight.cc/\n\t *\n\t * Mirror Shader\n\t * Copies half the input to the other half\n\t *\n\t * side: side of input to mirror (0 = left, 1 = right, 2 = top, 3 = bottom)\n\t */\n\n\tTHREE.MirrorShader = {\n\n\t\tuniforms: {\n\n\t\t\t\"tDiffuse\": { type: \"t\", value: null },\n\t\t\t\"side\":     { type: \"i\", value: 1 }\n\n\t\t},\n\n\t\tvertexShader: [\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vUv = uv;\",\n\t\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" ),\n\n\t\tfragmentShader: [\n\n\t\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\t\"uniform int side;\",\n\t\t\t\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vec2 p = vUv;\",\n\t\t\t\t\"if (side == 0){\",\n\t\t\t\t\t\"if (p.x > 0.5) p.x = 1.0 - p.x;\",\n\t\t\t\t\"}else if (side == 1){\",\n\t\t\t\t\t\"if (p.x < 0.5) p.x = 1.0 - p.x;\",\n\t\t\t\t\"}else if (side == 2){\",\n\t\t\t\t\t\"if (p.y < 0.5) p.y = 1.0 - p.y;\",\n\t\t\t\t\"}else if (side == 3){\",\n\t\t\t\t\t\"if (p.y > 0.5) p.y = 1.0 - p.y;\",\n\t\t\t\t\"} \",\n\t\t\t\t\"vec4 color = texture2D(tDiffuse, p);\",\n\t\t\t\t\"gl_FragColor = color;\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" )\n\n\t};\n\n}\n","module.exports = function( THREE ){\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * Normal map shader\n\t * - compute normals from heightmap\n\t */\n\n\tTHREE.NormalMapShader = {\n\n\t\tuniforms: {\n\n\t\t\t\"heightMap\":  { type: \"t\", value: null },\n\t\t\t\"resolution\": { type: \"v2\", value: new THREE.Vector2( 512, 512 ) },\n\t\t\t\"scale\":      { type: \"v2\", value: new THREE.Vector2( 1, 1 ) },\n\t\t\t\"height\":     { type: \"f\", value: 0.05 }\n\n\t\t},\n\n\t\tvertexShader: [\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vUv = uv;\",\n\t\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" ),\n\n\t\tfragmentShader: [\n\n\t\t\t\"uniform float height;\",\n\t\t\t\"uniform vec2 resolution;\",\n\t\t\t\"uniform sampler2D heightMap;\",\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"float val = texture2D( heightMap, vUv ).x;\",\n\n\t\t\t\t\"float valU = texture2D( heightMap, vUv + vec2( 1.0 / resolution.x, 0.0 ) ).x;\",\n\t\t\t\t\"float valV = texture2D( heightMap, vUv + vec2( 0.0, 1.0 / resolution.y ) ).x;\",\n\n\t\t\t\t\"gl_FragColor = vec4( ( 0.5 * normalize( vec3( val - valU, val - valV, height  ) ) + 0.5 ), 1.0 );\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" )\n\n\t};\n\n}\n","module.exports = function( THREE ){\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tTHREE.OBJLoader = function ( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n\t\tthis.materials = null;\n\n\t};\n\n\tTHREE.OBJLoader.prototype = {\n\n\t\tconstructor: THREE.OBJLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new THREE.XHRLoader( scope.manager );\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tonLoad( scope.parse( text ) );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\n\t\t},\n\n\t\tsetMaterials: function ( materials ) {\n\n\t\t\tthis.materials = materials;\n\n\t\t},\n\n\t\tparse: function ( text ) {\n\n\t\t\tconsole.time( 'OBJLoader' );\n\n\t\t\tvar objects = [];\n\t\t\tvar object;\n\t\t\tvar foundObjects = false;\n\t\t\tvar vertices = [];\n\t\t\tvar normals = [];\n\t\t\tvar uvs = [];\n\n\t\t\tfunction addObject( name ) {\n\n\t\t\t\tvar geometry = {\n\t\t\t\t\tvertices: [],\n\t\t\t\t\tnormals: [],\n\t\t\t\t\tuvs: []\n\t\t\t\t};\n\n\t\t\t\tvar material = {\n\t\t\t\t\tname: '',\n\t\t\t\t\tsmooth: true\n\t\t\t\t};\n\n\t\t\t\tobject = {\n\t\t\t\t\tname: name,\n\t\t\t\t\tgeometry: geometry,\n\t\t\t\t\tmaterial: material\n\t\t\t\t};\n\n\t\t\t\tobjects.push( object );\n\n\t\t\t}\n\n\t\t\tfunction parseVertexIndex( value ) {\n\n\t\t\t\tvar index = parseInt( value );\n\n\t\t\t\treturn ( index >= 0 ? index - 1 : index + vertices.length / 3 ) * 3;\n\n\t\t\t}\n\n\t\t\tfunction parseNormalIndex( value ) {\n\n\t\t\t\tvar index = parseInt( value );\n\n\t\t\t\treturn ( index >= 0 ? index - 1 : index + normals.length / 3 ) * 3;\n\n\t\t\t}\n\n\t\t\tfunction parseUVIndex( value ) {\n\n\t\t\t\tvar index = parseInt( value );\n\n\t\t\t\treturn ( index >= 0 ? index - 1 : index + uvs.length / 2 ) * 2;\n\n\t\t\t}\n\n\t\t\tfunction addVertex( a, b, c ) {\n\n\t\t\t\tobject.geometry.vertices.push(\n\t\t\t\t\tvertices[ a ], vertices[ a + 1 ], vertices[ a + 2 ],\n\t\t\t\t\tvertices[ b ], vertices[ b + 1 ], vertices[ b + 2 ],\n\t\t\t\t\tvertices[ c ], vertices[ c + 1 ], vertices[ c + 2 ]\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tfunction addNormal( a, b, c ) {\n\n\t\t\t\tobject.geometry.normals.push(\n\t\t\t\t\tnormals[ a ], normals[ a + 1 ], normals[ a + 2 ],\n\t\t\t\t\tnormals[ b ], normals[ b + 1 ], normals[ b + 2 ],\n\t\t\t\t\tnormals[ c ], normals[ c + 1 ], normals[ c + 2 ]\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tfunction addUV( a, b, c ) {\n\n\t\t\t\tobject.geometry.uvs.push(\n\t\t\t\t\tuvs[ a ], uvs[ a + 1 ],\n\t\t\t\t\tuvs[ b ], uvs[ b + 1 ],\n\t\t\t\t\tuvs[ c ], uvs[ c + 1 ]\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tfunction addFace( a, b, c, d,  ua, ub, uc, ud, na, nb, nc, nd ) {\n\n\t\t\t\tvar ia = parseVertexIndex( a );\n\t\t\t\tvar ib = parseVertexIndex( b );\n\t\t\t\tvar ic = parseVertexIndex( c );\n\t\t\t\tvar id;\n\n\t\t\t\tif ( d === undefined ) {\n\n\t\t\t\t\taddVertex( ia, ib, ic );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tid = parseVertexIndex( d );\n\n\t\t\t\t\taddVertex( ia, ib, id );\n\t\t\t\t\taddVertex( ib, ic, id );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ua !== undefined ) {\n\n\t\t\t\t\tia = parseUVIndex( ua );\n\t\t\t\t\tib = parseUVIndex( ub );\n\t\t\t\t\tic = parseUVIndex( uc );\n\n\t\t\t\t\tif ( d === undefined ) {\n\n\t\t\t\t\t\taddUV( ia, ib, ic );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tid = parseUVIndex( ud );\n\n\t\t\t\t\t\taddUV( ia, ib, id );\n\t\t\t\t\t\taddUV( ib, ic, id );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( na !== undefined ) {\n\n\t\t\t\t\tia = parseNormalIndex( na );\n\t\t\t\t\tib = parseNormalIndex( nb );\n\t\t\t\t\tic = parseNormalIndex( nc );\n\n\t\t\t\t\tif ( d === undefined ) {\n\n\t\t\t\t\t\taddNormal( ia, ib, ic );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tid = parseNormalIndex( nd );\n\n\t\t\t\t\t\taddNormal( ia, ib, id );\n\t\t\t\t\t\taddNormal( ib, ic, id );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\taddObject( '' );\n\n\t\t\t// v float float float\n\t\t\tvar vertex_pattern = /^v\\s+([\\d|\\.|\\+|\\-|e|E]+)\\s+([\\d|\\.|\\+|\\-|e|E]+)\\s+([\\d|\\.|\\+|\\-|e|E]+)/;\n\n\t\t\t// vn float float float\n\t\t\tvar normal_pattern = /^vn\\s+([\\d|\\.|\\+|\\-|e|E]+)\\s+([\\d|\\.|\\+|\\-|e|E]+)\\s+([\\d|\\.|\\+|\\-|e|E]+)/;\n\n\t\t\t// vt float float\n\t\t\tvar uv_pattern = /^vt\\s+([\\d|\\.|\\+|\\-|e|E]+)\\s+([\\d|\\.|\\+|\\-|e|E]+)/;\n\n\t\t\t// f vertex vertex vertex ...\n\t\t\tvar face_pattern1 = /^f\\s+(-?\\d+)\\s+(-?\\d+)\\s+(-?\\d+)(?:\\s+(-?\\d+))?/;\n\n\t\t\t// f vertex/uv vertex/uv vertex/uv ...\n\t\t\tvar face_pattern2 = /^f\\s+((-?\\d+)\\/(-?\\d+))\\s+((-?\\d+)\\/(-?\\d+))\\s+((-?\\d+)\\/(-?\\d+))(?:\\s+((-?\\d+)\\/(-?\\d+)))?/;\n\n\t\t\t// f vertex/uv/normal vertex/uv/normal vertex/uv/normal ...\n\t\t\tvar face_pattern3 = /^f\\s+((-?\\d+)\\/(-?\\d+)\\/(-?\\d+))\\s+((-?\\d+)\\/(-?\\d+)\\/(-?\\d+))\\s+((-?\\d+)\\/(-?\\d+)\\/(-?\\d+))(?:\\s+((-?\\d+)\\/(-?\\d+)\\/(-?\\d+)))?/;\n\n\t\t\t// f vertex//normal vertex//normal vertex//normal ...\n\t\t\tvar face_pattern4 = /^f\\s+((-?\\d+)\\/\\/(-?\\d+))\\s+((-?\\d+)\\/\\/(-?\\d+))\\s+((-?\\d+)\\/\\/(-?\\d+))(?:\\s+((-?\\d+)\\/\\/(-?\\d+)))?/;\n\n\t\t\tvar object_pattern = /^[og]\\s+(.+)/;\n\n\t\t\tvar smoothing_pattern = /^s\\s+(\\d+|on|off)/;\n\n\t\t\t//\n\n\t\t\tvar lines = text.split( '\\n' );\n\n\t\t\tfor ( var i = 0; i < lines.length; i ++ ) {\n\n\t\t\t\tvar line = lines[ i ];\n\t\t\t\tline = line.trim();\n\n\t\t\t\tvar result;\n\n\t\t\t\tif ( line.length === 0 || line.charAt( 0 ) === '#' ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t} else if ( ( result = vertex_pattern.exec( line ) ) !== null ) {\n\n\t\t\t\t\t// [\"v 1.0 2.0 3.0\", \"1.0\", \"2.0\", \"3.0\"]\n\n\t\t\t\t\tvertices.push(\n\t\t\t\t\t\tparseFloat( result[ 1 ] ),\n\t\t\t\t\t\tparseFloat( result[ 2 ] ),\n\t\t\t\t\t\tparseFloat( result[ 3 ] )\n\t\t\t\t\t);\n\n\t\t\t\t} else if ( ( result = normal_pattern.exec( line ) ) !== null ) {\n\n\t\t\t\t\t// [\"vn 1.0 2.0 3.0\", \"1.0\", \"2.0\", \"3.0\"]\n\n\t\t\t\t\tnormals.push(\n\t\t\t\t\t\tparseFloat( result[ 1 ] ),\n\t\t\t\t\t\tparseFloat( result[ 2 ] ),\n\t\t\t\t\t\tparseFloat( result[ 3 ] )\n\t\t\t\t\t);\n\n\t\t\t\t} else if ( ( result = uv_pattern.exec( line ) ) !== null ) {\n\n\t\t\t\t\t// [\"vt 0.1 0.2\", \"0.1\", \"0.2\"]\n\n\t\t\t\t\tuvs.push(\n\t\t\t\t\t\tparseFloat( result[ 1 ] ),\n\t\t\t\t\t\tparseFloat( result[ 2 ] )\n\t\t\t\t\t);\n\n\t\t\t\t} else if ( ( result = face_pattern1.exec( line ) ) !== null ) {\n\n\t\t\t\t\t// [\"f 1 2 3\", \"1\", \"2\", \"3\", undefined]\n\n\t\t\t\t\taddFace(\n\t\t\t\t\t\tresult[ 1 ], result[ 2 ], result[ 3 ], result[ 4 ]\n\t\t\t\t\t);\n\n\t\t\t\t} else if ( ( result = face_pattern2.exec( line ) ) !== null ) {\n\n\t\t\t\t\t// [\"f 1/1 2/2 3/3\", \" 1/1\", \"1\", \"1\", \" 2/2\", \"2\", \"2\", \" 3/3\", \"3\", \"3\", undefined, undefined, undefined]\n\n\t\t\t\t\taddFace(\n\t\t\t\t\t\tresult[ 2 ], result[ 5 ], result[ 8 ], result[ 11 ],\n\t\t\t\t\t\tresult[ 3 ], result[ 6 ], result[ 9 ], result[ 12 ]\n\t\t\t\t\t);\n\n\t\t\t\t} else if ( ( result = face_pattern3.exec( line ) ) !== null ) {\n\n\t\t\t\t\t// [\"f 1/1/1 2/2/2 3/3/3\", \" 1/1/1\", \"1\", \"1\", \"1\", \" 2/2/2\", \"2\", \"2\", \"2\", \" 3/3/3\", \"3\", \"3\", \"3\", undefined, undefined, undefined, undefined]\n\n\t\t\t\t\taddFace(\n\t\t\t\t\t\tresult[ 2 ], result[ 6 ], result[ 10 ], result[ 14 ],\n\t\t\t\t\t\tresult[ 3 ], result[ 7 ], result[ 11 ], result[ 15 ],\n\t\t\t\t\t\tresult[ 4 ], result[ 8 ], result[ 12 ], result[ 16 ]\n\t\t\t\t\t);\n\n\t\t\t\t} else if ( ( result = face_pattern4.exec( line ) ) !== null ) {\n\n\t\t\t\t\t// [\"f 1//1 2//2 3//3\", \" 1//1\", \"1\", \"1\", \" 2//2\", \"2\", \"2\", \" 3//3\", \"3\", \"3\", undefined, undefined, undefined]\n\n\t\t\t\t\taddFace(\n\t\t\t\t\t\tresult[ 2 ], result[ 5 ], result[ 8 ], result[ 11 ],\n\t\t\t\t\t\tundefined, undefined, undefined, undefined,\n\t\t\t\t\t\tresult[ 3 ], result[ 6 ], result[ 9 ], result[ 12 ]\n\t\t\t\t\t);\n\n\t\t\t\t} else if ( ( result = object_pattern.exec( line ) ) !== null ) {\n\n\t\t\t\t\t// o object_name\n\t\t\t\t\t// or\n\t\t\t\t\t// g group_name\n\n\t\t\t\t\tvar name = result[ 1 ].trim();\n\n\t\t\t\t\tif ( foundObjects === false ) {\n\n\t\t\t\t\t\tfoundObjects = true;\n\t\t\t\t\t\tobject.name = name;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\taddObject( name );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( /^usemtl /.test( line ) ) {\n\n\t\t\t\t\t// material\n\n\t\t\t\t\tobject.material.name = line.substring( 7 ).trim();\n\n\t\t\t\t} else if ( /^mtllib /.test( line ) ) {\n\n\t\t\t\t\t// mtl file\n\n\t\t\t\t} else if ( ( result = smoothing_pattern.exec( line ) ) !== null ) {\n\n\t\t\t\t\t// smooth shading\n\n\t\t\t\t\tobject.material.smooth = result[ 1 ] === \"1\" || result[ 1 ] === \"on\";\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( \"Unexpected line: \" + line );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar container = new THREE.Group();\n\n\t\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\t\tobject = objects[ i ];\n\t\t\t\tvar geometry = object.geometry;\n\n\t\t\t\tvar buffergeometry = new THREE.BufferGeometry();\n\n\t\t\t\tbuffergeometry.addAttribute( 'position', new THREE.BufferAttribute( new Float32Array( geometry.vertices ), 3 ) );\n\n\t\t\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\t\t\tbuffergeometry.addAttribute( 'normal', new THREE.BufferAttribute( new Float32Array( geometry.normals ), 3 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbuffergeometry.computeVertexNormals();\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.uvs.length > 0 ) {\n\n\t\t\t\t\tbuffergeometry.addAttribute( 'uv', new THREE.BufferAttribute( new Float32Array( geometry.uvs ), 2 ) );\n\n\t\t\t\t}\n\n\t\t\t\tvar material;\n\n\t\t\t\tif ( this.materials !== null ) {\n\n\t\t\t\t\tmaterial = this.materials.create( object.material.name );\n\n\t\t\t\t}\n\n\t\t\t\tif ( !material ) {\n\n\t\t\t\t\tmaterial = new THREE.MeshPhongMaterial();\n\t\t\t\t\tmaterial.name = object.material.name;\n\n\t\t\t\t}\n\n\t\t\t\tmaterial.shading = object.material.smooth ? THREE.SmoothShading : THREE.FlatShading;\n\n\t\t\t\tvar mesh = new THREE.Mesh( buffergeometry, material );\n\t\t\t\tmesh.name = object.name;\n\n\t\t\t\tcontainer.add( mesh );\n\n\t\t\t}\n\n\t\t\tconsole.timeEnd( 'OBJLoader' );\n\n\t\t\treturn container;\n\n\t\t}\n\n\t};\n\n};","﻿module.exports = function( THREE ){\n\t// Author: Aleksandr Albert\n\t// Website: www.routter.co.tt\n\n\t// Description: A deep water ocean shader set\n\t// based on an implementation of a Tessendorf Waves\n\t// originally presented by David Li ( www.david.li/waves )\n\n\t// The general method is to apply shaders to simulation Framebuffers\n\t// and then sample these framebuffers when rendering the ocean mesh\n\n\t// The set uses 7 shaders:\n\n\t// -- Simulation shaders\n\t// [1] ocean_sim_vertex         -> Vertex shader used to set up a 2x2 simulation plane centered at (0,0)\n\t// [2] ocean_subtransform       -> Fragment shader used to subtransform the mesh (generates the displacement map)\n\t// [3] ocean_initial_spectrum   -> Fragment shader used to set intitial wave frequency at a texel coordinate\n\t// [4] ocean_phase              -> Fragment shader used to set wave phase at a texel coordinate\n\t// [5] ocean_spectrum           -> Fragment shader used to set current wave frequency at a texel coordinate\n\t// [6] ocean_normal             -> Fragment shader used to set face normals at a texel coordinate\n\n\t// -- Rendering Shader\n\t// [7] ocean_main               -> Vertex and Fragment shader used to create the final render\n\n\n\tTHREE.ShaderLib[ 'ocean_sim_vertex' ] = {\n\t\tvarying: {\n\t\t\t\"vUV\": { type: \"v2\" }\n\t\t},\n\t\tvertexShader: [\n\t\t\t'varying vec2 vUV;',\n\n\t\t\t'void main (void) {',\n\t\t\t\t'vUV = position.xy * 0.5 + 0.5;',\n\t\t\t\t'gl_Position = vec4(position, 1.0 );',\n\t\t\t'}'\n\t\t].join( '\\n' )\n\t};\n\tTHREE.ShaderLib[ 'ocean_subtransform' ] = {\n\t\tuniforms: {\n\t\t\t\"u_input\": { type: \"t\", value: null },\n\t\t\t\"u_transformSize\": { type: \"f\", value: 512.0 },\n\t\t\t\"u_subtransformSize\": { type: \"f\", value: 250.0 }\n\t\t},\n\t\tvarying: {\n\t\t\t\"vUV\": { type: \"v2\" }\n\t\t},\n\t\tfragmentShader: [\n\t\t\t//GPU FFT using a Stockham formulation\n\t\t\t'precision highp float;',\n\n\t\t\t'const float PI = 3.14159265359;',\n\n\t\t\t'uniform sampler2D u_input;',\n\t\t\t'uniform float u_transformSize;',\n\t\t\t'uniform float u_subtransformSize;',\n\n\t\t\t'varying vec2 vUV;',\n\n\t\t\t'vec2 multiplyComplex (vec2 a, vec2 b) {',\n\t\t\t\t'return vec2(a[0] * b[0] - a[1] * b[1], a[1] * b[0] + a[0] * b[1]);',\n\t\t\t'}',\n\n\t\t\t'void main (void) {',\n\t\t\t\t'#ifdef HORIZONTAL',\n\t\t\t\t'float index = vUV.x * u_transformSize - 0.5;',\n\t\t\t\t'#else',\n\t\t\t\t'float index = vUV.y * u_transformSize - 0.5;',\n\t\t\t\t'#endif',\n\n\t\t\t\t'float evenIndex = floor(index / u_subtransformSize) * (u_subtransformSize * 0.5) + mod(index, u_subtransformSize * 0.5);',\n\n\t\t\t\t//transform two complex sequences simultaneously\n\t\t\t\t'#ifdef HORIZONTAL',\n\t\t\t\t'vec4 even = texture2D(u_input, vec2(evenIndex + 0.5, gl_FragCoord.y) / u_transformSize).rgba;',\n\t\t\t\t'vec4 odd = texture2D(u_input, vec2(evenIndex + u_transformSize * 0.5 + 0.5, gl_FragCoord.y) / u_transformSize).rgba;',\n\t\t\t\t'#else',\n\t\t\t\t'vec4 even = texture2D(u_input, vec2(gl_FragCoord.x, evenIndex + 0.5) / u_transformSize).rgba;',\n\t\t\t\t'vec4 odd = texture2D(u_input, vec2(gl_FragCoord.x, evenIndex + u_transformSize * 0.5 + 0.5) / u_transformSize).rgba;',\n\t\t\t\t'#endif',\n\n\t\t\t\t'float twiddleArgument = -2.0 * PI * (index / u_subtransformSize);',\n\t\t\t\t'vec2 twiddle = vec2(cos(twiddleArgument), sin(twiddleArgument));',\n\n\t\t\t\t'vec2 outputA = even.xy + multiplyComplex(twiddle, odd.xy);',\n\t\t\t\t'vec2 outputB = even.zw + multiplyComplex(twiddle, odd.zw);',\n\n\t\t\t\t'gl_FragColor = vec4(outputA, outputB);',\n\t\t\t'}'\n\t\t].join( '\\n' )\n\t};\n\tTHREE.ShaderLib[ 'ocean_initial_spectrum' ] = {\n\t\tuniforms: {\n\t\t\t\"u_wind\": { type: \"v2\", value: new THREE.Vector2( 10.0, 10.0 ) },\n\t\t\t\"u_resolution\": { type: \"f\", value: 512.0 },\n\t\t\t\"u_size\": { type: \"f\", value: 250.0 },\n\t\t},\n\t\tfragmentShader: [\n\t\t\t'precision highp float;',\n\n\t\t\t'const float PI = 3.14159265359;',\n\t\t\t'const float G = 9.81;',\n\t\t\t'const float KM = 370.0;',\n\t\t\t'const float CM = 0.23;',\n\n\t\t\t'uniform vec2 u_wind;',\n\t\t\t'uniform float u_resolution;',\n\t\t\t'uniform float u_size;',\n\n\t\t\t'float square (float x) {',\n\t\t\t\t'return x * x;',\n\t\t\t'}',\n\n\t\t\t'float omega (float k) {',\n\t\t\t\t'return sqrt(G * k * (1.0 + square(k / KM)));',\n\t\t\t'}',\n\n\t\t\t'float tanh (float x) {',\n\t\t\t\t'return (1.0 - exp(-2.0 * x)) / (1.0 + exp(-2.0 * x));',\n\t\t\t'}',\n\n\t\t\t'void main (void) {',\n\t\t\t\t'vec2 coordinates = gl_FragCoord.xy - 0.5;',\n\n\t\t\t\t'float n = (coordinates.x < u_resolution * 0.5) ? coordinates.x : coordinates.x - u_resolution;',\n\t\t\t\t'float m = (coordinates.y < u_resolution * 0.5) ? coordinates.y : coordinates.y - u_resolution;',\n\n\t\t\t\t'vec2 K = (2.0 * PI * vec2(n, m)) / u_size;',\n\t\t\t\t'float k = length(K);',\n\n\t\t\t\t'float l_wind = length(u_wind);',\n\n\t\t\t\t'float Omega = 0.84;',\n\t\t\t\t'float kp = G * square(Omega / l_wind);',\n\n\t\t\t\t'float c = omega(k) / k;',\n\t\t\t\t'float cp = omega(kp) / kp;',\n\n\t\t\t\t'float Lpm = exp(-1.25 * square(kp / k));',\n\t\t\t\t'float gamma = 1.7;',\n\t\t\t\t'float sigma = 0.08 * (1.0 + 4.0 * pow(Omega, -3.0));',\n\t\t\t\t'float Gamma = exp(-square(sqrt(k / kp) - 1.0) / 2.0 * square(sigma));',\n\t\t\t\t'float Jp = pow(gamma, Gamma);',\n\t\t\t\t'float Fp = Lpm * Jp * exp(-Omega / sqrt(10.0) * (sqrt(k / kp) - 1.0));',\n\t\t\t\t'float alphap = 0.006 * sqrt(Omega);',\n\t\t\t\t'float Bl = 0.5 * alphap * cp / c * Fp;',\n\n\t\t\t\t'float z0 = 0.000037 * square(l_wind) / G * pow(l_wind / cp, 0.9);',\n\t\t\t\t'float uStar = 0.41 * l_wind / log(10.0 / z0);',\n\t\t\t\t'float alpham = 0.01 * ((uStar < CM) ? (1.0 + log(uStar / CM)) : (1.0 + 3.0 * log(uStar / CM)));',\n\t\t\t\t'float Fm = exp(-0.25 * square(k / KM - 1.0));',\n\t\t\t\t'float Bh = 0.5 * alpham * CM / c * Fm * Lpm;',\n\n\t\t\t\t'float a0 = log(2.0) / 4.0;',\n\t\t\t\t'float am = 0.13 * uStar / CM;',\n\t\t\t\t'float Delta = tanh(a0 + 4.0 * pow(c / cp, 2.5) + am * pow(CM / c, 2.5));',\n\n\t\t\t\t'float cosPhi = dot(normalize(u_wind), normalize(K));',\n\n\t\t\t\t'float S = (1.0 / (2.0 * PI)) * pow(k, -4.0) * (Bl + Bh) * (1.0 + Delta * (2.0 * cosPhi * cosPhi - 1.0));',\n\n\t\t\t\t'float dk = 2.0 * PI / u_size;',\n\t\t\t\t'float h = sqrt(S / 2.0) * dk;',\n\n\t\t\t\t'if (K.x == 0.0 && K.y == 0.0) {',\n\t\t\t\t\t'h = 0.0;', //no DC term\n\t\t\t\t'}',\n\t\t\t\t'gl_FragColor = vec4(h, 0.0, 0.0, 0.0);',\n\t\t\t'}'\n\t\t].join( '\\n' )\n\t};\n\tTHREE.ShaderLib[ 'ocean_phase' ] = {\n\t\tuniforms: {\n\t\t\t\"u_phases\": { type: \"t\", value: null },\n\t\t\t\"u_deltaTime\": { type: \"f\", value: null },\n\t\t\t\"u_resolution\": { type: \"f\", value: null },\n\t\t\t\"u_size\": { type: \"f\", value: null },\n\t\t},\n\t\tvarying: {\n\t\t\t\"vUV\": { type: \"v2\" }\n\t\t},\n\t\tfragmentShader: [\n\t\t\t'precision highp float;',\n\n\t\t\t'const float PI = 3.14159265359;',\n\t\t\t'const float G = 9.81;',\n\t\t\t'const float KM = 370.0;',\n\n\t\t\t'varying vec2 vUV;',\n\n\t\t\t'uniform sampler2D u_phases;',\n\t\t\t'uniform float u_deltaTime;',\n\t\t\t'uniform float u_resolution;',\n\t\t\t'uniform float u_size;',\n\n\t\t\t'float omega (float k) {',\n\t\t\t\t'return sqrt(G * k * (1.0 + k * k / KM * KM));',\n\t\t\t'}',\n\n\t\t\t'void main (void) {',\n\t\t\t\t'float deltaTime = 1.0 / 60.0;',\n\t\t\t\t'vec2 coordinates = gl_FragCoord.xy - 0.5;',\n\t\t\t\t'float n = (coordinates.x < u_resolution * 0.5) ? coordinates.x : coordinates.x - u_resolution;',\n\t\t\t\t'float m = (coordinates.y < u_resolution * 0.5) ? coordinates.y : coordinates.y - u_resolution;',\n\t\t\t\t'vec2 waveVector = (2.0 * PI * vec2(n, m)) / u_size;',\n\n\t\t\t\t'float phase = texture2D(u_phases, vUV).r;',\n\t\t\t\t'float deltaPhase = omega(length(waveVector)) * u_deltaTime;',\n\t\t\t\t'phase = mod(phase + deltaPhase, 2.0 * PI);',\n\n\t\t\t\t'gl_FragColor = vec4(phase, 0.0, 0.0, 0.0);',\n\t\t\t'}'\n\t\t].join( '\\n' )\n\t};\n\tTHREE.ShaderLib[ 'ocean_spectrum' ] = {\n\t\tuniforms: {\n\t\t\t\"u_size\": { type: \"f\", value: null },\n\t\t\t\"u_resolution\": { type: \"f\", value: null },\n\t\t\t\"u_choppiness\": { type: \"f\", value: null },\n\t\t\t\"u_phases\": { type: \"t\", value: null },\n\t\t\t\"u_initialSpectrum\": { type: \"t\", value: null },\n\t\t},\n\t\tvarying: {\n\t\t\t\"vUV\": { type: \"v2\" }\n\t\t},\n\t\tfragmentShader: [\n\t\t\t'precision highp float;',\n\n\t\t\t'const float PI = 3.14159265359;',\n\t\t\t'const float G = 9.81;',\n\t\t\t'const float KM = 370.0;',\n\n\t\t\t'varying vec2 vUV;',\n\n\t\t\t'uniform float u_size;',\n\t\t\t'uniform float u_resolution;',\n\t\t\t'uniform float u_choppiness;',\n\t\t\t'uniform sampler2D u_phases;',\n\t\t\t'uniform sampler2D u_initialSpectrum;',\n\n\t\t\t'vec2 multiplyComplex (vec2 a, vec2 b) {',\n\t\t\t\t'return vec2(a[0] * b[0] - a[1] * b[1], a[1] * b[0] + a[0] * b[1]);',\n\t\t\t'}',\n\n\t\t\t'vec2 multiplyByI (vec2 z) {',\n\t\t\t\t'return vec2(-z[1], z[0]);',\n\t\t\t'}',\n\n\t\t\t'float omega (float k) {',\n\t\t\t\t'return sqrt(G * k * (1.0 + k * k / KM * KM));',\n\t\t\t'}',\n\n\t\t\t'void main (void) {',\n\t\t\t\t'vec2 coordinates = gl_FragCoord.xy - 0.5;',\n\t\t\t\t'float n = (coordinates.x < u_resolution * 0.5) ? coordinates.x : coordinates.x - u_resolution;',\n\t\t\t\t'float m = (coordinates.y < u_resolution * 0.5) ? coordinates.y : coordinates.y - u_resolution;',\n\t\t\t\t'vec2 waveVector = (2.0 * PI * vec2(n, m)) / u_size;',\n\n\t\t\t\t'float phase = texture2D(u_phases, vUV).r;',\n\t\t\t\t'vec2 phaseVector = vec2(cos(phase), sin(phase));',\n\n\t\t\t\t'vec2 h0 = texture2D(u_initialSpectrum, vUV).rg;',\n\t\t\t\t'vec2 h0Star = texture2D(u_initialSpectrum, vec2(1.0 - vUV + 1.0 / u_resolution)).rg;',\n\t\t\t\t'h0Star.y *= -1.0;',\n\n\t\t\t\t'vec2 h = multiplyComplex(h0, phaseVector) + multiplyComplex(h0Star, vec2(phaseVector.x, -phaseVector.y));',\n\n\t\t\t\t'vec2 hX = -multiplyByI(h * (waveVector.x / length(waveVector))) * u_choppiness;',\n\t\t\t\t'vec2 hZ = -multiplyByI(h * (waveVector.y / length(waveVector))) * u_choppiness;',\n\n\t\t\t\t//no DC term\n\t\t\t\t'if (waveVector.x == 0.0 && waveVector.y == 0.0) {',\n\t\t\t\t\t'h = vec2(0.0);',\n\t\t\t\t\t'hX = vec2(0.0);',\n\t\t\t\t\t'hZ = vec2(0.0);',\n\t\t\t\t'}',\n\n\t\t\t\t'gl_FragColor = vec4(hX + multiplyByI(h), hZ);',\n\t\t\t'}'\n\t\t].join( '\\n' )\n\t};\n\tTHREE.ShaderLib[ 'ocean_normals' ] = {\n\t\tuniforms: {\n\t\t\t\"u_displacementMap\": { type: \"t\", value: null },\n\t\t\t\"u_resolution\": { type: \"f\", value: null },\n\t\t\t\"u_size\": { type: \"f\", value: null },\n\t\t},\n\t\tvarying: {\n\t\t\t\"vUV\": { type: \"v2\" }\n\t\t},\n\t\tfragmentShader: [\n\t\t\t'precision highp float;',\n\n\t\t\t'varying vec2 vUV;',\n\n\t\t\t'uniform sampler2D u_displacementMap;',\n\t\t\t'uniform float u_resolution;',\n\t\t\t'uniform float u_size;',\n\n\t\t\t'void main (void) {',\n\t\t\t\t'float texel = 1.0 / u_resolution;',\n\t\t\t\t'float texelSize = u_size / u_resolution;',\n\n\t\t\t\t'vec3 center = texture2D(u_displacementMap, vUV).rgb;',\n\t\t\t\t'vec3 right = vec3(texelSize, 0.0, 0.0) + texture2D(u_displacementMap, vUV + vec2(texel, 0.0)).rgb - center;',\n\t\t\t\t'vec3 left = vec3(-texelSize, 0.0, 0.0) + texture2D(u_displacementMap, vUV + vec2(-texel, 0.0)).rgb - center;',\n\t\t\t\t'vec3 top = vec3(0.0, 0.0, -texelSize) + texture2D(u_displacementMap, vUV + vec2(0.0, -texel)).rgb - center;',\n\t\t\t\t'vec3 bottom = vec3(0.0, 0.0, texelSize) + texture2D(u_displacementMap, vUV + vec2(0.0, texel)).rgb - center;',\n\n\t\t\t\t'vec3 topRight = cross(right, top);',\n\t\t\t\t'vec3 topLeft = cross(top, left);',\n\t\t\t\t'vec3 bottomLeft = cross(left, bottom);',\n\t\t\t\t'vec3 bottomRight = cross(bottom, right);',\n\n\t\t\t\t'gl_FragColor = vec4(normalize(topRight + topLeft + bottomLeft + bottomRight), 1.0);',\n\t\t\t'}'\n\t\t].join( '\\n' )\n\t};\n\tTHREE.ShaderLib[ 'ocean_main' ] = {\n\t\tuniforms: {\n\t\t\t\"u_displacementMap\": { type: \"t\", value: null },\n\t\t\t\"u_normalMap\": { type: \"t\", value: null },\n\t\t\t\"u_geometrySize\": { type: \"f\", value: null },\n\t\t\t\"u_size\": { type: \"f\", value: null },\n\t\t\t\"u_projectionMatrix\": { type: \"m4\", value: null },\n\t\t\t\"u_viewMatrix\": { type: \"m4\", value: null },\n\t\t\t\"u_cameraPosition\": { type: \"v3\", value: null },\n\t\t\t\"u_skyColor\": { type: \"v3\", value: null },\n\t\t\t\"u_oceanColor\": { type: \"v3\", value: null },\n\t\t\t\"u_sunDirection\": { type: \"v3\", value: null },\n\t\t\t\"u_exposure\": { type: \"f\", value: null },\n\t\t},\n\t\tvarying: {\n\t\t\t\"vPos\": { type: \"v3\" },\n\t\t\t\"vUV\": { type: \"v2\" }\n\t\t},\n\t\tvertexShader: [\n\t\t\t'precision highp float;',\n\n\t\t\t'varying vec3 vPos;',\n\t\t\t'varying vec2 vUV;',\n\n\t\t\t'uniform mat4 u_projectionMatrix;',\n\t\t\t'uniform mat4 u_viewMatrix;',\n\t\t\t'uniform float u_size;',\n\t\t\t'uniform float u_geometrySize;',\n\t\t\t'uniform sampler2D u_displacementMap;',\n\n\t\t\t'void main (void) {',\n\t\t\t\t'vec3 newPos = position + texture2D(u_displacementMap, uv).rgb * (u_geometrySize / u_size);',\n\t\t\t\t'vPos = newPos;',\n\t\t\t\t'vUV = uv;',\n\t\t\t\t'gl_Position = u_projectionMatrix * u_viewMatrix * vec4(newPos, 1.0);',\n\t\t\t'}'\n\t\t].join( '\\n' ),\n\t\tfragmentShader: [\n\t\t\t'precision highp float;',\n\n\t\t\t'varying vec3 vPos;',\n\t\t\t'varying vec2 vUV;',\n\n\t\t\t'uniform sampler2D u_displacementMap;',\n\t\t\t'uniform sampler2D u_normalMap;',\n\t\t\t'uniform vec3 u_cameraPosition;',\n\t\t\t'uniform vec3 u_oceanColor;',\n\t\t\t'uniform vec3 u_skyColor;',\n\t\t\t'uniform vec3 u_sunDirection;',\n\t\t\t'uniform float u_exposure;',\n\n\t\t\t'vec3 hdr (vec3 color, float exposure) {',\n\t\t\t\t'return 1.0 - exp(-color * exposure);',\n\t\t\t'}',\n\n\t\t\t'void main (void) {',\n\t\t\t\t'vec3 normal = texture2D(u_normalMap, vUV).rgb;',\n\n\t\t\t\t'vec3 view = normalize(u_cameraPosition - vPos);',\n\t\t\t\t'float fresnel = 0.02 + 0.98 * pow(1.0 - dot(normal, view), 5.0);',\n\t\t\t\t'vec3 sky = fresnel * u_skyColor;',\n\n\t\t\t\t'float diffuse = clamp(dot(normal, normalize(u_sunDirection)), 0.0, 1.0);',\n\t\t\t\t'vec3 water = (1.0 - fresnel) * u_oceanColor * u_skyColor * diffuse;',\n\n\t\t\t\t'vec3 color = sky + water;',\n\n\t\t\t\t'gl_FragColor = vec4(hdr(color, u_exposure), 1.0);',\n\t\t\t'}'\n\t\t].join( '\\n' )\n\t};\n\n}\n","module.exports = function( THREE ){\n\n\t/**\n\t * @author qiao / https://github.com/qiao\n\t * @author mrdoob / http://mrdoob.com\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author erich666 / http://erichaines.com\n\t */\n\n\t// This set of controls performs orbiting, dollying (zooming), and panning.\n\t// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n\t//\n\t//    Orbit - left mouse / touch: one finger move\n\t//    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\n\t//    Pan - right mouse, or arrow keys / touch: three finter swipe\n\n\tTHREE.OrbitControls = function ( object, domElement ) {\n\n\t\tthis.object = object;\n\n\t\tthis.domElement = ( domElement !== undefined ) ? domElement : document;\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\tthis.target = new THREE.Vector3();\n\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.25;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n\t\t// Set to false to disable use of the keys\n\t\tthis.enableKeys = true;\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { ORBIT: THREE.MOUSE.LEFT, ZOOM: THREE.MOUSE.MIDDLE, PAN: THREE.MOUSE.RIGHT };\n\n\t\t// for reset\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t//\n\t\t// public methods\n\t\t//\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn spherical.phi;\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn spherical.theta;\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tscope.target.copy( scope.target0 );\n\t\t\tscope.object.position.copy( scope.position0 );\n\t\t\tscope.object.zoom = scope.zoom0;\n\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tscope.dispatchEvent( changeEvent );\n\n\t\t\tscope.update();\n\n\t\t\tstate = STATE.NONE;\n\n\t\t};\n\n\t\t// this method is exposed, but perhaps it would be better if we can make it private...\n\t\tthis.update = function() {\n\n\t\t\tvar offset = new THREE.Vector3();\n\n\t\t\t// so camera.up is the orbit axis\n\t\t\tvar quat = new THREE.Quaternion().setFromUnitVectors( object.up, new THREE.Vector3( 0, 1, 0 ) );\n\t\t\tvar quatInverse = quat.clone().inverse();\n\n\t\t\tvar lastPosition = new THREE.Vector3();\n\t\t\tvar lastQuaternion = new THREE.Quaternion();\n\n\t\t\treturn function () {\n\n\t\t\t\tvar position = scope.object.position;\n\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t\t// angle from z-axis around y-axis\n\t\t\t\tspherical.setFromVector3( offset );\n\n\t\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t\t}\n\n\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t\t// restrict theta to be between desired limits\n\t\t\t\tspherical.theta = Math.max( scope.minAzimuthAngle, Math.min( scope.maxAzimuthAngle, spherical.theta ) );\n\n\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\t\tspherical.makeSafe();\n\n\n\t\t\t\tspherical.radius *= scale;\n\n\t\t\t\t// restrict radius to be between desired limits\n\t\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t\t// move target to panned location\n\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t\tscale = 1;\n\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t\t// update condition is:\n\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\t\tscope.dispatchEvent( changeEvent );\n\n\t\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\t\tzoomChanged = false;\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t};\n\n\t\t}();\n\n\t\tthis.dispose = function() {\n\n\t\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu, false );\n\t\t\tscope.domElement.removeEventListener( 'mousedown', onMouseDown, false );\n\t\t\tscope.domElement.removeEventListener( 'mousewheel', onMouseWheel, false );\n\t\t\tscope.domElement.removeEventListener( 'MozMousePixelScroll', onMouseWheel, false ); // firefox\n\n\t\t\tscope.domElement.removeEventListener( 'touchstart', onTouchStart, false );\n\t\t\tscope.domElement.removeEventListener( 'touchend', onTouchEnd, false );\n\t\t\tscope.domElement.removeEventListener( 'touchmove', onTouchMove, false );\n\n\t\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\t\t\tdocument.removeEventListener( 'mouseout', onMouseUp, false );\n\n\t\t\twindow.removeEventListener( 'keydown', onKeyDown, false );\n\n\t\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t\t};\n\n\t\t//\n\t\t// internals\n\t\t//\n\n\t\tvar scope = this;\n\n\t\tvar changeEvent = { type: 'change' };\n\t\tvar startEvent = { type: 'start' };\n\t\tvar endEvent = { type: 'end' };\n\n\t\tvar STATE = { NONE : - 1, ROTATE : 0, DOLLY : 1, PAN : 2, TOUCH_ROTATE : 3, TOUCH_DOLLY : 4, TOUCH_PAN : 5 };\n\n\t\tvar state = STATE.NONE;\n\n\t\tvar EPS = 0.000001;\n\n\t\t// current position in spherical coordinates\n\t\tvar spherical = new THREE.Spherical();\n\t\tvar sphericalDelta = new THREE.Spherical();\n\n\t\tvar scale = 1;\n\t\tvar panOffset = new THREE.Vector3();\n\t\tvar zoomChanged = false;\n\n\t\tvar rotateStart = new THREE.Vector2();\n\t\tvar rotateEnd = new THREE.Vector2();\n\t\tvar rotateDelta = new THREE.Vector2();\n\n\t\tvar panStart = new THREE.Vector2();\n\t\tvar panEnd = new THREE.Vector2();\n\t\tvar panDelta = new THREE.Vector2();\n\n\t\tvar dollyStart = new THREE.Vector2();\n\t\tvar dollyEnd = new THREE.Vector2();\n\t\tvar dollyDelta = new THREE.Vector2();\n\n\t\tfunction getAutoRotationAngle() {\n\n\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t\t}\n\n\t\tfunction getZoomScale() {\n\n\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t\t}\n\n\t\tfunction rotateLeft( angle ) {\n\n\t\t\tsphericalDelta.theta -= angle;\n\n\t\t}\n\n\t\tfunction rotateUp( angle ) {\n\n\t\t\tsphericalDelta.phi -= angle;\n\n\t\t}\n\n\t\tvar panLeft = function() {\n\n\t\t\tvar v = new THREE.Vector3();\n\n\t\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\t\tv.multiplyScalar( - distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\tvar panUp = function() {\n\n\t\t\tvar v = new THREE.Vector3();\n\n\t\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 ); // get Y column of objectMatrix\n\t\t\t\tv.multiplyScalar( distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// deltaX and deltaY are in pixels; right and down are positive\n\t\tvar pan = function() {\n\n\t\t\tvar offset = new THREE.Vector3();\n\n\t\t\treturn function( deltaX, deltaY ) {\n\n\t\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\t\t\t// perspective\n\t\t\t\t\tvar position = scope.object.position;\n\t\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\t\tvar targetDistance = offset.length();\n\n\t\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t\t// we actually don't use screenWidth, since perspective camera is fixed to screen height\n\t\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\t\t\t// orthographic\n\t\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\t\tscope.enablePan = false;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}();\n\n\t\tfunction dollyIn( dollyScale ) {\n\n\t\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\t\tscale /= dollyScale;\n\n\t\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction dollyOut( dollyScale ) {\n\n\t\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\t\tscale *= dollyScale;\n\n\t\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\t\t// event callbacks - update the object state\n\t\t//\n\n\t\tfunction handleMouseDownRotate( event ) {\n\n\t\t\t//console.log( 'handleMouseDownRotate' );\n\n\t\t\trotateStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownDolly( event ) {\n\n\t\t\t//console.log( 'handleMouseDownDolly' );\n\n\t\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownPan( event ) {\n\n\t\t\t//console.log( 'handleMouseDownPan' );\n\n\t\t\tpanStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseMoveRotate( event ) {\n\n\t\t\t//console.log( 'handleMouseMoveRotate' );\n\n\t\t\trotateEnd.set( event.clientX, event.clientY );\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart );\n\n\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t\t// rotating across whole screen goes 360 degrees around\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\n\t\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMoveDolly( event ) {\n\n\t\t\t//console.log( 'handleMouseMoveDolly' );\n\n\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMovePan( event ) {\n\n\t\t\t//console.log( 'handleMouseMovePan' );\n\n\t\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseUp( event ) {\n\n\t\t\t//console.log( 'handleMouseUp' );\n\n\t\t}\n\n\t\tfunction handleMouseWheel( event ) {\n\n\t\t\t//console.log( 'handleMouseWheel' );\n\n\t\t\tvar delta = 0;\n\n\t\t\tif ( event.wheelDelta !== undefined ) {\n\n\t\t\t\t// WebKit / Opera / Explorer 9\n\n\t\t\t\tdelta = event.wheelDelta;\n\n\t\t\t} else if ( event.detail !== undefined ) {\n\n\t\t\t\t// Firefox\n\n\t\t\t\tdelta = - event.detail;\n\n\t\t\t}\n\n\t\t\tif ( delta > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t} else if ( delta < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleKeyDown( event ) {\n\n\t\t\t//console.log( 'handleKeyDown' );\n\n\t\t\tswitch ( event.keyCode ) {\n\n\t\t\t\tcase scope.keys.UP:\n\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\t\tscope.update();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\t\tscope.update();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.LEFT:\n\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\t\tscope.update();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.RIGHT:\n\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\t\tscope.update();\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartRotate( event ) {\n\n\t\t\t//console.log( 'handleTouchStartRotate' );\n\n\t\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t}\n\n\t\tfunction handleTouchStartDolly( event ) {\n\n\t\t\t//console.log( 'handleTouchStartDolly' );\n\n\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t\tfunction handleTouchStartPan( event ) {\n\n\t\t\t//console.log( 'handleTouchStartPan' );\n\n\t\t\tpanStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t}\n\n\t\tfunction handleTouchMoveRotate( event ) {\n\n\t\t\t//console.log( 'handleTouchMoveRotate' );\n\n\t\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart );\n\n\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t\t// rotating across whole screen goes 360 degrees around\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\n\t\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleTouchMoveDolly( event ) {\n\n\t\t\t//console.log( 'handleTouchMoveDolly' );\n\n\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyEnd.set( 0, distance );\n\n\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleTouchMovePan( event ) {\n\n\t\t\t//console.log( 'handleTouchMovePan' );\n\n\t\t\tpanEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleTouchEnd( event ) {\n\n\t\t\t//console.log( 'handleTouchEnd' );\n\n\t\t}\n\n\t\t//\n\t\t// event handlers - FSM: listen for events and reset state\n\t\t//\n\n\t\tfunction onMouseDown( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tif ( event.button === scope.mouseButtons.ORBIT ) {\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t} else if ( event.button === scope.mouseButtons.ZOOM ) {\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t} else if ( event.button === scope.mouseButtons.PAN ) {\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\tstate = STATE.PAN;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tdocument.addEventListener( 'mousemove', onMouseMove, false );\n\t\t\t\tdocument.addEventListener( 'mouseup', onMouseUp, false );\n\t\t\t\tdocument.addEventListener( 'mouseout', onMouseUp, false );\n\n\t\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tif ( state === STATE.ROTATE ) {\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t} else if ( state === STATE.DOLLY ) {\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t} else if ( state === STATE.PAN ) {\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseUp( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\thandleMouseUp( event );\n\n\t\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\t\t\tdocument.removeEventListener( 'mouseout', onMouseUp, false );\n\n\t\t\tscope.dispatchEvent( endEvent );\n\n\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onMouseWheel( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableZoom === false || ( state !== STATE.NONE && state !== STATE.ROTATE ) ) return;\n\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\n\t\t\thandleMouseWheel( event );\n\n\t\t\tscope.dispatchEvent( startEvent ); // not sure why these are here...\n\t\t\tscope.dispatchEvent( endEvent );\n\n\t\t}\n\n\t\tfunction onKeyDown( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableKeys === false || scope.enablePan === false ) return;\n\n\t\t\thandleKeyDown( event );\n\n\t\t}\n\n\t\tfunction onTouchStart( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tswitch ( event.touches.length ) {\n\n\t\t\t\tcase 1:\t// one-fingered touch: rotate\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchStartRotate( event );\n\n\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\t// two-fingered touch: dolly\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleTouchStartDolly( event );\n\n\t\t\t\t\tstate = STATE.TOUCH_DOLLY;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 3: // three-fingered touch: pan\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchStartPan( event );\n\n\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\n\t\t\tswitch ( event.touches.length ) {\n\n\t\t\t\tcase 1: // one-fingered touch: rotate\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\t\t\t\tif ( state !== STATE.TOUCH_ROTATE ) return; // is this needed?...\n\n\t\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2: // two-fingered touch: dolly\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\t\t\t\t\tif ( state !== STATE.TOUCH_DOLLY ) return; // is this needed?...\n\n\t\t\t\t\thandleTouchMoveDolly( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 3: // three-fingered touch: pan\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\t\t\t\t\tif ( state !== STATE.TOUCH_PAN ) return; // is this needed?...\n\n\t\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchEnd( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\thandleTouchEnd( event );\n\n\t\t\tscope.dispatchEvent( endEvent );\n\n\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onContextMenu( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t}\n\n\t\t//\n\n\t\tscope.domElement.addEventListener( 'contextmenu', onContextMenu, false );\n\n\t\tscope.domElement.addEventListener( 'mousedown', onMouseDown, false );\n\t\tscope.domElement.addEventListener( 'mousewheel', onMouseWheel, false );\n\t\tscope.domElement.addEventListener( 'MozMousePixelScroll', onMouseWheel, false ); // firefox\n\n\t\tscope.domElement.addEventListener( 'touchstart', onTouchStart, false );\n\t\tscope.domElement.addEventListener( 'touchend', onTouchEnd, false );\n\t\tscope.domElement.addEventListener( 'touchmove', onTouchMove, false );\n\n\t\twindow.addEventListener( 'keydown', onKeyDown, false );\n\n\t\t// force an update at start\n\n\t\tthis.update();\n\n\t};\n\n\tTHREE.OrbitControls.prototype = Object.create( THREE.EventDispatcher.prototype );\n\tTHREE.OrbitControls.prototype.constructor = THREE.OrbitControls;\n\n\tObject.defineProperties( THREE.OrbitControls.prototype, {\n\n\t\tcenter: {\n\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .center has been renamed to .target' );\n\t\t\t\treturn this.target;\n\n\t\t\t}\n\n\t\t},\n\n\t\t// backward compatibility\n\n\t\tnoZoom: {\n\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\t\treturn ! this.enableZoom;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\t\tthis.enableZoom = ! value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tnoRotate: {\n\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\t\treturn ! this.enableRotate;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\t\tthis.enableRotate = ! value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tnoPan: {\n\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\t\treturn ! this.enablePan;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\t\tthis.enablePan = ! value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tnoKeys: {\n\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\t\treturn ! this.enableKeys;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\t\tthis.enableKeys = ! value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tstaticMoving : {\n\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\t\treturn ! this.enableDamping;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\t\tthis.enableDamping = ! value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tdynamicDampingFactor : {\n\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\t\treturn this.dampingFactor;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\t\tthis.dampingFactor = value;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n};","module.exports = function( THREE ){\n\t// Parallax Occlusion shaders from\n\t//    http://sunandblackcat.com/tipFullView.php?topicid=28\n\t// No tangent-space transforms logic based on\n\t//   http://mmikkelsen3d.blogspot.sk/2012/02/parallaxpoc-mapping-and-no-tangent.html\n\n\tTHREE.ParallaxShader = {\n\t\t// Ordered from fastest to best quality.\n\t\tmodes: {\n\t\t\tnone:  'NO_PARALLAX',\n\t\t\tbasic: 'USE_BASIC_PARALLAX',\n\t\t\tsteep: 'USE_STEEP_PARALLAX',\n\t\t\tocclusion: 'USE_OCLUSION_PARALLAX', // a.k.a. POM\n\t\t\trelief: 'USE_RELIEF_PARALLAX',\n\t\t},\n\n\t\tuniforms: {\n\t\t\t\"bumpMap\": { type: \"t\", value: null },\n\t\t\t\"map\": { type: \"t\", value: null },\n\t\t\t\"parallaxScale\": { type: \"f\", value: null },\n\t\t\t\"parallaxMinLayers\": { type: \"f\", value: null },\n\t\t\t\"parallaxMaxLayers\": { type: \"f\", value: null }\n\t\t},\n\n\t\tvertexShader: [\n\t\t\t\"varying vec2 vUv;\",\n\t\t\t\"varying vec3 vViewPosition;\",\n\t\t\t\"varying vec3 vNormal;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vUv = uv;\",\n\t\t\t\t\"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\n\t\t\t\t\"vViewPosition = -mvPosition.xyz;\",\n\t\t\t\t\"vNormal = normalize( normalMatrix * normal );\",\n\t\t\t\t\"gl_Position = projectionMatrix * mvPosition;\",\n\n\t\t\t\"}\"\n\n\t  ].join( \"\\n\" ),\n\n\t\tfragmentShader: [\n\t\t\t\"uniform sampler2D bumpMap;\",\n\t\t\t\"uniform sampler2D map;\",\n\n\t\t\t\"uniform float parallaxScale;\",\n\t\t\t\"uniform float parallaxMinLayers;\",\n\t\t\t\"uniform float parallaxMaxLayers;\",\n\n\t\t\t\"varying vec2 vUv;\",\n\t\t\t\"varying vec3 vViewPosition;\",\n\t\t\t\"varying vec3 vNormal;\",\n\n\t\t\t\"#ifdef USE_BASIC_PARALLAX\",\n\n\t\t\t\t\"vec2 parallaxMap( in vec3 V ) {\",\n\n\t\t\t\t\t\"float initialHeight = texture2D( bumpMap, vUv ).r;\",\n\n\t\t\t\t\t// No Offset Limitting: messy, floating output at grazing angles.\n\t\t\t\t\t//\"vec2 texCoordOffset = parallaxScale * V.xy / V.z * initialHeight;\",\n\n\t\t\t\t\t// Offset Limiting\n\t\t\t\t\t\"vec2 texCoordOffset = parallaxScale * V.xy * initialHeight;\",\n\t\t\t\t\t\"return vUv - texCoordOffset;\",\n\n\t\t\t\t\"}\",\n\n\t\t\t\"#else\",\n\n\t\t\t\t\"vec2 parallaxMap( in vec3 V ) {\",\n\n\t\t\t\t\t// Determine number of layers from angle between V and N\n\t\t\t\t\t\"float numLayers = mix( parallaxMaxLayers, parallaxMinLayers, abs( dot( vec3( 0.0, 0.0, 1.0 ), V ) ) );\",\n\n\t\t\t\t\t\"float layerHeight = 1.0 / numLayers;\",\n\t\t\t\t\t\"float currentLayerHeight = 0.0;\",\n\t\t\t\t\t// Shift of texture coordinates for each iteration\n\t\t\t\t\t\"vec2 dtex = parallaxScale * V.xy / V.z / numLayers;\",\n\n\t\t\t\t\t\"vec2 currentTextureCoords = vUv;\",\n\n\t\t\t\t\t\"float heightFromTexture = texture2D( bumpMap, currentTextureCoords ).r;\",\n\n\t\t\t\t\t// while ( heightFromTexture > currentLayerHeight )\n\t\t\t\t\t// Infinite loops are not well supported. Do a \"large\" finite\n\t\t\t\t\t// loop, but not too large, as it slows down some compilers.\n\t\t\t\t\t\"for ( int i = 0; i < 30; i += 1 ) {\",\n\t\t\t\t\t\t\"if ( heightFromTexture <= currentLayerHeight ) {\",\n\t\t\t\t\t\t\t\"break;\",\n\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\"currentLayerHeight += layerHeight;\",\n\t\t\t\t\t\t// Shift texture coordinates along vector V\n\t\t\t\t\t\t\"currentTextureCoords -= dtex;\",\n\t\t\t\t\t\t\"heightFromTexture = texture2D( bumpMap, currentTextureCoords ).r;\",\n\t\t\t\t\t\"}\",\n\n\t\t\t\t\t\"#ifdef USE_STEEP_PARALLAX\",\n\n\t\t\t\t\t\t\"return currentTextureCoords;\",\n\n\t\t\t\t\t\"#elif defined( USE_RELIEF_PARALLAX )\",\n\n\t\t\t\t\t\t\"vec2 deltaTexCoord = dtex / 2.0;\",\n\t\t\t\t\t\t\"float deltaHeight = layerHeight / 2.0;\",\n\n\t\t\t\t\t\t// Return to the mid point of previous layer\n\t\t\t\t\t\t\"currentTextureCoords += deltaTexCoord;\",\n\t\t\t\t\t\t\"currentLayerHeight -= deltaHeight;\",\n\n\t\t\t\t\t\t// Binary search to increase precision of Steep Parallax Mapping\n\t\t\t\t\t\t\"const int numSearches = 5;\",\n\t\t\t\t\t\t\"for ( int i = 0; i < numSearches; i += 1 ) {\",\n\n\t\t\t\t\t\t\t\"deltaTexCoord /= 2.0;\",\n\t\t\t\t\t\t\t\"deltaHeight /= 2.0;\",\n\t\t\t\t\t\t\t\"heightFromTexture = texture2D( bumpMap, currentTextureCoords ).r;\",\n\t\t\t\t\t\t\t// Shift along or against vector V\n\t\t\t\t\t\t\t\"if( heightFromTexture > currentLayerHeight ) {\", // Below the surface\n\n\t\t\t\t\t\t\t\t\"currentTextureCoords -= deltaTexCoord;\",\n\t\t\t\t\t\t\t\t\"currentLayerHeight += deltaHeight;\",\n\n\t\t\t\t\t\t\t\"} else {\", // above the surface\n\n\t\t\t\t\t\t\t\t\"currentTextureCoords += deltaTexCoord;\",\n\t\t\t\t\t\t\t\t\"currentLayerHeight -= deltaHeight;\",\n\n\t\t\t\t\t\t\t\"}\",\n\n\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\"return currentTextureCoords;\",\n\n\t\t\t\t\t\"#elif defined( USE_OCLUSION_PARALLAX )\",\n\n\t\t\t\t\t\t\"vec2 prevTCoords = currentTextureCoords + dtex;\",\n\n\t\t\t\t\t\t// Heights for linear interpolation\n\t\t\t\t\t\t\"float nextH = heightFromTexture - currentLayerHeight;\",\n\t\t\t\t\t\t\"float prevH = texture2D( bumpMap, prevTCoords ).r - currentLayerHeight + layerHeight;\",\n\n\t\t\t\t\t\t// Proportions for linear interpolation\n\t\t\t\t\t\t\"float weight = nextH / ( nextH - prevH );\",\n\n\t\t\t\t\t\t// Interpolation of texture coordinates\n\t\t\t\t\t\t\"return prevTCoords * weight + currentTextureCoords * ( 1.0 - weight );\",\n\n\t\t\t\t\t\"#else\", // NO_PARALLAX\n\n\t\t\t\t\t\t\"return vUv;\",\n\n\t\t\t\t\t\"#endif\",\n\n\t\t\t\t\"}\",\n\t\t\t\"#endif\",\n\n\t\t\t\"vec2 perturbUv( vec3 surfPosition, vec3 surfNormal, vec3 viewPosition ) {\",\n\n\t \t\t\t\"vec2 texDx = dFdx( vUv );\",\n\t\t\t\t\"vec2 texDy = dFdy( vUv );\",\n\n\t\t\t\t\"vec3 vSigmaX = dFdx( surfPosition );\",\n\t\t\t\t\"vec3 vSigmaY = dFdy( surfPosition );\",\n\t\t\t\t\"vec3 vR1 = cross( vSigmaY, surfNormal );\",\n\t\t\t\t\"vec3 vR2 = cross( surfNormal, vSigmaX );\",\n\t\t\t\t\"float fDet = dot( vSigmaX, vR1 );\",\n\n\t\t\t\t\"vec2 vProjVscr = ( 1.0 / fDet ) * vec2( dot( vR1, viewPosition ), dot( vR2, viewPosition ) );\",\n\t\t\t\t\"vec3 vProjVtex;\",\n\t\t\t\t\"vProjVtex.xy = texDx * vProjVscr.x + texDy * vProjVscr.y;\",\n\t\t\t\t\"vProjVtex.z = dot( surfNormal, viewPosition );\",\n\n\t\t\t\t\"return parallaxMap( vProjVtex );\",\n\t\t\t\"}\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vec2 mapUv = perturbUv( -vViewPosition, normalize( vNormal ), normalize( vViewPosition ) );\",\n\t\t\t\t\"gl_FragColor = texture2D( map, mapUv );\",\n\n\t\t\t\"}\",\n\n\t  ].join( \"\\n\" )\n\n\t};\n\n}\n","module.exports = function( THREE ){\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\n\t * @author julianwa / https://github.com/julianwa\n\t */\n\n\tTHREE.RenderableObject = function () {\n\n\t\tthis.id = 0;\n\n\t\tthis.object = null;\n\t\tthis.z = 0;\n\t\tthis.renderOrder = 0;\n\n\t};\n\n\t//\n\n\tTHREE.RenderableFace = function () {\n\n\t\tthis.id = 0;\n\n\t\tthis.v1 = new THREE.RenderableVertex();\n\t\tthis.v2 = new THREE.RenderableVertex();\n\t\tthis.v3 = new THREE.RenderableVertex();\n\n\t\tthis.normalModel = new THREE.Vector3();\n\n\t\tthis.vertexNormalsModel = [ new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3() ];\n\t\tthis.vertexNormalsLength = 0;\n\n\t\tthis.color = new THREE.Color();\n\t\tthis.material = null;\n\t\tthis.uvs = [ new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() ];\n\n\t\tthis.z = 0;\n\t\tthis.renderOrder = 0;\n\n\t};\n\n\t//\n\n\tTHREE.RenderableVertex = function () {\n\n\t\tthis.position = new THREE.Vector3();\n\t\tthis.positionWorld = new THREE.Vector3();\n\t\tthis.positionScreen = new THREE.Vector4();\n\n\t\tthis.visible = true;\n\n\t};\n\n\tTHREE.RenderableVertex.prototype.copy = function ( vertex ) {\n\n\t\tthis.positionWorld.copy( vertex.positionWorld );\n\t\tthis.positionScreen.copy( vertex.positionScreen );\n\n\t};\n\n\t//\n\n\tTHREE.RenderableLine = function () {\n\n\t\tthis.id = 0;\n\n\t\tthis.v1 = new THREE.RenderableVertex();\n\t\tthis.v2 = new THREE.RenderableVertex();\n\n\t\tthis.vertexColors = [ new THREE.Color(), new THREE.Color() ];\n\t\tthis.material = null;\n\n\t\tthis.z = 0;\n\t\tthis.renderOrder = 0;\n\n\t};\n\n\t//\n\n\tTHREE.RenderableSprite = function () {\n\n\t\tthis.id = 0;\n\n\t\tthis.object = null;\n\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\t\tthis.z = 0;\n\n\t\tthis.rotation = 0;\n\t\tthis.scale = new THREE.Vector2();\n\n\t\tthis.material = null;\n\t\tthis.renderOrder = 0;\n\n\t};\n\n\t//\n\n\tTHREE.Projector = function () {\n\n\t\tvar _object, _objectCount, _objectPool = [], _objectPoolLength = 0,\n\t\t_vertex, _vertexCount, _vertexPool = [], _vertexPoolLength = 0,\n\t\t_face, _faceCount, _facePool = [], _facePoolLength = 0,\n\t\t_line, _lineCount, _linePool = [], _linePoolLength = 0,\n\t\t_sprite, _spriteCount, _spritePool = [], _spritePoolLength = 0,\n\n\t\t_renderData = { objects: [], lights: [], elements: [] },\n\n\t\t_vector3 = new THREE.Vector3(),\n\t\t_vector4 = new THREE.Vector4(),\n\n\t\t_clipBox = new THREE.Box3( new THREE.Vector3( - 1, - 1, - 1 ), new THREE.Vector3( 1, 1, 1 ) ),\n\t\t_boundingBox = new THREE.Box3(),\n\t\t_points3 = new Array( 3 ),\n\t\t_points4 = new Array( 4 ),\n\n\t\t_viewMatrix = new THREE.Matrix4(),\n\t\t_viewProjectionMatrix = new THREE.Matrix4(),\n\n\t\t_modelMatrix,\n\t\t_modelViewProjectionMatrix = new THREE.Matrix4(),\n\n\t\t_normalMatrix = new THREE.Matrix3(),\n\n\t\t_frustum = new THREE.Frustum(),\n\n\t\t_clippedVertex1PositionScreen = new THREE.Vector4(),\n\t\t_clippedVertex2PositionScreen = new THREE.Vector4();\n\n\t\t//\n\n\t\tthis.projectVector = function ( vector, camera ) {\n\n\t\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\n\t\t\tvector.project( camera );\n\n\t\t};\n\n\t\tthis.unprojectVector = function ( vector, camera ) {\n\n\t\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\n\t\t\tvector.unproject( camera );\n\n\t\t};\n\n\t\tthis.pickingRay = function ( vector, camera ) {\n\n\t\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\n\n\t\t};\n\n\t\t//\n\n\t\tvar RenderList = function () {\n\n\t\t\tvar normals = [];\n\t\t\tvar uvs = [];\n\n\t\t\tvar object = null;\n\t\t\tvar material = null;\n\n\t\t\tvar normalMatrix = new THREE.Matrix3();\n\n\t\t\tfunction setObject( value ) {\n\n\t\t\t\tobject = value;\n\t\t\t\tmaterial = object.material;\n\n\t\t\t\tnormalMatrix.getNormalMatrix( object.matrixWorld );\n\n\t\t\t\tnormals.length = 0;\n\t\t\t\tuvs.length = 0;\n\n\t\t\t}\n\n\t\t\tfunction projectVertex( vertex ) {\n\n\t\t\t\tvar position = vertex.position;\n\t\t\t\tvar positionWorld = vertex.positionWorld;\n\t\t\t\tvar positionScreen = vertex.positionScreen;\n\n\t\t\t\tpositionWorld.copy( position ).applyMatrix4( _modelMatrix );\n\t\t\t\tpositionScreen.copy( positionWorld ).applyMatrix4( _viewProjectionMatrix );\n\n\t\t\t\tvar invW = 1 / positionScreen.w;\n\n\t\t\t\tpositionScreen.x *= invW;\n\t\t\t\tpositionScreen.y *= invW;\n\t\t\t\tpositionScreen.z *= invW;\n\n\t\t\t\tvertex.visible = positionScreen.x >= - 1 && positionScreen.x <= 1 &&\n\t\t\t\t\t\t positionScreen.y >= - 1 && positionScreen.y <= 1 &&\n\t\t\t\t\t\t positionScreen.z >= - 1 && positionScreen.z <= 1;\n\n\t\t\t}\n\n\t\t\tfunction pushVertex( x, y, z ) {\n\n\t\t\t\t_vertex = getNextVertexInPool();\n\t\t\t\t_vertex.position.set( x, y, z );\n\n\t\t\t\tprojectVertex( _vertex );\n\n\t\t\t}\n\n\t\t\tfunction pushNormal( x, y, z ) {\n\n\t\t\t\tnormals.push( x, y, z );\n\n\t\t\t}\n\n\t\t\tfunction pushUv( x, y ) {\n\n\t\t\t\tuvs.push( x, y );\n\n\t\t\t}\n\n\t\t\tfunction checkTriangleVisibility( v1, v2, v3 ) {\n\n\t\t\t\tif ( v1.visible === true || v2.visible === true || v3.visible === true ) return true;\n\n\t\t\t\t_points3[ 0 ] = v1.positionScreen;\n\t\t\t\t_points3[ 1 ] = v2.positionScreen;\n\t\t\t\t_points3[ 2 ] = v3.positionScreen;\n\n\t\t\t\treturn _clipBox.intersectsBox( _boundingBox.setFromPoints( _points3 ) );\n\n\t\t\t}\n\n\t\t\tfunction checkBackfaceCulling( v1, v2, v3 ) {\n\n\t\t\t\treturn ( ( v3.positionScreen.x - v1.positionScreen.x ) *\n\t\t\t\t\t    ( v2.positionScreen.y - v1.positionScreen.y ) -\n\t\t\t\t\t    ( v3.positionScreen.y - v1.positionScreen.y ) *\n\t\t\t\t\t    ( v2.positionScreen.x - v1.positionScreen.x ) ) < 0;\n\n\t\t\t}\n\n\t\t\tfunction pushLine( a, b ) {\n\n\t\t\t\tvar v1 = _vertexPool[ a ];\n\t\t\t\tvar v2 = _vertexPool[ b ];\n\n\t\t\t\t_line = getNextLineInPool();\n\n\t\t\t\t_line.id = object.id;\n\t\t\t\t_line.v1.copy( v1 );\n\t\t\t\t_line.v2.copy( v2 );\n\t\t\t\t_line.z = ( v1.positionScreen.z + v2.positionScreen.z ) / 2;\n\t\t\t\t_line.renderOrder = object.renderOrder;\n\n\t\t\t\t_line.material = object.material;\n\n\t\t\t\t_renderData.elements.push( _line );\n\n\t\t\t}\n\n\t\t\tfunction pushTriangle( a, b, c ) {\n\n\t\t\t\tvar v1 = _vertexPool[ a ];\n\t\t\t\tvar v2 = _vertexPool[ b ];\n\t\t\t\tvar v3 = _vertexPool[ c ];\n\n\t\t\t\tif ( checkTriangleVisibility( v1, v2, v3 ) === false ) return;\n\n\t\t\t\tif ( material.side === THREE.DoubleSide || checkBackfaceCulling( v1, v2, v3 ) === true ) {\n\n\t\t\t\t\t_face = getNextFaceInPool();\n\n\t\t\t\t\t_face.id = object.id;\n\t\t\t\t\t_face.v1.copy( v1 );\n\t\t\t\t\t_face.v2.copy( v2 );\n\t\t\t\t\t_face.v3.copy( v3 );\n\t\t\t\t\t_face.z = ( v1.positionScreen.z + v2.positionScreen.z + v3.positionScreen.z ) / 3;\n\t\t\t\t\t_face.renderOrder = object.renderOrder;\n\n\t\t\t\t\t// use first vertex normal as face normal\n\n\t\t\t\t\t_face.normalModel.fromArray( normals, a * 3 );\n\t\t\t\t\t_face.normalModel.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t\tfor ( var i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\tvar normal = _face.vertexNormalsModel[ i ];\n\t\t\t\t\t\tnormal.fromArray( normals, arguments[ i ] * 3 );\n\t\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t\t\tvar uv = _face.uvs[ i ];\n\t\t\t\t\t\tuv.fromArray( uvs, arguments[ i ] * 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_face.vertexNormalsLength = 3;\n\n\t\t\t\t\t_face.material = object.material;\n\n\t\t\t\t\t_renderData.elements.push( _face );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tsetObject: setObject,\n\t\t\t\tprojectVertex: projectVertex,\n\t\t\t\tcheckTriangleVisibility: checkTriangleVisibility,\n\t\t\t\tcheckBackfaceCulling: checkBackfaceCulling,\n\t\t\t\tpushVertex: pushVertex,\n\t\t\t\tpushNormal: pushNormal,\n\t\t\t\tpushUv: pushUv,\n\t\t\t\tpushLine: pushLine,\n\t\t\t\tpushTriangle: pushTriangle\n\t\t\t}\n\n\t\t};\n\n\t\tvar renderList = new RenderList();\n\n\t\tthis.projectScene = function ( scene, camera, sortObjects, sortElements ) {\n\n\t\t\t_faceCount = 0;\n\t\t\t_lineCount = 0;\n\t\t\t_spriteCount = 0;\n\n\t\t\t_renderData.elements.length = 0;\n\n\t\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\t\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\t\t_viewMatrix.copy( camera.matrixWorldInverse.getInverse( camera.matrixWorld ) );\n\t\t\t_viewProjectionMatrix.multiplyMatrices( camera.projectionMatrix, _viewMatrix );\n\n\t\t\t_frustum.setFromMatrix( _viewProjectionMatrix );\n\n\t\t\t//\n\n\t\t\t_objectCount = 0;\n\n\t\t\t_renderData.objects.length = 0;\n\t\t\t_renderData.lights.length = 0;\n\n\t\t\tscene.traverseVisible( function ( object ) {\n\n\t\t\t\tif ( object instanceof THREE.Light ) {\n\n\t\t\t\t\t_renderData.lights.push( object );\n\n\t\t\t\t} else if ( object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Sprite ) {\n\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tif ( material.visible === false ) return;\n\n\t\t\t\t\tif ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) {\n\n\t\t\t\t\t\t_object = getNextObjectInPool();\n\t\t\t\t\t\t_object.id = object.id;\n\t\t\t\t\t\t_object.object = object;\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\n\t\t\t\t\t\t_vector3.applyProjection( _viewProjectionMatrix );\n\t\t\t\t\t\t_object.z = _vector3.z;\n\t\t\t\t\t\t_object.renderOrder = object.renderOrder;\n\n\t\t\t\t\t\t_renderData.objects.push( _object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( sortObjects === true ) {\n\n\t\t\t\t_renderData.objects.sort( painterSort );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tfor ( var o = 0, ol = _renderData.objects.length; o < ol; o ++ ) {\n\n\t\t\t\tvar object = _renderData.objects[ o ].object;\n\t\t\t\tvar geometry = object.geometry;\n\n\t\t\t\trenderList.setObject( object );\n\n\t\t\t\t_modelMatrix = object.matrixWorld;\n\n\t\t\t\t_vertexCount = 0;\n\n\t\t\t\tif ( object instanceof THREE.Mesh ) {\n\n\t\t\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\n\n\t\t\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\t\tif ( attributes.position === undefined ) continue;\n\n\t\t\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\t\t\tfor ( var i = 0, l = positions.length; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\trenderList.pushVertex( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( attributes.normal !== undefined ) {\n\n\t\t\t\t\t\t\tvar normals = attributes.normal.array;\n\n\t\t\t\t\t\t\tfor ( var i = 0, l = normals.length; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\t\trenderList.pushNormal( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( attributes.uv !== undefined ) {\n\n\t\t\t\t\t\t\tvar uvs = attributes.uv.array;\n\n\t\t\t\t\t\t\tfor ( var i = 0, l = uvs.length; i < l; i += 2 ) {\n\n\t\t\t\t\t\t\t\trenderList.pushUv( uvs[ i ], uvs[ i + 1 ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t\t\t\tvar indices = geometry.index.array;\n\n\t\t\t\t\t\t\tif ( groups.length > 0 ) {\n\n\t\t\t\t\t\t\t\tfor ( var o = 0; o < groups.length; o ++ ) {\n\n\t\t\t\t\t\t\t\t\tvar group = groups[ o ];\n\n\t\t\t\t\t\t\t\t\tfor ( var i = group.start, l = group.start + group.count; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\t\t\t\trenderList.pushTriangle( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\t\t\trenderList.pushTriangle( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\t\trenderList.pushTriangle( i, i + 1, i + 2 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\n\n\t\t\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\t\t\tvar faces = geometry.faces;\n\t\t\t\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\n\n\t\t\t\t\t\t_normalMatrix.getNormalMatrix( _modelMatrix );\n\n\t\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\t\tvar isFaceMaterial = material instanceof THREE.MultiMaterial;\n\t\t\t\t\t\tvar objectMaterials = isFaceMaterial === true ? object.material : null;\n\n\t\t\t\t\t\tfor ( var v = 0, vl = vertices.length; v < vl; v ++ ) {\n\n\t\t\t\t\t\t\tvar vertex = vertices[ v ];\n\n\t\t\t\t\t\t\t_vector3.copy( vertex );\n\n\t\t\t\t\t\t\tif ( material.morphTargets === true ) {\n\n\t\t\t\t\t\t\t\tvar morphTargets = geometry.morphTargets;\n\t\t\t\t\t\t\t\tvar morphInfluences = object.morphTargetInfluences;\n\n\t\t\t\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\n\n\t\t\t\t\t\t\t\t\tvar influence = morphInfluences[ t ];\n\n\t\t\t\t\t\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t\t\t\t\t\tvar target = morphTargets[ t ];\n\t\t\t\t\t\t\t\t\tvar targetVertex = target.vertices[ v ];\n\n\t\t\t\t\t\t\t\t\t_vector3.x += ( targetVertex.x - vertex.x ) * influence;\n\t\t\t\t\t\t\t\t\t_vector3.y += ( targetVertex.y - vertex.y ) * influence;\n\t\t\t\t\t\t\t\t\t_vector3.z += ( targetVertex.z - vertex.z ) * influence;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\trenderList.pushVertex( _vector3.x, _vector3.y, _vector3.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\t\t\tvar face = faces[ f ];\n\n\t\t\t\t\t\t\tmaterial = isFaceMaterial === true\n\t\t\t\t\t\t\t\t ? objectMaterials.materials[ face.materialIndex ]\n\t\t\t\t\t\t\t\t : object.material;\n\n\t\t\t\t\t\t\tif ( material === undefined ) continue;\n\n\t\t\t\t\t\t\tvar side = material.side;\n\n\t\t\t\t\t\t\tvar v1 = _vertexPool[ face.a ];\n\t\t\t\t\t\t\tvar v2 = _vertexPool[ face.b ];\n\t\t\t\t\t\t\tvar v3 = _vertexPool[ face.c ];\n\n\t\t\t\t\t\t\tif ( renderList.checkTriangleVisibility( v1, v2, v3 ) === false ) continue;\n\n\t\t\t\t\t\t\tvar visible = renderList.checkBackfaceCulling( v1, v2, v3 );\n\n\t\t\t\t\t\t\tif ( side !== THREE.DoubleSide ) {\n\n\t\t\t\t\t\t\t\tif ( side === THREE.FrontSide && visible === false ) continue;\n\t\t\t\t\t\t\t\tif ( side === THREE.BackSide && visible === true ) continue;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_face = getNextFaceInPool();\n\n\t\t\t\t\t\t\t_face.id = object.id;\n\t\t\t\t\t\t\t_face.v1.copy( v1 );\n\t\t\t\t\t\t\t_face.v2.copy( v2 );\n\t\t\t\t\t\t\t_face.v3.copy( v3 );\n\n\t\t\t\t\t\t\t_face.normalModel.copy( face.normal );\n\n\t\t\t\t\t\t\tif ( visible === false && ( side === THREE.BackSide || side === THREE.DoubleSide ) ) {\n\n\t\t\t\t\t\t\t\t_face.normalModel.negate();\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_face.normalModel.applyMatrix3( _normalMatrix ).normalize();\n\n\t\t\t\t\t\t\tvar faceVertexNormals = face.vertexNormals;\n\n\t\t\t\t\t\t\tfor ( var n = 0, nl = Math.min( faceVertexNormals.length, 3 ); n < nl; n ++ ) {\n\n\t\t\t\t\t\t\t\tvar normalModel = _face.vertexNormalsModel[ n ];\n\t\t\t\t\t\t\t\tnormalModel.copy( faceVertexNormals[ n ] );\n\n\t\t\t\t\t\t\t\tif ( visible === false && ( side === THREE.BackSide || side === THREE.DoubleSide ) ) {\n\n\t\t\t\t\t\t\t\t\tnormalModel.negate();\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tnormalModel.applyMatrix3( _normalMatrix ).normalize();\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_face.vertexNormalsLength = faceVertexNormals.length;\n\n\t\t\t\t\t\t\tvar vertexUvs = faceVertexUvs[ f ];\n\n\t\t\t\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\t\t\t\tfor ( var u = 0; u < 3; u ++ ) {\n\n\t\t\t\t\t\t\t\t\t_face.uvs[ u ].copy( vertexUvs[ u ] );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_face.color = face.color;\n\t\t\t\t\t\t\t_face.material = material;\n\n\t\t\t\t\t\t\t_face.z = ( v1.positionScreen.z + v2.positionScreen.z + v3.positionScreen.z ) / 3;\n\t\t\t\t\t\t\t_face.renderOrder = object.renderOrder;\n\n\t\t\t\t\t\t\t_renderData.elements.push( _face );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object instanceof THREE.Line ) {\n\n\t\t\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\n\n\t\t\t\t\t\tvar attributes = geometry.attributes;\n\n\t\t\t\t\t\tif ( attributes.position !== undefined ) {\n\n\t\t\t\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\t\t\t\tfor ( var i = 0, l = positions.length; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\t\trenderList.pushVertex( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t\t\t\t\tvar indices = geometry.index.array;\n\n\t\t\t\t\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i += 2 ) {\n\n\t\t\t\t\t\t\t\t\trenderList.pushLine( indices[ i ], indices[ i + 1 ] );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tvar step = object instanceof THREE.LineSegments ? 2 : 1;\n\n\t\t\t\t\t\t\t\tfor ( var i = 0, l = ( positions.length / 3 ) - 1; i < l; i += step ) {\n\n\t\t\t\t\t\t\t\t\trenderList.pushLine( i, i + 1 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\n\n\t\t\t\t\t\t_modelViewProjectionMatrix.multiplyMatrices( _viewProjectionMatrix, _modelMatrix );\n\n\t\t\t\t\t\tvar vertices = object.geometry.vertices;\n\n\t\t\t\t\t\tif ( vertices.length === 0 ) continue;\n\n\t\t\t\t\t\tv1 = getNextVertexInPool();\n\t\t\t\t\t\tv1.positionScreen.copy( vertices[ 0 ] ).applyMatrix4( _modelViewProjectionMatrix );\n\n\t\t\t\t\t\tvar step = object instanceof THREE.LineSegments ? 2 : 1;\n\n\t\t\t\t\t\tfor ( var v = 1, vl = vertices.length; v < vl; v ++ ) {\n\n\t\t\t\t\t\t\tv1 = getNextVertexInPool();\n\t\t\t\t\t\t\tv1.positionScreen.copy( vertices[ v ] ).applyMatrix4( _modelViewProjectionMatrix );\n\n\t\t\t\t\t\t\tif ( ( v + 1 ) % step > 0 ) continue;\n\n\t\t\t\t\t\t\tv2 = _vertexPool[ _vertexCount - 2 ];\n\n\t\t\t\t\t\t\t_clippedVertex1PositionScreen.copy( v1.positionScreen );\n\t\t\t\t\t\t\t_clippedVertex2PositionScreen.copy( v2.positionScreen );\n\n\t\t\t\t\t\t\tif ( clipLine( _clippedVertex1PositionScreen, _clippedVertex2PositionScreen ) === true ) {\n\n\t\t\t\t\t\t\t\t// Perform the perspective divide\n\t\t\t\t\t\t\t\t_clippedVertex1PositionScreen.multiplyScalar( 1 / _clippedVertex1PositionScreen.w );\n\t\t\t\t\t\t\t\t_clippedVertex2PositionScreen.multiplyScalar( 1 / _clippedVertex2PositionScreen.w );\n\n\t\t\t\t\t\t\t\t_line = getNextLineInPool();\n\n\t\t\t\t\t\t\t\t_line.id = object.id;\n\t\t\t\t\t\t\t\t_line.v1.positionScreen.copy( _clippedVertex1PositionScreen );\n\t\t\t\t\t\t\t\t_line.v2.positionScreen.copy( _clippedVertex2PositionScreen );\n\n\t\t\t\t\t\t\t\t_line.z = Math.max( _clippedVertex1PositionScreen.z, _clippedVertex2PositionScreen.z );\n\t\t\t\t\t\t\t\t_line.renderOrder = object.renderOrder;\n\n\t\t\t\t\t\t\t\t_line.material = object.material;\n\n\t\t\t\t\t\t\t\tif ( object.material.vertexColors === THREE.VertexColors ) {\n\n\t\t\t\t\t\t\t\t\t_line.vertexColors[ 0 ].copy( object.geometry.colors[ v ] );\n\t\t\t\t\t\t\t\t\t_line.vertexColors[ 1 ].copy( object.geometry.colors[ v - 1 ] );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t_renderData.elements.push( _line );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object instanceof THREE.Sprite ) {\n\n\t\t\t\t\t_vector4.set( _modelMatrix.elements[ 12 ], _modelMatrix.elements[ 13 ], _modelMatrix.elements[ 14 ], 1 );\n\t\t\t\t\t_vector4.applyMatrix4( _viewProjectionMatrix );\n\n\t\t\t\t\tvar invW = 1 / _vector4.w;\n\n\t\t\t\t\t_vector4.z *= invW;\n\n\t\t\t\t\tif ( _vector4.z >= - 1 && _vector4.z <= 1 ) {\n\n\t\t\t\t\t\t_sprite = getNextSpriteInPool();\n\t\t\t\t\t\t_sprite.id = object.id;\n\t\t\t\t\t\t_sprite.x = _vector4.x * invW;\n\t\t\t\t\t\t_sprite.y = _vector4.y * invW;\n\t\t\t\t\t\t_sprite.z = _vector4.z;\n\t\t\t\t\t\t_sprite.renderOrder = object.renderOrder;\n\t\t\t\t\t\t_sprite.object = object;\n\n\t\t\t\t\t\t_sprite.rotation = object.rotation;\n\n\t\t\t\t\t\t_sprite.scale.x = object.scale.x * Math.abs( _sprite.x - ( _vector4.x + camera.projectionMatrix.elements[ 0 ] ) / ( _vector4.w + camera.projectionMatrix.elements[ 12 ] ) );\n\t\t\t\t\t\t_sprite.scale.y = object.scale.y * Math.abs( _sprite.y - ( _vector4.y + camera.projectionMatrix.elements[ 5 ] ) / ( _vector4.w + camera.projectionMatrix.elements[ 13 ] ) );\n\n\t\t\t\t\t\t_sprite.material = object.material;\n\n\t\t\t\t\t\t_renderData.elements.push( _sprite );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( sortElements === true ) {\n\n\t\t\t\t_renderData.elements.sort( painterSort );\n\n\t\t\t}\n\n\t\t\treturn _renderData;\n\n\t\t};\n\n\t\t// Pools\n\n\t\tfunction getNextObjectInPool() {\n\n\t\t\tif ( _objectCount === _objectPoolLength ) {\n\n\t\t\t\tvar object = new THREE.RenderableObject();\n\t\t\t\t_objectPool.push( object );\n\t\t\t\t_objectPoolLength ++;\n\t\t\t\t_objectCount ++;\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t\treturn _objectPool[ _objectCount ++ ];\n\n\t\t}\n\n\t\tfunction getNextVertexInPool() {\n\n\t\t\tif ( _vertexCount === _vertexPoolLength ) {\n\n\t\t\t\tvar vertex = new THREE.RenderableVertex();\n\t\t\t\t_vertexPool.push( vertex );\n\t\t\t\t_vertexPoolLength ++;\n\t\t\t\t_vertexCount ++;\n\t\t\t\treturn vertex;\n\n\t\t\t}\n\n\t\t\treturn _vertexPool[ _vertexCount ++ ];\n\n\t\t}\n\n\t\tfunction getNextFaceInPool() {\n\n\t\t\tif ( _faceCount === _facePoolLength ) {\n\n\t\t\t\tvar face = new THREE.RenderableFace();\n\t\t\t\t_facePool.push( face );\n\t\t\t\t_facePoolLength ++;\n\t\t\t\t_faceCount ++;\n\t\t\t\treturn face;\n\n\t\t\t}\n\n\t\t\treturn _facePool[ _faceCount ++ ];\n\n\n\t\t}\n\n\t\tfunction getNextLineInPool() {\n\n\t\t\tif ( _lineCount === _linePoolLength ) {\n\n\t\t\t\tvar line = new THREE.RenderableLine();\n\t\t\t\t_linePool.push( line );\n\t\t\t\t_linePoolLength ++;\n\t\t\t\t_lineCount ++;\n\t\t\t\treturn line;\n\n\t\t\t}\n\n\t\t\treturn _linePool[ _lineCount ++ ];\n\n\t\t}\n\n\t\tfunction getNextSpriteInPool() {\n\n\t\t\tif ( _spriteCount === _spritePoolLength ) {\n\n\t\t\t\tvar sprite = new THREE.RenderableSprite();\n\t\t\t\t_spritePool.push( sprite );\n\t\t\t\t_spritePoolLength ++;\n\t\t\t\t_spriteCount ++;\n\t\t\t\treturn sprite;\n\n\t\t\t}\n\n\t\t\treturn _spritePool[ _spriteCount ++ ];\n\n\t\t}\n\n\t\t//\n\n\t\tfunction painterSort( a, b ) {\n\n\t\t\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\t\t\treturn a.renderOrder - b.renderOrder;\n\n\t\t\t} else if ( a.z !== b.z ) {\n\n\t\t\t\treturn b.z - a.z;\n\n\t\t\t} else if ( a.id !== b.id ) {\n\n\t\t\t\treturn a.id - b.id;\n\n\t\t\t} else {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction clipLine( s1, s2 ) {\n\n\t\t\tvar alpha1 = 0, alpha2 = 1,\n\n\t\t\t// Calculate the boundary coordinate of each vertex for the near and far clip planes,\n\t\t\t// Z = -1 and Z = +1, respectively.\n\t\t\tbc1near =  s1.z + s1.w,\n\t\t\tbc2near =  s2.z + s2.w,\n\t\t\tbc1far =  - s1.z + s1.w,\n\t\t\tbc2far =  - s2.z + s2.w;\n\n\t\t\tif ( bc1near >= 0 && bc2near >= 0 && bc1far >= 0 && bc2far >= 0 ) {\n\n\t\t\t\t// Both vertices lie entirely within all clip planes.\n\t\t\t\treturn true;\n\n\t\t\t} else if ( ( bc1near < 0 && bc2near < 0 ) || ( bc1far < 0 && bc2far < 0 ) ) {\n\n\t\t\t\t// Both vertices lie entirely outside one of the clip planes.\n\t\t\t\treturn false;\n\n\t\t\t} else {\n\n\t\t\t\t// The line segment spans at least one clip plane.\n\n\t\t\t\tif ( bc1near < 0 ) {\n\n\t\t\t\t\t// v1 lies outside the near plane, v2 inside\n\t\t\t\t\talpha1 = Math.max( alpha1, bc1near / ( bc1near - bc2near ) );\n\n\t\t\t\t} else if ( bc2near < 0 ) {\n\n\t\t\t\t\t// v2 lies outside the near plane, v1 inside\n\t\t\t\t\talpha2 = Math.min( alpha2, bc1near / ( bc1near - bc2near ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( bc1far < 0 ) {\n\n\t\t\t\t\t// v1 lies outside the far plane, v2 inside\n\t\t\t\t\talpha1 = Math.max( alpha1, bc1far / ( bc1far - bc2far ) );\n\n\t\t\t\t} else if ( bc2far < 0 ) {\n\n\t\t\t\t\t// v2 lies outside the far plane, v2 inside\n\t\t\t\t\talpha2 = Math.min( alpha2, bc1far / ( bc1far - bc2far ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( alpha2 < alpha1 ) {\n\n\t\t\t\t\t// The line segment spans two boundaries, but is outside both of them.\n\t\t\t\t\t// (This can't happen when we're only clipping against just near/far but good\n\t\t\t\t\t//  to leave the check here for future usage if other clip planes are added.)\n\t\t\t\t\treturn false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Update the s1 and s2 vertices to match the clipped line segment.\n\t\t\t\t\ts1.lerp( s2, alpha1 );\n\t\t\t\t\ts2.lerp( s1, 1 - alpha2 );\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n};","module.exports = function( THREE ){\n\t/**\n\t * @author felixturner / http://airtight.cc/\n\t *\n\t * RGB Shift Shader\n\t * Shifts red and blue channels from center in opposite directions\n\t * Ported from http://kriss.cx/tom/2009/05/rgb-shift/\n\t * by Tom Butterworth / http://kriss.cx/tom/\n\t *\n\t * amount: shift distance (1 is width of input)\n\t * angle: shift angle in radians\n\t */\n\n\tTHREE.RGBShiftShader = {\n\n\t\tuniforms: {\n\n\t\t\t\"tDiffuse\": { type: \"t\", value: null },\n\t\t\t\"amount\":   { type: \"f\", value: 0.005 },\n\t\t\t\"angle\":    { type: \"f\", value: 0.0 }\n\n\t\t},\n\n\t\tvertexShader: [\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vUv = uv;\",\n\t\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" ),\n\n\t\tfragmentShader: [\n\n\t\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\t\"uniform float amount;\",\n\t\t\t\"uniform float angle;\",\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vec2 offset = amount * vec2( cos(angle), sin(angle));\",\n\t\t\t\t\"vec4 cr = texture2D(tDiffuse, vUv + offset);\",\n\t\t\t\t\"vec4 cga = texture2D(tDiffuse, vUv);\",\n\t\t\t\t\"vec4 cb = texture2D(tDiffuse, vUv - offset);\",\n\t\t\t\t\"gl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" )\n\n\t};\n\n}\n","module.exports = function( THREE ){\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tTHREE.RenderPass = function ( scene, camera, overrideMaterial, clearColor, clearAlpha ) {\n\n\t\tthis.scene = scene;\n\t\tthis.camera = camera;\n\n\t\tthis.overrideMaterial = overrideMaterial;\n\n\t\tthis.clearColor = clearColor;\n\t\tthis.clearAlpha = ( clearAlpha !== undefined ) ? clearAlpha : 1;\n\n\t\tthis.oldClearColor = new THREE.Color();\n\t\tthis.oldClearAlpha = 1;\n\n\t\tthis.enabled = true;\n\t\tthis.clear = true;\n\t\tthis.needsSwap = false;\n\n\t};\n\n\tTHREE.RenderPass.prototype = {\n\n\t\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\n\n\t\t\tthis.scene.overrideMaterial = this.overrideMaterial;\n\n\t\t\tif ( this.clearColor ) {\n\n\t\t\t\tthis.oldClearColor.copy( renderer.getClearColor() );\n\t\t\t\tthis.oldClearAlpha = renderer.getClearAlpha();\n\n\t\t\t\trenderer.setClearColor( this.clearColor, this.clearAlpha );\n\n\t\t\t}\n\n\t\t\trenderer.render( this.scene, this.camera, readBuffer, this.clear );\n\n\t\t\tif ( this.clearColor ) {\n\n\t\t\t\trenderer.setClearColor( this.oldClearColor, this.oldClearAlpha );\n\n\t\t\t}\n\n\t\t\tthis.scene.overrideMaterial = null;\n\n\t\t}\n\n\t};\n\n};","module.exports = function( THREE ){\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * Screen-space ambient occlusion shader\n\t * - ported from\n\t *   SSAO GLSL shader v1.2\n\t *   assembled by Martins Upitis (martinsh) (http://devlog-martinsh.blogspot.com)\n\t *   original technique is made by ArKano22 (http://www.gamedev.net/topic/550699-ssao-no-halo-artifacts/)\n\t * - modifications\n\t * - modified to use RGBA packed depth texture (use clear color 1,1,1,1 for depth pass)\n\t * - refactoring and optimizations\n\t */\n\n\tTHREE.SSAOShader = {\n\n\t\tuniforms: {\n\n\t\t\t\"tDiffuse\":     { type: \"t\", value: null },\n\t\t\t\"tDepth\":       { type: \"t\", value: null },\n\t\t\t\"size\":         { type: \"v2\", value: new THREE.Vector2( 512, 512 ) },\n\t\t\t\"cameraNear\":   { type: \"f\", value: 1 },\n\t\t\t\"cameraFar\":    { type: \"f\", value: 100 },\n\t\t\t\"onlyAO\":       { type: \"i\", value: 0 },\n\t\t\t\"aoClamp\":      { type: \"f\", value: 0.5 },\n\t\t\t\"lumInfluence\": { type: \"f\", value: 0.5 }\n\n\t\t},\n\n\t\tvertexShader: [\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vUv = uv;\",\n\n\t\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" ),\n\n\t\tfragmentShader: [\n\n\t\t\t\"uniform float cameraNear;\",\n\t\t\t\"uniform float cameraFar;\",\n\n\t\t\t\"uniform bool onlyAO;\",      // use only ambient occlusion pass?\n\n\t\t\t\"uniform vec2 size;\",        // texture width, height\n\t\t\t\"uniform float aoClamp;\",    // depth clamp - reduces haloing at screen edges\n\n\t\t\t\"uniform float lumInfluence;\",  // how much luminance affects occlusion\n\n\t\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\t\"uniform sampler2D tDepth;\",\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t// \"#define PI 3.14159265\",\n\t\t\t\"#define DL 2.399963229728653\",  // PI * ( 3.0 - sqrt( 5.0 ) )\n\t\t\t\"#define EULER 2.718281828459045\",\n\n\t\t\t// user variables\n\n\t\t\t\"const int samples = 8;\",     // ao sample count\n\t\t\t\"const float radius = 5.0;\",  // ao radius\n\n\t\t\t\"const bool useNoise = false;\",      // use noise instead of pattern for sample dithering\n\t\t\t\"const float noiseAmount = 0.0003;\", // dithering amount\n\n\t\t\t\"const float diffArea = 0.4;\",   // self-shadowing reduction\n\t\t\t\"const float gDisplace = 0.4;\",  // gauss bell center\n\n\n\t\t\t// RGBA depth\n\n\t\t\t\"float unpackDepth( const in vec4 rgba_depth ) {\",\n\n\t\t\t\t\"const vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\",\n\t\t\t\t\"float depth = dot( rgba_depth, bit_shift );\",\n\t\t\t\t\"return depth;\",\n\n\t\t\t\"}\",\n\n\t\t\t// generating noise / pattern texture for dithering\n\n\t\t\t\"vec2 rand( const vec2 coord ) {\",\n\n\t\t\t\t\"vec2 noise;\",\n\n\t\t\t\t\"if ( useNoise ) {\",\n\n\t\t\t\t\t\"float nx = dot ( coord, vec2( 12.9898, 78.233 ) );\",\n\t\t\t\t\t\"float ny = dot ( coord, vec2( 12.9898, 78.233 ) * 2.0 );\",\n\n\t\t\t\t\t\"noise = clamp( fract ( 43758.5453 * sin( vec2( nx, ny ) ) ), 0.0, 1.0 );\",\n\n\t\t\t\t\"} else {\",\n\n\t\t\t\t\t\"float ff = fract( 1.0 - coord.s * ( size.x / 2.0 ) );\",\n\t\t\t\t\t\"float gg = fract( coord.t * ( size.y / 2.0 ) );\",\n\n\t\t\t\t\t\"noise = vec2( 0.25, 0.75 ) * vec2( ff ) + vec2( 0.75, 0.25 ) * gg;\",\n\n\t\t\t\t\"}\",\n\n\t\t\t\t\"return ( noise * 2.0  - 1.0 ) * noiseAmount;\",\n\n\t\t\t\"}\",\n\n\t\t\t\"float readDepth( const in vec2 coord ) {\",\n\n\t\t\t\t\"float cameraFarPlusNear = cameraFar + cameraNear;\",\n\t\t\t\t\"float cameraFarMinusNear = cameraFar - cameraNear;\",\n\t\t\t\t\"float cameraCoef = 2.0 * cameraNear;\",\n\n\t\t\t\t// \"return ( 2.0 * cameraNear ) / ( cameraFar + cameraNear - unpackDepth( texture2D( tDepth, coord ) ) * ( cameraFar - cameraNear ) );\",\n\t\t\t\t\"return cameraCoef / ( cameraFarPlusNear - unpackDepth( texture2D( tDepth, coord ) ) * cameraFarMinusNear );\",\n\n\n\t\t\t\"}\",\n\n\t\t\t\"float compareDepths( const in float depth1, const in float depth2, inout int far ) {\",\n\n\t\t\t\t\"float garea = 2.0;\",                         // gauss bell width\n\t\t\t\t\"float diff = ( depth1 - depth2 ) * 100.0;\",  // depth difference (0-100)\n\n\t\t\t\t// reduce left bell width to avoid self-shadowing\n\n\t\t\t\t\"if ( diff < gDisplace ) {\",\n\n\t\t\t\t\t\"garea = diffArea;\",\n\n\t\t\t\t\"} else {\",\n\n\t\t\t\t\t\"far = 1;\",\n\n\t\t\t\t\"}\",\n\n\t\t\t\t\"float dd = diff - gDisplace;\",\n\t\t\t\t\"float gauss = pow( EULER, -2.0 * dd * dd / ( garea * garea ) );\",\n\t\t\t\t\"return gauss;\",\n\n\t\t\t\"}\",\n\n\t\t\t\"float calcAO( float depth, float dw, float dh ) {\",\n\n\t\t\t\t\"float dd = radius - depth * radius;\",\n\t\t\t\t\"vec2 vv = vec2( dw, dh );\",\n\n\t\t\t\t\"vec2 coord1 = vUv + dd * vv;\",\n\t\t\t\t\"vec2 coord2 = vUv - dd * vv;\",\n\n\t\t\t\t\"float temp1 = 0.0;\",\n\t\t\t\t\"float temp2 = 0.0;\",\n\n\t\t\t\t\"int far = 0;\",\n\t\t\t\t\"temp1 = compareDepths( depth, readDepth( coord1 ), far );\",\n\n\t\t\t\t// DEPTH EXTRAPOLATION\n\n\t\t\t\t\"if ( far > 0 ) {\",\n\n\t\t\t\t\t\"temp2 = compareDepths( readDepth( coord2 ), depth, far );\",\n\t\t\t\t\t\"temp1 += ( 1.0 - temp1 ) * temp2;\",\n\n\t\t\t\t\"}\",\n\n\t\t\t\t\"return temp1;\",\n\n\t\t\t\"}\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vec2 noise = rand( vUv );\",\n\t\t\t\t\"float depth = readDepth( vUv );\",\n\n\t\t\t\t\"float tt = clamp( depth, aoClamp, 1.0 );\",\n\n\t\t\t\t\"float w = ( 1.0 / size.x )  / tt + ( noise.x * ( 1.0 - noise.x ) );\",\n\t\t\t\t\"float h = ( 1.0 / size.y ) / tt + ( noise.y * ( 1.0 - noise.y ) );\",\n\n\t\t\t\t\"float ao = 0.0;\",\n\n\t\t\t\t\"float dz = 1.0 / float( samples );\",\n\t\t\t\t\"float z = 1.0 - dz / 2.0;\",\n\t\t\t\t\"float l = 0.0;\",\n\n\t\t\t\t\"for ( int i = 0; i <= samples; i ++ ) {\",\n\n\t\t\t\t\t\"float r = sqrt( 1.0 - z );\",\n\n\t\t\t\t\t\"float pw = cos( l ) * r;\",\n\t\t\t\t\t\"float ph = sin( l ) * r;\",\n\t\t\t\t\t\"ao += calcAO( depth, pw * w, ph * h );\",\n\t\t\t\t\t\"z = z - dz;\",\n\t\t\t\t\t\"l = l + DL;\",\n\n\t\t\t\t\"}\",\n\n\t\t\t\t\"ao /= float( samples );\",\n\t\t\t\t\"ao = 1.0 - ao;\",\n\n\t\t\t\t\"vec3 color = texture2D( tDiffuse, vUv ).rgb;\",\n\n\t\t\t\t\"vec3 lumcoeff = vec3( 0.299, 0.587, 0.114 );\",\n\t\t\t\t\"float lum = dot( color.rgb, lumcoeff );\",\n\t\t\t\t\"vec3 luminance = vec3( lum );\",\n\n\t\t\t\t\"vec3 final = vec3( color * mix( vec3( ao ), vec3( 1.0 ), luminance * lumInfluence ) );\",  // mix( color * ao, white, luminance )\n\n\t\t\t\t\"if ( onlyAO ) {\",\n\n\t\t\t\t\t\"final = vec3( mix( vec3( ao ), vec3( 1.0 ), luminance * lumInfluence ) );\",  // ambient occlusion only\n\n\t\t\t\t\"}\",\n\n\t\t\t\t\"gl_FragColor = vec4( final, 1.0 );\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" )\n\n\t};\n\n}\n","module.exports = function( THREE ){\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author zz85 / http://joshuakoo.com/\n\t */\n\n\tTHREE.SVGLoader = function ( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n\t};\n\n\tTHREE.SVGLoader.prototype = {\n\n\t\tconstructor: THREE.SVGLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar parser = new DOMParser();\n\n\t\t\tvar loader = new THREE.XHRLoader( scope.manager );\n\t\t\tloader.load( url, function ( svgString ) {\n\n\t\t\t\tvar doc = parser.parseFromString( svgString, 'image/svg+xml' );  // application/xml\n\n\t\t\t\tonLoad( doc.documentElement );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t};\n\n};","module.exports = function( THREE ){\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tTHREE.SavePass = function ( renderTarget ) {\n\n\t\tif ( THREE.CopyShader === undefined )\n\t\t\tconsole.error( \"THREE.SavePass relies on THREE.CopyShader\" );\n\n\t\tvar shader = THREE.CopyShader;\n\n\t\tthis.textureID = \"tDiffuse\";\n\n\t\tthis.uniforms = THREE.UniformsUtils.clone( shader.uniforms );\n\n\t\tthis.material = new THREE.ShaderMaterial( {\n\n\t\t\tuniforms: this.uniforms,\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader\n\n\t\t} );\n\n\t\tthis.renderTarget = renderTarget;\n\n\t\tif ( this.renderTarget === undefined ) {\n\n\t\t\tthis.renderTargetParameters = { minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBFormat, stencilBuffer: false };\n\t\t\tthis.renderTarget = new THREE.WebGLRenderTarget( window.innerWidth, window.innerHeight, this.renderTargetParameters );\n\n\t\t}\n\n\t\tthis.enabled = true;\n\t\tthis.needsSwap = false;\n\t\tthis.clear = false;\n\n\n\t\tthis.camera = new THREE.OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\t\tthis.scene  = new THREE.Scene();\n\n\t\tthis.quad = new THREE.Mesh( new THREE.PlaneBufferGeometry( 2, 2 ), null );\n\t\tthis.scene.add( this.quad );\n\n\t};\n\n\tTHREE.SavePass.prototype = {\n\n\t\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\n\n\t\t\tif ( this.uniforms[ this.textureID ] ) {\n\n\t\t\t\tthis.uniforms[ this.textureID ].value = readBuffer;\n\n\t\t\t}\n\n\t\t\tthis.quad.material = this.material;\n\n\t\t\trenderer.render( this.scene, this.camera, this.renderTarget, this.clear );\n\n\t\t}\n\n\t};\n\n};\n","module.exports = function( THREE ){\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * Sepia tone shader\n\t * based on glfx.js sepia shader\n\t * https://github.com/evanw/glfx.js\n\t */\n\n\tTHREE.SepiaShader = {\n\n\t\tuniforms: {\n\n\t\t\t\"tDiffuse\": { type: \"t\", value: null },\n\t\t\t\"amount\":   { type: \"f\", value: 1.0 }\n\n\t\t},\n\n\t\tvertexShader: [\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vUv = uv;\",\n\t\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" ),\n\n\t\tfragmentShader: [\n\n\t\t\t\"uniform float amount;\",\n\n\t\t\t\"uniform sampler2D tDiffuse;\",\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vec4 color = texture2D( tDiffuse, vUv );\",\n\t\t\t\t\"vec3 c = color.rgb;\",\n\n\t\t\t\t\"color.r = dot( c, vec3( 1.0 - 0.607 * amount, 0.769 * amount, 0.189 * amount ) );\",\n\t\t\t\t\"color.g = dot( c, vec3( 0.349 * amount, 1.0 - 0.314 * amount, 0.168 * amount ) );\",\n\t\t\t\t\"color.b = dot( c, vec3( 0.272 * amount, 0.534 * amount, 1.0 - 0.869 * amount ) );\",\n\n\t\t\t\t\"gl_FragColor = vec4( min( vec3( 1.0 ), color.rgb ), color.a );\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" )\n\n\t};\n\n}\n","module.exports = function( THREE ){\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tTHREE.ShaderPass = function ( shader, textureID ) {\n\n\t\tthis.textureID = ( textureID !== undefined ) ? textureID : \"tDiffuse\";\n\n\t\tthis.uniforms = THREE.UniformsUtils.clone( shader.uniforms );\n\n\t\tthis.material = new THREE.ShaderMaterial( {\n\n\t\t\tdefines: shader.defines || {},\n\t\t\tuniforms: this.uniforms,\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader\n\n\t\t} );\n\n\t\tthis.renderToScreen = false;\n\n\t\tthis.enabled = true;\n\t\tthis.needsSwap = true;\n\t\tthis.clear = false;\n\n\n\t\tthis.camera = new THREE.OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\t\tthis.scene  = new THREE.Scene();\n\n\t\tthis.quad = new THREE.Mesh( new THREE.PlaneBufferGeometry( 2, 2 ), null );\n\t\tthis.scene.add( this.quad );\n\n\t};\n\n\tTHREE.ShaderPass.prototype = {\n\n\t\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\n\n\t\t\tif ( this.uniforms[ this.textureID ] ) {\n\n\t\t\t\tthis.uniforms[ this.textureID ].value = readBuffer;\n\n\t\t\t}\n\n\t\t\tthis.quad.material = this.material;\n\n\t\t\tif ( this.renderToScreen ) {\n\n\t\t\t\trenderer.render( this.scene, this.camera );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.render( this.scene, this.camera, writeBuffer, this.clear );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n};\n","module.exports = function( THREE ){\n\t/**\n\t * @author flimshaw / http://charliehoey.com\n\t *\n\t * Technicolor Shader\n\t * Simulates the look of the two-strip technicolor process popular in early 20th century films.\n\t * More historical info here: http://www.widescreenmuseum.com/oldcolor/technicolor1.htm\n\t * Demo here: http://charliehoey.com/technicolor_shader/shader_test.html\n\t */\n\n\tTHREE.TechnicolorShader = {\n\n\t\tuniforms: {\n\n\t\t\t\"tDiffuse\": { type: \"t\", value: null },\n\n\t\t},\n\n\t\tvertexShader: [\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vUv = uv;\",\n\t\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" ),\n\n\t\tfragmentShader: [\n\n\t\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vec4 tex = texture2D( tDiffuse, vec2( vUv.x, vUv.y ) );\",\n\t\t\t\t\"vec4 newTex = vec4(tex.r, (tex.g + tex.b) * .5, (tex.g + tex.b) * .5, 1.0);\",\n\n\t\t\t\t\"gl_FragColor = newTex;\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" )\n\n\t};\n\n}\n","module.exports = function( THREE ){\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tTHREE.TexturePass = function ( texture, opacity ) {\n\n\t\tif ( THREE.CopyShader === undefined )\n\t\t\tconsole.error( \"THREE.TexturePass relies on THREE.CopyShader\" );\n\n\t\tvar shader = THREE.CopyShader;\n\n\t\tthis.uniforms = THREE.UniformsUtils.clone( shader.uniforms );\n\n\t\tthis.uniforms[ \"opacity\" ].value = ( opacity !== undefined ) ? opacity : 1.0;\n\t\tthis.uniforms[ \"tDiffuse\" ].value = texture;\n\n\t\tthis.material = new THREE.ShaderMaterial( {\n\n\t\t\tuniforms: this.uniforms,\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader\n\n\t\t} );\n\n\t\tthis.enabled = true;\n\t\tthis.needsSwap = false;\n\n\n\t\tthis.camera = new THREE.OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\t\tthis.scene  = new THREE.Scene();\n\n\t\tthis.quad = new THREE.Mesh( new THREE.PlaneBufferGeometry( 2, 2 ), null );\n\t\tthis.scene.add( this.quad );\n\n\t};\n\n\tTHREE.TexturePass.prototype = {\n\n\t\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\n\n\t\t\tthis.quad.material = this.material;\n\n\t\t\trenderer.render( this.scene, this.camera, readBuffer );\n\n\t\t}\n\n\t};\n\n};","module.exports = function( THREE ){\n\t/**\n\t * @author miibond\n\t *\n\t * Full-screen tone-mapping shader based on http://www.graphics.cornell.edu/~jaf/publications/sig02_paper.pdf\n\t */\n\n\tTHREE.ToneMapShader = {\n\n\t\tuniforms: {\n\n\t\t\t\"tDiffuse\": { type: \"t\", value: null },\n\t\t\t\"averageLuminance\":  { type: \"f\", value: 1.0 },\n\t\t\t\"luminanceMap\":  { type: \"t\", value: null },\n\t\t\t\"maxLuminance\":  { type: \"f\", value: 16.0 },\n\t\t\t\"middleGrey\":  { type: \"f\", value: 0.6 }\n\t\t},\n\n\t\tvertexShader: [\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vUv = uv;\",\n\t\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" ),\n\n\t\tfragmentShader: [\n\n\t\t\t\"uniform sampler2D tDiffuse;\",\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"uniform float middleGrey;\",\n\t\t\t\"uniform float maxLuminance;\",\n\t\t\t\"#ifdef ADAPTED_LUMINANCE\",\n\t\t\t\t\"uniform sampler2D luminanceMap;\",\n\t\t\t\"#else\",\n\t\t\t\t\"uniform float averageLuminance;\",\n\t\t\t\"#endif\",\n\t\t\t\n\t\t\t\"const vec3 LUM_CONVERT = vec3(0.299, 0.587, 0.114);\",\n\n\t\t\t\"vec3 ToneMap( vec3 vColor ) {\",\n\t\t\t\t\"#ifdef ADAPTED_LUMINANCE\",\n\t\t\t\t\t// Get the calculated average luminance \n\t\t\t\t\t\"float fLumAvg = texture2D(luminanceMap, vec2(0.5, 0.5)).r;\",\n\t\t\t\t\"#else\",\n\t\t\t\t\t\"float fLumAvg = averageLuminance;\",\n\t\t\t\t\"#endif\",\n\t\t\t\t\n\t\t\t\t// Calculate the luminance of the current pixel\n\t\t\t\t\"float fLumPixel = dot(vColor, LUM_CONVERT);\",\n\n\t\t\t\t// Apply the modified operator (Eq. 4)\n\t\t\t\t\"float fLumScaled = (fLumPixel * middleGrey) / fLumAvg;\",\n\n\t\t\t\t\"float fLumCompressed = (fLumScaled * (1.0 + (fLumScaled / (maxLuminance * maxLuminance)))) / (1.0 + fLumScaled);\",\n\t\t\t\t\"return fLumCompressed * vColor;\",\n\t\t\t\"}\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vec4 texel = texture2D( tDiffuse, vUv );\",\n\t\t\t\t\n\t\t\t\t\"gl_FragColor = vec4( ToneMap( texel.xyz ), texel.w );\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" )\n\n\t};\n\n}\n","module.exports = function( THREE ){\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t *\n\t * Triangle blur shader\n\t * based on glfx.js triangle blur shader\n\t * https://github.com/evanw/glfx.js\n\t *\n\t * A basic blur filter, which convolves the image with a\n\t * pyramid filter. The pyramid filter is separable and is applied as two\n\t * perpendicular triangle filters.\n\t */\n\n\tTHREE.TriangleBlurShader = {\n\n\t\tuniforms : {\n\n\t\t\t\"texture\": { type: \"t\", value: null },\n\t\t\t\"delta\":   { type: \"v2\", value: new THREE.Vector2( 1, 1 ) }\n\n\t\t},\n\n\t\tvertexShader: [\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vUv = uv;\",\n\t\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" ),\n\n\t\tfragmentShader: [\n\n\t\t\t\"#define ITERATIONS 10.0\",\n\n\t\t\t\"uniform sampler2D texture;\",\n\t\t\t\"uniform vec2 delta;\",\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"float random( vec3 scale, float seed ) {\",\n\n\t\t\t\t// use the fragment position for a different seed per-pixel\n\n\t\t\t\t\"return fract( sin( dot( gl_FragCoord.xyz + seed, scale ) ) * 43758.5453 + seed );\",\n\n\t\t\t\"}\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vec4 color = vec4( 0.0 );\",\n\n\t\t\t\t\"float total = 0.0;\",\n\n\t\t\t\t// randomize the lookup values to hide the fixed number of samples\n\n\t\t\t\t\"float offset = random( vec3( 12.9898, 78.233, 151.7182 ), 0.0 );\",\n\n\t\t\t\t\"for ( float t = -ITERATIONS; t <= ITERATIONS; t ++ ) {\",\n\n\t\t\t\t\t\"float percent = ( t + offset - 0.5 ) / ITERATIONS;\",\n\t\t\t\t\t\"float weight = 1.0 - abs( percent );\",\n\n\t\t\t\t\t\"color += texture2D( texture, vUv + delta * percent ) * weight;\",\n\t\t\t\t\t\"total += weight;\",\n\n\t\t\t\t\"}\",\n\n\t\t\t\t\"gl_FragColor = color / total;\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" )\n\n\t};\n\n}\n","module.exports = function( THREE ){\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * Unpack RGBA depth shader\n\t * - show RGBA encoded depth as monochrome color\n\t */\n\n\tTHREE.UnpackDepthRGBAShader = {\n\n\t\tuniforms: {\n\n\t\t\t\"tDiffuse\": { type: \"t\", value: null },\n\t\t\t\"opacity\":  { type: \"f\", value: 1.0 }\n\n\t\t},\n\n\t\tvertexShader: [\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vUv = uv;\",\n\t\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" ),\n\n\t\tfragmentShader: [\n\n\t\t\t\"uniform float opacity;\",\n\n\t\t\t\"uniform sampler2D tDiffuse;\",\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t// RGBA depth\n\n\t\t\t\"float unpackDepth( const in vec4 rgba_depth ) {\",\n\n\t\t\t\t\"const vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\",\n\t\t\t\t\"float depth = dot( rgba_depth, bit_shift );\",\n\t\t\t\t\"return depth;\",\n\n\t\t\t\"}\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"float depth = 1.0 - unpackDepth( texture2D( tDiffuse, vUv ) );\",\n\t\t\t\t\"gl_FragColor = opacity * vec4( vec3( depth ), 1.0 );\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" )\n\n\t};\n\n}\n","module.exports = function( THREE ){\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t *\n\t * Two pass Gaussian blur filter (horizontal and vertical blur shaders)\n\t * - described in http://www.gamerendering.com/2008/10/11/gaussian-blur-filter-shader/\n\t *   and used in http://www.cake23.de/traveling-wavefronts-lit-up.html\n\t *\n\t * - 9 samples per pass\n\t * - standard deviation 2.7\n\t * - \"h\" and \"v\" parameters should be set to \"1 / width\" and \"1 / height\"\n\t */\n\n\tTHREE.VerticalBlurShader = {\n\n\t\tuniforms: {\n\n\t\t\t\"tDiffuse\": { type: \"t\", value: null },\n\t\t\t\"v\":        { type: \"f\", value: 1.0 / 512.0 }\n\n\t\t},\n\n\t\tvertexShader: [\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vUv = uv;\",\n\t\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" ),\n\n\t\tfragmentShader: [\n\n\t\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\t\"uniform float v;\",\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vec4 sum = vec4( 0.0 );\",\n\n\t\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * v ) ) * 0.051;\",\n\t\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * v ) ) * 0.0918;\",\n\t\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * v ) ) * 0.12245;\",\n\t\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * v ) ) * 0.1531;\",\n\t\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;\",\n\t\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * v ) ) * 0.1531;\",\n\t\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * v ) ) * 0.12245;\",\n\t\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * v ) ) * 0.0918;\",\n\t\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * v ) ) * 0.051;\",\n\n\t\t\t\t\"gl_FragColor = sum;\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" )\n\n\t};\n\n}\n","module.exports = function( THREE ){\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * Simple fake tilt-shift effect, modulating two pass Gaussian blur (see above) by vertical position\n\t *\n\t * - 9 samples per pass\n\t * - standard deviation 2.7\n\t * - \"h\" and \"v\" parameters should be set to \"1 / width\" and \"1 / height\"\n\t * - \"r\" parameter control where \"focused\" horizontal line lies\n\t */\n\n\tTHREE.VerticalTiltShiftShader = {\n\n\t\tuniforms: {\n\n\t\t\t\"tDiffuse\": { type: \"t\", value: null },\n\t\t\t\"v\":        { type: \"f\", value: 1.0 / 512.0 },\n\t\t\t\"r\":        { type: \"f\", value: 0.35 }\n\n\t\t},\n\n\t\tvertexShader: [\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vUv = uv;\",\n\t\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" ),\n\n\t\tfragmentShader: [\n\n\t\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\t\"uniform float v;\",\n\t\t\t\"uniform float r;\",\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vec4 sum = vec4( 0.0 );\",\n\n\t\t\t\t\"float vv = v * abs( r - vUv.y );\",\n\n\t\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * vv ) ) * 0.051;\",\n\t\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * vv ) ) * 0.0918;\",\n\t\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * vv ) ) * 0.12245;\",\n\t\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * vv ) ) * 0.1531;\",\n\t\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;\",\n\t\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * vv ) ) * 0.1531;\",\n\t\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * vv ) ) * 0.12245;\",\n\t\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * vv ) ) * 0.0918;\",\n\t\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * vv ) ) * 0.051;\",\n\n\t\t\t\t\"gl_FragColor = sum;\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" )\n\n\t};\n\n}\n","module.exports = function( THREE ){\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * Vignette shader\n\t * based on PaintEffect postprocess from ro.me\n\t * http://code.google.com/p/3-dreams-of-black/source/browse/deploy/js/effects/PaintEffect.js\n\t */\n\n\tTHREE.VignetteShader = {\n\n\t\tuniforms: {\n\n\t\t\t\"tDiffuse\": { type: \"t\", value: null },\n\t\t\t\"offset\":   { type: \"f\", value: 1.0 },\n\t\t\t\"darkness\": { type: \"f\", value: 1.0 }\n\n\t\t},\n\n\t\tvertexShader: [\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vUv = uv;\",\n\t\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" ),\n\n\t\tfragmentShader: [\n\n\t\t\t\"uniform float offset;\",\n\t\t\t\"uniform float darkness;\",\n\n\t\t\t\"uniform sampler2D tDiffuse;\",\n\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t// Eskil's vignette\n\n\t\t\t\t\"vec4 texel = texture2D( tDiffuse, vUv );\",\n\t\t\t\t\"vec2 uv = ( vUv - vec2( 0.5 ) ) * vec2( offset );\",\n\t\t\t\t\"gl_FragColor = vec4( mix( texel.rgb, vec3( 1.0 - darkness ), dot( uv, uv ) ), texel.a );\",\n\n\t\t\t\t/*\n\t\t\t\t// alternative version from glfx.js\n\t\t\t\t// this one makes more \"dusty\" look (as opposed to \"burned\")\n\n\t\t\t\t\"vec4 color = texture2D( tDiffuse, vUv );\",\n\t\t\t\t\"float dist = distance( vUv, vec2( 0.5 ) );\",\n\t\t\t\t\"color.rgb *= smoothstep( 0.8, offset * 0.799, dist *( darkness + offset ) );\",\n\t\t\t\t\"gl_FragColor = color;\",\n\t\t\t\t*/\n\n\t\t\t\"}\"\n\n\t\t].join( \"\\n\" )\n\n\t};\n\n}\n","var arrayPush = require('./_arrayPush'),\n    isFlattenable = require('./_isFlattenable');\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n","var Symbol = require('./_Symbol'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray');\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nmodule.exports = isFlattenable;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var arrayMap = require('./_arrayMap'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    baseSortBy = require('./_baseSortBy'),\n    baseUnary = require('./_baseUnary'),\n    compareMultiple = require('./_compareMultiple'),\n    identity = require('./identity');\n\n/**\n * The base implementation of `_.orderBy` without param guards.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n * @param {string[]} orders The sort orders of `iteratees`.\n * @returns {Array} Returns the new sorted array.\n */\nfunction baseOrderBy(collection, iteratees, orders) {\n  var index = -1;\n  iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(baseIteratee));\n\n  var result = baseMap(collection, function(value, key, collection) {\n    var criteria = arrayMap(iteratees, function(iteratee) {\n      return iteratee(value);\n    });\n    return { 'criteria': criteria, 'index': ++index, 'value': value };\n  });\n\n  return baseSortBy(result, function(object, other) {\n    return compareMultiple(object, other, orders);\n  });\n}\n\nmodule.exports = baseOrderBy;\n","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\nmodule.exports = baseIteratee;\n","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;\n","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nmodule.exports = baseIsMatch;\n","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nmodule.exports = listCacheSet;\n","var ListCache = require('./_ListCache');\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nmodule.exports = stackClear;\n","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;\n","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;\n","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;\n","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;\n","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n","var coreJsData = require('./_coreJsData');\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n","var root = require('./_root');\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nmodule.exports = mapCacheClear;\n","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nmodule.exports = Hash;\n","var nativeCreate = require('./_nativeCreate');\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;\n","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;\n","var getMapData = require('./_getMapData');\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;\n","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nmodule.exports = isKeyable;\n","var getMapData = require('./_getMapData');\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;\n","var getMapData = require('./_getMapData');\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;\n","var getMapData = require('./_getMapData');\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;\n","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;\n","var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nmodule.exports = SetCache;\n","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nmodule.exports = setCacheAdd;\n","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;\n","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arraySome;\n","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;\n","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\nmodule.exports = equalByTag;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nmodule.exports = Uint8Array;\n","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;\n","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;\n","var getAllKeys = require('./_getAllKeys');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;\n","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;\n","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nmodule.exports = getSymbols;\n","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayFilter;\n","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;\n","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeys;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n","var overArg = require('./_overArg');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nmodule.exports = getTag;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nmodule.exports = DataView;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nmodule.exports = Promise;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nmodule.exports = Set;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nmodule.exports = WeakMap;\n","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\nmodule.exports = getMatchData;\n","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;\n","var baseGet = require('./_baseGet');\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n","var memoizeCapped = require('./_memoizeCapped');\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nmodule.exports = stringToPath;\n","var memoize = require('./memoize');\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;\n","var MapCache = require('./_MapCache');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nmodule.exports = memoize;\n","var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;\n","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;\n","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result || ++index != length) {\n    return result;\n  }\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;\n","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;\n","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;\n","var baseGet = require('./_baseGet');\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;\n","var baseEach = require('./_baseEach'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nmodule.exports = baseMap;\n","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\nmodule.exports = baseEach;\n","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n","var createBaseFor = require('./_createBaseFor');\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n","var isArrayLike = require('./isArrayLike');\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;\n","/**\n * The base implementation of `_.sortBy` which uses `comparer` to define the\n * sort order of `array` and replaces criteria objects with their corresponding\n * values.\n *\n * @private\n * @param {Array} array The array to sort.\n * @param {Function} comparer The function to define sort order.\n * @returns {Array} Returns `array`.\n */\nfunction baseSortBy(array, comparer) {\n  var length = array.length;\n\n  array.sort(comparer);\n  while (length--) {\n    array[length] = array[length].value;\n  }\n  return array;\n}\n\nmodule.exports = baseSortBy;\n","var compareAscending = require('./_compareAscending');\n\n/**\n * Used by `_.orderBy` to compare multiple properties of a value to another\n * and stable sort them.\n *\n * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n * of corresponding values.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {boolean[]|string[]} orders The order to sort by for each property.\n * @returns {number} Returns the sort order indicator for `object`.\n */\nfunction compareMultiple(object, other, orders) {\n  var index = -1,\n      objCriteria = object.criteria,\n      othCriteria = other.criteria,\n      length = objCriteria.length,\n      ordersLength = orders.length;\n\n  while (++index < length) {\n    var result = compareAscending(objCriteria[index], othCriteria[index]);\n    if (result) {\n      if (index >= ordersLength) {\n        return result;\n      }\n      var order = orders[index];\n      return result * (order == 'desc' ? -1 : 1);\n    }\n  }\n  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n  // that causes it, under certain circumstances, to provide the same value for\n  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n  // for more details.\n  //\n  // This also ensures a stable sort in V8 and other engines.\n  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n  return object.index - other.index;\n}\n\nmodule.exports = compareMultiple;\n","var isSymbol = require('./isSymbol');\n\n/**\n * Compares values to sort them in ascending order.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {number} Returns the sort order indicator for `value`.\n */\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined,\n        valIsNull = value === null,\n        valIsReflexive = value === value,\n        valIsSymbol = isSymbol(value);\n\n    var othIsDefined = other !== undefined,\n        othIsNull = other === null,\n        othIsReflexive = other === other,\n        othIsSymbol = isSymbol(other);\n\n    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n        (valIsNull && othIsDefined && othIsReflexive) ||\n        (!valIsDefined && othIsReflexive) ||\n        !valIsReflexive) {\n      return 1;\n    }\n    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n        (othIsNull && valIsDefined && valIsReflexive) ||\n        (!othIsDefined && valIsReflexive) ||\n        !othIsReflexive) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\nmodule.exports = compareAscending;\n","var identity = require('./identity'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nmodule.exports = baseRest;\n","var apply = require('./_apply');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nmodule.exports = overRest;\n","/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nmodule.exports = apply;\n","var baseSetToString = require('./_baseSetToString'),\n    shortOut = require('./_shortOut');\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nmodule.exports = setToString;\n","var constant = require('./constant'),\n    defineProperty = require('./_defineProperty'),\n    identity = require('./identity');\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nmodule.exports = baseSetToString;\n","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nmodule.exports = constant;\n","var getNative = require('./_getNative');\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nmodule.exports = defineProperty;\n","/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nmodule.exports = shortOut;\n","var eq = require('./eq'),\n    isArrayLike = require('./isArrayLike'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject');\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n"],"sourceRoot":""}