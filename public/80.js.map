{"version":3,"sources":["webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.ViewerProperties/index.js","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.ViewerProperties/Viewing.Extension.ViewerProperties.js","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.ViewerProperties/Viewing.Extension.ViewerProperties.Panel.js","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.ViewerProperties/Viewing.Extension.ViewerProperties.scss?0f88","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.ViewerProperties/Viewing.Extension.ViewerProperties.scss","webpack:///./src/client/components/Viewer/Extensions/Viewer.MultiModelExtensionBase/index.js","webpack:///./src/client/components/Viewer/Extensions/Viewer.MultiModelExtensionBase/Viewer.MultiModelExtensionBase.js","webpack:///./node_modules/@babel/runtime/helpers/get.js","webpack:///./node_modules/@babel/runtime/helpers/superPropBase.js"],"names":["__webpack_require__","r","__webpack_exports__","ViewerPropertiesExtension","viewer","options","_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default","this","_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default","_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default","call","console","log","panel","off","_this","ViewerPropertyPanel","on","data","emit","setPropertyPanel","properties","_this2","length","$","container","remove","forEach","property","addProperty","resizeToContent","_this3","updateProperty","MultiModelExtensionBase","Autodesk","Viewing","theExtensionManager","registerExtension","ExtensionId","ViewerPropertiesPanel","arguments","undefined","nodeId","_babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_4___default","prototype","setVisible","removeAllProperties","withoutCategories","withCategories","i","hidden","category","displayCategory","push","precision","Private","calculatePrecision","displayValue","formatValueWithUnits","units","type","__addProperty","Object","assign","hasCategories","opts","localizeCategory","showNoProperties","then","__setProperties","metaProperty","tree","getElementForNode","value","name","displayName","parent","createElement_","myRootContainer","localize","localizeProperty","dataType","id","text","displayOptions","document","createElement","setAttribute","i18n","translate","className","textContent","title","separator","propertyName","createPropertyName","createPropertySeparator","propertyValue","createLinkProperty","createImageProperty","createFileProperty","createSelectProperty","createTextProperty","appendChild","guid","values","e","option","onchange","append","concat","href","imgId","height","event","window","open","downloadURI","filename","uri","link","download","click","format","d","Date","getTime","replace","c","Math","random","floor","toString","EventsEmitter","Composer","Extensions","content","module","locals","exports","_Viewer_MultiModelExtensionBase__WEBPACK_IMPORTED_MODULE_0__","defaultOptions","_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default","_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default","_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5___default","serviceContext","onModelCompletedLoad","bind","onObjectTreeCreated","onModelRootLoaded","onExtensionLoaded","onModelActivated","onGeometryLoaded","onToolbarCreated","onModelBeginLoad","onModelUnloaded","onSelection","__onModelRootLoaded","__onModelActivated","__onModelUnloaded","__onModelLoaded","models","impl","modelQueue","getModels","map","model","initializeEvents","viewerEvents","removeEventListener","handler","eventSink","viewerEvent","OBJECT_TREE_CREATED_EVENT","GEOMETRY_LOADED_EVENT","args","_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default","filter","_this4","EXTENSION_LOADED_EVENT","MODEL_ROOT_LOADED_EVENT","TOOLBAR_CREATED_EVENT","AGGREGATE_SELECTION_CHANGED_EVENT","eventId","_this5","eventTasks","Array","isArray","Promise","resolve","addEventListener","__handler","all","Extension","superPropBase","_get","target","receiver","Reflect","get","base","desc","getOwnPropertyDescriptor","getPrototypeOf","object","hasOwnProperty"],"mappings":"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","file":"80.js","sourcesContent":["import './Viewing.Extension.ViewerProperties'\n\nexport default 'Viewing.Extension.ViewerProperties'\n","/////////////////////////////////////////////////////////////////////\n// Viewing.Extension.ViewerPropertiesExtension\n// by Philippe Leefsma, September 2016\n//\n/////////////////////////////////////////////////////////////////////\nimport ViewerPropertyPanel from './Viewing.Extension.ViewerProperties.Panel'\nimport MultiModelExtensionBase from 'Viewer.MultiModelExtensionBase'\nimport ViewerToolkit from 'Viewer.Toolkit'\nimport './Viewing.Extension.ViewerProperties.scss'\n\nclass ViewerPropertiesExtension extends MultiModelExtensionBase {\n\n  /////////////////////////////////////////////////////////\n  // Class constructor\n  //\n  /////////////////////////////////////////////////////////\n  constructor (viewer, options) {\n\n    super (viewer, options)\n  }\n\n  /////////////////////////////////////////////////////////\n  // Extension Id\n  //\n  /////////////////////////////////////////////////////////\n  static get ExtensionId() {\n\n    return 'Viewing.Extension.ViewerProperties'\n  }\n\n  /////////////////////////////////////////////////////////\n  // Load callback\n  //\n  /////////////////////////////////////////////////////////\n  load() {\n\n    console.log('Viewing.Extension.ViewerProperties loaded')\n\n    return true;\n  }\n\n  /////////////////////////////////////////////////////////\n  // Unload callback\n  //\n  /////////////////////////////////////////////////////////\n  unload() {\n\n    console.log('Viewing.Extension.ViewerProperties unloaded')\n\n    this.panel.off()\n\n    this.off()\n\n    return true\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  onModelRootLoaded() {\n\n    this.panel = new ViewerPropertyPanel(\n      this.viewer, this.options)\n\n    this.panel.on('setProperties', (data) => {\n\n      return this.emit('setProperties', data)\n    })\n\n    this.viewer.setPropertyPanel(this.panel)\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  addProperties (properties) {\n\n    //suppress \"no properties\" in panel\n    if(properties.length) {\n\n      $('div.noProperties', this.panel.container).remove()\n    }\n\n    properties.forEach((property) => {\n\n      this.panel.addProperty(property)\n    })\n\n    this.panel.resizeToContent()\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  updateProperties (properties) {\n\n    properties.forEach((property) => {\n\n      this.panel.updateProperty(property)\n    })\n\n    return true\n  }\n}\n\nAutodesk.Viewing.theExtensionManager.registerExtension(\n  ViewerPropertiesExtension.ExtensionId,\n  ViewerPropertiesExtension)\n","///////////////////////////////////////////////////////////////////////////////\n// Copyright (c) Autodesk, Inc. All rights reserved\n// Written by Philippe Leefsma 2016 - ADN/Developer Technical Services\n//\n// Permission to use, copy, modify, and distribute this software in\n// object code form for any purpose and without fee is hereby granted,\n// provided that the above copyright notice appears in all copies and\n// that both that copyright notice and the limited warranty and\n// restricted rights notice below appear in all supporting\n// documentation.\n//\n// AUTODESK PROVIDES THIS PROGRAM \"AS IS\" AND WITH ALL FAULTS.\n// AUTODESK SPECIFICALLY DISCLAIMS ANY IMPLIED WARRANTY OF\n// MERCHANTABILITY OR FITNESS FOR A PARTICULAR USE.  AUTODESK, INC.\n// DOES NOT WARRANT THAT THE OPERATION OF THE PROGRAM WILL BE\n// UNINTERRUPTED OR ERROR FREE.\n///////////////////////////////////////////////////////////////////////////////\nimport EventsEmitter from 'EventsEmitter'\n\n///////////////////////////////////////////////////////////\n//\n//\n///////////////////////////////////////////////////////////\nexport default class ViewerPropertiesPanel extends\n    EventsEmitter.Composer (Autodesk.Viewing.Extensions.ViewerPropertyPanel) {\n\n  constructor (viewer, opts = {}) {\n\n    super (viewer)\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  setNodeProperties (nodeId) {\n\n    super.setNodeProperties(nodeId)\n\n    this.nodeId = nodeId\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  refresh () {\n\n    this.setVisible(false, true)\n    this.setVisible(true, true)\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  __setProperties (properties, options) {\n\n    this.removeAllProperties()\n\n    const withoutCategories = []\n    const withCategories = []\n\n    for (var i = 0; i < properties.length; i++) {\n        var property = properties[i]\n        if (!property.hidden) {\n            var category = properties[i].displayCategory;\n            if (category && typeof category === 'string' && category !== '') {\n                withCategories.push(property)\n            } else {\n                withoutCategories.push(property)\n            }\n        }\n    }\n\n    if ((withCategories.length + withoutCategories.length) === 0) {\n        this.showNoProperties()\n        return\n    }\n\n    for (var i = 0; i < withCategories.length; i++) {\n\n      const property = withCategories[i]\n\n      const precision = property.precision || Autodesk.Viewing.Private.calculatePrecision(\n          property.displayValue)\n\n      const displayValue = Autodesk.Viewing.Private.formatValueWithUnits(\n          property.displayValue,\n          property.units,\n          property.type,\n          precision)\n\n      this.__addProperty(Object.assign({}, property, {\n        displayValue\n      }))\n    }\n\n    const hasCategories = (withCategories.length > 0);\n\n    for (var i = 0; i < withoutCategories.length; i++) {\n\n      const property = withoutCategories[i]\n\n      const precision = property.precision || Autodesk.Viewing.Private.calculatePrecision(\n        property.displayValue)\n\n      const displayValue = Autodesk.Viewing.Private.formatValueWithUnits(\n        property.displayValue,\n        property.units,\n        property.type,\n        precision)\n\n      const displayCategory = hasCategories\n        ? 'Other'\n        : ''\n\n      const opts = hasCategories\n        ? {localizeCategory: true}\n        : {}\n\n      this.__addProperty(Object.assign({}, property, {\n        displayCategory,\n        displayValue\n      }), opts)\n    }\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  setProperties (properties) {\n\n    this.emit('setProperties', {\n      nodeId: this.nodeId,\n      properties\n\n    }).then((properties) => {\n\n      this.__setProperties (properties)\n\n      this.resizeToContent()\n    })\n  }\n\n  /////////////////////////////////////////////////////////\n  // addProperty (name, value, category, options)\n  //\n  /////////////////////////////////////////////////////////\n  __addProperty (metaProperty, options) {\n\n    const element = this.tree.getElementForNode({\n      category: metaProperty.displayCategory,\n      value: metaProperty.displayValue,\n      name: metaProperty.displayName\n    })\n\n    if (element) {\n      return false\n    }\n\n    let parent = null\n\n    if (metaProperty.displayCategory) {\n\n        parent = this.tree.getElementForNode({\n          name: metaProperty.displayCategory\n        })\n\n        if (!parent) {\n            parent = this.tree.createElement_({\n              name: metaProperty.displayCategory,\n              type: 'category'\n            }, this.tree.myRootContainer,\n            options && options.localizeCategory\n              ? {localize: true}\n              : null)\n        }\n\n    } else {\n\n        parent = this.tree.myRootContainer\n    }\n\n    this.tree.createElement_(\n      metaProperty,\n      parent,\n      options && options.localizeProperty\n        ? {localize: true}\n        : null)\n\n    return true\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  updateProperty (metaProperty) {\n\n    switch (metaProperty.dataType) {\n\n      case 'link':\n\n        break\n\n      case 'img':\n\n        break\n\n      case 'file':\n\n        break\n\n      case 'select':\n\n        break\n\n      case 'text':\n      default:\n\n        $('#' + metaProperty.id).text(\n          metaProperty.displayValue)\n\n        break\n    }\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  createPropertyName (metaProperty, displayOptions) {\n\n    const name = document.createElement('div')\n\n    let text = metaProperty.displayName\n\n    if (displayOptions && displayOptions.localize) {\n      name.setAttribute('data-i18n', text)\n      text = Autodesk.Viewing.i18n.translate(text)\n    }\n\n    name.className = 'property-name'\n    name.textContent = text\n    name.title = text\n\n    return name\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  createPropertySeparator () {\n\n    const separator = document.createElement('div')\n    separator.className = 'separator'\n\n    return separator\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  displayProperty (metaProperty, parent, displayOptions) {\n\n    const propertyName = this.createPropertyName(\n      metaProperty, displayOptions)\n\n    const separator = this.createPropertySeparator()\n\n    var propertyValue = null\n\n    switch (metaProperty.dataType) {\n\n      case 'link':\n\n        propertyValue = this.createLinkProperty(\n          metaProperty,\n          displayOptions)\n\n        break\n\n      case 'img':\n\n        propertyValue = this.createImageProperty(\n          metaProperty,\n          displayOptions)\n\n        break\n\n      case 'file':\n\n        propertyValue = createFileProperty(\n          metaProperty,\n          displayOptions)\n\n        break\n\n      case 'select':\n\n        propertyValue = this.createSelectProperty(\n          metaProperty,\n          displayOptions)\n\n        break\n\n      case 'text':\n      default:\n\n        propertyValue = this.createTextProperty(\n          metaProperty,\n          displayOptions)\n\n        break\n    }\n\n    parent.appendChild(propertyName)\n    parent.appendChild(separator)\n    parent.appendChild(propertyValue)\n\n    // Make the property name and value highlightable\n    return [propertyName, propertyValue]\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  createTextProperty (metaProperty, displayOptions) {\n\n    const value = document.createElement('div')\n\n    value.textContent = metaProperty.displayValue\n    value.id = metaProperty.id || this.guid()\n    value.title = metaProperty.displayValue\n    value.className = 'property-value'\n\n    return value\n  }\n\n  createSelectProperty (metaProperty, displayOptions) {\n\n    const value = document.createElement('select'), array = metaProperty.values\n\n    array.forEach(e=>{\n    const option = document.createElement(\"option\")\n    option.text = option.value = e\n    if(metaProperty.displayValue==e)\n    option.setAttribute('selected', 'selected')\n    value.appendChild(option)\n    })\n    value.className = 'selectProperty'\n    value.onchange = metaProperty.onchange\n    return value\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  createLinkProperty (metaProperty, displayOptions) {\n\n    const value = document.createElement('div')\n    value.id = metaProperty.id || this.guid()\n    value.title = metaProperty.displayValue\n    value.className = 'property-value'\n\n    $(value).append(`\n      <a  href=\"${property.href}\" target=\"_blank\">\n        ${metaProperty.displayValue}\n      </a>\n    `)\n\n    return value\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  createImageProperty (metaProperty, displayOptions) {\n\n    const value = document.createElement('div')\n    value.id = metaProperty.id || this.guid()\n    value.title = metaProperty.displayValue\n    value.className = 'property-value'\n\n    const imgId = this.guid()\n\n    $(value).append(`\n      <a  href=\"${property.href}\">\n        <img id=\"${imgId}\" src=\"${property.href}\"\n          height=\"${metaProperty.height}\"\n          width=\"${metaProperty.with}\"/>\n      </a>\n    `)\n\n    return value\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  createFileProperty (metaProperty, displayOptions) {\n\n    const value = document.createElement('div')\n    value.id = metaProperty.id || this.guid()\n    value.title = metaProperty.displayValue\n    value.className = 'property-value'\n\n    const imgId = this.guid()\n\n    $(value).append(`\n      <a href=\"${property.href}\">\n        ${metaProperty.displayValue}\n      </a>\n    `)\n\n    return value\n  }\n\n  /////////////////////////////////////////////////////////\n  // onPropertyClick handle\n  //\n  /////////////////////////////////////////////////////////\n  onPropertyClick (metaProperty, event) {\n\n    switch (metaProperty.dataType) {\n\n      // opens link in new tab\n      case 'link':\n\n        window.open(metaProperty.href, '_blank')\n\n        break\n\n      // download image or file\n      case 'file':\n      case 'img':\n\n        this.downloadURI(\n          metaProperty.href,\n          metaProperty.filename)\n\n        break\n\n      case 'text':\n      default :\n\n        //nothing to do for text\n        break\n    }\n  }\n\n  /////////////////////////////////////////////////////////\n  // Download util\n  //\n  /////////////////////////////////////////////////////////\n  downloadURI (uri, name) {\n\n    const link = document.createElement(\"a\")\n\n    link.download = name\n    link.href = uri\n    link.click()\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  guid (format='xxxx-xxxx-xxxx') {\n\n    var d = new Date().getTime()\n\n    var guid = format.replace(\n      /[xy]/g,\n      function (c) {\n        var r = (d + Math.random() * 16) % 16 | 0\n        d = Math.floor(d / 16)\n        return (c == 'x' ? r : (r & 0x7 | 0x8)).toString(16)\n      })\n\n    return guid\n  }\n}\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../../../node_modules/sass-loader/lib/loader.js!./Viewing.Extension.ViewerProperties.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../../../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../../../node_modules/sass-loader/lib/loader.js!./Viewing.Extension.ViewerProperties.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../../../node_modules/sass-loader/lib/loader.js!./Viewing.Extension.ViewerProperties.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".selectProperty {\\n  width: 90%;\\n  margin-top: 8px; }\\n\", \"\"]);\n","import MultiModelExtensionBase from './Viewer.MultiModelExtensionBase'\n\nexport default MultiModelExtensionBase\n","import EventsEmitter from 'EventsEmitter'\n\nexport default class MultiModelExtensionBase extends\n  EventsEmitter.Composer (Autodesk.Viewing.Extension) {\n\n  /////////////////////////////////////////////////////////\n  // Class constructor\n  //\n  /////////////////////////////////////////////////////////\n  constructor (viewer, options = {}, defaultOptions = {}) {\n\n    super (viewer)\n    // bindings\n    Object.assign(this, options.serviceContext)\n\n    this.onModelCompletedLoad = this.onModelCompletedLoad.bind(this)\n    this.onObjectTreeCreated  = this.onObjectTreeCreated.bind(this)\n    this.onModelRootLoaded    = this.onModelRootLoaded.bind(this)\n    this.onExtensionLoaded    = this.onExtensionLoaded.bind(this)\n    this.onModelActivated     = this.onModelActivated.bind(this)\n    this.onGeometryLoaded     = this.onGeometryLoaded.bind(this)\n    this.onToolbarCreated     = this.onToolbarCreated.bind(this)\n    this.onModelBeginLoad     = this.onModelBeginLoad.bind(this)\n    this.onModelUnloaded      = this.onModelUnloaded.bind(this)\n    this.onSelection          = this.onSelection.bind(this)\n\n    this.__onModelRootLoaded  = this.__onModelRootLoaded.bind(this)\n    this.__onModelActivated   = this.__onModelActivated.bind(this)\n    this.__onModelUnloaded    = this.__onModelUnloaded.bind(this)\n    this.__onModelLoaded      = this.__onModelLoaded.bind(this)\n\n    this.defaultOptions = defaultOptions\n\n    this.options = Object.assign({},\n      defaultOptions,\n      options)\n\n    this.viewer = viewer\n\n    // read the modelQueue to detect currently loaded models\n    // when the extension gets loaded\n    const models = viewer.impl.modelQueue().getModels()\n\n    this.models = models.map((model) => {\n\n      model.guid = model.guid || this.guid()\n\n      return model\n    })\n\n    this.initializeEvents ()\n  }\n\n  /////////////////////////////////////////////////////////\n  // Extension Id\n  //\n  /////////////////////////////////////////////////////////\n  static get ExtensionId() {\n\n    return 'Viewing.Extension.MultiModelExtensionBase'\n  }\n\n  /////////////////////////////////////////////////////////\n  // Load callback\n  //\n  /////////////////////////////////////////////////////////\n  load () {\n\n    return true\n  }\n\n  /////////////////////////////////////////////////////////\n  // Unload callback\n  //\n  /////////////////////////////////////////////////////////\n  unload () {\n\n    this.viewerEvents.forEach((event) => {\n\n      this.viewer.removeEventListener(\n        event.id, this[event.handler])\n    })\n\n    if (this.eventSink) {\n\n      this.eventSink.off('model.activated',\n        this.__onModelActivated)\n\n      this.eventSink.off('model.unloaded',\n        this.__onModelUnloaded)\n\n      this.eventSink.off('model.loaded',\n        this.__onModelLoaded)\n    }\n\n    this.off()\n\n    return true\n  }\n\n  /////////////////////////////////////////////////////////\n  // Reload callback, in case the extension is re-loaded\n  // more than once\n  //\n  /////////////////////////////////////////////////////////\n  reload (options = {}) {\n\n    this.options = Object.assign({},\n      this.defaultOptions,\n      this.options,\n      options)\n\n    return true\n  }\n\n  /////////////////////////////////////////////////////////\n  // Invoked when extension gets loaded\n  //\n  /////////////////////////////////////////////////////////\n  onExtensionLoaded (event) {\n\n    //console.log('MultiModelExtensionBase.onExtensionLoaded')\n  }\n\n  /////////////////////////////////////////////////////////\n  // Invoked when the model starts to load\n  // The geometry and instanceTree may not be available\n  // at this time\n  //\n  /////////////////////////////////////////////////////////\n  onModelBeginLoad (event) {\n\n    //console.log('MultiModelExtensionBase.onModelBeginLoad')\n  }\n\n  /////////////////////////////////////////////////////////\n  // Triggered by ModelLoader extension when a model is\n  // selected in a multi-model environment\n  //\n  /////////////////////////////////////////////////////////\n  onModelActivated (event) {\n\n    //console.log('MultiModelExtensionBase.onModelActivated')\n  }\n\n  /////////////////////////////////////////////////////////\n  // Invoked when model root node has been loaded\n  // Extensions that do require access to full\n  // model geometry or component tree may use that\n  // event to know a new model has been loaded\n  //\n  /////////////////////////////////////////////////////////\n  __onModelRootLoaded (event) {\n\n    this.viewerEvent([\n\n      Autodesk.Viewing.OBJECT_TREE_CREATED_EVENT,\n      Autodesk.Viewing.GEOMETRY_LOADED_EVENT\n\n    ]).then((args) => {\n\n      this.onModelCompletedLoad (args[0])\n    })\n  }\n\n  onModelRootLoaded (event) {\n\n    //console.log('MultiModelExtensionBase.onModelRootLoaded')\n  }\n\n  /////////////////////////////////////////////////////////\n  // Invoked when object tree is fully loaded.\n  // Extensions that are interested in using the\n  // instanceTree need to use that event to make sure\n  // it is available\n  //\n  ////////////////////////////////////////////////////////\n  onObjectTreeCreated (event) {\n\n    //console.log('MultiModelExtensionBase.onObjectTreeCreated')\n  }\n\n  /////////////////////////////////////////////////////////\n  // Invoked when geometry is fully loaded\n  //\n  /////////////////////////////////////////////////////////\n  onGeometryLoaded (event) {\n\n    //console.log('MultiModelExtensionBase.onGeometryLoaded')\n  }\n\n  /////////////////////////////////////////////////////////\n  // Invoked after onObjectTreeCreated and onGeometryLoaded\n  // have both been fired\n  //\n  /////////////////////////////////////////////////////////\n  onModelCompletedLoad (event) {\n\n    //console.log('MultiModelExtensionBase.onModelCompletedLoad')\n  }\n\n  /////////////////////////////////////////////////////////\n  // Invoked once the viewer toolbar has been created\n  //\n  /////////////////////////////////////////////////////////\n  onToolbarCreated (event) {\n\n    //console.log('MultiModelExtensionBase.onToolbarCreated')\n  }\n\n  /////////////////////////////////////////////////////////\n  // Triggered by ModelLoader extension when a model has\n  // been unloaded as per user request\n  //\n  /////////////////////////////////////////////////////////\n  onModelUnloaded (event) {\n\n    //console.log('MultiModelExtensionBase.onModelUnloaded')\n  }\n\n  /////////////////////////////////////////////////////////\n  // Invoked when a model is being selected\n  //\n  /////////////////////////////////////////////////////////\n  onSelection (event) {\n\n    //console.log('MultiModelExtensionBase.onSelection')\n  }\n\n  /////////////////////////////////////////////////////////\n  //Sink Events\n  //\n  /////////////////////////////////////////////////////////\n  __onModelLoaded (event) {\n\n    this.models = [...this.models, event.model]\n\n    this.onModelBeginLoad (event)\n  }\n\n  __onModelActivated (event) {\n\n    this.onModelActivated (event)\n  }\n\n  __onModelUnloaded (event) {\n\n    this.models = this.models.filter((model) => {\n\n      return model.guid !== event.model.guid\n    })\n\n    this.onModelUnloaded(event)\n  }\n\n  /////////////////////////////////////////////////////////\n  // Initialize all events for the extension\n  // Each event will invoke a predefined handler\n  // implemented or not by the derived extension\n  //\n  /////////////////////////////////////////////////////////\n  initializeEvents () {\n\n    if (this.options.eventSink) {\n\n      // event object passed in options\n      this.eventSink = this.options.eventSink\n\n      this.eventSink.on('model.loaded',\n        this.__onModelLoaded)\n\n      this.eventSink.on('model.activated',\n        this.__onModelActivated)\n\n      this.eventSink.on('model.unloaded',\n        this.__onModelUnloaded)\n    }\n\n    this.viewerEvents = [\n      {\n        id: Autodesk.Viewing.EXTENSION_LOADED_EVENT,\n        handler: 'onExtensionLoaded'\n      },\n      {\n        id: Autodesk.Viewing.OBJECT_TREE_CREATED_EVENT,\n        handler: 'onObjectTreeCreated'\n      },\n      {\n        id: Autodesk.Viewing.MODEL_ROOT_LOADED_EVENT,\n        handler: '__onModelRootLoaded'\n      },\n      {\n        id: Autodesk.Viewing.MODEL_ROOT_LOADED_EVENT,\n        handler: 'onModelRootLoaded'\n      },\n      {\n        id: Autodesk.Viewing.GEOMETRY_LOADED_EVENT,\n        handler: 'onGeometryLoaded'\n      },\n      {\n        id: Autodesk.Viewing.TOOLBAR_CREATED_EVENT,\n        handler: 'onToolbarCreated'\n      },\n      {\n        id: Autodesk.Viewing.AGGREGATE_SELECTION_CHANGED_EVENT,\n        handler: 'onSelection'\n      }\n    ]\n\n    this.viewerEvents.forEach((event) => {\n\n      this.viewerEvent(event.id, this[event.handler])\n    })\n  }\n\n  /////////////////////////////////////////////////////////\n  // Async viewer event\n  //\n  /////////////////////////////////////////////////////////\n  viewerEvent (eventId, handler) {\n\n    if (handler) {\n\n      this.viewer.addEventListener (eventId, handler)\n      return\n    }\n\n    const eventIdArray = Array.isArray(eventId)\n      ? eventId : [eventId]\n\n    const eventTasks = eventIdArray.map((id) => {\n      return new Promise ((resolve) => {\n        const __handler = (args) => {\n          this.viewer.removeEventListener (id, __handler)\n          resolve (args)\n        }\n        this.viewer.addEventListener (id, __handler)\n      })\n    })\n\n    return Promise.all (eventTasks)\n  }\n}\n","var superPropBase = require(\"./superPropBase\");\n\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    module.exports = _get = Reflect.get;\n  } else {\n    module.exports = _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nmodule.exports = _get;","var getPrototypeOf = require(\"./getPrototypeOf\");\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nmodule.exports = _superPropBase;"],"sourceRoot":""}