{"version":3,"sources":["webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.Showcase/index.js","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.Showcase/Viewing.Extension.Showcase.js","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.Showcase/img/bridge/skybox-xpos.png","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.Showcase/img/bridge/skybox-xneg.png","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.Showcase/img/bridge/skybox-ypos.png","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.Showcase/img/bridge/skybox-yneg.png","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.Showcase/img/bridge/skybox-zpos.png","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.Showcase/img/bridge/skybox-zneg.png","webpack:///./src/client/components/Viewer/Extensions/Viewer.MultiModelExtensionBase/index.js","webpack:///./src/client/components/Viewer/Extensions/Viewer.MultiModelExtensionBase/Viewer.MultiModelExtensionBase.js","webpack:///./src/client/components/Viewer/Viewer.EventTool/Viewer.EventTool.js","webpack:///./src/client/components/Viewer/Viewer.EventTool/index.js","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.Showcase/Viewer.Skybox/index.js","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.Showcase/Viewer.Skybox/Viewer.Skybox.js"],"names":["__webpack_require__","r","__webpack_exports__","ShowcaseExtension","viewer","options","_this","_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2___default","this","_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default","_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default","call","onCameraChanged","bind","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6___default","runAnimation","eventTool","EventTool","imageList","xpos","xneg","ypos","yneg","zpos","zneg","size","THREE","Vector3","fromArray","skybox","Skybox","stopwatch","Stopwatch","_this2","console","log","on","e","window","clearTimeout","timeoutId","setTimeout","getElapsedMs","userInteraction","addEventListener","Autodesk","Viewing","CAMERA_CHANGE_EVENT","_this3","nav","navigation","setLockSettings","pan","bounds","Box3","fitBounds","toPerspective","autocam","setHomeViewFrom","getCamera","loader","show","event","_this4","model","dbModelId","containerURN","loadContainer","env","then","configureNavigation","activate","urn","_this5","Promise","_ref","_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default","_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","resolve","wrap","_context","prev","next","t0","t1","t2","loadDocument","t3","sent","getViewablePath","t4","t5","t6","loadModel","stop","_x","apply","arguments","cancelAnimationFrame","animId","removeEventListener","off","vector","min","max","length","divideScalar","multiplyScalar","Math","pos","getPosition","clampLength","setView","axis","speed","dt","up","getCameraUpVector","matrix","Matrix4","makeRotationAxis","applyMatrix4","setCameraUpVector","rotateCamera","PI","requestAnimationFrame","MultiModelExtensionBase","theExtensionManager","registerExtension","ExtensionId","module","exports","p","_Viewer_MultiModelExtensionBase__WEBPACK_IMPORTED_MODULE_0__","undefined","defaultOptions","_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default","_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default","_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default","Object","assign","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5___default","serviceContext","onModelCompletedLoad","onObjectTreeCreated","onModelRootLoaded","onExtensionLoaded","onModelActivated","onGeometryLoaded","onToolbarCreated","onModelBeginLoad","onModelUnloaded","onSelection","__onModelRootLoaded","__onModelActivated","__onModelUnloaded","__onModelLoaded","models","impl","modelQueue","getModels","map","guid","initializeEvents","viewerEvents","forEach","id","handler","eventSink","viewerEvent","OBJECT_TREE_CREATED_EVENT","GEOMETRY_LOADED_EVENT","args","concat","_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default","filter","EXTENSION_LOADED_EVENT","MODEL_ROOT_LOADED_EVENT","TOOLBAR_CREATED_EVENT","AGGREGATE_SELECTION_CHANGED_EVENT","eventId","eventTasks","Array","isArray","__handler","all","EventsEmitter","Composer","Extension","classCallCheck_default","possibleConstructorReturn_default","getPrototypeOf_default","toolName","toolController","registerTool","assertThisInitialized_default","getName","active","activateTool","emit","deactivateTool","button","keyCode","ViewerSkybox","faceMaterials","url","MeshBasicMaterial","ImageUtils","loadTexture","side","BackSide","skyMaterial","MeshFaceMaterial","geometry","BoxGeometry","x","y","z","Mesh","scene","add"],"mappings":"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","file":"73.js","sourcesContent":["import './Viewing.Extension.Showcase'\n\nexport default 'Viewing.Extension.Showcase'\n","/// //////////////////////////////////////////////////////////////////\n// Viewing.Extension.Showcase\n// by Philippe Leefsma, July 2017\n//\n/// //////////////////////////////////////////////////////////////////\nimport MultiModelExtensionBase from 'Viewer.MultiModelExtensionBase'\nimport EventTool from 'Viewer.EventTool'\nimport Skybox from './Viewer.Skybox'\nimport Stopwatch from 'Stopwatch'\n\nimport xpos from './img/bridge/skybox-xpos.png'\nimport xneg from './img/bridge/skybox-xneg.png'\nimport ypos from './img/bridge/skybox-ypos.png'\nimport yneg from './img/bridge/skybox-yneg.png'\nimport zpos from './img/bridge/skybox-zpos.png'\nimport zneg from './img/bridge/skybox-zneg.png'\n\nclass ShowcaseExtension extends MultiModelExtensionBase {\n  /// //////////////////////////////////////////////////////\n  // Class constructor\n  //\n  /// //////////////////////////////////////////////////////\n  constructor (viewer, options) {\n    super(viewer, options)\n\n    this.onCameraChanged =\n      this.onCameraChanged.bind(this)\n\n    this.runAnimation =\n      this.runAnimation.bind(this)\n\n    this.eventTool = new EventTool(viewer)\n\n    const imageList = [\n      xpos, xneg,\n      ypos, yneg,\n      zpos, zneg\n    ]\n\n    const size = new THREE.Vector3()\n\n    size.fromArray(options.size || [10000, 10000, 10000])\n\n    this.skybox = new Skybox(viewer, {\n      imageList,\n      size\n    })\n\n    this.stopwatch = new Stopwatch()\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Extension Id\n  //\n  /// //////////////////////////////////////////////////////\n  static get ExtensionId () {\n    return 'Viewing.Extension.Showcase'\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Load callback\n  //\n  /// //////////////////////////////////////////////////////\n  load () {\n    console.log('Viewing.Extension.Showcase loaded')\n\n    this.eventTool.on('mousewheel', (e) => {\n      window.clearTimeout(this.timeoutId)\n\n      this.timeoutId = window.setTimeout(() => {\n        this.stopwatch.getElapsedMs()\n        this.userInteraction = false\n        this.runAnimation()\n      }, 3500)\n\n      this.userInteraction = true\n\n      return false\n    })\n\n    this.eventTool.on('buttondown', (e) => {\n      window.clearTimeout(this.timeoutId)\n\n      this.userInteraction = true\n\n      return false\n    })\n\n    this.eventTool.on('buttonup', (e) => {\n      this.timeoutId = window.setTimeout(() => {\n        this.stopwatch.getElapsedMs()\n        this.runAnimation()\n      }, 3500)\n\n      this.userInteraction = false\n\n      return false\n    })\n\n    this.viewer.addEventListener(\n      Autodesk.Viewing.CAMERA_CHANGE_EVENT,\n      this.onCameraChanged)\n\n    return true\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Setup navigation\n  //\n  /// //////////////////////////////////////////////////////\n  configureNavigation () {\n    const nav = this.viewer.navigation\n\n    nav.setLockSettings({\n      pan: true\n    })\n\n    this.bounds = new THREE.Box3(\n      new THREE.Vector3(-100, -100, -100),\n      new THREE.Vector3(100, 100, 100))\n\n    nav.fitBounds(true, this.bounds)\n\n    nav.toPerspective()\n\n    setTimeout(() => {\n      this.viewer.autocam.setHomeViewFrom(\n        nav.getCamera())\n      this.options.loader.show(false)\n    }, 2000)\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Model completed load callback\n  //\n  /// //////////////////////////////////////////////////////\n  onModelCompletedLoad (event) {\n    if (event.model.dbModelId) {\n      const urn = this.options.containerURN\n\n      this.loadContainer(this.options.containerURN, this.options.env).then(() => {\n        this.configureNavigation()\n      })\n\n      this.stopwatch.getElapsedMs()\n\n      this.eventTool.activate()\n\n      this.runAnimation()\n    }\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Load container model\n  //\n  /// //////////////////////////////////////////////////////\n  loadContainer (urn, env) {\n    return new Promise(async (resolve) => {\n      this.viewer.loadModel(env == 'Local' ? urn : this.options.getViewablePath(await this.options.loadDocument(urn)), {}, (model) => {\n        resolve(model)\n      })\n    })\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Unload callback\n  //\n  /// //////////////////////////////////////////////////////\n  unload () {\n    console.log('Viewing.Extension.Showcase unloaded')\n\n    window.cancelAnimationFrame(this.animId)\n\n    this.viewer.removeEventListener(\n      Autodesk.Viewing.CAMERA_CHANGE_EVENT,\n      this.onCameraChanged)\n\n    this.userInteraction = true\n\n    this.eventTool.off()\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Clamp vector length, not avail in three.js version\n  // used by the viewer\n  //\n  /// //////////////////////////////////////////////////////\n  clampLength (vector, min, max) {\n    const length = vector.length()\n\n    vector.divideScalar(length || 1)\n\n    vector.multiplyScalar(\n      Math.max(min, Math.min(max, length)))\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Camera changed event\n  //\n  /// //////////////////////////////////////////////////////\n  onCameraChanged () {\n    const nav = this.viewer.navigation\n\n    const pos = nav.getPosition()\n\n    if (pos.length() > 700.0 || pos.length() < 100.0) {\n      this.clampLength(pos, 100.0, 700.0)\n\n      nav.fitBounds(true, this.bounds)\n\n      nav.setView(pos, new THREE.Vector3(0, 0, 0))\n    }\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Rotate camera around axis\n  //\n  /// //////////////////////////////////////////////////////\n  rotateCamera (axis, speed, dt) {\n    const nav = this.viewer.navigation\n\n    const up = nav.getCameraUpVector()\n\n    const pos = nav.getPosition()\n\n    const matrix = new THREE.Matrix4().makeRotationAxis(\n      axis, speed * dt)\n\n    pos.applyMatrix4(matrix)\n    up.applyMatrix4(matrix)\n\n    nav.setView(pos, new THREE.Vector3(0, 0, 0))\n    nav.setCameraUpVector(up)\n  }\n\n  /// //////////////////////////////////////////////////////\n  // starts animation\n  //\n  /// //////////////////////////////////////////////////////\n  runAnimation () {\n    if (!this.userInteraction) {\n      const dt = this.stopwatch.getElapsedMs() * 0.001\n\n      const axis = new THREE.Vector3(0, 1, 0)\n\n      this.rotateCamera(axis, 10.0 * Math.PI / 180, dt)\n\n      this.animId = window.requestAnimationFrame(\n        this.runAnimation)\n    }\n  }\n}\n\nAutodesk.Viewing.theExtensionManager.registerExtension(\n  ShowcaseExtension.ExtensionId,\n  ShowcaseExtension)\n","module.exports = __webpack_public_path__ + \"a8415c39630fbb82149b09fd06ec67ca.png\";","module.exports = __webpack_public_path__ + \"1fe04a8d6958c7cd0aae0e73ce0930b5.png\";","module.exports = __webpack_public_path__ + \"4ac6ce01f872698835795143c8358e09.png\";","module.exports = __webpack_public_path__ + \"777814e94305f9c8a899e3a8dd26ca1e.png\";","module.exports = __webpack_public_path__ + \"b502cec8d3187970f2df80b2f86838c5.png\";","module.exports = __webpack_public_path__ + \"2a27e43e7b0e0184f484869676df954c.png\";","import MultiModelExtensionBase from './Viewer.MultiModelExtensionBase'\n\nexport default MultiModelExtensionBase\n","import EventsEmitter from 'EventsEmitter'\n\nexport default class MultiModelExtensionBase extends\n  EventsEmitter.Composer(Autodesk.Viewing.Extension) {\n  /// //////////////////////////////////////////////////////\n  // Class constructor\n  //\n  /// //////////////////////////////////////////////////////\n  constructor (viewer, options = {}, defaultOptions = {}) {\n    super(viewer)\n    // bindings\n    Object.assign(this, options.serviceContext)\n\n    this.onModelCompletedLoad = this.onModelCompletedLoad.bind(this)\n    this.onObjectTreeCreated = this.onObjectTreeCreated.bind(this)\n    this.onModelRootLoaded = this.onModelRootLoaded.bind(this)\n    this.onExtensionLoaded = this.onExtensionLoaded.bind(this)\n    this.onModelActivated = this.onModelActivated.bind(this)\n    this.onGeometryLoaded = this.onGeometryLoaded.bind(this)\n    this.onToolbarCreated = this.onToolbarCreated.bind(this)\n    this.onModelBeginLoad = this.onModelBeginLoad.bind(this)\n    this.onModelUnloaded = this.onModelUnloaded.bind(this)\n    this.onSelection = this.onSelection.bind(this)\n\n    this.__onModelRootLoaded = this.__onModelRootLoaded.bind(this)\n    this.__onModelActivated = this.__onModelActivated.bind(this)\n    this.__onModelUnloaded = this.__onModelUnloaded.bind(this)\n    this.__onModelLoaded = this.__onModelLoaded.bind(this)\n\n    this.defaultOptions = defaultOptions\n\n    this.options = Object.assign({},\n      defaultOptions,\n      options)\n\n    this.viewer = viewer\n\n    // read the modelQueue to detect currently loaded models\n    // when the extension gets loaded\n    const models = viewer.impl.modelQueue().getModels()\n\n    this.models = models.map((model) => {\n      model.guid = model.guid || this.guid()\n\n      return model\n    })\n\n    this.initializeEvents()\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Extension Id\n  //\n  /// //////////////////////////////////////////////////////\n  static get ExtensionId () {\n    return 'Viewing.Extension.MultiModelExtensionBase'\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Load callback\n  //\n  /// //////////////////////////////////////////////////////\n  load () {\n    return true\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Unload callback\n  //\n  /// //////////////////////////////////////////////////////\n  unload () {\n    this.viewerEvents.forEach((event) => {\n      this.viewer.removeEventListener(\n        event.id, this[event.handler])\n    })\n\n    if (this.eventSink) {\n      this.eventSink.off('model.activated',\n        this.__onModelActivated)\n\n      this.eventSink.off('model.unloaded',\n        this.__onModelUnloaded)\n\n      this.eventSink.off('model.loaded',\n        this.__onModelLoaded)\n    }\n\n    this.off()\n\n    return true\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Reload callback, in case the extension is re-loaded\n  // more than once\n  //\n  /// //////////////////////////////////////////////////////\n  reload (options = {}) {\n    this.options = Object.assign({},\n      this.defaultOptions,\n      this.options,\n      options)\n\n    return true\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Invoked when extension gets loaded\n  //\n  /// //////////////////////////////////////////////////////\n  onExtensionLoaded (event) {\n\n    // console.log('MultiModelExtensionBase.onExtensionLoaded')\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Invoked when the model starts to load\n  // The geometry and instanceTree may not be available\n  // at this time\n  //\n  /// //////////////////////////////////////////////////////\n  onModelBeginLoad (event) {\n\n    // console.log('MultiModelExtensionBase.onModelBeginLoad')\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Triggered by ModelLoader extension when a model is\n  // selected in a multi-model environment\n  //\n  /// //////////////////////////////////////////////////////\n  onModelActivated (event) {\n\n    // console.log('MultiModelExtensionBase.onModelActivated')\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Invoked when model root node has been loaded\n  // Extensions that do require access to full\n  // model geometry or component tree may use that\n  // event to know a new model has been loaded\n  //\n  /// //////////////////////////////////////////////////////\n  __onModelRootLoaded (event) {\n    this.viewerEvent([\n\n      Autodesk.Viewing.OBJECT_TREE_CREATED_EVENT,\n      Autodesk.Viewing.GEOMETRY_LOADED_EVENT\n\n    ]).then((args) => {\n      this.onModelCompletedLoad(args[0])\n    })\n  }\n\n  onModelRootLoaded (event) {\n\n    // console.log('MultiModelExtensionBase.onModelRootLoaded')\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Invoked when object tree is fully loaded.\n  // Extensions that are interested in using the\n  // instanceTree need to use that event to make sure\n  // it is available\n  //\n  /// /////////////////////////////////////////////////////\n  onObjectTreeCreated (event) {\n\n    // console.log('MultiModelExtensionBase.onObjectTreeCreated')\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Invoked when geometry is fully loaded\n  //\n  /// //////////////////////////////////////////////////////\n  onGeometryLoaded (event) {\n\n    // console.log('MultiModelExtensionBase.onGeometryLoaded')\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Invoked after onObjectTreeCreated and onGeometryLoaded\n  // have both been fired\n  //\n  /// //////////////////////////////////////////////////////\n  onModelCompletedLoad (event) {\n\n    // console.log('MultiModelExtensionBase.onModelCompletedLoad')\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Invoked once the viewer toolbar has been created\n  //\n  /// //////////////////////////////////////////////////////\n  onToolbarCreated (event) {\n\n    // console.log('MultiModelExtensionBase.onToolbarCreated')\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Triggered by ModelLoader extension when a model has\n  // been unloaded as per user request\n  //\n  /// //////////////////////////////////////////////////////\n  onModelUnloaded (event) {\n\n    // console.log('MultiModelExtensionBase.onModelUnloaded')\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Invoked when a model is being selected\n  //\n  /// //////////////////////////////////////////////////////\n  onSelection (event) {\n\n    // console.log('MultiModelExtensionBase.onSelection')\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Sink Events\n  //\n  /// //////////////////////////////////////////////////////\n  __onModelLoaded (event) {\n    this.models = [...this.models, event.model]\n\n    this.onModelBeginLoad(event)\n  }\n\n  __onModelActivated (event) {\n    this.onModelActivated(event)\n  }\n\n  __onModelUnloaded (event) {\n    this.models = this.models.filter((model) => {\n      return model.guid !== event.model.guid\n    })\n\n    this.onModelUnloaded(event)\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Initialize all events for the extension\n  // Each event will invoke a predefined handler\n  // implemented or not by the derived extension\n  //\n  /// //////////////////////////////////////////////////////\n  initializeEvents () {\n    if (this.options.eventSink) {\n      // event object passed in options\n      this.eventSink = this.options.eventSink\n\n      this.eventSink.on('model.loaded',\n        this.__onModelLoaded)\n\n      this.eventSink.on('model.activated',\n        this.__onModelActivated)\n\n      this.eventSink.on('model.unloaded',\n        this.__onModelUnloaded)\n    }\n\n    this.viewerEvents = [\n      {\n        id: Autodesk.Viewing.EXTENSION_LOADED_EVENT,\n        handler: 'onExtensionLoaded'\n      },\n      {\n        id: Autodesk.Viewing.OBJECT_TREE_CREATED_EVENT,\n        handler: 'onObjectTreeCreated'\n      },\n      {\n        id: Autodesk.Viewing.MODEL_ROOT_LOADED_EVENT,\n        handler: '__onModelRootLoaded'\n      },\n      {\n        id: Autodesk.Viewing.MODEL_ROOT_LOADED_EVENT,\n        handler: 'onModelRootLoaded'\n      },\n      {\n        id: Autodesk.Viewing.GEOMETRY_LOADED_EVENT,\n        handler: 'onGeometryLoaded'\n      },\n      {\n        id: Autodesk.Viewing.TOOLBAR_CREATED_EVENT,\n        handler: 'onToolbarCreated'\n      },\n      {\n        id: Autodesk.Viewing.AGGREGATE_SELECTION_CHANGED_EVENT,\n        handler: 'onSelection'\n      }\n    ]\n\n    this.viewerEvents.forEach((event) => {\n      this.viewerEvent(event.id, this[event.handler])\n    })\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Async viewer event\n  //\n  /// //////////////////////////////////////////////////////\n  viewerEvent (eventId, handler) {\n    if (handler) {\n      this.viewer.addEventListener(eventId, handler)\n      return\n    }\n\n    const eventIdArray = Array.isArray(eventId)\n      ? eventId : [eventId]\n\n    const eventTasks = eventIdArray.map((id) => {\n      return new Promise((resolve) => {\n        const __handler = (args) => {\n          this.viewer.removeEventListener(id, __handler)\n          resolve(args)\n        }\n        this.viewer.addEventListener(id, __handler)\n      })\n    })\n\n    return Promise.all(eventTasks)\n  }\n}\n","import EventsEmitter from 'EventsEmitter'\n\nexport default class EventTool extends EventsEmitter {\n  constructor (viewer) {\n    super()\n\n    this.viewer = viewer\n\n    this.toolName = this.guid()\n\n    viewer.toolController.registerTool(this)\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Tool names\n  //\n  /// //////////////////////////////////////////////////////\n  getNames () {\n    return [this.getName()]\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Tool name\n  //\n  /// //////////////////////////////////////////////////////\n  getName () {\n    return this.toolName\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Tool Priority\n  //\n  /// //////////////////////////////////////////////////////\n  getPriority () {\n    return 1000\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Activate Tool\n  //\n  /// //////////////////////////////////////////////////////\n  activate () {\n    if (!this.active) {\n      this.active = true\n\n      this.viewer.toolController.activateTool(\n        this.toolName)\n\n      this.emit('activate', this)\n    }\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Deactivate tool\n  //\n  /// //////////////////////////////////////////////////////\n  deactivate () {\n    if (this.active) {\n      this.active = false\n\n      this.viewer.toolController.deactivateTool(\n        this.toolName)\n\n      this.emit('deactivate', this)\n    }\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  handleSingleClick (event, button) {\n    return this.emit('singleclick', event, button)\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  handleDoubleClick (event, button) {\n    return this.emit('doubleclick', event, button)\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  handleMouseMove (event) {\n    return this.emit('mousemove', event)\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  handleWheelInput (event) {\n    return this.emit('mousewheel', event)\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  handleGesture (event) {\n    return this.emit('gesture', event)\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  handleKeyDown (event, keyCode) {\n    return this.emit('keydown', event, keyCode)\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  handleButtonDown (event, button) {\n    return this.emit('buttondown', event, button)\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  handleButtonUp (event, button) {\n    return this.emit('buttonup', event, button)\n  }\n}\n","import EventTool from './Viewer.EventTool'\n\nexport default EventTool\n","import ViewerSkybox from './Viewer.Skybox'\n\nexport default ViewerSkybox\n","\nexport default class ViewerSkybox {\n  constructor (viewer, options) {\n    const faceMaterials = options.imageList.map((url) => {\n      return new THREE.MeshBasicMaterial({\n        map: THREE.ImageUtils.loadTexture(url),\n        side: THREE.BackSide\n      })\n    })\n\n    const skyMaterial = new THREE.MeshFaceMaterial(\n      faceMaterials)\n\n    const geometry = new THREE.BoxGeometry(\n      options.size.x,\n      options.size.y,\n      options.size.z,\n      1, 1, 1,\n      null, true)\n\n    const skybox = new THREE.Mesh(\n      geometry, skyMaterial)\n\n    viewer.impl.scene.add(skybox)\n  }\n}\n"],"sourceRoot":""}