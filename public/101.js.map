{"version":3,"sources":["webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.UISettings/index.js","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.UISettings/Viewing.Extension.UISettings.js","webpack:///./src/client/components/Viewer/Extensions/Viewer.ExtensionBase/index.js","webpack:///./src/client/components/Viewer/Extensions/Viewer.ExtensionBase/Viewer.ExtensionBase.js"],"names":["__webpack_require__","r","__webpack_exports__","UISettingsExtension","viewer","options","_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default","this","_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default","_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default","call","_this","addEventListener","Autodesk","Viewing","TOOLBAR_CREATED_EVENT","loadToolbarSettings","toolbar","console","log","toolbarOpts","removedControls","$","join","css","display","retargetedControls","forEach","ctrl","$ctrl","id","detach","parentId","append","ExtensionBase","theExtensionManager","registerExtension","ExtensionId","_Viewer_ExtensionBase__WEBPACK_IMPORTED_MODULE_0__","ViewerExtensionBase","arguments","length","undefined","_viewer","_options","Object","assign","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default","serviceContext","eventId","_this2","eventTasks","Array","isArray","map","Promise","resolve","handler","args","removeEventListener","all","format","d","Date","getTime","guid","replace","c","Math","random","floor","toString","EventsEmitter","Composer","Extension"],"mappings":"6FAAAA,EAAAC,EAAAC,GAAAF,EAAA,MAEeE,EAAA,2KCKTC,cAMJ,SAAAA,EAAYC,EAAQC,GAAS,OAAAC,IAAAC,KAAAJ,GAAAK,IAAAD,KAAAE,IAAAN,GAAAO,KAAAH,KAEpBH,EAAQC,wDAgBT,IAAAM,EAAAJ,KAUN,OARAA,KAAKH,OAAOQ,iBACVC,SAASC,QAAQC,sBAAuB,WAEtCJ,EAAKK,oBAAoBL,EAAKN,QAAQY,SAAW,MAGrDC,QAAQC,IAAI,wCAEL,mCAWP,OAFAD,QAAQC,IAAI,0CAEL,8CAOYC,GAEnB,IAAMC,EACJD,EAAYC,iBAAmB,GAE/BC,EAAED,EAAgBE,KAAK,MAAMC,IAAI,CAC/BC,QAAQ,UAIRL,EAAYM,oBAAsB,IAEjBC,QAAQ,SAACC,GAE1B,IAAIC,EAAQP,EAAEM,EAAKE,IAAIC,SAEvBT,EAAEM,EAAKI,UAAUC,OAAOJ,2CAnD5B,MAAO,6CAjBuBK,GAyElCrB,SAASC,QAAQqB,oBAAoBC,kBACnCjC,EAAoBkC,YACpBlC,wDClFF,IAAAmC,EAAAtC,EAAA,KAEeuC,MAAf,sLCAqBL,cAOnB,SAAAA,EAAa9B,GAAsB,IAAAO,EAAdN,EAAcmC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GAAI,OAAAlC,IAAAC,KAAA2B,IAEjCvB,EAAAH,IAAAD,KAAAE,IAAAyB,GAAAxB,KAAAH,KAAMH,EAAQC,KAETsC,QAAUvC,EACfO,EAAKP,OAASA,EAEdO,EAAKiC,SAAWvC,EAChBM,EAAKN,QAAUA,EACfwC,OAAOC,OAAPC,IAAApC,GAAoBN,EAAQ2C,gBATKrC,sDA8CjC,OAAO,mCASP,OAAO,iCAODN,GAEN,OAAO,sCAOI4C,GAAS,IAAAC,EAAA3C,KAKd4C,GAHeC,MAAMC,QAAQJ,GAC/BA,EAAU,CAACA,IAEiBK,IAAI,SAACxB,GACnC,OAAO,IAAIyB,EAAS,SAACC,GAMnBN,EAAK9C,OAAOQ,iBACVkB,EANc,SAAV2B,EAAWC,GACfR,EAAK9C,OAAOuD,oBACV7B,EAAI2B,GACND,EAASE,SAOf,OAAOH,EAAQK,IAAIT,oCA/Dc,IAAvBU,EAAuBrB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAd,aAEfsB,GAAI,IAAIC,MAAOC,UAEfC,EAAOJ,EAAOK,QAChB,QACA,SAAUC,GACR,IAAIlE,GAAK6D,EAAoB,GAAhBM,KAAKC,UAAiB,GAAK,EAExC,OADAP,EAAIM,KAAKE,MAAMR,EAAI,KACN,KAALK,EAAWlE,EAAS,EAAJA,EAAU,GAAMsE,SAAS,MAGrD,OAAON,sCAnBP,MAAO,uCAxBTO,EAAcC,SAAU5D,SAASC,QAAQ4D","file":"101.js","sourcesContent":["import './Viewing.Extension.UISettings'\n\nexport default 'Viewing.Extension.UISettings'\n","/////////////////////////////////////////////////////////////////////\n// Viewing.Extension.UISettings\n// by Philippe Leefsma, April 2016\n//\n/////////////////////////////////////////////////////////////////////\nimport ExtensionBase from 'Viewer.ExtensionBase'\n\nclass UISettingsExtension extends ExtensionBase {\n\n  /////////////////////////////////////////////////////////////////\n  // Class constructor\n  //\n  /////////////////////////////////////////////////////////////////\n  constructor(viewer, options) {\n\n    super (viewer, options)\n  }\n\n  /////////////////////////////////////////////////////////////////\n  // Extension Id\n  //\n  /////////////////////////////////////////////////////////////////\n  static get ExtensionId() {\n\n    return 'Viewing.Extension.UISettings'\n  }\n\n  /////////////////////////////////////////////////////////////////\n  // Load callback\n  //\n  /////////////////////////////////////////////////////////////////\n  load () {\n\n    this.viewer.addEventListener(\n      Autodesk.Viewing.TOOLBAR_CREATED_EVENT, () => {\n\n        this.loadToolbarSettings(this.options.toolbar || {})\n      })\n\n    console.log('Viewing.Extension.UISettings loaded')\n\n    return true\n  }\n\n  /////////////////////////////////////////////////////////////////\n  // Unload callback\n  //\n  /////////////////////////////////////////////////////////////////\n  unload () {\n\n    console.log('Viewing.Extension.UISettings unloaded')\n\n    return true\n  }\n\n  /////////////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////////////\n  loadToolbarSettings (toolbarOpts) {\n\n    const removedControls =\n      toolbarOpts.removedControls || []\n\n      $(removedControls.join(',')).css({\n        display:'none'\n      })\n\n      const retargetedControls =\n        toolbarOpts.retargetedControls || []\n\n      retargetedControls.forEach((ctrl) => {\n\n        var $ctrl = $(ctrl.id).detach()\n\n        $(ctrl.parentId).append($ctrl)\n      })\n  }\n}\n\nAutodesk.Viewing.theExtensionManager.registerExtension(\n  UISettingsExtension.ExtensionId,\n  UISettingsExtension)\n","import ViewerExtensionBase from './Viewer.ExtensionBase'\n\nexport default ViewerExtensionBase\n","import EventsEmitter from 'EventsEmitter'\n\nexport default class ExtensionBase extends\n  EventsEmitter.Composer (Autodesk.Viewing.Extension) {\n\n  /////////////////////////////////////////////////////////\n  // Class constructor\n  //\n  /////////////////////////////////////////////////////////\n  constructor (viewer, options = {}) {\n\n    super(viewer, options)\n\n    this._viewer = viewer\n    this.viewer = viewer\n\n    this._options = options\n    this.options = options\n    Object.assign(this, options.serviceContext)\n  }\n\n  /////////////////////////////////////////////////////////\n  // Extension Id\n  //\n  /////////////////////////////////////////////////////////\n  static get ExtensionId() {\n\n    return 'Viewing.Extension.Base'\n  }\n\n  ///////////////////////////////////////////////////////////\n  //\n  //\n  ///////////////////////////////////////////////////////////\n  static guid(format = 'xxxxxxxxxx') {\n\n    var d = new Date().getTime()\n\n    var guid = format.replace(\n      /[xy]/g,\n      function (c) {\n        var r = (d + Math.random() * 16) % 16 | 0\n        d = Math.floor(d / 16)\n        return (c == 'x' ? r : (r & 0x7 | 0x8)).toString(16)\n      })\n\n    return guid\n  }\n\n  /////////////////////////////////////////////////////////\n  // Load callback\n  //\n  /////////////////////////////////////////////////////////\n  load() {\n\n    return true\n  }\n\n  /////////////////////////////////////////////////////////\n  // Unload callback\n  //\n  /////////////////////////////////////////////////////////\n  unload() {\n\n    return true\n  }\n\n  /////////////////////////////////////////////////////////\n  // Reload callback\n  //\n  /////////////////////////////////////////////////////////\n  reload (options) {\n\n    return true\n  }\n\n  /////////////////////////////////////////////////////////\n  // Async viewer event\n  //\n  /////////////////////////////////////////////////////////\n  viewerEvent (eventId) {\n\n    const eventIdArray = Array.isArray(eventId)\n      ? eventId : [eventId]\n\n    const eventTasks = eventIdArray.map((id) => {\n      return new Promise ((resolve) => {\n        const handler = (args) => {\n          this.viewer.removeEventListener (\n            id, handler)\n          resolve (args)\n        }\n        this.viewer.addEventListener (\n          id, handler)\n      })\n    })\n\n    return Promise.all(eventTasks)\n  }\n}\n"],"sourceRoot":""}