{"version":3,"sources":["webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.ConstrainedPlacement/index.js","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.ConstrainedPlacement/Viewing.Extension.ConstrainedPlacement.EventsEmitter.js","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.ConstrainedPlacement/Viewing.Extension.ConstrainedPlacement.SnapperTool.js","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.ConstrainedPlacement/Viewing.Extension.ConstrainedPlacement.Panel.js","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.ConstrainedPlacement/Viewing.Extension.ConstrainedPlacement.css?4507","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.ConstrainedPlacement/Viewing.Extension.ConstrainedPlacement.css","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.ConstrainedPlacement/Viewing.Extension.ConstrainedPlacement.js"],"names":["__webpack_require__","r","__webpack_exports__","EventsEmitter","this","_events","AutodeskNamespace","prototype","on","events","fct","_this","split","forEach","event","push","off","undefined","splice","indexOf","emit","tmpArray","slice","i","length","result","apply","Array","call","arguments","guid","format","d","Date","getTime","replace","c","Math","random","floor","toString","Viewing","Extension","ConstrainedPlacement","SnapperTool","viewer","_tooltip","_snappedGeometry","_snappedGeometryType","_detectRadius","_onSelectionCancelled","_tool","_viewer","_names","_active","_vertexOverlayName","_faceOverlayName","_edgeOverlayName","_radius","_distanceToEdge","_distanceToVertex","_geomFace","_geomEdge","_geomVertex","_snapNode","_geomHighlighted","_intersectPoint","_faceNormal","_isDragging","_isSnapped","_selectionFilter","vertexSnap","geometry","drawPoint","edgeSnap","drawLine","faceSnap","drawFace","GeometryCallback","snapper","lineGeom","THREE","Geometry","circularArc","circularArcCenter","ellipticalArc","minDist","Number","MAX_VALUE","getNames","getName","activate","toolController","activateTool","deactivate","destroy","deactivateTool","getFace","getEdge","getVertex","getSnapNode","getHighlightGeometry","getIntersectPoint","getFaceNormal","getEndPointsInEdge","edge","vertices","endPoints","duplicate","j","equals","isSnapped","isEqualWithPrecision","a","b","isEqualVectorsWithPrecision","v1","v2","x","y","z","isInverseVectorsWithPrecision","snapping3D","dbId","fragIds","face","intersectPoint","fragId","fi","mesh","impl","getRenderProxy","model","faceSnapping","edgeSnapping","vertexSnapping","applyMatrix","matrixWorld","applyMatrix4","normalMatrix","Matrix3","getNormalMatrix","normal","applyMatrix3","normalize","setDetectRadius","radius","addSelectionFilter","filter","isArray","removeSelectionFilter","_","item","clearSelectionFilter","onVertexSnapped","callback","_onVertexSnapped","onEdgeSnapped","_onEdgeSnapped","onFaceSnapped","_onFaceSnapped","onGeometrySelected","_onGeometrySelected","onSelectionCancelled","showTooltip","show","text","style","visibility","innerHTML","vA","Vector3","vB","vC","geom","attributes","index","indices","array","ib","positions","vb","position","stride","vbstride","offsets","start","count","oi","set","faceNormal","Triangle","va","dot","vIndex","clone","faces","Face3","getTrianglesOnSameFace","isIncludeFace","vertexIndices","vc","intersectFace","vCount","k","trianglesSharedEdge","ci","a1","a2","a3","b1","b2","b3","c1","c2","c3","isEdge_12","isEdge_13","isEdge_23","minDistIndex","edgeGeom","matrix","Matrix4","getInverse","dist","distancePointToLine","getConnectedLineSegmentsOnSameLine","point","lineStart","lineEnd","distance","param","X0","X1","subVectors","distanceTo","cross","sqrt","edgeVertices","V0","V1","angleVector2","vector","atan","PI","onLineSegment","x1","y1","x2","y2","onCircularArc","cx","cy","end","Vector2","center","sub","angle","arc","CircleGeometry","onEllipticalArc","major","minor","tilt","equation","curve","EllipseCurve","Path","getPoints","createPointsGeometry","pop","snapping2D","gc","Autodesk","Private","VertexBufferReader","enumGeomsForObject","drawArc","SNAP_VERTEX","getDetectRadius","SNAP_EDGE","createOverlay","overlayName","createOverlayScene","addOverlay","clearOverlay","overlayScenes","material","MeshPhongMaterial","color","ambient","opacity","transparent","depthTest","depthWrite","side","DoubleSide","snapperPlane","Mesh","LineBasicMaterial","linewidth","line","Line","LinePieces","pointMesh","SphereGeometry","setPointScale","navapi","navigation","camera","getCamera","view","getEyeVector","getPosition","isPerspective","fov","getVerticalFov","worldHeight","tan","degToRad","viewport","getScreenViewport","devicePixelRatio","window","scale","height","updatePointScale","overlay","scene","children","p","is2d","drawIntersectFace","faceMesh","handleWheelInput","delta","handleButtonDown","button","type","handleButtonUp","handleMouseMove","top","canvasY","left","canvasX","hitTest","handleKeyDown","keyCode","removeOverlayScene","registerTool","document","createElement","className","container","appendChild","ConstrainedPlacementPanel","options","UI","DockingPanel","classList","add","onSnapperActivated","bind","onSnapperDeactivated","content","selectXBtn","selectYBtn","selectPtBtn","OKBtn","onclick","onSelectXAxis","onSelectYAxis","onSelectOrigin","onOK","xInput","yInput","setAttribute","oninput","onDistXChanged","onDistYChanged","Object","create","constructor","proto","edgeToUnitVector","v","mode","yAxis","xAxis","abs","angleTo","args","origin","onSelection","selections","clearSelection","xDist","target","value","yDist","setVisible","removeEventListener","AGGREGATE_SELECTION_CHANGED_EVENT","disableHighlight","addEventListener","Panel","module","locals","exports","ConstrainedPlacementExtension","createUI","load","console","log","unload","parentControl","removeControl","control","panel","onToolbarCreated","Button","icon","fontSize","setToolTip","onClick","onButtonClicked","viewerToolbar","getToolbar","getControl","addControl","createPanel","theExtensionManager","registerExtension"],"mappings":"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","file":"86.js","sourcesContent":["import './Viewing.Extension.ConstrainedPlacement.EventsEmitter'\nimport './Viewing.Extension.ConstrainedPlacement.SnapperTool'\nimport './Viewing.Extension.ConstrainedPlacement.Panel'\nimport './Viewing.Extension.ConstrainedPlacement.css'\nimport './Viewing.Extension.ConstrainedPlacement'\n","/// //////////////////////////////////////////////////////\n// EventsEmitter\n// by Philippe Leefsma, November 2017\n//\n/// //////////////////////////////////////////////////////\n(function () {\n  AutodeskNamespace('Viewing.Extension.ConstrainedPlacement')\n\n  'use strict'\n\n  function EventsEmitter () {\n    this._events = {}\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Supports multiple events space-separated\n  //\n  /// //////////////////////////////////////////////////////\n  EventsEmitter.prototype.on = function (events, fct) {\n    var _this = this\n\n    events.split(' ').forEach(function (event) {\n      _this._events[event] = _this._events[event]\t|| []\n      _this._events[event].push(fct)\n    })\n\n    return this\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Supports multiple events space-separated\n  //\n  /// //////////////////////////////////////////////////////\n  EventsEmitter.prototype.off = function (events, fct) {\n    var _this = this\n\n    if (events == undefined) {\n      _this._events = {}\n      return\n    }\n\n    events.split(' ').forEach(function (event) {\n      if (event in _this._events === false) { return }\n\n      if (fct) {\n        _this._events[event].splice(\n          _this._events[event].indexOf(fct), 1)\n      } else {\n        _this._events[event] = []\n      }\n    })\n\n    return this\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  EventsEmitter.prototype.emit = function (event /* , args... */) {\n    if (this._events[event] === undefined) { return null }\n\n    var tmpArray = this._events[event].slice()\n\n    for (var i = 0; i < tmpArray.length; ++i) {\n      var result = tmpArray[i].apply(this,\n        Array.prototype.slice.call(arguments, 1))\n\n      if (result !== undefined) {\n        return result\n      }\n    }\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  EventsEmitter.prototype.guid = function (format = 'xxxxxxxxxxxx') {\n    var d = new Date().getTime()\n\n    var guid = format.replace(\n      /[xy]/g,\n      function (c) {\n        var r = (d + Math.random() * 16) % 16 | 0\n        d = Math.floor(d / 16)\n        return (c == 'x' ? r : (r & 0x7 | 0x8)).toString(16)\n      })\n\n    return guid\n  }\n\n  Viewing.Extension.ConstrainedPlacement.EventsEmitter = EventsEmitter\n})()\n","(function () {\n  AutodeskNamespace('Viewing.Extension.ConstrainedPlacement')\n\n  function SnapperTool (viewer) {\n    var _events = this.events = new Viewing.Extension.ConstrainedPlacement.EventsEmitter()\n\n    var _tooltip = null\n\n    var _snappedGeometry = null\n    var _snappedGeometryType = null\n\n    var _detectRadius = 0.1\n\n    var _onSelectionCancelled = null\n\n    var SNAP_PRECISION = 0.001\n\n    var _tool = this\n\n    var _viewer = viewer\n\n    var _names = ['snapper-tool']\n    var _active = false\n\n    var _vertexOverlayName = 'MeasureTool-snapper-vertex'\n    var _faceOverlayName = 'MeasureTool-snapper-face'\n    var _edgeOverlayName = 'MeasureTool-snapper-edge'\n\n    var _radius = 0.05\n    var _distanceToEdge = null\n    var _distanceToVertex = null\n\n    var _geomFace = null\n    var _geomEdge = null\n    var _geomVertex = null\n    var _snapNode = null\n\n    var _geomHighlighted = null //  {\"VERTEX\": 0, \"EDGE\": 1, \"FACE\": 2}\n\n    var _intersectPoint = null\n    var _faceNormal = null\n\n    var _isDragging = false\n\n    var _snappingNode = null\n\n    var _isSnapped = false\n\n    var _selectionFilter = []\n\n    this.getNames = function () {\n      return _names\n    }\n\n    this.getName = function () {\n      return _names[0]\n    }\n\n    this.activate = function () {\n      if (!_active) {\n        _isDragging = false\n\n        _active = true\n\n        viewer.toolController.activateTool(\n          'snapper-tool')\n\n        _events.emit('activate')\n      }\n    }\n\n    this.deactivate = function () {\n      if (_active) {\n        _active = false\n\n        this.destroy()\n\n        viewer.toolController.deactivateTool(\n          'snapper-tool')\n\n        _events.emit('deactivate')\n      }\n    }\n\n    this.getFace = function () {\n      return _geomFace\n    }\n\n    this.getEdge = function () {\n      return _geomEdge\n    }\n\n    this.getVertex = function () {\n      return _geomVertex\n    }\n\n    this.getSnapNode = function () {\n      return _snapNode\n    }\n\n    this.getHighlightGeometry = function () {\n      return _geomHighlighted\n    }\n\n    this.getIntersectPoint = function () {\n      return _intersectPoint\n    }\n\n    this.getFaceNormal = function () {\n      return _faceNormal\n    }\n\n    this.getEndPointsInEdge = function (edge) {\n      var vertices = edge.vertices\n      var endPoints = []\n\n      for (var i = 0; i < vertices.length; ++i) {\n        var duplicate = false\n\n        for (var j = 0; j < vertices.length; ++j) {\n          if (j !== i && vertices[j].equals(vertices[i])) {\n            duplicate = true\n            break\n          }\n        }\n\n        if (!duplicate) {\n          endPoints.push(vertices[i])\n        }\n      }\n\n      return endPoints\n    }\n\n    this.isSnapped = function () {\n      return _isSnapped\n    }\n\n    this.isEqualWithPrecision = function (a, b) {\n      if (a <= b + SNAP_PRECISION && a >= b - SNAP_PRECISION) {\n        return true\n      }\n\n      return false\n    }\n\n    this.isEqualVectorsWithPrecision = function (v1, v2) {\n      if (v1.x <= v2.x + SNAP_PRECISION && v1.x >= v2.x - SNAP_PRECISION && v1.y <= v2.y + SNAP_PRECISION && v1.y >= v2.y - SNAP_PRECISION &&\n        v1.z <= v2.z + SNAP_PRECISION && v1.z >= v2.z - SNAP_PRECISION) {\n        return true\n      }\n\n      return false\n    }\n\n    this.isInverseVectorsWithPrecision = function (v1, v2) {\n      if (v1.x <= -v2.x + SNAP_PRECISION && v1.x >= -v2.x - SNAP_PRECISION && v1.y <= -v2.y + SNAP_PRECISION && v1.y >= -v2.y - SNAP_PRECISION &&\n        v1.z <= -v2.z + SNAP_PRECISION && v1.z >= -v2.z - SNAP_PRECISION) {\n        return true\n      }\n\n      return false\n    }\n\n    /**\n     * 3D Snapping\n     * @param result -Result of Hit Test.\n     */\n    this.snapping3D = function (result) {\n      _snapNode = result.dbId\n\n      var face = result.face\n      var intersectPoint = result.intersectPoint\n      var fragIds\n\n      if (result.fragId.length === undefined) {\n        fragIds = [result.fragId]\n      } else {\n        fragIds = result.fragId\n      }\n\n      for (var fi = 0; fi < fragIds.length; ++fi) {\n        var fragId = fragIds[fi]\n        var mesh = _viewer.impl.getRenderProxy(_viewer.model, fragId)\n        var geometry = mesh.geometry\n\n        _geomFace = this.faceSnapping(face, geometry)\n\n        if (_geomFace) {\n          _geomEdge = this.edgeSnapping(_geomFace, intersectPoint, mesh)\n\n          _geomVertex = this.vertexSnapping(_geomEdge, intersectPoint)\n\n          _geomFace.applyMatrix(mesh.matrixWorld)\n          _geomEdge.applyMatrix(mesh.matrixWorld)\n          _geomVertex.applyMatrix4(mesh.matrixWorld)\n\n          _intersectPoint = intersectPoint.applyMatrix4(mesh.matrixWorld)\n\n          var normalMatrix = new THREE.Matrix3().getNormalMatrix(mesh.matrixWorld)\n          _faceNormal = face.normal.applyMatrix3(normalMatrix).normalize()\n\n          // Determine which one should be drawn: face , edge or vertex\n          // _radius = this.getDetectRadius(_intersectPoint);\n\n          _isSnapped = true\n\n          if (_distanceToVertex < _detectRadius) {\n            if (vertexSnap(_geomVertex)) { return }\n          }\n\n          if (_distanceToEdge < _detectRadius) {\n            if (edgeSnap(_geomEdge)) { return }\n          }\n\n          faceSnap(_geomFace)\n\n          break\n        }\n      }\n    }\n\n    this.setDetectRadius = function (radius) {\n      _detectRadius = radius\n    }\n\n    this.addSelectionFilter = function (filter) {\n      if (Array.isArray(filter)) {\n        _selectionFilter = filter\n      } else {\n        _selectionFilter.push(filter)\n      }\n    }\n\n    this.removeSelectionFilter = function (filter) {\n      if (Array.isArray(filter)) {\n        _selectionFilter = _.filter(\n          _selectionFilter, function (item) {\n            return filter.indexOf(item) < 0\n          })\n      } else {\n        _selectionFilter = _.filter(\n          _selectionFilter, function (item) {\n            return item != filter\n          })\n      }\n    }\n\n    this.clearSelectionFilter = function () {\n      _selectionFilter = []\n    }\n\n    this.onVertexSnapped = function (callback) {\n      _onVertexSnapped = callback\n    }\n\n    this.onEdgeSnapped = function (callback) {\n      _onEdgeSnapped = callback\n    }\n\n    this.onFaceSnapped = function (callback) {\n      _onFaceSnapped = callback\n    }\n\n    this.onGeometrySelected = function (callback) {\n      _onGeometrySelected = callback\n    }\n\n    this.onSelectionCancelled = function (callback) {\n      _onSelectionCancelled = callback\n    }\n\n    function vertexSnap (geometry) {\n      if (!_selectionFilter.length || _selectionFilter.indexOf('vertex') > -1) {\n        _snappedGeometry = geometry\n\n        _snappedGeometryType = 'vertex'\n\n        if (_events.emit('vertex.snapped', geometry)) {\n          return false\n        }\n\n        _tool.drawPoint(geometry)\n\n        return true\n      }\n\n      return false\n    }\n\n    function edgeSnap (geometry) {\n      if (!_selectionFilter.length || _selectionFilter.indexOf('edge') > -1) {\n        _snappedGeometry = geometry\n\n        _snappedGeometryType = 'edge'\n\n        if (_events.emit('edge.snapped', geometry)) {\n          return false\n        }\n\n        _tool.drawLine(geometry)\n\n        return true\n      }\n\n      return false\n    }\n\n    function faceSnap (geometry) {\n      if (!_selectionFilter.length || _selectionFilter.indexOf('face') > -1) {\n        _snappedGeometry = geometry\n\n        _snappedGeometryType = 'face'\n\n        if (_events.emit('face.snapped', geometry)) {\n          return false\n        }\n\n        _tool.drawFace(geometry)\n\n        return true\n      }\n\n      return false\n    }\n\n    function createTooltip () {\n      _tooltip = document.createElement('div')\n\n      _tooltip.className = 'snapper-tooltip'\n\n      viewer.container.appendChild(_tooltip)\n    }\n\n    this.showTooltip = function (show, text) {\n      _tooltip.style.visibility = show\n        ? 'visible'\n        : 'hidden'\n\n      _tooltip.innerHTML = text\n    }\n\n    /// //////////////////////////////////////////////////////\n    // Generates random guid\n    //\n    /// //////////////////////////////////////////////////////\n    function guid () {\n      var d = new Date().getTime()\n\n      var guid = 'xxxx-xxxx-xxxx'.replace(\n        /[xy]/g,\n        function (c) {\n          var r = (d + Math.random() * 16) % 16 | 0\n          d = Math.floor(d / 16)\n          return (c == 'x' ? r : (r & 0x7 | 0x8)).toString(16)\n        })\n\n      return guid\n    }\n\n    /**\n     * Find the closest face next to the cast ray\n     * @param face - the intersect triangle of Hit Test.\n     * @param geometry - the geometry of mesh\n     */\n    this.faceSnapping = function (face, geometry) {\n      var vA = new THREE.Vector3()\n      var vB = new THREE.Vector3()\n      var vC = new THREE.Vector3()\n\n      var geom = new THREE.Geometry() // Geometry which includes all the triangles on the same plane.\n\n      var attributes = geometry.attributes\n\n      if (attributes.index !== undefined) {\n        var indices = attributes.index.array || geometry.ib\n        var positions = geometry.vb ? geometry.vb : attributes.position.array\n        var stride = geometry.vb ? geometry.vbstride : 3\n        var offsets = geometry.offsets\n\n        if (!offsets || offsets.length === 0) {\n          offsets = [{ start: 0, count: indices.length, index: 0 }]\n        }\n\n        for (var oi = 0; oi < offsets.length; ++oi) {\n          var start = offsets[oi].start\n          var count = offsets[oi].count\n          var index = offsets[oi].index\n\n          for (var i = start; i < start + count; i += 3) {\n            var a = index + indices[i]\n            var b = index + indices[i + 1]\n            var c = index + indices[i + 2]\n\n            vA.set(\n              positions[a * stride],\n              positions[a * stride + 1],\n              positions[a * stride + 2]\n            )\n            vB.set(\n              positions[b * stride],\n              positions[b * stride + 1],\n              positions[b * stride + 2]\n            )\n            vC.set(\n              positions[c * stride],\n              positions[c * stride + 1],\n              positions[c * stride + 2]\n            )\n\n            var faceNormal = THREE.Triangle.normal(vA, vB, vC)\n\n            var va = new THREE.Vector3()\n            va.set(\n              positions[face.a * stride],\n              positions[face.a * stride + 1],\n              positions[face.a * stride + 2]\n            )\n\n            if (this.isEqualVectorsWithPrecision(faceNormal, face.normal) && this.isEqualWithPrecision(faceNormal.dot(vA), face.normal.dot(va))) {\n              var vIndex = geom.vertices.length\n\n              geom.vertices.push(vA.clone())\n              geom.vertices.push(vB.clone())\n              geom.vertices.push(vC.clone())\n\n              geom.faces.push(new THREE.Face3(vIndex, vIndex + 1, vIndex + 2))\n            }\n          }\n        }\n      }\n\n      if (geom.vertices.length > 0) {\n        return this.getTrianglesOnSameFace(geom, face, positions, stride)\n      } else {\n        return null\n      }\n    }\n\n    /**\n     * Find triangles on the same face with the triangle intersected with the cast ray\n     * @param geom -Geometry which includes all the triangles on the same plane.\n     * @param face -Triangle which intersects with the cast ray.\n     * @param positions -Positions of all vertices.\n     * @param stride -Stride for the interleaved buffer.\n     */\n    this.getTrianglesOnSameFace = function (geom, face, positions, stride) {\n      var isIncludeFace = false // Check if the intersect face is in the mesh\n      var vertexIndices = geom.vertices.slice()\n\n      var va = new THREE.Vector3()\n      va.set(\n        positions[face.a * stride],\n        positions[face.a * stride + 1],\n        positions[face.a * stride + 2]\n      )\n      var vb = new THREE.Vector3()\n      vb.set(\n        positions[face.b * stride],\n        positions[face.b * stride + 1],\n        positions[face.b * stride + 2]\n      )\n      var vc = new THREE.Vector3()\n      vc.set(\n        positions[face.c * stride],\n        positions[face.c * stride + 1],\n        positions[face.c * stride + 2]\n      )\n      var intersectFace = new THREE.Geometry()\n      intersectFace.vertices.push(va)\n      intersectFace.vertices.push(vb)\n      intersectFace.vertices.push(vc)\n      intersectFace.faces.push(new THREE.Face3(0, 1, 2))\n\n      var vCount = []\n\n      do {\n        vCount = []\n\n        for (var j = 0; j < vertexIndices.length; j += 3) {\n          // The triangle which is intersected with the ray\n          if (vertexIndices[j].equals(va) && vertexIndices[j + 1].equals(vb) && vertexIndices[j + 2].equals(vc)) {\n            isIncludeFace = true\n            vCount.push(j)\n            continue\n          }\n\n          for (var k = 0; k < intersectFace.vertices.length; k += 3) {\n            // The triangles which are on the same face with the intersected triangle\n            if (this.trianglesSharedEdge(vertexIndices[j], vertexIndices[j + 1], vertexIndices[j + 2],\n              intersectFace.vertices[k], intersectFace.vertices[k + 1], intersectFace.vertices[k + 2])) {\n              var vIndex = intersectFace.vertices.length\n              intersectFace.vertices.push(vertexIndices[j].clone())\n              intersectFace.vertices.push(vertexIndices[j + 1].clone())\n              intersectFace.vertices.push(vertexIndices[j + 2].clone())\n              intersectFace.faces.push(new THREE.Face3(vIndex, vIndex + 1, vIndex + 2))\n\n              vCount.push(j)\n              break\n            }\n          }\n        }\n\n        for (var ci = vCount.length - 1; ci >= 0; --ci) {\n          vertexIndices.splice(vCount[ci], 3)\n        }\n      } while (vCount.length > 0)\n\n      if (isIncludeFace) {\n        return intersectFace\n      } else {\n        return null\n      }\n    }\n\n    /**\n     * Check if the two triangle share edge, the inputs are their vertices\n     */\n    this.trianglesSharedEdge = function (a1, a2, a3, b1, b2, b3) {\n      var c1 = false\n      var c2 = false\n      var c3 = false\n\n      if (a1.equals(b1) || a1.equals(b2) || a1.equals(b3)) {\n        c1 = true\n      }\n      if (a2.equals(b1) || a2.equals(b2) || a2.equals(b3)) {\n        c2 = true\n      }\n      if (a3.equals(b1) || a3.equals(b2) || a3.equals(b3)) {\n        c3 = true\n      }\n\n      if (c1 & c2 || c1 & c3 || c2 & c3) {\n        return true\n      }\n\n      return false\n    }\n\n    /**\n     * Find the closest edge next to the intersect point\n     * @param face -Face which is found by faceSnapping.\n     * @param intersectPoint -IntersectPoint between cast ray and face.\n     * @param mesh -The whole mesh of one fragment.\n     */\n    this.edgeSnapping = function (face, intersectPoint, mesh) {\n      var lineGeom = new THREE.Geometry()\n      var isEdge_12 = true\n      var isEdge_13 = true\n      var isEdge_23 = true\n\n      for (var i = 0; i < face.vertices.length; i += 3) {\n        for (var j = 0; j < face.vertices.length; j += 3) {\n          if (i !== j) {\n            // Check edge 12\n            if ((face.vertices[i].equals(face.vertices[j]) || face.vertices[i].equals(face.vertices[j + 1]) ||\n              face.vertices[i].equals(face.vertices[j + 2])) &&\n              (face.vertices[i + 1].equals(face.vertices[j]) || face.vertices[i + 1].equals(face.vertices[j + 1]) ||\n              face.vertices[i + 1].equals(face.vertices[j + 2]))) {\n              isEdge_12 = false\n            }\n            // Check edge 13\n            if ((face.vertices[i].equals(face.vertices[j]) || face.vertices[i].equals(face.vertices[j + 1]) ||\n              face.vertices[i].equals(face.vertices[j + 2])) &&\n              (face.vertices[i + 2].equals(face.vertices[j]) || face.vertices[i + 2].equals(face.vertices[j + 1]) ||\n              face.vertices[i + 2].equals(face.vertices[j + 2]))) {\n              isEdge_13 = false\n            }\n            // Check edge 23\n            if ((face.vertices[i + 1].equals(face.vertices[j]) || face.vertices[i + 1].equals(face.vertices[j + 1]) ||\n              face.vertices[i + 1].equals(face.vertices[j + 2])) &&\n              (face.vertices[i + 2].equals(face.vertices[j]) || face.vertices[i + 2].equals(face.vertices[j + 1]) ||\n              face.vertices[i + 2].equals(face.vertices[j + 2]))) {\n              isEdge_23 = false\n            }\n          }\n        }\n\n        if (isEdge_12) {\n          lineGeom.vertices.push(face.vertices[i].clone())\n          lineGeom.vertices.push(face.vertices[i + 1].clone())\n        }\n        if (isEdge_13) {\n          lineGeom.vertices.push(face.vertices[i].clone())\n          lineGeom.vertices.push(face.vertices[i + 2].clone())\n        }\n        if (isEdge_23) {\n          lineGeom.vertices.push(face.vertices[i + 1].clone())\n          lineGeom.vertices.push(face.vertices[i + 2].clone())\n        }\n\n        isEdge_12 = true\n        isEdge_13 = true\n        isEdge_23 = true\n      }\n\n      // return lineGeom;\n\n      var edgeGeom = new THREE.Geometry()\n      var minDistIndex\n      var minDist = Number.MAX_VALUE\n      var matrix = new THREE.Matrix4()\n      matrix.getInverse(mesh.matrixWorld)\n      intersectPoint.applyMatrix4(matrix)\n\n      for (var k = 0; k < lineGeom.vertices.length; k += 2) {\n        var dist = this.distancePointToLine(intersectPoint, lineGeom.vertices[k], lineGeom.vertices[k + 1])\n\n        if (dist < minDist) {\n          minDist = dist\n          minDistIndex = k\n        }\n      }\n\n      edgeGeom.vertices.push(lineGeom.vertices[minDistIndex].clone())\n      edgeGeom.vertices.push(lineGeom.vertices[minDistIndex + 1].clone())\n\n      edgeGeom.vertices = this.getConnectedLineSegmentsOnSameLine(lineGeom, edgeGeom.vertices)\n\n      _distanceToEdge = minDist\n\n      return edgeGeom\n    }\n\n    this.distancePointToLine = function (point, lineStart, lineEnd) {\n      var X0 = new THREE.Vector3()\n      var X1 = new THREE.Vector3()\n      var distance\n      var param\n\n      X0.subVectors(lineStart, point)\n      X1.subVectors(lineEnd, lineStart)\n      param = X0.dot(X1)\n      X0.subVectors(lineEnd, lineStart)\n      param = -param / X0.dot(X0)\n\n      if (param < 0) {\n        distance = point.distanceTo(lineStart)\n      } else if (param > 1) {\n        distance = point.distanceTo(lineEnd)\n      } else {\n        X0.subVectors(point, lineStart)\n        X1.subVectors(point, lineEnd)\n        X0.cross(X1)\n        X1.subVectors(lineEnd, lineStart)\n\n        distance = Math.sqrt(X0.dot(X0)) / Math.sqrt(X1.dot(X1))\n      }\n\n      return distance\n    }\n\n    this.getConnectedLineSegmentsOnSameLine = function (lineGeom, edgeVertices) {\n      var vertices = lineGeom.vertices.slice()\n      var va = edgeVertices[0]\n      var vb = edgeVertices[1]\n\n      var vCount = []\n\n      do {\n        vCount = []\n\n        for (var j = 0; j < vertices.length; j += 2) {\n          // The line which has min distance to intersection point\n          if (vertices[j].equals(va) && vertices[j + 1].equals(vb)) {\n            continue\n          }\n\n          for (var k = 0; k < edgeVertices.length; k += 2) {\n            // The line segments which are connected on the same line\n            if (vertices[j].equals(edgeVertices[k]) || vertices[j + 1].equals(edgeVertices[k]) ||\n              vertices[j].equals(edgeVertices[k + 1]) || vertices[j + 1].equals(edgeVertices[k + 1])) {\n              var V0 = new THREE.Vector3()\n              var V1 = new THREE.Vector3()\n\n              V0.subVectors(edgeVertices[k], edgeVertices[k + 1])\n              V0.normalize()\n              V1.subVectors(vertices[j], vertices[j + 1])\n              V1.normalize()\n\n              // if (V0.equals(V1) || V0.equals(V1.negate())) {\n              if (this.isEqualVectorsWithPrecision(V0, V1) || this.isInverseVectorsWithPrecision(V0, V1)) {\n                vCount.push(j)\n                break\n              }\n            }\n          }\n        }\n\n        for (var ci = vCount.length - 1; ci >= 0; --ci) {\n          edgeVertices.push(vertices[vCount[ci]])\n          edgeVertices.push(vertices[vCount[ci] + 1])\n          vertices.splice(vCount[ci], 2)\n        }\n      } while (vCount.length > 0)\n\n      return edgeVertices\n    }\n\n    /**\n     * Find the closest vertex next to the intersect point\n     * @param edge -Edge which is found by edgeSnapping.\n     * @param intersectPoint -IntersectPoint between cast ray and face.\n     */\n    this.vertexSnapping = function (edge, intersectPoint) {\n      var minDist = Number.MAX_VALUE\n      var point\n\n      for (var i = 0; i < edge.vertices.length; ++i) {\n        var dist = intersectPoint.distanceTo(edge.vertices[i])\n\n        if (dist < minDist - SNAP_PRECISION) {\n          minDist = dist\n          point = edge.vertices[i].clone()\n        }\n      }\n\n      _distanceToVertex = minDist\n\n      return point\n    }\n\n    this.angleVector2 = function (vector) {\n      if (vector.x > 0 && vector.y >= 0) {\n        return Math.atan(vector.y / vector.x)\n      } else if (vector.x >= 0 && vector.y < 0) {\n        return Math.atan(vector.y / vector.x) + Math.PI * 2\n      } else if (vector.x < 0 && vector.y <= 0) {\n        return Math.atan(vector.y / vector.x) + Math.PI\n      } else if (vector.x <= 0 && vector.y > 0) {\n        return Math.atan(vector.y / vector.x) + Math.PI\n      } else { // x = 0, y = 0\n        return null\n      }\n    }\n\n    function GeometryCallback (viewer, snapper) {\n      this.viewer = viewer\n      this.snapper = snapper\n\n      this.lineGeom = new THREE.Geometry()\n      this.circularArc = null\n      this.circularArcCenter\n      this.ellipticalArc = null\n\n      this.minDist = Number.MAX_VALUE\n    }\n\n    GeometryCallback.prototype.onLineSegment = function (x1, y1, x2, y2) {\n      // stderr(\"line segment\");\n      var vertices = this.lineGeom.vertices\n      var v1 = new THREE.Vector3(x1, y1, 0)\n      var v2 = new THREE.Vector3(x2, y2, 0)\n\n      var intersectPoint = this.snapper.getIntersectPoint()\n      var dist = this.snapper.distancePointToLine(intersectPoint, v1, v2)\n      if (dist < this.minDist) {\n        vertices.splice(0, 2, v1, v2)\n        this.minDist = dist\n      }\n    }\n\n    GeometryCallback.prototype.onCircularArc = function (cx, cy, start, end, radius) {\n      // stderr(\"circular arc\");\n      var intersectPoint = this.snapper.getIntersectPoint()\n      var point = new THREE.Vector2(intersectPoint.x, intersectPoint.y)\n\n      var center = new THREE.Vector2(cx, cy)\n      var dist = point.distanceTo(center)\n      point.sub(center)\n\n      var angle = this.snapper.angleVector2(point)\n\n      if (dist <= radius + 0.1 && dist >= radius - 0.1) {\n        if (end > start && angle >= start && angle <= end) {\n          var arc = new THREE.CircleGeometry(radius, 100, start, end - start)\n        } else if (end < start && (angle >= start || angle <= end)) {\n          var arc = new THREE.CircleGeometry(radius, 100, start, Math.PI * 2 - start + end)\n        } else {\n          return\n        }\n        arc.vertices.splice(0, 1)\n        this.circularArc = arc\n        this.circularArcCenter = new THREE.Vector3(cx, cy, 0)\n      }\n    }\n\n    GeometryCallback.prototype.onEllipticalArc = function (cx, cy, start, end, major, minor, tilt) {\n      // stderr(\"elliptical arc\");\n      // console.log(\"cx \" + cx + \" cy \" + cy + \" major \" + major + \" minor \" + minor + \" start \" + start + \" end \" + end + \" tilt \" + tilt);\n      var intersectPoint = this.snapper.getIntersectPoint()\n      var point = new THREE.Vector2(intersectPoint.x, intersectPoint.y)\n\n      var equation = (point.x - cx) * (point.x - cx) / (major * major) + (point.y - cy) * (point.y - cy) / (minor * minor)\n\n      var center = new THREE.Vector2(cx, cy)\n      point.sub(center)\n      point.x *= minor\n      point.y *= major\n      var angle = this.snapper.angleVector2(point)\n\n      if (end > Math.PI * 2) {\n        end = Math.PI * 2\n      }\n\n      if (equation <= 1 + 0.1 && equation >= 1 - 0.1) {\n        if ((end > start && angle >= start && angle <= end) || (end < start && (angle >= start || angle <= end))) {\n          var curve = new THREE.EllipseCurve(cx, cy, major, minor, start, end, false)\n          var path = new THREE.Path(curve.getPoints(50))\n          var arc = path.createPointsGeometry(50)\n\n          if (!this.isEqualWithPrecision(end - start, Math.PI * 2)) {\n            arc.vertices.pop()\n          }\n          this.ellipticalArc = arc\n        }\n      }\n    }\n\n    this.snapping2D = function (result) {\n      if (!result) {\n        return\n      }\n\n      var intersectPoint = result.intersectPoint\n      var fragIds = result.fragId\n\n      if (typeof fragIds === 'undefined') {\n        return\n      } else if (!Array.isArray(fragIds)) {\n        fragIds = [fragIds]\n      }\n\n      _intersectPoint = intersectPoint\n\n      var gc = new GeometryCallback(_viewer, this)\n\n      for (var fi = 0; fi < fragIds.length; ++fi) {\n        var mesh = _viewer.impl.getRenderProxy(_viewer.model, fragIds[fi])\n\n        var vbr = new Autodesk.Viewing.Private.VertexBufferReader(mesh.geometry)\n        vbr.enumGeomsForObject(result.dbId, gc)\n      }\n\n      if (gc.circularArc) {\n        this.drawArc(gc.circularArc, gc.circularArcCenter)\n        gc.circularArc = null\n\n        _geomVertex = gc.circularArcCenter\n\n        _geomHighlighted = SNAP_VERTEX\n\n        _isSnapped = true\n      } else if (gc.ellipticalArc) {\n        this.drawArc(gc.ellipticalArc)\n        gc.ellipticalArc = null\n      } else if (gc.lineGeom.vertices.length) {\n        // Determine which one should be drawn: line segment or point\n        _radius = this.getDetectRadius(intersectPoint)\n\n        if (intersectPoint.distanceTo(gc.lineGeom.vertices[0]) < _radius) {\n          _geomVertex = gc.lineGeom.vertices[0]\n          this.drawPoint(_geomVertex)\n          _geomHighlighted = SNAP_VERTEX\n        } else if (intersectPoint.distanceTo(gc.lineGeom.vertices[1]) < _radius) {\n          _geomVertex = gc.lineGeom.vertices[1]\n          this.drawPoint(_geomVertex)\n          _geomHighlighted = SNAP_VERTEX\n        } else {\n          _geomEdge = gc.lineGeom\n          this.drawLine(_geomEdge)\n          _geomHighlighted = SNAP_EDGE\n        }\n\n        _isSnapped = true\n      }\n    }\n\n    this.createOverlay = function (overlayName) {\n      _viewer.impl.createOverlayScene(overlayName)\n    }\n\n    this.addOverlay = function (overlayName, mesh) {\n      _viewer.impl.addOverlay(overlayName, mesh)\n    }\n\n    this.clearOverlay = function () {\n      if (_viewer.impl.overlayScenes[_faceOverlayName]) {\n        _viewer.impl.clearOverlay(_faceOverlayName)\n      }\n\n      if (_viewer.impl.overlayScenes[_vertexOverlayName]) {\n        _viewer.impl.clearOverlay(_vertexOverlayName)\n      }\n\n      if (_viewer.impl.overlayScenes[_edgeOverlayName]) {\n        _viewer.impl.clearOverlay(_edgeOverlayName)\n      }\n    }\n\n    /**\n     * Draw the planar face\n     * @param geom -Geometry which needs to be draw.\n     * @param mesh -Mesh which is loaded.\n     */\n    this.drawFace = function (geom) {\n      this.createOverlay(_faceOverlayName)\n\n      var planeColor = 0x00CC00\n      var planeOpacity = 0.5\n\n      var material = new THREE.MeshPhongMaterial({\n        color: planeColor,\n        ambient: planeColor,\n        opacity: planeOpacity,\n        transparent: true,\n        depthTest: false,\n        depthWrite: false,\n        side: THREE.DoubleSide\n      })\n\n      // geom.attributes.index.array = new geom.attributes.index.array.constructor(indicesNew);\n      var snapperPlane = new THREE.Mesh(geom, material, true)\n      // snapperPlane.matrixWorld = mesh.matrixWorld;\n\n      this.addOverlay(_faceOverlayName, snapperPlane)\n    }\n\n    this.drawLine = function (geom) {\n      this.createOverlay(_edgeOverlayName)\n\n      var material = new THREE.LineBasicMaterial({\n        color: 0x00CC00,\n        opacity: 0.5,\n        linewidth: 10,\n        depthTest: false,\n        depthWrite: false\n      })\n\n      var line = new THREE.Line(geom, material, THREE.LinePieces)\n      // line.applyMatrix(mesh.matrixWorld);\n\n      this.addOverlay(_edgeOverlayName, line)\n    }\n\n    this.drawArc = function (geom, center) {\n      this.createOverlay(_edgeOverlayName)\n\n      var material = new THREE.LineBasicMaterial({\n        color: 0x00CC00,\n        opacity: 0.5,\n        linewidth: 10,\n        depthTest: false,\n        depthWrite: false\n      })\n\n      var arc = new THREE.Line(geom, material)\n      if (center) {\n        arc.position.set(center.x, center.y, center.z)\n      }\n\n      this.addOverlay(_edgeOverlayName, arc)\n    }\n\n    this.drawPoint = function (point) {\n      this.createOverlay(_vertexOverlayName)\n\n      var planeColor = 0x00CC00\n      var planeOpacity = 0.5\n\n      var material = new THREE.MeshPhongMaterial({\n        color: planeColor,\n        ambient: planeColor,\n        opacity: planeOpacity,\n        transparent: true,\n        depthTest: false,\n        depthWrite: false\n      })\n\n      var pointMesh = new THREE.Mesh(new THREE.SphereGeometry(2.0), material)\n      // point.applyMatrix4(mesh.matrixWorld);\n      pointMesh.position.set(point.x, point.y, point.z)\n\n      this.setPointScale(pointMesh)\n\n      this.addOverlay(_vertexOverlayName, pointMesh)\n    }\n\n    this.setPointScale = function (pointMesh) {\n      var pixelSize = 5\n\n      var navapi = _viewer.navigation\n      var camera = navapi.getCamera()\n\n      var view = navapi.getEyeVector()\n      var position = navapi.getPosition()\n\n      var point = pointMesh.position.clone()\n\n      var distance = camera.isPerspective ? point.sub(position).dot(view.normalize())\n        : navapi.getEyeVector().length()\n\n      var fov = navapi.getVerticalFov()\n      var worldHeight = 2.0 * distance * Math.tan(THREE.Math.degToRad(fov * 0.5))\n\n      var viewport = navapi.getScreenViewport()\n      var devicePixelRatio = window.devicePixelRatio || 1\n      var scale = pixelSize * worldHeight / (viewport.height * devicePixelRatio)\n\n      pointMesh.scale.x = scale\n      pointMesh.scale.y = scale\n      pointMesh.scale.z = scale\n    }\n\n    this.updatePointScale = function () {\n      var overlay = _viewer.impl.overlayScenes[_vertexOverlayName]\n      if (overlay) {\n        var scene = overlay.scene\n\n        for (var i = 0; i < scene.children.length; i++) {\n          var pointMesh = scene.children[i]\n          if (pointMesh) {\n            this.setPointScale(pointMesh)\n          }\n        }\n      }\n    }\n\n    this.getDetectRadius = function (point) {\n      var pixelSize = 1.5\n\n      var navapi = _viewer.navigation\n      var camera = navapi.getCamera()\n\n      var view = navapi.getEyeVector()\n      var position = navapi.getPosition()\n\n      var p = point.clone()\n\n      var distance = camera.isPerspective ? p.sub(position).dot(view.normalize())\n        : navapi.getEyeVector().length()\n\n      var fov = navapi.getVerticalFov()\n      var worldHeight = 2.0 * distance * Math.tan(THREE.Math.degToRad(fov * 0.5))\n\n      var viewport = navapi.getScreenViewport()\n      var devicePixelRatio = window.devicePixelRatio || 1\n      var radius = pixelSize * worldHeight / (viewport.height * devicePixelRatio)\n\n      if (_viewer.impl.is2d) {\n        radius *= 10\n      }\n\n      return radius\n    }\n\n    this.drawIntersectFace = function (face, positions, stride, mesh) {\n      this.createOverlay()\n\n      var va = new THREE.Vector3()\n      va.set(\n        positions[face.a * stride],\n        positions[face.a * stride + 1],\n        positions[face.a * stride + 2]\n      )\n      var vb = new THREE.Vector3()\n      vb.set(\n        positions[face.b * stride],\n        positions[face.b * stride + 1],\n        positions[face.b * stride + 2]\n      )\n      var vc = new THREE.Vector3()\n      vc.set(\n        positions[face.c * stride],\n        positions[face.c * stride + 1],\n        positions[face.c * stride + 2]\n      )\n\n      var intersectFace = new THREE.Geometry()\n      intersectFace.vertices.push(va)\n      intersectFace.vertices.push(vb)\n      intersectFace.vertices.push(vc)\n      intersectFace.faces.push(new THREE.Face3(0, 1, 2))\n\n      var faceMesh = new THREE.Mesh(intersectFace, mesh.material, true)\n      faceMesh.matrixWorld = mesh.matrixWorld\n\n      this.addOverlay(faceMesh)\n    }\n\n    this.handleWheelInput = function (delta) {\n      this.updatePointScale()\n      return false\n    }\n\n    this.handleButtonDown = function (event, button) {\n      _isDragging = true\n\n      _events.emit('geometry.selected', {\n        geometry: _snappedGeometry,\n        type: _snappedGeometryType\n      })\n\n      return false\n    }\n\n    this.handleButtonUp = function (event, button) {\n      _isDragging = false\n      return false\n    }\n\n    this.handleMouseMove = function (event) {\n      _tooltip.style.top = event.canvasY - 30 + 'px'\n      _tooltip.style.left = event.canvasX + 'px'\n\n      if (!_isDragging) {\n        if (_snappingNode) {\n          _viewer.impl.matman().highlightObject2D(_snappingNode.dbId, false)\n        }\n\n        _snappedGeometry = null\n\n        this.clearOverlay()\n\n        _geomFace = null\n        _geomEdge = null\n        _geomVertex = null\n\n        _isSnapped = false\n\n        // var result = _viewer.impl.snappingHitTest(event.canvasX, event.canvasY, false)\n\n        var result = _viewer.impl.hitTest(event.canvasX, event.canvasY, false)\n\n        if (result && result.intersectPoint) {\n          // 3D Snapping\n          if (result.face) {\n            this.snapping3D(result)\n          }\n          // 2D Snapping\n          else {\n            this.snapping2D(result)\n          }\n        }\n      }\n      return false\n    }\n\n    this.handleKeyDown = function (event, keyCode) {\n      // ESCAPE\n      if (keyCode == 27) {\n        if (_onSelectionCancelled) {\n          _onSelectionCancelled()\n          _onSelectionCancelled = null\n        }\n\n        return true\n      }\n\n      return false\n    }\n\n    this.destroy = function () {\n      this.clearOverlay()\n\n      _viewer.impl.removeOverlayScene(_faceOverlayName)\n      _viewer.impl.removeOverlayScene(_vertexOverlayName)\n      _viewer.impl.removeOverlayScene(_edgeOverlayName)\n\n      _tooltip.style.visibility = 'hidden'\n    }\n\n    viewer.toolController.registerTool(this)\n\n    createTooltip()\n  }\n\n  Viewing.Extension.ConstrainedPlacement.SnapperTool = SnapperTool\n})()\n","/// //////////////////////////////////////////////////////\n// Viewing.Extension.ConstrainedPlacement\n// by Philippe Leefsma, November 2017\n//\n/// //////////////////////////////////////////////////////\n(function () {\n  'use strict'\n\n  AutodeskNamespace('Viewing.Extension.ConstrainedPlacement')\n\n  function ConstrainedPlacementPanel (viewer, options) {\n    this.events = new Viewing.Extension.ConstrainedPlacement.EventsEmitter()\n\n    Autodesk.Viewing.UI.DockingPanel.call(\n      this, viewer.container,\n      'constrained-placement-panel',\n      'Constrained Placement')\n\n    this.container.classList.add(\n      'constrained-placement')\n\n    this.snapper = options.snapper\n\n    this.snapper.events.on('activate',\n      this.onSnapperActivated.bind(this))\n\n    this.snapper.events.on('deactivate',\n      this.onSnapperDeactivated.bind(this))\n\n    this.snapper.events.on('edge.snapped',\n      this.onEdgeSnapped.bind(this))\n\n    this.snapper.events.on('geometry.selected',\n      this.onGeometrySelected.bind(this))\n\n    this.viewer = viewer\n\n    var content = document.createElement('div')\n\n    content.className = 'content'\n\n    this.selectXBtn = document.createElement('button')\n    this.selectYBtn = document.createElement('button')\n    this.selectPtBtn = document.createElement('button')\n    this.OKBtn = document.createElement('button')\n\n    this.selectXBtn.innerHTML = 'Select X Axis'\n    this.selectYBtn.innerHTML = 'Select Y Axis'\n    this.selectPtBtn.innerHTML = 'Select Origin'\n    this.OKBtn.innerHTML = 'OK'\n\n    this.selectXBtn.onclick = this.onSelectXAxis.bind(this)\n    this.selectYBtn.onclick = this.onSelectYAxis.bind(this)\n    this.selectPtBtn.onclick = this.onSelectOrigin.bind(this)\n    this.OKBtn.onclick = this.onOK.bind(this)\n\n    this.OKBtn.className = 'ok'\n\n    this.xInput = document.createElement('input')\n    this.yInput = document.createElement('input')\n\n    this.xInput.setAttribute('type', 'text')\n    this.yInput.setAttribute('type', 'text')\n\n    content.appendChild(this.selectXBtn)\n    content.appendChild(this.xInput)\n    content.appendChild(document.createElement('hr'))\n    content.appendChild(this.selectYBtn)\n    content.appendChild(this.yInput)\n    content.appendChild(document.createElement('hr'))\n    content.appendChild(this.selectPtBtn)\n    content.appendChild(this.OKBtn)\n\n    this.container.appendChild(content)\n\n    this.xInput.oninput = this.onDistXChanged.bind(this)\n    this.yInput.oninput = this.onDistYChanged.bind(this)\n  }\n\n  ConstrainedPlacementPanel.prototype =\n    Object.create(Autodesk.Viewing.UI.DockingPanel.prototype)\n\n  ConstrainedPlacementPanel.prototype.constructor =\n    ConstrainedPlacementPanel\n\n  var proto = ConstrainedPlacementPanel.prototype\n\n  proto.onSelectXAxis = function () {\n    this.snapper.clearSelectionFilter()\n    this.snapper.addSelectionFilter('edge')\n    this.snapper.activate()\n\n    this.snapper.showTooltip(true, 'Select X Axis')\n\n    this.mode = 'SELECT_X_AXIS'\n  }\n\n  proto.onSelectYAxis = function () {\n    this.snapper.clearSelectionFilter()\n    this.snapper.addSelectionFilter('edge')\n    this.snapper.activate()\n\n    this.snapper.showTooltip(true, 'Select Y Axis')\n\n    this.mode = 'SELECT_Y_AXIS'\n  }\n\n  proto.onSelectOrigin = function () {\n    this.snapper.clearSelectionFilter()\n    this.snapper.addSelectionFilter('vertex')\n    this.snapper.activate()\n\n    this.snapper.showTooltip(true, 'Select Origin')\n\n    this.mode = 'SELECT_ORIGIN'\n  }\n\n  proto.onSnapperActivated = function () {\n\n  }\n\n  proto.onSnapperDeactivated = function () {\n\n  }\n\n  proto.onEdgeSnapped = function (edge) {\n    switch (this.mode) {\n      case 'SELECT_X_AXIS':\n        var xAxis = edgeToUnitVector(edge)\n        break\n\n      case 'SELECT_Y_AXIS':\n        var yAxis = edgeToUnitVector(edge)\n\n        if (this.xAxis) {\n          var angle = Math.abs(yAxis.angleTo(this.xAxis))\n\n          return !(Math.abs(angle - Math.PI / 2) < 0.01)\n        }\n\n        break\n    }\n  }\n\n  function edgeToUnitVector (edge) {\n    var v = new THREE.Vector3()\n\n    v.subVectors(edge.vertices[1], edge.vertices[0])\n\n    v.normalize()\n\n    return v\n  }\n\n  proto.onGeometrySelected = function (args) {\n    if (args.geometry) {\n      switch (this.mode) {\n        case 'SELECT_X_AXIS':\n          this.xAxis = edgeToUnitVector(args.geometry)\n          break\n\n        case 'SELECT_Y_AXIS':\n          this.yAxis = edgeToUnitVector(args.geometry)\n          break\n\n        case 'SELECT_ORIGIN':\n          this.origin = args.geometry\n          break\n      }\n\n      this.snapper.deactivate()\n    }\n  }\n\n  proto.onSelection = function (event) {\n    if (event.selections.length) {\n      this.viewer.clearSelection()\n    }\n  }\n\n  proto.onDistXChanged = function (event) {\n    this.xDist = event.target.value\n  }\n\n  proto.onDistYChanged = function (event) {\n    this.yDist = event.target.value\n  }\n\n  proto.onOK = function () {\n    this.events.emit('complete', {\n      origin: this.origin,\n      xAxis: this.xAxis,\n      yAxis: this.yAxis,\n      xDist: this.xDist,\n      yDist: this.yDist\n    })\n\n    this.setVisible(false)\n  }\n\n  proto.setVisible = function (show) {\n    Autodesk.Viewing.UI.DockingPanel.prototype.setVisible.call(this, show)\n\n    if (!show && this.snapper) {\n      this.viewer.removeEventListener(\n        Autodesk.Viewing.AGGREGATE_SELECTION_CHANGED_EVENT,\n        this.onSelection.bind(this))\n\n      this.viewer.disableHighlight(false)\n\n      this.snapper.deactivate()\n    }\n\n    if (show) {\n      this.viewer.addEventListener(\n        Autodesk.Viewing.AGGREGATE_SELECTION_CHANGED_EVENT,\n        this.onSelection.bind(this))\n\n      this.viewer.disableHighlight(true)\n    }\n  }\n\n  Viewing.Extension.ConstrainedPlacement.Panel = ConstrainedPlacementPanel\n})()\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ref--5-1!../../../../../../../node_modules/postcss-loader/src/index.js??ref--5-2!./Viewing.Extension.ConstrainedPlacement.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../../../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ref--5-1!../../../../../../../node_modules/postcss-loader/src/index.js??ref--5-2!./Viewing.Extension.ConstrainedPlacement.css\", function() {\n\t\t\tvar newContent = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ref--5-1!../../../../../../../node_modules/postcss-loader/src/index.js??ref--5-2!./Viewing.Extension.ConstrainedPlacement.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".constrained-placement {\\n  height: 208px;\\n  width: 238px;\\n  resize: auto;\\n  left: 10px;\\n  top: 10px;\\n}\\n\\n.constrained-placement > .content {\\n  padding: 4px;\\n}\\n\\n.constrained-placement > .content button {\\n  margin: 4px;\\n  float: left;\\n  width: 90px;\\n}\\n\\n.constrained-placement > .content button.ok {\\n  position: absolute;\\n  bottom: 10px;\\n  right: 10px;\\n  width: 34px;\\n}\\n\\n.constrained-placement > .content input {\\n  width: calc(100% - 130px);\\n  margin: 4px;\\n  float: left;\\n}\\n\\n.constrained-placement > .content hr {\\n  border: none;\\n  width: 100%;\\n  margin: 0;\\n}\\n\\ndiv.snapper-tooltip {\\n  pointer-events:none;\\n  position:absolute;\\n  font-family:arial;\\n  visibility:hidden;\\n  font-size:16px;\\n  color: #1df02a;\\n}\\n\", \"\"]);\n","/// //////////////////////////////////////////////////////\n// Viewing.Extension.ConstrainedPlacement\n// by Philippe Leefsma, November 2017\n//\n/// //////////////////////////////////////////////////////\n(function () {\n  'use strict'\n\n  AutodeskNamespace('Viewing.Extension.ConstrainedPlacement')\n\n  function ConstrainedPlacementExtension (viewer, options) {\n    this.events = new Viewing.Extension.ConstrainedPlacement.EventsEmitter()\n\n    Autodesk.Viewing.Extension.call(this, viewer, options)\n\n    this.options = options\n\n    this.viewer = viewer\n\n    this.createUI()\n\n    this.snapper =\n      new Viewing.Extension.ConstrainedPlacement.SnapperTool(\n        viewer)\n\n    this.snapper.setDetectRadius(0.15)\n  }\n\n  ConstrainedPlacementExtension.prototype =\n    Object.create(Autodesk.Viewing.Extension.prototype)\n\n  ConstrainedPlacementExtension.prototype.constructor =\n    ConstrainedPlacementExtension\n\n  var proto = ConstrainedPlacementExtension.prototype\n\n  proto.load = function () {\n    console.log('Viewing.Extension.ConstrainedPlacement loaded')\n\n    return true\n  }\n\n  proto.unload = function () {\n    console.log('Viewing.Extension.ConstrainedPlacement unloaded')\n\n    this.parentControl.removeControl(this.control)\n\n    if (this.panel) {\n      this.panel.setVisible(false)\n    }\n\n    return true\n  }\n\n  proto.onToolbarCreated = function () {\n    var controlId = 'toolbar-constrained-placement'\n\n    var button =\n      new Autodesk.Viewing.UI.Button(\n        controlId)\n\n    button.icon.style.fontSize = '24px'\n\n    button.icon.className = 'fa fa-crosshairs'\n\n    button.setToolTip('Constrained Placement')\n\n    button.onClick = this.onButtonClicked.bind(this)\n\n    var viewerToolbar = this.viewer.getToolbar(true)\n\n    this.parentControl = viewerToolbar.getControl(\n      this.options.parentControl)\n\n    this.parentControl.addControl(button)\n\n    this.control = button\n  }\n\n  proto.createPanel = function () {\n    var panel = new Viewing.Extension.ConstrainedPlacement.Panel(\n      this.viewer, {\n        snapper: this.snapper\n      })\n\n    var _events = this.events\n\n    panel.events.on('complete', function (args) {\n      _events.emit('complete', args)\n\n      console.log(args)\n    })\n\n    return panel\n  }\n\n  proto.onButtonClicked = function () {\n    this.panel = this.panel || this.createPanel()\n\n    this.panel.setVisible(true)\n  }\n\n  Autodesk.Viewing.theExtensionManager.registerExtension(\n    'Viewing.Extension.ConstrainedPlacement',\n    ConstrainedPlacementExtension)\n})()\n"],"sourceRoot":""}