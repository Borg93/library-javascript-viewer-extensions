{"version":3,"sources":["webpack:///./src/client/components/Switch/Switch.js","webpack:///./src/client/components/Switch/index.js","webpack:///./src/client/components/Switch/Switch.scss?8d3d","webpack:///./src/client/components/Switch/Switch.scss","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.SelectionFilter/FilterTreeView/FilterTreeView.scss?3687","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.SelectionFilter/FilterTreeView/FilterTreeView.scss","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.SelectionFilter/FilterTreeView/FilterTreeNode.js","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.SelectionFilter/FilterTreeView/FilterTreeDelegate.js","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.SelectionFilter/FilterTreeView/FilterTreeView.js","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.SelectionFilter/FilterTreeView/index.js"],"names":["Switch","_this","classCallCheck_default","this","possibleConstructorReturn_default","getPrototypeOf_default","call","state","checked","setState","props","disabled","onChange","classNames","concat","toConsumableArray_default","className","split","react_default","a","createElement","join","onClick","toggle","ref","value","type","React","Component","PropTypes","string","bool","autobind","content","__webpack_require__","module","i","locals","exports","push","FilterTreeNode","setChecked","bind","assertThisInitialized_default","onExpand","on","instanceTree","delegate","parent","group","name","id","children","off","loadChildren","reactNode","ReactDOM","render","FilterTreeNode_ReactTreeNode","onChecked","domContainer","forEach","child","setDisabled","emit","collapse","target","parentElement","classList","remove","add","_this2","childIds","getChildIds","map","childNode","getNodeName","length","addChild","destroy","unmountComponentAtNode","nodeId","enumNodeChildren","childId","EventsEmitter","ReactTreeNode","_this3","Label","text","FilterTreeDelegate","model","getData","rootId","getRootId","rootNode","node","parentDomElement","arguments","undefined","container","document","appendChild","mount","event","targetCls","parentNode","indexOf","TreeDelegate","FilterTreeView","viewer","isolate","onNodeChecked","tree","destroyNode","createRootNode","TreeView","treeContainer","excludeRoot","expand","div"],"mappings":"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","file":"92.js","sourcesContent":["import autobind from 'autobind-decorator'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nexport default class Switch extends React.Component {\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  static propTypes = {\n    className: PropTypes.string,\n    checked: PropTypes.bool\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  static defaultProps = {\n    checked: true,\n    className: ''\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  constructor () {\n\n    super ()\n\n    this.state = {\n      checked: true\n    }\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  componentWillMount () {\n\n    this.setState({\n      checked: this.props.checked\n    })\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  @autobind\n  toggle () {\n\n    if (this.props.disabled) {\n      return\n    }\n\n    const checked = !this.state.checked\n\n    this.setState({\n      checked\n    })\n\n    if (this.props.onChange) {\n\n      this.props.onChange (checked)\n    }\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  render () {\n\n    const classNames = [\n      'switch-container',\n      this.props.disabled ? 'disabled' : '',\n      ...this.props.className.split(' ')\n    ]\n\n    return(\n      <div className={classNames.join(' ')}\n        onClick={this.toggle}>\n        <input ref=\"switch\" className=\"switch\"\n          checked={this.state.checked}\n          value={this.state.checked}\n          onChange={()=> {}}\n          type=\"checkbox\"\n        />\n        <div>\n          <span>\n            <g className=\"icon icon-toolbar grid-view\"/>\n          </span>\n          <span>\n            <g className=\"icon icon-toolbar ticket-view\"/>\n          </span>\n          <div/>\n        </div>\n      </div>\n    )\n  }\n}\n","import Switch from './Switch'\nimport './Switch.scss'\n\nexport default Switch\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../node_modules/sass-loader/lib/loader.js!./Switch.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../node_modules/sass-loader/lib/loader.js!./Switch.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../node_modules/sass-loader/lib/loader.js!./Switch.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".switch-container {\\n  position: relative; }\\n\\n.switch-container *:hover {\\n  cursor: pointer; }\\n\\n.switch-container.disabled *:hover {\\n  cursor: not-allowed; }\\n\\ninput[type=\\\"checkbox\\\"].switch {\\n  pointer-events: none;\\n  position: absolute;\\n  cursor: pointer;\\n  opacity: 0; }\\n\\ninput[type=\\\"checkbox\\\"].switch + div {\\n  vertical-align: middle;\\n  width: 40px;\\n  height: 20px;\\n  border-radius: 999px;\\n  background-color: #9d9d9d;\\n  transition-duration: .4s;\\n  transition-property: background-color, box-shadow;\\n  cursor: pointer; }\\n\\ninput[type=\\\"checkbox\\\"].switch + div span {\\n  position: absolute;\\n  font-size: 1.6rem;\\n  color: #f5f5f5;\\n  margin-top: 12px; }\\n\\ninput[type=\\\"checkbox\\\"].switch + div span:nth-child(1) {\\n  margin-left: 15px; }\\n\\ninput[type=\\\"checkbox\\\"].switch + div span:nth-child(2) {\\n  margin-left: 55px; }\\n\\ninput[type=\\\"checkbox\\\"].switch:checked + div {\\n  width: 60px;\\n  background-position: 0 0;\\n  background-color: #57BB00; }\\n\\n.switch-container.disabled input[type=\\\"checkbox\\\"].switch + div {\\n  background-color: rgba(157, 157, 157, 0.5); }\\n\\ninput[type=\\\"checkbox\\\"].switch + div {\\n  width: 60px;\\n  height: 26px; }\\n\\ninput[type=\\\"checkbox\\\"].switch + div > div {\\n  float: left;\\n  width: 24px;\\n  height: 24px;\\n  border-radius: inherit;\\n  background: #f5f5f5;\\n  transition-timing-function: cubic-bezier(1, 0, 0, 1);\\n  transition-duration: 0.4s;\\n  transition-property: transform, background-color;\\n  pointer-events: none;\\n  margin-top: 1px;\\n  margin-left: 1px; }\\n\\ninput[type=\\\"checkbox\\\"].switch:checked + div > div {\\n  transform: translate3d(20px, 0, 0);\\n  background-color: #f5f5f5; }\\n\\ninput[type=\\\"checkbox\\\"].bigswitch.switch + div > div {\\n  width: 44px;\\n  height: 44px;\\n  margin-top: 1px; }\\n\\ninput[type=\\\"checkbox\\\"].switch:checked + div > div {\\n  transform: translate3d(34px, 0, 0); }\\n\", \"\"]);\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../../../../node_modules/sass-loader/lib/loader.js!./FilterTreeView.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../../../../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../../../../node_modules/sass-loader/lib/loader.js!./FilterTreeView.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../../../../node_modules/sass-loader/lib/loader.js!./FilterTreeView.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".filter-tree-container .treeview-base lmvheader {\\n  transition-property: background, border;\\n  transition-timing-function: ease;\\n  transition-duration: 1.5s;\\n  transition-delay: 0.0s;\\n  background: rgba(245, 245, 245, 0.5);\\n  margin-bottom: -4px;\\n  border: none;\\n  height: 30px; }\\n\\n.filter-tree-container .treeview-base lmvheader:hover {\\n  background: rgba(0, 105, 245, 0.35); }\\n\\n.filter-tree-container .treeview-base group > lmvheader > icon {\\n  height: 20px;\\n  float: left; }\\n\\n.filter-tree-container .treenode .switch-container {\\n  border: 1px solid #9c9c9c;\\n  border-radius: 12px;\\n  margin: 0 8px 0 2px;\\n  float: left; }\\n\\n.filter-tree-container .treenode .label-container {\\n  pointer-events: none; }\\n\\n.filter-tree-container .treenode {\\n  float: left; }\\n\\n.filter-tree-container input[type=\\\"checkbox\\\"].switch + div {\\n  width: 34px;\\n  height: 16px; }\\n\\n.filter-tree-container input[type=\\\"checkbox\\\"].switch:checked + div {\\n  width: 34px; }\\n\\n.filter-tree-container input[type=\\\"checkbox\\\"].switch:checked + div > div {\\n  transform: translate3d(18px, 0, 0); }\\n\\n.filter-tree-container input[type=\\\"checkbox\\\"].switch + div > div {\\n  height: 16px;\\n  width: 16px;\\n  margin: 0; }\\n\", \"\"]);\n","import EventsEmitter from 'EventsEmitter'\nimport PropTypes from 'prop-types'\nimport ReactDOM from 'react-dom'\nimport Switch from 'Switch'\nimport Label from 'Label'\nimport React from 'react'\n\nexport default class FilterTreeNode extends EventsEmitter {\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  constructor (props) {\n\n    super ()\n\n    this.setChecked = this.setChecked.bind(this)\n\n    this.onExpand = this.onExpand.bind(this)\n\n    this.on('expand', this.onExpand)\n\n    this.instanceTree = props.instanceTree\n    this.delegate     = props.delegate\n    this.disabled     = props.disabled\n    this.checked      = props.checked\n    this.parent       = props.parent\n    this.group        = props.group\n    this.name         = props.name\n    this.type         = props.type\n    this.id           = props.id\n\n    this.children = []\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  onExpand () {\n\n    this.off('expand', this.onExpand)\n\n    this.loadChildren()\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  setDisabled (disabled) {\n\n    this.disabled = disabled\n\n    this.reactNode = ReactDOM.render(\n      <ReactTreeNode onChecked={this.setChecked}\n        disabled={this.disabled}\n        checked={this.checked}\n        name={this.name}/>,\n      this.domContainer)\n\n    if (disabled || this.checked) {\n\n      this.children.forEach((child) => {\n\n        child.setDisabled (disabled, true)\n      })\n    }\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  setChecked (checked) {\n\n    this.checked = checked\n\n    this.delegate.emit(\n      'node.checked', this)\n\n    this.children.forEach((child) => {\n\n      child.setDisabled (!checked)\n    })\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  mount (domContainer) {\n\n    this.domContainer = domContainer\n\n    this.collapse()\n\n    this.reactNode = ReactDOM.render(\n      <ReactTreeNode onChecked={this.setChecked}\n        disabled={this.disabled}\n        checked={this.checked}\n        name={this.name}/>,\n      this.domContainer)\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  expand () {\n\n    const target =\n      this.domContainer.parentElement.parentElement\n\n    target.classList.remove('collapsed')\n    target.classList.add('expanded')\n\n    this.emit('expand')\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  collapse () {\n\n    const target =\n      this.domContainer.parentElement.parentElement\n\n    target.classList.remove('expanded')\n    target.classList.add('collapsed')\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  loadChildren () {\n\n    const childIds = this.getChildIds(this.id)\n\n    this.children = childIds.map((id) => {\n\n      const childNode = new FilterTreeNode({\n        disabled: this.disabled || !this.checked,\n        name: this.instanceTree.getNodeName(id),\n        group: this.getChildIds(id).length,\n        instanceTree: this.instanceTree,\n        delegate: this.delegate,\n        checked: true,\n        parent: this,\n        type: '',\n        id\n      })\n\n      this.addChild(childNode)\n\n      return childNode\n    })\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  destroy () {\n\n    this.children.forEach((child) => {\n\n      child.destroy ()\n    })\n\n    ReactDOM.unmountComponentAtNode(\n      this.domContainer)\n\n    this.delegate.emit(\n      'node.destroy', this)\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  getChildIds (nodeId) {\n\n    const childIds = []\n\n    this.instanceTree.enumNodeChildren(nodeId,\n      (childId) => {\n\n        childIds.push(childId)\n      })\n\n    return childIds\n  }\n}\n\n\nclass ReactTreeNode extends React.Component {\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  static propTypes = {\n    className: PropTypes.string\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  static defaultProps = {\n    className: ''\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  render() {\n\n    const classNames = [\n      'treenode',\n      ...this.props.className.split(' ')\n    ]\n\n    return (\n      <div className={classNames.join(' ')}>\n        <Switch onChange={(checked) => this.props.onChecked(checked)}\n          disabled={this.props.disabled}\n          checked={this.props.checked}\n          className=\"handle-click\"/>\n        <Label text={this.props.name}/>\n      </div>\n    )\n  }\n}\n","import FilterTreeNode from './FilterTreeNode'\nimport { TreeDelegate } from 'TreeView'\n\n\nexport default class FilterTreeDelegate extends TreeDelegate {\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  constructor (model) {\n\n    super ()\n\n    this.instanceTree = model.getData().instanceTree\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  createRootNode () {\n\n    const rootId = this.instanceTree.getRootId()\n\n    this.rootNode = new FilterTreeNode({\n\n      name: this.instanceTree.getNodeName(rootId),\n      group: this.getChildIds(rootId).length,\n      instanceTree: this.instanceTree,\n      delegate: this,\n      checked: true,\n      parent: null,\n      type: 'root',\n      id: rootId\n    })\n\n    return this.rootNode\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  destroy () {\n\n    this.rootNode.destroy()\n\n    this.off()\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  createTreeNode (node, parentDomElement, options = {}) {\n\n    const container = document.createElement('div')\n\n    parentDomElement.appendChild(container)\n\n    node.mount(container)\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  nodeClickSelector (event) {\n\n    const targetCls = event.target.parentNode.className\n    const parentCls = event.target.className\n\n    if (parentCls.indexOf('handle-click') > -1 ||\n        targetCls.indexOf('handle-click') > -1) {\n\n      return false\n    }\n\n    return true\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  forEachChild (node, addChild) {\n\n    node.addChild = addChild\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  getChildIds (nodeId) {\n\n    const childIds = []\n\n    this.instanceTree.enumNodeChildren(nodeId,\n      (childId) => {\n\n        childIds.push(childId)\n      })\n\n    return childIds\n  }\n}\n","//////////////////////////////////////////////////////////////////////////\n// Copyright (c) Autodesk, Inc. All rights reserved\n// Written by Philippe Leefsma 2016 - ADN/Developer Technical Services\n//\n// Permission to use, copy, modify, and distribute this software in\n// object code form for any purpose and without fee is hereby granted,\n// provided that the above copyright notice appears in all copies and\n// that both that copyright notice and the limited warranty and\n// restricted rights notice below appear in all supporting\n// documentation.\n//\n// AUTODESK PROVIDES THIS PROGRAM \"AS IS\" AND WITH ALL FAULTS.\n// AUTODESK SPECIFICALLY DISCLAIMS ANY IMPLIED WARRANTY OF\n// MERCHANTABILITY OR FITNESS FOR A PARTICULAR USE.  AUTODESK, INC.\n// DOES NOT WARRANT THAT THE OPERATION OF THE PROGRAM WILL BE\n// UNINTERRUPTED OR ERROR FREE.\n/////////////////////////////////////////////////////////////////////\nimport FilterTreeDelegate from './FilterTreeDelegate'\nimport { TreeView } from 'TreeView'\nimport ReactDOM from 'react-dom'\nimport './FilterTreeView.scss'\nimport React from 'react'\n\nexport default class FilterTreeView extends React.Component {\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  constructor (props) {\n\n    super (props)\n\n    this.delegate = new FilterTreeDelegate(props.model)\n\n    this.delegate.on('node.dblClick', (node) => {\n\n      this.props.viewer.isolate(node.id, props.model)\n    })\n\n    this.delegate.on('node.checked', (node) => {\n\n      this.props.onNodeChecked({\n        model: props.model,\n        tree: this.tree,\n        node\n      })\n    })\n\n    this.delegate.on('node.destroy', (node) => {\n\n      this.tree.destroyNode(node.id)\n    })\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  componentDidMount () {\n\n    this.rootNode = this.delegate.createRootNode()\n\n    this.tree = new TreeView (\n      this.delegate, this.rootNode, this.treeContainer, {\n        excludeRoot: false\n      })\n\n    this.rootNode.expand ()\n    this.rootNode.setChecked (true)\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  componentWillUnmount () {\n\n    this.delegate.destroy()\n\n    this.tree.destroy()\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  //shouldComponentUpdate () {\n  //\n  //  return false\n  //}\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  render() {\n\n    return (\n      <div className=\"filter-tree-container\" ref={\n        (div) => this.treeContainer = div\n        }\n      />\n    )\n  }\n}\n","import FilterTreeView from './FilterTreeView'\nimport './FilterTreeView.scss'\n\nexport default FilterTreeView\n\n"],"sourceRoot":""}