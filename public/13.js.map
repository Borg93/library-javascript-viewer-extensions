{"version":3,"sources":["webpack:///./node_modules/react-measure/lib/react-measure.js","webpack:///./node_modules/react-measure/lib/with-content-rect.js","webpack:///./node_modules/react-measure/lib/Measure.js","webpack:///./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js","webpack:///./node_modules/react-measure/lib/get-types.js","webpack:///./node_modules/react-measure/lib/get-content-rect.js"],"names":["Object","defineProperty","exports","value","withContentRect","default","undefined","_Measure2","_interopRequireDefault","__webpack_require__","_withContentRect2","obj","__esModule","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","_react","_propTypes2","_resizeObserverPolyfill2","_getTypes2","_getContentRect2","_possibleConstructorReturn","self","ReferenceError","types","WrappedComponent","_class","_temp2","_Component","_ref","_temp","_this","instance","TypeError","_classCallCheck","this","_len","args","Array","_key","__proto__","getPrototypeOf","apply","concat","state","contentRect","entry","client","offset","scroll","bounds","margin","measure","entries","_node","setState","onResize","_handleRef","node","_resizeObserver","observe","disconnect","innerRef","subClass","superClass","create","constructor","setPrototypeOf","_inherits","Component","_props","keys","indexOf","_objectWithoutProperties","createElement","measureRef","propTypes","bool","func","children","module","r","__webpack_exports__","global","MapShim","Map","getIndex","arr","result","some","index","anonymous","__entries__","prototypeAccessors","size","get","set","push","delete","splice","has","clear","forEach","callback","ctx","list","isBrowser","window","document","global$1","Math","Function","requestAnimationFrame$1","requestAnimationFrame","bind","setTimeout","Date","now","trailingTimeout","transitionKeys","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","delay","leadingCall","trailingCall","lastCallTime","resolvePending","proxy","timeoutCallback","timeStamp","throttle","addObserver","observer","connect_","removeObserver","observers","disconnect_","updateObservers_","activeObservers","filter","gatherActive","hasActive","broadcastActive","addEventListener","attributes","childList","characterData","subtree","removeEventListener","ref","propertyName","getInstance","instance_","defineConfigurable","getWindowOf","ownerDocument","defaultView","emptyRect","createRectInit","toFloat","parseFloat","getBordersSize","styles","positions","len","reduce","position","getHTMLElementContentRect","clientWidth","clientHeight","getComputedStyle","paddings","getPaddings","horizPad","left","right","vertPad","top","bottom","width","height","boxSizing","round","documentElement","isDocumentElement","vertScrollbar","horizScrollbar","abs","isSVGGraphicsElement","SVGGraphicsElement","SVGElement","getBBox","getContentRect","bbox","getSVGContentRect","x","y","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","rect","broadcastRect","ResizeObserverEntry","rectInit","Constr","DOMRectReadOnly","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","callback_","controller_","callbackCtx_","Element","observations","unobserve","clearActive","this$1","observation","map","WeakMap","ResizeObserver","method","allowedTypes","type","calculations","clientTop","clientLeft","offsetTop","offsetLeft","offsetWidth","offsetHeight","scrollTop","scrollLeft","scrollWidth","scrollHeight","getBoundingClientRect","parseInt","marginTop","marginRight","marginBottom","marginLeft"],"mappings":"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","file":"13.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.withContentRect = exports.default = undefined;\n\nvar _Measure = require('./Measure');\n\nvar _Measure2 = _interopRequireDefault(_Measure);\n\nvar _withContentRect = require('./with-content-rect');\n\nvar _withContentRect2 = _interopRequireDefault(_withContentRect);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Measure2.default;\nexports.withContentRect = _withContentRect2.default;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _resizeObserverPolyfill = require('resize-observer-polyfill');\n\nvar _resizeObserverPolyfill2 = _interopRequireDefault(_resizeObserverPolyfill);\n\nvar _getTypes = require('./get-types');\n\nvar _getTypes2 = _interopRequireDefault(_getTypes);\n\nvar _getContentRect = require('./get-content-rect');\n\nvar _getContentRect2 = _interopRequireDefault(_getContentRect);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction withContentRect(types) {\n  return function (WrappedComponent) {\n    var _class, _temp2;\n\n    return _temp2 = _class = function (_Component) {\n      _inherits(_class, _Component);\n\n      function _class() {\n        var _ref;\n\n        var _temp, _this, _ret;\n\n        _classCallCheck(this, _class);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = _class.__proto__ || Object.getPrototypeOf(_class)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n          contentRect: {\n            entry: {},\n            client: {},\n            offset: {},\n            scroll: {},\n            bounds: {},\n            margin: {}\n          }\n        }, _this.measure = function (entries) {\n          var contentRect = (0, _getContentRect2.default)(_this._node, types || (0, _getTypes2.default)(_this.props));\n\n          if (entries) {\n            contentRect.entry = entries[0].contentRect;\n          }\n\n          _this.setState({ contentRect: contentRect });\n\n          if (typeof _this.props.onResize === 'function') {\n            _this.props.onResize(contentRect);\n          }\n        }, _this._handleRef = function (node) {\n          if (_this._resizeObserver) {\n            if (node) {\n              _this._resizeObserver.observe(node);\n            } else {\n              _this._resizeObserver.disconnect(_this._node);\n            }\n          }\n          _this._node = node;\n\n          if (typeof _this.props.innerRef === 'function') {\n            _this.props.innerRef(node);\n          }\n        }, _temp), _possibleConstructorReturn(_this, _ret);\n      }\n\n      _createClass(_class, [{\n        key: 'componentWillMount',\n        value: function componentWillMount() {\n          this._resizeObserver = new _resizeObserverPolyfill2.default(this.measure);\n        }\n      }, {\n        key: 'render',\n        value: function render() {\n          var _props = this.props,\n              innerRef = _props.innerRef,\n              onResize = _props.onResize,\n              props = _objectWithoutProperties(_props, ['innerRef', 'onResize']);\n\n          return (0, _react.createElement)(WrappedComponent, _extends({}, props, {\n            measureRef: this._handleRef,\n            measure: this.measure,\n            contentRect: this.state.contentRect\n          }));\n        }\n      }]);\n\n      return _class;\n    }(_react.Component), _class.propTypes = {\n      client: _propTypes2.default.bool,\n      offset: _propTypes2.default.bool,\n      scroll: _propTypes2.default.bool,\n      bounds: _propTypes2.default.bool,\n      margin: _propTypes2.default.bool,\n      innerRef: _propTypes2.default.func,\n      onResize: _propTypes2.default.func,\n      children: _propTypes2.default.func\n    }, _temp2;\n  };\n}\n\nexports.default = withContentRect;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _withContentRect = require('./with-content-rect');\n\nvar _withContentRect2 = _interopRequireDefault(_withContentRect);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction Measure(_ref) {\n  var measure = _ref.measure,\n      measureRef = _ref.measureRef,\n      contentRect = _ref.contentRect,\n      children = _ref.children;\n\n  return children({ measure: measure, measureRef: measureRef, contentRect: contentRect });\n}\n\nexports.default = (0, _withContentRect2.default)()(Measure);\nmodule.exports = exports['default'];","/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\n/* eslint-disable require-jsdoc, valid-jsdoc */\nvar MapShim = (function () {\n    if (typeof Map !== 'undefined') {\n        return Map;\n    }\n\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\n    function getIndex(arr, key) {\n        var result = -1;\n\n        arr.some(function (entry, index) {\n            if (entry[0] === key) {\n                result = index;\n\n                return true;\n            }\n\n            return false;\n        });\n\n        return result;\n    }\n\n    return (function () {\n        function anonymous() {\n            this.__entries__ = [];\n        }\n\n        var prototypeAccessors = { size: { configurable: true } };\n\n        /**\r\n         * @returns {boolean}\r\n         */\n        prototypeAccessors.size.get = function () {\n            return this.__entries__.length;\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\n        anonymous.prototype.get = function (key) {\n            var index = getIndex(this.__entries__, key);\n            var entry = this.__entries__[index];\n\n            return entry && entry[1];\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.set = function (key, value) {\n            var index = getIndex(this.__entries__, key);\n\n            if (~index) {\n                this.__entries__[index][1] = value;\n            } else {\n                this.__entries__.push([key, value]);\n            }\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.delete = function (key) {\n            var entries = this.__entries__;\n            var index = getIndex(entries, key);\n\n            if (~index) {\n                entries.splice(index, 1);\n            }\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.has = function (key) {\n            return !!~getIndex(this.__entries__, key);\n        };\n\n        /**\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.clear = function () {\n            this.__entries__.splice(0);\n        };\n\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.forEach = function (callback, ctx) {\n            var this$1 = this;\n            if ( ctx === void 0 ) ctx = null;\n\n            for (var i = 0, list = this$1.__entries__; i < list.length; i += 1) {\n                var entry = list[i];\n\n                callback.call(ctx, entry[1], entry[0]);\n            }\n        };\n\n        Object.defineProperties( anonymous.prototype, prototypeAccessors );\n\n        return anonymous;\n    }());\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\nvar global$1 = (function () {\n    if (typeof global !== 'undefined' && global.Math === Math) {\n        return global;\n    }\n\n    if (typeof self !== 'undefined' && self.Math === Math) {\n        return self;\n    }\n\n    if (typeof window !== 'undefined' && window.Math === Math) {\n        return window;\n    }\n\n    // eslint-disable-next-line no-new-func\n    return Function('return this')();\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\nvar requestAnimationFrame$1 = (function () {\n    if (typeof requestAnimationFrame === 'function') {\n        // It's required to use a bounded function because IE sometimes throws\n        // an \"Invalid calling object\" error if rAF is invoked without the global\n        // object on the left hand side.\n        return requestAnimationFrame.bind(global$1);\n    }\n\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\n})();\n\n// Defines minimum timeout before adding a trailing call.\nvar trailingTimeout = 2;\n\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\nvar throttle = function (callback, delay) {\n    var leadingCall = false,\n        trailingCall = false,\n        lastCallTime = 0;\n\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\n    function resolvePending() {\n        if (leadingCall) {\n            leadingCall = false;\n\n            callback();\n        }\n\n        if (trailingCall) {\n            proxy();\n        }\n    }\n\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\n    function timeoutCallback() {\n        requestAnimationFrame$1(resolvePending);\n    }\n\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\n    function proxy() {\n        var timeStamp = Date.now();\n\n        if (leadingCall) {\n            // Reject immediately following calls.\n            if (timeStamp - lastCallTime < trailingTimeout) {\n                return;\n            }\n\n            // Schedule new call to be in invoked when the pending one is resolved.\n            // This is important for \"transitions\" which never actually start\n            // immediately so there is a chance that we might miss one if change\n            // happens amids the pending invocation.\n            trailingCall = true;\n        } else {\n            leadingCall = true;\n            trailingCall = false;\n\n            setTimeout(timeoutCallback, delay);\n        }\n\n        lastCallTime = timeStamp;\n    }\n\n    return proxy;\n};\n\n// Minimum delay before invoking the update of observers.\nvar REFRESH_DELAY = 20;\n\n// A list of substrings of CSS properties used to find transition events that\n// might affect dimensions of observed elements.\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\n\n// Check if MutationObserver is available.\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\n\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\nvar ResizeObserverController = function() {\n    this.connected_ = false;\n    this.mutationEventsAdded_ = false;\n    this.mutationsObserver_ = null;\n    this.observers_ = [];\n\n    this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\n    this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\n};\n\n/**\r\n * Adds observer to observers list.\r\n *\r\n * @param {ResizeObserverSPI} observer - Observer to be added.\r\n * @returns {void}\r\n */\n\n\n/**\r\n * Holds reference to the controller's instance.\r\n *\r\n * @private {ResizeObserverController}\r\n */\n\n\n/**\r\n * Keeps reference to the instance of MutationObserver.\r\n *\r\n * @private {MutationObserver}\r\n */\n\n/**\r\n * Indicates whether DOM listeners have been added.\r\n *\r\n * @private {boolean}\r\n */\nResizeObserverController.prototype.addObserver = function (observer) {\n    if (!~this.observers_.indexOf(observer)) {\n        this.observers_.push(observer);\n    }\n\n    // Add listeners if they haven't been added yet.\n    if (!this.connected_) {\n        this.connect_();\n    }\n};\n\n/**\r\n * Removes observer from observers list.\r\n *\r\n * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.removeObserver = function (observer) {\n    var observers = this.observers_;\n    var index = observers.indexOf(observer);\n\n    // Remove observer if it's present in registry.\n    if (~index) {\n        observers.splice(index, 1);\n    }\n\n    // Remove listeners if controller has no connected observers.\n    if (!observers.length && this.connected_) {\n        this.disconnect_();\n    }\n};\n\n/**\r\n * Invokes the update of observers. It will continue running updates insofar\r\n * it detects changes.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.refresh = function () {\n    var changesDetected = this.updateObservers_();\n\n    // Continue running updates if changes have been detected as there might\n    // be future ones caused by CSS transitions.\n    if (changesDetected) {\n        this.refresh();\n    }\n};\n\n/**\r\n * Updates every observer from observers list and notifies them of queued\r\n * entries.\r\n *\r\n * @private\r\n * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n *  dimensions of it's elements.\r\n */\nResizeObserverController.prototype.updateObservers_ = function () {\n    // Collect observers that have active observations.\n    var activeObservers = this.observers_.filter(function (observer) {\n        return observer.gatherActive(), observer.hasActive();\n    });\n\n    // Deliver notifications in a separate cycle in order to avoid any\n    // collisions between observers, e.g. when multiple instances of\n    // ResizeObserver are tracking the same element and the callback of one\n    // of them changes content dimensions of the observed target. Sometimes\n    // this may result in notifications being blocked for the rest of observers.\n    activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\n\n    return activeObservers.length > 0;\n};\n\n/**\r\n * Initializes DOM listeners.\r\n *\r\n * @private\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.connect_ = function () {\n    // Do nothing if running in a non-browser environment or if listeners\n    // have been already added.\n    if (!isBrowser || this.connected_) {\n        return;\n    }\n\n    // Subscription to the \"Transitionend\" event is used as a workaround for\n    // delayed transitions. This way it's possible to capture at least the\n    // final state of an element.\n    document.addEventListener('transitionend', this.onTransitionEnd_);\n\n    window.addEventListener('resize', this.refresh);\n\n    if (mutationObserverSupported) {\n        this.mutationsObserver_ = new MutationObserver(this.refresh);\n\n        this.mutationsObserver_.observe(document, {\n            attributes: true,\n            childList: true,\n            characterData: true,\n            subtree: true\n        });\n    } else {\n        document.addEventListener('DOMSubtreeModified', this.refresh);\n\n        this.mutationEventsAdded_ = true;\n    }\n\n    this.connected_ = true;\n};\n\n/**\r\n * Removes DOM listeners.\r\n *\r\n * @private\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.disconnect_ = function () {\n    // Do nothing if running in a non-browser environment or if listeners\n    // have been already removed.\n    if (!isBrowser || !this.connected_) {\n        return;\n    }\n\n    document.removeEventListener('transitionend', this.onTransitionEnd_);\n    window.removeEventListener('resize', this.refresh);\n\n    if (this.mutationsObserver_) {\n        this.mutationsObserver_.disconnect();\n    }\n\n    if (this.mutationEventsAdded_) {\n        document.removeEventListener('DOMSubtreeModified', this.refresh);\n    }\n\n    this.mutationsObserver_ = null;\n    this.mutationEventsAdded_ = false;\n    this.connected_ = false;\n};\n\n/**\r\n * \"Transitionend\" event handler.\r\n *\r\n * @private\r\n * @param {TransitionEvent} event\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.onTransitionEnd_ = function (ref) {\n        var propertyName = ref.propertyName; if ( propertyName === void 0 ) propertyName = '';\n\n    // Detect whether transition may affect dimensions of an element.\n    var isReflowProperty = transitionKeys.some(function (key) {\n        return !!~propertyName.indexOf(key);\n    });\n\n    if (isReflowProperty) {\n        this.refresh();\n    }\n};\n\n/**\r\n * Returns instance of the ResizeObserverController.\r\n *\r\n * @returns {ResizeObserverController}\r\n */\nResizeObserverController.getInstance = function () {\n    if (!this.instance_) {\n        this.instance_ = new ResizeObserverController();\n    }\n\n    return this.instance_;\n};\n\nResizeObserverController.instance_ = null;\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\nvar defineConfigurable = (function (target, props) {\n    for (var i = 0, list = Object.keys(props); i < list.length; i += 1) {\n        var key = list[i];\n\n        Object.defineProperty(target, key, {\n            value: props[key],\n            enumerable: false,\n            writable: false,\n            configurable: true\n        });\n    }\n\n    return target;\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\nvar getWindowOf = (function (target) {\n    // Assume that the element is an instance of Node, which means that it\n    // has the \"ownerDocument\" property from which we can retrieve a\n    // corresponding global object.\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\n\n    // Return the local global object if it's not possible extract one from\n    // provided element.\n    return ownerGlobal || global$1;\n});\n\n// Placeholder of an empty content rectangle.\nvar emptyRect = createRectInit(0, 0, 0, 0);\n\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\nfunction toFloat(value) {\n    return parseFloat(value) || 0;\n}\n\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\nfunction getBordersSize(styles) {\n    var positions = [], len = arguments.length - 1;\n    while ( len-- > 0 ) positions[ len ] = arguments[ len + 1 ];\n\n    return positions.reduce(function (size, position) {\n        var value = styles['border-' + position + '-width'];\n\n        return size + toFloat(value);\n    }, 0);\n}\n\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\nfunction getPaddings(styles) {\n    var positions = ['top', 'right', 'bottom', 'left'];\n    var paddings = {};\n\n    for (var i = 0, list = positions; i < list.length; i += 1) {\n        var position = list[i];\n\n        var value = styles['padding-' + position];\n\n        paddings[position] = toFloat(value);\n    }\n\n    return paddings;\n}\n\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\nfunction getSVGContentRect(target) {\n    var bbox = target.getBBox();\n\n    return createRectInit(0, 0, bbox.width, bbox.height);\n}\n\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\nfunction getHTMLElementContentRect(target) {\n    // Client width & height properties can't be\n    // used exclusively as they provide rounded values.\n    var clientWidth = target.clientWidth;\n    var clientHeight = target.clientHeight;\n\n    // By this condition we can catch all non-replaced inline, hidden and\n    // detached elements. Though elements with width & height properties less\n    // than 0.5 will be discarded as well.\n    //\n    // Without it we would need to implement separate methods for each of\n    // those cases and it's not possible to perform a precise and performance\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\n    // gives wrong results for elements with width & height less than 0.5.\n    if (!clientWidth && !clientHeight) {\n        return emptyRect;\n    }\n\n    var styles = getWindowOf(target).getComputedStyle(target);\n    var paddings = getPaddings(styles);\n    var horizPad = paddings.left + paddings.right;\n    var vertPad = paddings.top + paddings.bottom;\n\n    // Computed styles of width & height are being used because they are the\n    // only dimensions available to JS that contain non-rounded values. It could\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\n    var width = toFloat(styles.width),\n        height = toFloat(styles.height);\n\n    // Width & height include paddings and borders when the 'border-box' box\n    // model is applied (except for IE).\n    if (styles.boxSizing === 'border-box') {\n        // Following conditions are required to handle Internet Explorer which\n        // doesn't include paddings and borders to computed CSS dimensions.\n        //\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\n        // properties then it's either IE, and thus we don't need to subtract\n        // anything, or an element merely doesn't have paddings/borders styles.\n        if (Math.round(width + horizPad) !== clientWidth) {\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\n        }\n\n        if (Math.round(height + vertPad) !== clientHeight) {\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\n        }\n    }\n\n    // Following steps can't be applied to the document's root element as its\n    // client[Width/Height] properties represent viewport area of the window.\n    // Besides, it's as well not necessary as the <html> itself neither has\n    // rendered scroll bars nor it can be clipped.\n    if (!isDocumentElement(target)) {\n        // In some browsers (only in Firefox, actually) CSS width & height\n        // include scroll bars size which can be removed at this step as scroll\n        // bars are the only difference between rounded dimensions + paddings\n        // and \"client\" properties, though that is not always true in Chrome.\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\n\n        // Chrome has a rather weird rounding of \"client\" properties.\n        // E.g. for an element with content width of 314.2px it sometimes gives\n        // the client width of 315px and for the width of 314.7px it may give\n        // 314px. And it doesn't happen all the time. So just ignore this delta\n        // as a non-relevant.\n        if (Math.abs(vertScrollbar) !== 1) {\n            width -= vertScrollbar;\n        }\n\n        if (Math.abs(horizScrollbar) !== 1) {\n            height -= horizScrollbar;\n        }\n    }\n\n    return createRectInit(paddings.left, paddings.top, width, height);\n}\n\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\nvar isSVGGraphicsElement = (function () {\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\n    // interface.\n    if (typeof SVGGraphicsElement !== 'undefined') {\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\n    }\n\n    // If it's so, then check that element is at least an instance of the\n    // SVGElement and that it has the \"getBBox\" method.\n    // eslint-disable-next-line no-extra-parens\n    return function (target) { return target instanceof getWindowOf(target).SVGElement && typeof target.getBBox === 'function'; };\n})();\n\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\nfunction isDocumentElement(target) {\n    return target === getWindowOf(target).document.documentElement;\n}\n\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\nfunction getContentRect(target) {\n    if (!isBrowser) {\n        return emptyRect;\n    }\n\n    if (isSVGGraphicsElement(target)) {\n        return getSVGContentRect(target);\n    }\n\n    return getHTMLElementContentRect(target);\n}\n\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\nfunction createReadOnlyRect(ref) {\n    var x = ref.x;\n    var y = ref.y;\n    var width = ref.width;\n    var height = ref.height;\n\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\n    var rect = Object.create(Constr.prototype);\n\n    // Rectangle's properties are not writable and non-enumerable.\n    defineConfigurable(rect, {\n        x: x, y: y, width: width, height: height,\n        top: y,\n        right: x + width,\n        bottom: height + y,\n        left: x\n    });\n\n    return rect;\n}\n\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\nfunction createRectInit(x, y, width, height) {\n    return { x: x, y: y, width: width, height: height };\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\nvar ResizeObservation = function(target) {\n    this.broadcastWidth = 0;\n    this.broadcastHeight = 0;\n    this.contentRect_ = createRectInit(0, 0, 0, 0);\n\n    this.target = target;\n};\n\n/**\r\n * Updates content rectangle and tells whether it's width or height properties\r\n * have changed since the last broadcast.\r\n *\r\n * @returns {boolean}\r\n */\n\n\n/**\r\n * Reference to the last observed content rectangle.\r\n *\r\n * @private {DOMRectInit}\r\n */\n\n\n/**\r\n * Broadcasted width of content rectangle.\r\n *\r\n * @type {number}\r\n */\nResizeObservation.prototype.isActive = function () {\n    var rect = getContentRect(this.target);\n\n    this.contentRect_ = rect;\n\n    return rect.width !== this.broadcastWidth || rect.height !== this.broadcastHeight;\n};\n\n/**\r\n * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n * from the corresponding properties of the last observed content rectangle.\r\n *\r\n * @returns {DOMRectInit} Last observed content rectangle.\r\n */\nResizeObservation.prototype.broadcastRect = function () {\n    var rect = this.contentRect_;\n\n    this.broadcastWidth = rect.width;\n    this.broadcastHeight = rect.height;\n\n    return rect;\n};\n\nvar ResizeObserverEntry = function(target, rectInit) {\n    var contentRect = createReadOnlyRect(rectInit);\n\n    // According to the specification following properties are not writable\n    // and are also not enumerable in the native implementation.\n    //\n    // Property accessors are not being used as they'd require to define a\n    // private WeakMap storage which may cause memory leaks in browsers that\n    // don't support this type of collections.\n    defineConfigurable(this, { target: target, contentRect: contentRect });\n};\n\nvar ResizeObserverSPI = function(callback, controller, callbackCtx) {\n    this.activeObservations_ = [];\n    this.observations_ = new MapShim();\n\n    if (typeof callback !== 'function') {\n        throw new TypeError('The callback provided as parameter 1 is not a function.');\n    }\n\n    this.callback_ = callback;\n    this.controller_ = controller;\n    this.callbackCtx_ = callbackCtx;\n};\n\n/**\r\n * Starts observing provided element.\r\n *\r\n * @param {Element} target - Element to be observed.\r\n * @returns {void}\r\n */\n\n\n/**\r\n * Registry of the ResizeObservation instances.\r\n *\r\n * @private {Map<Element, ResizeObservation>}\r\n */\n\n\n/**\r\n * Public ResizeObserver instance which will be passed to the callback\r\n * function and used as a value of it's \"this\" binding.\r\n *\r\n * @private {ResizeObserver}\r\n */\n\n/**\r\n * Collection of resize observations that have detected changes in dimensions\r\n * of elements.\r\n *\r\n * @private {Array<ResizeObservation>}\r\n */\nResizeObserverSPI.prototype.observe = function (target) {\n    if (!arguments.length) {\n        throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    // Do nothing if current environment doesn't have the Element interface.\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n        return;\n    }\n\n    if (!(target instanceof getWindowOf(target).Element)) {\n        throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n\n    var observations = this.observations_;\n\n    // Do nothing if element is already being observed.\n    if (observations.has(target)) {\n        return;\n    }\n\n    observations.set(target, new ResizeObservation(target));\n\n    this.controller_.addObserver(this);\n\n    // Force the update of observations.\n    this.controller_.refresh();\n};\n\n/**\r\n * Stops observing provided element.\r\n *\r\n * @param {Element} target - Element to stop observing.\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.unobserve = function (target) {\n    if (!arguments.length) {\n        throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    // Do nothing if current environment doesn't have the Element interface.\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n        return;\n    }\n\n    if (!(target instanceof getWindowOf(target).Element)) {\n        throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n\n    var observations = this.observations_;\n\n    // Do nothing if element is not being observed.\n    if (!observations.has(target)) {\n        return;\n    }\n\n    observations.delete(target);\n\n    if (!observations.size) {\n        this.controller_.removeObserver(this);\n    }\n};\n\n/**\r\n * Stops observing all elements.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.disconnect = function () {\n    this.clearActive();\n    this.observations_.clear();\n    this.controller_.removeObserver(this);\n};\n\n/**\r\n * Collects observation instances the associated element of which has changed\r\n * it's content rectangle.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.gatherActive = function () {\n        var this$1 = this;\n\n    this.clearActive();\n\n    this.observations_.forEach(function (observation) {\n        if (observation.isActive()) {\n            this$1.activeObservations_.push(observation);\n        }\n    });\n};\n\n/**\r\n * Invokes initial callback function with a list of ResizeObserverEntry\r\n * instances collected from active resize observations.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.broadcastActive = function () {\n    // Do nothing if observer doesn't have active observations.\n    if (!this.hasActive()) {\n        return;\n    }\n\n    var ctx = this.callbackCtx_;\n\n    // Create ResizeObserverEntry instance for every active observation.\n    var entries = this.activeObservations_.map(function (observation) {\n        return new ResizeObserverEntry(observation.target, observation.broadcastRect());\n    });\n\n    this.callback_.call(ctx, entries, ctx);\n    this.clearActive();\n};\n\n/**\r\n * Clears the collection of active observations.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.clearActive = function () {\n    this.activeObservations_.splice(0);\n};\n\n/**\r\n * Tells whether observer has active observations.\r\n *\r\n * @returns {boolean}\r\n */\nResizeObserverSPI.prototype.hasActive = function () {\n    return this.activeObservations_.length > 0;\n};\n\n// Registry of internal observers. If WeakMap is not available use current shim\n// for the Map collection as it has all required methods and because WeakMap\n// can't be fully polyfilled anyway.\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\n\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\nvar ResizeObserver = function(callback) {\n    if (!(this instanceof ResizeObserver)) {\n        throw new TypeError('Cannot call a class as a function.');\n    }\n    if (!arguments.length) {\n        throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    var controller = ResizeObserverController.getInstance();\n    var observer = new ResizeObserverSPI(callback, controller, this);\n\n    observers.set(this, observer);\n};\n\n// Expose public methods of ResizeObserver.\n['observe', 'unobserve', 'disconnect'].forEach(function (method) {\n    ResizeObserver.prototype[method] = function () {\n        return (ref = observers.get(this))[method].apply(ref, arguments);\n        var ref;\n    };\n});\n\nvar index = (function () {\n    // Export existing implementation if available.\n    if (typeof global$1.ResizeObserver !== 'undefined') {\n        return global$1.ResizeObserver;\n    }\n\n    return ResizeObserver;\n})();\n\nexport default index;\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getTypes;\nvar types = ['client', 'offset', 'scroll', 'bounds', 'margin'];\n\nfunction getTypes(props) {\n  var allowedTypes = [];\n  types.forEach(function (type) {\n    if (props[type]) {\n      allowedTypes.push(type);\n    }\n  });\n  return allowedTypes;\n}\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction getContentRect(node, types) {\n  var calculations = {};\n\n  if (types.indexOf('client') > -1) {\n    calculations.client = {\n      top: node.clientTop,\n      left: node.clientLeft,\n      width: node.clientWidth,\n      height: node.clientHeight\n    };\n  }\n\n  if (types.indexOf('offset') > -1) {\n    calculations.offset = {\n      top: node.offsetTop,\n      left: node.offsetLeft,\n      width: node.offsetWidth,\n      height: node.offsetHeight\n    };\n  }\n\n  if (types.indexOf('scroll') > -1) {\n    calculations.scroll = {\n      top: node.scrollTop,\n      left: node.scrollLeft,\n      width: node.scrollWidth,\n      height: node.scrollHeight\n    };\n  }\n\n  if (types.indexOf('bounds') > -1) {\n    var rect = node.getBoundingClientRect();\n    calculations.bounds = {\n      top: rect.top,\n      right: rect.right,\n      bottom: rect.bottom,\n      left: rect.left,\n      width: rect.width,\n      height: rect.height\n    };\n  }\n\n  if (types.indexOf('margin') > -1) {\n    var styles = getComputedStyle(node);\n    calculations.margin = {\n      top: parseInt(styles.marginTop),\n      right: parseInt(styles.marginRight),\n      bottom: parseInt(styles.marginBottom),\n      left: parseInt(styles.marginLeft)\n    };\n  }\n\n  return calculations;\n}\n\nexports.default = getContentRect;\nmodule.exports = exports['default'];"],"sourceRoot":""}