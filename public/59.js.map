{"version":3,"sources":["webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.SelectionFilter/Viewing.Extension.SelectionFilter.scss?c95f","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.SelectionFilter/Viewing.Extension.SelectionFilter.scss","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.SelectionFilter/Viewing.Extension.SelectionFilter.js","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.SelectionFilter/index.js","webpack:///./src/client/components/Viewer/Extensions/Viewer.MultiModelExtensionBase/index.js","webpack:///./src/client/components/Viewer/Extensions/Viewer.MultiModelExtensionBase/Viewer.MultiModelExtensionBase.js","webpack:///./node_modules/@babel/runtime/helpers/get.js","webpack:///./src/client/components/WidgetContainer/WidgetContainer.js","webpack:///./src/client/components/WidgetContainer/index.js","webpack:///./src/client/components/WidgetContainer/WidgetContainer.scss?a31d","webpack:///./src/client/components/WidgetContainer/WidgetContainer.scss","webpack:///./node_modules/@babel/runtime/helpers/superPropBase.js","webpack:///./src/client/components/Switch/Switch.js","webpack:///./src/client/components/Switch/index.js","webpack:///./src/client/components/Switch/Switch.scss?8d3d","webpack:///./src/client/components/Switch/Switch.scss","webpack:///./src/client/components/Viewer/Viewer.EventTool/Viewer.EventTool.js","webpack:///./src/client/components/Viewer/Viewer.EventTool/index.js","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.SelectionFilter/FilterTreeView/FilterTreeView.scss?3687","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.SelectionFilter/FilterTreeView/FilterTreeView.scss","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.SelectionFilter/FilterTreeView/FilterTreeNode.js","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.SelectionFilter/FilterTreeView/FilterTreeDelegate.js","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.SelectionFilter/FilterTreeView/FilterTreeView.js","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.SelectionFilter/FilterTreeView/index.js"],"names":["content","__webpack_require__","module","i","locals","exports","push","SelectionFilterExtension","viewer","options","_this","classCallCheck_default","this","possibleConstructorReturn_default","getPrototypeOf_default","call","onNodeChecked","bind","assertThisInitialized_default","renderTitle","eventTool","EventTool","react","leafNodesMap","_this2","setState","models","then","pushRenderExtension","forEach","model","getData","instanceTree","addModel","on","mouseDown","event","hitTest","clientToWorld","canvasX","canvasY","guid","dbId","loadDynamicExtension","ctxMenuExtension","params","menu","console","log","deactivate","get_default","prototype","getState","map","m","includes","concat","toConsumableArray_default","Toolkit","getLeafNodes","dbIds","_this3","activate","_this4","selections","length","selection","dbIdArray","setTimeout","clearSelection","filter","_this5","node","id","checked","leafNode","tree","getNodeById","docked","ExtensionId","popRenderExtension","pushViewerPanel","height","width","popViewerPanel","_this6","spanClass","react_default","a","createElement","className","onClick","setDocking","title","_this7","treeViews","FilterTreeView","key","Loader","show","opts","_this8","WidgetContainer","showTitle","renderContent","MultiModelExtensionBase","Autodesk","Viewing","theExtensionManager","registerExtension","__webpack_exports__","_Viewer_MultiModelExtensionBase__WEBPACK_IMPORTED_MODULE_0__","arguments","undefined","defaultOptions","_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default","_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default","_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default","Object","assign","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5___default","serviceContext","onModelCompletedLoad","onObjectTreeCreated","onModelRootLoaded","onExtensionLoaded","onModelActivated","onGeometryLoaded","onToolbarCreated","onModelBeginLoad","onModelUnloaded","onSelection","__onModelRootLoaded","__onModelActivated","__onModelUnloaded","__onModelLoaded","impl","modelQueue","getModels","initializeEvents","viewerEvents","removeEventListener","handler","eventSink","off","viewerEvent","OBJECT_TREE_CREATED_EVENT","GEOMETRY_LOADED_EVENT","args","_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default","EXTENSION_LOADED_EVENT","MODEL_ROOT_LOADED_EVENT","TOOLBAR_CREATED_EVENT","AGGREGATE_SELECTION_CHANGED_EVENT","eventId","eventTasks","Array","isArray","Promise","resolve","addEventListener","__handler","all","EventsEmitter","Composer","Extension","superPropBase","_get","target","property","receiver","Reflect","get","base","desc","getOwnPropertyDescriptor","value","props","dimensions","React","Children","children","child","newProps","cloneElement","classNames","split","join","style","renderChildren","Component","PropTypes","string","bool","getPrototypeOf","object","hasOwnProperty","Switch","state","disabled","onChange","toggle","ref","type","autobind","toolName","toolController","registerTool","getName","active","activateTool","emit","deactivateTool","button","keyCode","FilterTreeNode","setChecked","onExpand","delegate","parent","group","name","loadChildren","reactNode","ReactDOM","render","FilterTreeNode_ReactTreeNode","onChecked","domContainer","setDisabled","collapse","parentElement","classList","remove","add","childIds","getChildIds","childNode","getNodeName","addChild","destroy","unmountComponentAtNode","nodeId","enumNodeChildren","childId","ReactTreeNode","Label","text","FilterTreeDelegate","rootId","getRootId","rootNode","parentDomElement","container","document","appendChild","mount","targetCls","parentNode","indexOf","TreeDelegate","isolate","destroyNode","createRootNode","TreeView","treeContainer","excludeRoot","expand","div"],"mappings":"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","file":"59.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../../../node_modules/sass-loader/lib/loader.js!./Viewing.Extension.SelectionFilter.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../../../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../../../node_modules/sass-loader/lib/loader.js!./Viewing.Extension.SelectionFilter.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../../../node_modules/sass-loader/lib/loader.js!./Viewing.Extension.SelectionFilter.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".selection-filter .title {\\n  display: -ms-inline-flexbox;\\n  display: inline-flex;\\n  float: left; }\\n\\n.selection-filter .title > label {\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  white-space: nowrap;\\n  font-weight: normal;\\n  user-select: none;\\n  margin-left: 27px;\\n  margin-top: 10px;\\n  select: none;\\n  width: 144px;\\n  float: left; }\\n\\n.selection-filter .content {\\n  overflow-y: scroll;\\n  overflow-x: hidden;\\n  height: 100%; }\\n\\n.selection-filter-controls {\\n  margin: auto 0 auto calc(100% - 152px);\\n  position: relative;\\n  float: left; }\\n\\n.selection-filter-controls > button {\\n  border: 1px solid #c6c6c6;\\n  background-color: #e1e1e1;\\n  border-radius: 6px;\\n  position: relative;\\n  overflow: hidden;\\n  outline: none;\\n  height: 24px;\\n  width: 26px; }\\n\\n.selection-filter-controls > button:hover {\\n  border: 1px solid #878787;\\n  background-color: #f5f5f5; }\\n\\n.selection-filter-controls > button > label {\\n  position: relative;\\n  font-size: 20px;\\n  color: #f0fcff;\\n  top: -8px; }\\n\\n.selection-filter-controls > button > span {\\n  pointer-events: none;\\n  color: #9b9b9b; }\\n\", \"\"]);\n","/// //////////////////////////////////////////////////////////////\n// SelectionFilter Viewer Extension\n// By Philippe Leefsma, Autodesk Inc, April 2017\n//\n/// //////////////////////////////////////////////////////////////\nimport MultiModelExtensionBase from 'Viewer.MultiModelExtensionBase'\nimport WidgetContainer from 'WidgetContainer'\nimport FilterTreeView from './FilterTreeView'\nimport EventTool from 'Viewer.EventTool'\nimport Toolkit from 'Viewer.Toolkit'\nimport { ReactLoader } from 'Loader'\nimport ReactDOM from 'react-dom'\nimport React from 'react'\n\nclass SelectionFilterExtension extends MultiModelExtensionBase {\n  /// //////////////////////////////////////////////////////////////\n  // Class constructor\n  //\n  /// //////////////////////////////////////////////////////////////\n  constructor (viewer, options) {\n    super(viewer, options)\n\n    this.onNodeChecked = this.onNodeChecked.bind(this)\n\n    this.renderTitle = this.renderTitle.bind(this)\n\n    this.eventTool = new EventTool(this.viewer)\n\n    this.react = options.react\n\n    this.leafNodesMap = {}\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Load callback\n  //\n  /// //////////////////////////////////////////////////////\n  load () {\n    this.react.setState({\n\n      models: []\n\n    }).then(() => {\n      this.react.pushRenderExtension(this)\n\n      this.models.forEach((model) => {\n        if (model.getData().instanceTree) {\n          this.addModel(model)\n        }\n      })\n    })\n\n    this.eventTool.on('buttondown', () => {\n      this.mouseDown = true\n\n      return false\n    })\n\n    this.eventTool.on('buttonup', (event) => {\n      this.mouseDown = false\n\n      return false\n    })\n\n    this.eventTool.on('mousemove', (event) => {\n      // model.rayIntersect cannot be used in this scenario\n      // because needs to check for every component\n      // for intersection\n\n      // const raycaster = this.pointerToRaycaster(event)\n      // const hitTest = this.viewer.model.rayIntersect(\n      //   raycaster, true, dbIds)\n\n      if (!this.mouseDown) {\n        const hitTest = this.viewer.clientToWorld(\n          event.canvasX,\n          event.canvasY,\n          true)\n\n        if (hitTest) {\n          const { guid } = hitTest.model\n\n          return !this.leafNodesMap[guid][hitTest.dbId]\n        }\n      }\n\n      return false\n    })\n\n    this.viewer.loadDynamicExtension(\n      'Viewing.Extension.ContextMenu').then(\n      (ctxMenuExtension) => {\n        ctxMenuExtension.on('buildMenu', (params) => {\n          const guid = params.model\n            ? params.model.guid\n            : ''\n\n          const dbId = params.dbId\n\n          return (!dbId || this.leafNodesMap[guid][dbId])\n            ? params.menu\n            : []\n        })\n      })\n\n    console.log('Viewing.Extension.SelectionFilter loaded')\n\n    return true\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  get className () {\n    return 'selection-filter'\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Extension Id\n  //\n  /// //////////////////////////////////////////////////////\n  static get ExtensionId () {\n    return 'Viewing.Extension.SelectionFilter'\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Unload callback\n  //\n  /// //////////////////////////////////////////////////////\n  unload () {\n    console.log('Viewing.Extension.SelectionFilter unloaded')\n\n    this.eventTool.deactivate()\n\n    super.unload()\n\n    return true\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  async addModel (model) {\n    const { models } = this.react.getState()\n\n    const guids = models.map((m) => { return m.guid })\n\n    if (guids.includes(model.guid)) {\n      return\n    }\n\n    this.react.setState({\n      models: [...models, model]\n    })\n\n    this.leafNodesMap[model.guid] = {}\n\n    Toolkit.getLeafNodes(model).then((dbIds) => {\n      dbIds.forEach((dbId) => {\n        this.leafNodesMap[model.guid][dbId] = true\n      })\n    })\n\n    this.eventTool.activate()\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  onObjectTreeCreated (event) {\n    this.addModel(event.model)\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  onSelection (event) {\n    if (event.selections.length) {\n      const selection = event.selections[0]\n\n      const dbId = selection.dbIdArray[0]\n\n      const model = selection.model\n\n      if (this.leafNodesMap[model.guid]) {\n        if (!this.leafNodesMap[model.guid][dbId]) {\n          setTimeout(() => {\n            this.viewer.clearSelection()\n          }, 300)\n\n          this.viewer.clearSelection()\n        }\n      }\n    }\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  onModelUnloaded (event) {\n    const { models } = this.react.getState()\n\n    const model = event.model\n\n    this.react.setState({\n      models: models.filter((m) => {\n        return (m.guid !== model.guid)\n      })\n    })\n\n    delete this.leafNodesMap[model.guid]\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  onNodeChecked (event) {\n    const model = event.model\n\n    const node = event.node\n\n    Toolkit.getLeafNodes(model, node.id).then(\n      (dbIds) => {\n        dbIds.forEach((dbId) => {\n          if (node.checked) {\n            const leafNode = event.tree.getNodeById(dbId)\n\n            const checked = leafNode\n              ? leafNode.checked\n              : node.checked\n\n            this.leafNodesMap[model.guid][dbId] = checked\n          } else {\n            this.leafNodesMap[model.guid][dbId] = false\n          }\n        })\n      })\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  async setDocking (docked) {\n    const id = SelectionFilterExtension.ExtensionId\n\n    if (docked) {\n      await this.react.popRenderExtension(id)\n\n      this.react.pushViewerPanel(this, {\n        height: 250,\n        width: 350\n      })\n    } else {\n      await this.react.popViewerPanel(id)\n\n      this.react.pushRenderExtension(this)\n    }\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  renderTitle (docked) {\n    const spanClass = docked\n      ? 'fa fa-chain-broken'\n      : 'fa fa-chain'\n\n    return (\n      <div className='title'>\n        <label>\n          Selection Filter\n        </label>\n        <div className='selection-filter-controls'>\n          <button\n            onClick={() => this.setDocking(docked)}\n            title='Toggle docking mode'\n          >\n            <span className={spanClass} />\n          </button>\n        </div>\n      </div>\n    )\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  renderContent () {\n    const { models } = this.react.getState()\n\n    const treeViews = models.map((model) => {\n      return (\n        <FilterTreeView\n          onNodeChecked={this.onNodeChecked}\n          viewer={this.viewer}\n          key={model.guid}\n          model={model}\n        />\n      )\n    })\n\n    return (\n      <div className='content'>\n        <ReactLoader show={!models.length} />\n        {treeViews}\n      </div>\n    )\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  render (opts) {\n    return (\n      <WidgetContainer\n        renderTitle={() => this.renderTitle(opts.docked)}\n        showTitle={opts.showTitle}\n        className={this.className}\n      >\n\n        {this.renderContent()}\n\n      </WidgetContainer>\n    )\n  }\n}\n\nAutodesk.Viewing.theExtensionManager.registerExtension(\n  SelectionFilterExtension.ExtensionId,\n  SelectionFilterExtension)\n\nexport default 'Viewing.Extension.SelectionFilter'\n","import './Viewing.Extension.SelectionFilter.scss'\nimport './Viewing.Extension.SelectionFilter'\n\nexport default 'Viewing.Extension.SelectionFilter'\n","import MultiModelExtensionBase from './Viewer.MultiModelExtensionBase'\n\nexport default MultiModelExtensionBase\n","import EventsEmitter from 'EventsEmitter'\n\nexport default class MultiModelExtensionBase extends\n  EventsEmitter.Composer(Autodesk.Viewing.Extension) {\n  /// //////////////////////////////////////////////////////\n  // Class constructor\n  //\n  /// //////////////////////////////////////////////////////\n  constructor (viewer, options = {}, defaultOptions = {}) {\n    super(viewer)\n    // bindings\n    Object.assign(this, options.serviceContext)\n\n    this.onModelCompletedLoad = this.onModelCompletedLoad.bind(this)\n    this.onObjectTreeCreated = this.onObjectTreeCreated.bind(this)\n    this.onModelRootLoaded = this.onModelRootLoaded.bind(this)\n    this.onExtensionLoaded = this.onExtensionLoaded.bind(this)\n    this.onModelActivated = this.onModelActivated.bind(this)\n    this.onGeometryLoaded = this.onGeometryLoaded.bind(this)\n    this.onToolbarCreated = this.onToolbarCreated.bind(this)\n    this.onModelBeginLoad = this.onModelBeginLoad.bind(this)\n    this.onModelUnloaded = this.onModelUnloaded.bind(this)\n    this.onSelection = this.onSelection.bind(this)\n\n    this.__onModelRootLoaded = this.__onModelRootLoaded.bind(this)\n    this.__onModelActivated = this.__onModelActivated.bind(this)\n    this.__onModelUnloaded = this.__onModelUnloaded.bind(this)\n    this.__onModelLoaded = this.__onModelLoaded.bind(this)\n\n    this.defaultOptions = defaultOptions\n\n    this.options = Object.assign({},\n      defaultOptions,\n      options)\n\n    this.viewer = viewer\n\n    // read the modelQueue to detect currently loaded models\n    // when the extension gets loaded\n    const models = viewer.impl.modelQueue().getModels()\n\n    this.models = models.map((model) => {\n      model.guid = model.guid || this.guid()\n\n      return model\n    })\n\n    this.initializeEvents()\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Extension Id\n  //\n  /// //////////////////////////////////////////////////////\n  static get ExtensionId () {\n    return 'Viewing.Extension.MultiModelExtensionBase'\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Load callback\n  //\n  /// //////////////////////////////////////////////////////\n  load () {\n    return true\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Unload callback\n  //\n  /// //////////////////////////////////////////////////////\n  unload () {\n    this.viewerEvents.forEach((event) => {\n      this.viewer.removeEventListener(\n        event.id, this[event.handler])\n    })\n\n    if (this.eventSink) {\n      this.eventSink.off('model.activated',\n        this.__onModelActivated)\n\n      this.eventSink.off('model.unloaded',\n        this.__onModelUnloaded)\n\n      this.eventSink.off('model.loaded',\n        this.__onModelLoaded)\n    }\n\n    this.off()\n\n    return true\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Reload callback, in case the extension is re-loaded\n  // more than once\n  //\n  /// //////////////////////////////////////////////////////\n  reload (options = {}) {\n    this.options = Object.assign({},\n      this.defaultOptions,\n      this.options,\n      options)\n\n    return true\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Invoked when extension gets loaded\n  //\n  /// //////////////////////////////////////////////////////\n  onExtensionLoaded (event) {\n\n    // console.log('MultiModelExtensionBase.onExtensionLoaded')\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Invoked when the model starts to load\n  // The geometry and instanceTree may not be available\n  // at this time\n  //\n  /// //////////////////////////////////////////////////////\n  onModelBeginLoad (event) {\n\n    // console.log('MultiModelExtensionBase.onModelBeginLoad')\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Triggered by ModelLoader extension when a model is\n  // selected in a multi-model environment\n  //\n  /// //////////////////////////////////////////////////////\n  onModelActivated (event) {\n\n    // console.log('MultiModelExtensionBase.onModelActivated')\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Invoked when model root node has been loaded\n  // Extensions that do require access to full\n  // model geometry or component tree may use that\n  // event to know a new model has been loaded\n  //\n  /// //////////////////////////////////////////////////////\n  __onModelRootLoaded (event) {\n    this.viewerEvent([\n\n      Autodesk.Viewing.OBJECT_TREE_CREATED_EVENT,\n      Autodesk.Viewing.GEOMETRY_LOADED_EVENT\n\n    ]).then((args) => {\n      this.onModelCompletedLoad(args[0])\n    })\n  }\n\n  onModelRootLoaded (event) {\n\n    // console.log('MultiModelExtensionBase.onModelRootLoaded')\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Invoked when object tree is fully loaded.\n  // Extensions that are interested in using the\n  // instanceTree need to use that event to make sure\n  // it is available\n  //\n  /// /////////////////////////////////////////////////////\n  onObjectTreeCreated (event) {\n\n    // console.log('MultiModelExtensionBase.onObjectTreeCreated')\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Invoked when geometry is fully loaded\n  //\n  /// //////////////////////////////////////////////////////\n  onGeometryLoaded (event) {\n\n    // console.log('MultiModelExtensionBase.onGeometryLoaded')\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Invoked after onObjectTreeCreated and onGeometryLoaded\n  // have both been fired\n  //\n  /// //////////////////////////////////////////////////////\n  onModelCompletedLoad (event) {\n\n    // console.log('MultiModelExtensionBase.onModelCompletedLoad')\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Invoked once the viewer toolbar has been created\n  //\n  /// //////////////////////////////////////////////////////\n  onToolbarCreated (event) {\n\n    // console.log('MultiModelExtensionBase.onToolbarCreated')\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Triggered by ModelLoader extension when a model has\n  // been unloaded as per user request\n  //\n  /// //////////////////////////////////////////////////////\n  onModelUnloaded (event) {\n\n    // console.log('MultiModelExtensionBase.onModelUnloaded')\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Invoked when a model is being selected\n  //\n  /// //////////////////////////////////////////////////////\n  onSelection (event) {\n\n    // console.log('MultiModelExtensionBase.onSelection')\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Sink Events\n  //\n  /// //////////////////////////////////////////////////////\n  __onModelLoaded (event) {\n    this.models = [...this.models, event.model]\n\n    this.onModelBeginLoad(event)\n  }\n\n  __onModelActivated (event) {\n    this.onModelActivated(event)\n  }\n\n  __onModelUnloaded (event) {\n    this.models = this.models.filter((model) => {\n      return model.guid !== event.model.guid\n    })\n\n    this.onModelUnloaded(event)\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Initialize all events for the extension\n  // Each event will invoke a predefined handler\n  // implemented or not by the derived extension\n  //\n  /// //////////////////////////////////////////////////////\n  initializeEvents () {\n    if (this.options.eventSink) {\n      // event object passed in options\n      this.eventSink = this.options.eventSink\n\n      this.eventSink.on('model.loaded',\n        this.__onModelLoaded)\n\n      this.eventSink.on('model.activated',\n        this.__onModelActivated)\n\n      this.eventSink.on('model.unloaded',\n        this.__onModelUnloaded)\n    }\n\n    this.viewerEvents = [\n      {\n        id: Autodesk.Viewing.EXTENSION_LOADED_EVENT,\n        handler: 'onExtensionLoaded'\n      },\n      {\n        id: Autodesk.Viewing.OBJECT_TREE_CREATED_EVENT,\n        handler: 'onObjectTreeCreated'\n      },\n      {\n        id: Autodesk.Viewing.MODEL_ROOT_LOADED_EVENT,\n        handler: '__onModelRootLoaded'\n      },\n      {\n        id: Autodesk.Viewing.MODEL_ROOT_LOADED_EVENT,\n        handler: 'onModelRootLoaded'\n      },\n      {\n        id: Autodesk.Viewing.GEOMETRY_LOADED_EVENT,\n        handler: 'onGeometryLoaded'\n      },\n      {\n        id: Autodesk.Viewing.TOOLBAR_CREATED_EVENT,\n        handler: 'onToolbarCreated'\n      },\n      {\n        id: Autodesk.Viewing.AGGREGATE_SELECTION_CHANGED_EVENT,\n        handler: 'onSelection'\n      }\n    ]\n\n    this.viewerEvents.forEach((event) => {\n      this.viewerEvent(event.id, this[event.handler])\n    })\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Async viewer event\n  //\n  /// //////////////////////////////////////////////////////\n  viewerEvent (eventId, handler) {\n    if (handler) {\n      this.viewer.addEventListener(eventId, handler)\n      return\n    }\n\n    const eventIdArray = Array.isArray(eventId)\n      ? eventId : [eventId]\n\n    const eventTasks = eventIdArray.map((id) => {\n      return new Promise((resolve) => {\n        const __handler = (args) => {\n          this.viewer.removeEventListener(id, __handler)\n          resolve(args)\n        }\n        this.viewer.addEventListener(id, __handler)\n      })\n    })\n\n    return Promise.all(eventTasks)\n  }\n}\n","var superPropBase = require(\"./superPropBase\");\n\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    module.exports = _get = Reflect.get;\n  } else {\n    module.exports = _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nmodule.exports = _get;","import PropTypes from 'prop-types'\nimport ReactDOM from 'react-dom'\nimport './WidgetContainer.scss'\nimport React from 'react'\n\nclass WidgetContainer extends React.Component {\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  static propTypes = {\n    className: PropTypes.string,\n    showTitle: PropTypes.bool\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  static defaultProps = {\n    showTitle: true,\n    className: ''\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  renderTitle () {\n\n    if (!this.props.showTitle) {\n\n      return <div/>\n    }\n\n    if (this.props.renderTitle) {\n\n      return this.props.renderTitle()\n    }\n\n    return (\n      <div className=\"title\">\n        <label>\n          { this.props.title }\n        </label>\n      </div>\n    )\n  }\n\n  ///////////////////////////////////////////////////////////////////\n  //\n  //\n  ///////////////////////////////////////////////////////////////////\n  renderChildren() {\n\n    if (this.props.dimensions) {\n\n      return React.Children.map(this.props.children, (child) => {\n\n        const newProps = Object.assign({},\n          child.props, {\n            dimensions: this.props.dimensions\n          })\n\n        return React.cloneElement(child, newProps)\n      })\n    }\n\n    return this.props.children\n  }\n\n  ///////////////////////////////////////////////////////////////////\n  //\n  //\n  ///////////////////////////////////////////////////////////////////\n  render() {\n\n    const classNames = [\n      'widget-container',\n      ...this.props.className.split(' ')\n    ]\n\n    const height = this.props.showTitle\n      ? 'calc(100% - 40px)'\n      : '100%'\n\n    return (\n      <div className={classNames.join(' ')} style={this.props.style}>\n         { this.renderTitle() }\n        <div className=\"content\" style={{height}}>\n          {this.renderChildren()}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default WidgetContainer\n","import WidgetContainer from './WidgetContainer'\n\nexport default WidgetContainer\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../node_modules/sass-loader/lib/loader.js!./WidgetContainer.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../node_modules/sass-loader/lib/loader.js!./WidgetContainer.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../node_modules/sass-loader/lib/loader.js!./WidgetContainer.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".widget-container {\\n  position: relative;\\n  height: 100%;\\n  width: 100%; }\\n\\n.widget-container > .title {\\n  border-bottom: 1px solid #cdcdcd;\\n  background-color: #f5f5f5;\\n  padding-right: 10px;\\n  color: black;\\n  position: relative;\\n  overflow: hidden;\\n  text-align: left;\\n  height: 40px;\\n  width: 100%; }\\n\\n.widget-container > .title > label {\\n  white-space: nowrap;\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none;\\n  margin-left: 27px;\\n  margin-top: 10px; }\\n\\n.widget-container > .content {\\n  position: relative;\\n  overflow: hidden;\\n  height: 100%;\\n  width: 100%; }\\n\", \"\"]);\n","var getPrototypeOf = require(\"./getPrototypeOf\");\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nmodule.exports = _superPropBase;","import autobind from 'autobind-decorator'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nexport default class Switch extends React.Component {\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  static propTypes = {\n    className: PropTypes.string,\n    checked: PropTypes.bool\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  static defaultProps = {\n    checked: true,\n    className: ''\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  constructor () {\n\n    super ()\n\n    this.state = {\n      checked: true\n    }\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  componentWillMount () {\n\n    this.setState({\n      checked: this.props.checked\n    })\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  @autobind\n  toggle () {\n\n    if (this.props.disabled) {\n      return\n    }\n\n    const checked = !this.state.checked\n\n    this.setState({\n      checked\n    })\n\n    if (this.props.onChange) {\n\n      this.props.onChange (checked)\n    }\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  render () {\n\n    const classNames = [\n      'switch-container',\n      this.props.disabled ? 'disabled' : '',\n      ...this.props.className.split(' ')\n    ]\n\n    return(\n      <div className={classNames.join(' ')}\n        onClick={this.toggle}>\n        <input ref=\"switch\" className=\"switch\"\n          checked={this.state.checked}\n          value={this.state.checked}\n          onChange={()=> {}}\n          type=\"checkbox\"\n        />\n        <div>\n          <span>\n            <g className=\"icon icon-toolbar grid-view\"/>\n          </span>\n          <span>\n            <g className=\"icon icon-toolbar ticket-view\"/>\n          </span>\n          <div/>\n        </div>\n      </div>\n    )\n  }\n}\n","import Switch from './Switch'\nimport './Switch.scss'\n\nexport default Switch\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../node_modules/sass-loader/lib/loader.js!./Switch.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../node_modules/sass-loader/lib/loader.js!./Switch.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../node_modules/sass-loader/lib/loader.js!./Switch.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".switch-container {\\n  position: relative; }\\n\\n.switch-container *:hover {\\n  cursor: pointer; }\\n\\n.switch-container.disabled *:hover {\\n  cursor: not-allowed; }\\n\\ninput[type=\\\"checkbox\\\"].switch {\\n  pointer-events: none;\\n  position: absolute;\\n  cursor: pointer;\\n  opacity: 0; }\\n\\ninput[type=\\\"checkbox\\\"].switch + div {\\n  vertical-align: middle;\\n  width: 40px;\\n  height: 20px;\\n  border-radius: 999px;\\n  background-color: #9d9d9d;\\n  transition-duration: .4s;\\n  transition-property: background-color, box-shadow;\\n  cursor: pointer; }\\n\\ninput[type=\\\"checkbox\\\"].switch + div span {\\n  position: absolute;\\n  font-size: 1.6rem;\\n  color: #f5f5f5;\\n  margin-top: 12px; }\\n\\ninput[type=\\\"checkbox\\\"].switch + div span:nth-child(1) {\\n  margin-left: 15px; }\\n\\ninput[type=\\\"checkbox\\\"].switch + div span:nth-child(2) {\\n  margin-left: 55px; }\\n\\ninput[type=\\\"checkbox\\\"].switch:checked + div {\\n  width: 60px;\\n  background-position: 0 0;\\n  background-color: #57BB00; }\\n\\n.switch-container.disabled input[type=\\\"checkbox\\\"].switch + div {\\n  background-color: rgba(157, 157, 157, 0.5); }\\n\\ninput[type=\\\"checkbox\\\"].switch + div {\\n  width: 60px;\\n  height: 26px; }\\n\\ninput[type=\\\"checkbox\\\"].switch + div > div {\\n  float: left;\\n  width: 24px;\\n  height: 24px;\\n  border-radius: inherit;\\n  background: #f5f5f5;\\n  transition-timing-function: cubic-bezier(1, 0, 0, 1);\\n  transition-duration: 0.4s;\\n  transition-property: transform, background-color;\\n  pointer-events: none;\\n  margin-top: 1px;\\n  margin-left: 1px; }\\n\\ninput[type=\\\"checkbox\\\"].switch:checked + div > div {\\n  transform: translate3d(20px, 0, 0);\\n  background-color: #f5f5f5; }\\n\\ninput[type=\\\"checkbox\\\"].bigswitch.switch + div > div {\\n  width: 44px;\\n  height: 44px;\\n  margin-top: 1px; }\\n\\ninput[type=\\\"checkbox\\\"].switch:checked + div > div {\\n  transform: translate3d(34px, 0, 0); }\\n\", \"\"]);\n","import EventsEmitter from 'EventsEmitter'\n\nexport default class EventTool extends EventsEmitter {\n  constructor (viewer) {\n    super()\n\n    this.viewer = viewer\n\n    this.toolName = this.guid()\n\n    viewer.toolController.registerTool(this)\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Tool names\n  //\n  /// //////////////////////////////////////////////////////\n  getNames () {\n    return [this.getName()]\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Tool name\n  //\n  /// //////////////////////////////////////////////////////\n  getName () {\n    return this.toolName\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Tool Priority\n  //\n  /// //////////////////////////////////////////////////////\n  getPriority () {\n    return 1000\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Activate Tool\n  //\n  /// //////////////////////////////////////////////////////\n  activate () {\n    if (!this.active) {\n      this.active = true\n\n      this.viewer.toolController.activateTool(\n        this.toolName)\n\n      this.emit('activate', this)\n    }\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Deactivate tool\n  //\n  /// //////////////////////////////////////////////////////\n  deactivate () {\n    if (this.active) {\n      this.active = false\n\n      this.viewer.toolController.deactivateTool(\n        this.toolName)\n\n      this.emit('deactivate', this)\n    }\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  handleSingleClick (event, button) {\n    return this.emit('singleclick', event, button)\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  handleDoubleClick (event, button) {\n    return this.emit('doubleclick', event, button)\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  handleMouseMove (event) {\n    return this.emit('mousemove', event)\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  handleWheelInput (event) {\n    return this.emit('mousewheel', event)\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  handleGesture (event) {\n    return this.emit('gesture', event)\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  handleKeyDown (event, keyCode) {\n    return this.emit('keydown', event, keyCode)\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  handleButtonDown (event, button) {\n    return this.emit('buttondown', event, button)\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  handleButtonUp (event, button) {\n    return this.emit('buttonup', event, button)\n  }\n}\n","import EventTool from './Viewer.EventTool'\n\nexport default EventTool\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../../../../node_modules/sass-loader/lib/loader.js!./FilterTreeView.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../../../../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../../../../node_modules/sass-loader/lib/loader.js!./FilterTreeView.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../../../../node_modules/sass-loader/lib/loader.js!./FilterTreeView.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".filter-tree-container .treeview-base lmvheader {\\n  transition-property: background, border;\\n  transition-timing-function: ease;\\n  transition-duration: 1.5s;\\n  transition-delay: 0.0s;\\n  background: rgba(245, 245, 245, 0.5);\\n  margin-bottom: -4px;\\n  border: none;\\n  height: 30px; }\\n\\n.filter-tree-container .treeview-base lmvheader:hover {\\n  background: rgba(0, 105, 245, 0.35); }\\n\\n.filter-tree-container .treeview-base group > lmvheader > icon {\\n  height: 20px;\\n  float: left; }\\n\\n.filter-tree-container .treenode .switch-container {\\n  border: 1px solid #9c9c9c;\\n  border-radius: 12px;\\n  margin: 0 8px 0 2px;\\n  float: left; }\\n\\n.filter-tree-container .treenode .label-container {\\n  pointer-events: none; }\\n\\n.filter-tree-container .treenode {\\n  float: left; }\\n\\n.filter-tree-container input[type=\\\"checkbox\\\"].switch + div {\\n  width: 34px;\\n  height: 16px; }\\n\\n.filter-tree-container input[type=\\\"checkbox\\\"].switch:checked + div {\\n  width: 34px; }\\n\\n.filter-tree-container input[type=\\\"checkbox\\\"].switch:checked + div > div {\\n  transform: translate3d(18px, 0, 0); }\\n\\n.filter-tree-container input[type=\\\"checkbox\\\"].switch + div > div {\\n  height: 16px;\\n  width: 16px;\\n  margin: 0; }\\n\", \"\"]);\n","import EventsEmitter from 'EventsEmitter'\nimport PropTypes from 'prop-types'\nimport ReactDOM from 'react-dom'\nimport Switch from 'Switch'\nimport Label from 'Label'\nimport React from 'react'\n\nexport default class FilterTreeNode extends EventsEmitter {\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  constructor (props) {\n\n    super ()\n\n    this.setChecked = this.setChecked.bind(this)\n\n    this.onExpand = this.onExpand.bind(this)\n\n    this.on('expand', this.onExpand)\n\n    this.instanceTree = props.instanceTree\n    this.delegate     = props.delegate\n    this.disabled     = props.disabled\n    this.checked      = props.checked\n    this.parent       = props.parent\n    this.group        = props.group\n    this.name         = props.name\n    this.type         = props.type\n    this.id           = props.id\n\n    this.children = []\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  onExpand () {\n\n    this.off('expand', this.onExpand)\n\n    this.loadChildren()\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  setDisabled (disabled) {\n\n    this.disabled = disabled\n\n    this.reactNode = ReactDOM.render(\n      <ReactTreeNode onChecked={this.setChecked}\n        disabled={this.disabled}\n        checked={this.checked}\n        name={this.name}/>,\n      this.domContainer)\n\n    if (disabled || this.checked) {\n\n      this.children.forEach((child) => {\n\n        child.setDisabled (disabled, true)\n      })\n    }\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  setChecked (checked) {\n\n    this.checked = checked\n\n    this.delegate.emit(\n      'node.checked', this)\n\n    this.children.forEach((child) => {\n\n      child.setDisabled (!checked)\n    })\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  mount (domContainer) {\n\n    this.domContainer = domContainer\n\n    this.collapse()\n\n    this.reactNode = ReactDOM.render(\n      <ReactTreeNode onChecked={this.setChecked}\n        disabled={this.disabled}\n        checked={this.checked}\n        name={this.name}/>,\n      this.domContainer)\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  expand () {\n\n    const target =\n      this.domContainer.parentElement.parentElement\n\n    target.classList.remove('collapsed')\n    target.classList.add('expanded')\n\n    this.emit('expand')\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  collapse () {\n\n    const target =\n      this.domContainer.parentElement.parentElement\n\n    target.classList.remove('expanded')\n    target.classList.add('collapsed')\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  loadChildren () {\n\n    const childIds = this.getChildIds(this.id)\n\n    this.children = childIds.map((id) => {\n\n      const childNode = new FilterTreeNode({\n        disabled: this.disabled || !this.checked,\n        name: this.instanceTree.getNodeName(id),\n        group: this.getChildIds(id).length,\n        instanceTree: this.instanceTree,\n        delegate: this.delegate,\n        checked: true,\n        parent: this,\n        type: '',\n        id\n      })\n\n      this.addChild(childNode)\n\n      return childNode\n    })\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  destroy () {\n\n    this.children.forEach((child) => {\n\n      child.destroy ()\n    })\n\n    ReactDOM.unmountComponentAtNode(\n      this.domContainer)\n\n    this.delegate.emit(\n      'node.destroy', this)\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  getChildIds (nodeId) {\n\n    const childIds = []\n\n    this.instanceTree.enumNodeChildren(nodeId,\n      (childId) => {\n\n        childIds.push(childId)\n      })\n\n    return childIds\n  }\n}\n\n\nclass ReactTreeNode extends React.Component {\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  static propTypes = {\n    className: PropTypes.string\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  static defaultProps = {\n    className: ''\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  render() {\n\n    const classNames = [\n      'treenode',\n      ...this.props.className.split(' ')\n    ]\n\n    return (\n      <div className={classNames.join(' ')}>\n        <Switch onChange={(checked) => this.props.onChecked(checked)}\n          disabled={this.props.disabled}\n          checked={this.props.checked}\n          className=\"handle-click\"/>\n        <Label text={this.props.name}/>\n      </div>\n    )\n  }\n}\n","import FilterTreeNode from './FilterTreeNode'\nimport { TreeDelegate } from 'TreeView'\n\nexport default class FilterTreeDelegate extends TreeDelegate {\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  constructor (model) {\n    super()\n\n    this.instanceTree = model.getData().instanceTree\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  createRootNode () {\n    const rootId = this.instanceTree.getRootId()\n\n    this.rootNode = new FilterTreeNode({\n\n      name: this.instanceTree.getNodeName(rootId),\n      group: this.getChildIds(rootId).length,\n      instanceTree: this.instanceTree,\n      delegate: this,\n      checked: true,\n      parent: null,\n      type: 'root',\n      id: rootId\n    })\n\n    return this.rootNode\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  destroy () {\n    this.rootNode.destroy()\n\n    this.off()\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  createTreeNode (node, parentDomElement, options = {}) {\n    const container = document.createElement('div')\n\n    parentDomElement.appendChild(container)\n\n    node.mount(container)\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  nodeClickSelector (event) {\n    const targetCls = event.target.parentNode.className\n    const parentCls = event.target.className\n\n    if (parentCls.indexOf('handle-click') > -1 ||\n        targetCls.indexOf('handle-click') > -1) {\n      return false\n    }\n\n    return true\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  forEachChild (node, addChild) {\n    node.addChild = addChild\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  getChildIds (nodeId) {\n    const childIds = []\n\n    this.instanceTree.enumNodeChildren(nodeId,\n      (childId) => {\n        childIds.push(childId)\n      })\n\n    return childIds\n  }\n}\n","/// ///////////////////////////////////////////////////////////////////////\n// Copyright (c) Autodesk, Inc. All rights reserved\n// Written by Philippe Leefsma 2016 - ADN/Developer Technical Services\n//\n// Permission to use, copy, modify, and distribute this software in\n// object code form for any purpose and without fee is hereby granted,\n// provided that the above copyright notice appears in all copies and\n// that both that copyright notice and the limited warranty and\n// restricted rights notice below appear in all supporting\n// documentation.\n//\n// AUTODESK PROVIDES THIS PROGRAM \"AS IS\" AND WITH ALL FAULTS.\n// AUTODESK SPECIFICALLY DISCLAIMS ANY IMPLIED WARRANTY OF\n// MERCHANTABILITY OR FITNESS FOR A PARTICULAR USE.  AUTODESK, INC.\n// DOES NOT WARRANT THAT THE OPERATION OF THE PROGRAM WILL BE\n// UNINTERRUPTED OR ERROR FREE.\n/// //////////////////////////////////////////////////////////////////\nimport FilterTreeDelegate from './FilterTreeDelegate'\nimport { TreeView } from 'TreeView'\nimport ReactDOM from 'react-dom'\nimport './FilterTreeView.scss'\nimport React from 'react'\n\nexport default class FilterTreeView extends React.Component {\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  constructor (props) {\n    super(props)\n\n    this.delegate = new FilterTreeDelegate(props.model)\n\n    this.delegate.on('node.dblClick', (node) => {\n      this.props.viewer.isolate(node.id, props.model)\n    })\n\n    this.delegate.on('node.checked', (node) => {\n      this.props.onNodeChecked({\n        model: props.model,\n        tree: this.tree,\n        node\n      })\n    })\n\n    this.delegate.on('node.destroy', (node) => {\n      this.tree.destroyNode(node.id)\n    })\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  componentDidMount () {\n    this.rootNode = this.delegate.createRootNode()\n\n    this.tree = new TreeView(\n      this.delegate, this.rootNode, this.treeContainer, {\n        excludeRoot: false\n      })\n\n    this.rootNode.expand()\n    this.rootNode.setChecked(true)\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  componentWillUnmount () {\n    this.delegate.destroy()\n\n    this.tree.destroy()\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  // shouldComponentUpdate () {\n  //\n  //  return false\n  // }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  render () {\n    return (\n      <div\n        className='filter-tree-container' ref={\n          (div) => this.treeContainer = div\n        }\n      />\n    )\n  }\n}\n","import FilterTreeView from './FilterTreeView'\nimport './FilterTreeView.scss'\n\nexport default FilterTreeView\n"],"sourceRoot":""}