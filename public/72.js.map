{"version":3,"sources":["webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.WallAnalyzer/worker.js","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.WallAnalyzer/Viewing.Extension.WallAnalyzer.scss?ae59","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.WallAnalyzer/Viewing.Extension.WallAnalyzer.scss","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.WallAnalyzer/MeshPropertyPanel.js","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.WallAnalyzer/Viewing.Extension.WallAnalyzer.js","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.WallAnalyzer/index.js","webpack:///./src/client/components/Viewer/Extensions/Viewer.MultiModelExtensionBase/index.js","webpack:///./src/client/components/Viewer/Extensions/Viewer.MultiModelExtensionBase/Viewer.MultiModelExtensionBase.js","webpack:///./src/client/components/WidgetContainer/WidgetContainer.js","webpack:///./src/client/components/WidgetContainer/index.js","webpack:///./src/client/components/WidgetContainer/WidgetContainer.scss?a31d","webpack:///./src/client/components/WidgetContainer/WidgetContainer.scss","webpack:///./src/client/components/Switch/Switch.js","webpack:///./src/client/components/Switch/index.js","webpack:///./src/client/components/Switch/Switch.scss?8d3d","webpack:///./src/client/components/Switch/Switch.scss","webpack:///./src/client/components/Viewer/Viewer.EventTool/Viewer.EventTool.js","webpack:///./src/client/components/Viewer/Viewer.EventTool/index.js"],"names":["module","exports","Worker","__webpack_require__","p","content","i","locals","push","MeshPropertyPanel","viewer","_this","classCallCheck_default","this","possibleConstructorReturn_default","getPrototypeOf_default","call","container","nodeId","_this2","model","getProperties","result","setProperties","properties","setTitle","name","resizeToContent","Autodesk","Viewing","UI","PropertyPanel","WallAnalyzerExtension","options","onLevelWallsClicked","bind","assertThisInitialized_default","onLevelFloorClicked","onEnableWireFrame","onWorkerMessage","onMouseMove","renderTitle","onClick","eventTool","EventTool","react","worker","intersectMeshes","nbMeshesLoaded","wireframe","setState","loader","levels","then","pushRenderExtension","console","log","on","linesMaterial","createLinesMaterial","impl","createOverlayScene","addEventListener","removeOverlayScene","notification","notify","remove","off","get_default","prototype","msg","_this3","state","getState","data","material","levelMaterials","level","mesh","buildMesh","levelIdx","levelCount","strokeColor","levelColors","fillColor","concat","walls","active","meshes","floor","floorDbIds","map","dbId","Toolkit","buildComponentMesh","dbIds","paths","report","boundingBox","levelBox","lines","pathEdges","edge","geometry","THREE","Geometry","start","z","end","vertices","Vector3","x","y","computeLineDistances","Line","LinePieces","wall","path","progress","wallCount","dismissAfter","status","message","toFixed","fragIds","getLeafFragIds","fragList","getFragmentList","getModifiedWorldBoundingBox","event","panel","add","title","dismissible","position","show","_this4","postModelInfo","getComponentsByParentName","floorsIds","nbFloors","length","colors","d3","scale","linear","domain","range","forEach","idx","levelMaterial","MeshPhongMaterial","side","DoubleSide","color","matman","addMaterial","guid","postComponent","wallIds","instanceTree","getData","rootId","getRootId","getFragIds","msgId","postMessage","category","count","getComponentGeometry","getComponentBoundingBox","matrixWorld","nbMeshes","positions","indices","stride","vertex","faces","face","Face3","a","b","c","computeFaceNormals","Matrix4","fromArray","Mesh","applyMatrix","parentId","enumNodeChildren","childId","getNodeName","indexOf","getLeafNodes","_this5","fragId","renderProxy","getRenderProxy","attributes","vb","array","index","ib","vbstride","elements","arguments","undefined","opacity","LineBasicMaterial","Color","transparent","depthWrite","depthTest","linewidth","fragbBox","Box3","nodebBox","getWorldBounds","union","hex","alpha","test","substring","split","join","Error","domElement","camera","pointer","pointerVector","pointerDir","ray","Raycaster","rect","getBoundingClientRect","clientX","left","width","clientY","top","height","isPerspective","set","unproject","sub","normalize","transformDirection","pointers","pointerToRaycaster","canvas","intersectObjects","selections","dbIdArray","intersectResults","object","setVisible","setNodeProperties","_this6","scene","meshIds","id","filter","includes","nbActiveWalls","nbActiveFloors","hide","activate","deactivate","line","addOverlay","removeOverlay","_this7","drawLine","clearLine","viewerState","viewport","restoreState","checked","sceneUpdated","docked","ExtensionId","popRenderExtension","pushViewerPanel","popViewerPanel","e","stopPropagation","encodeURIComponent","JSON","stringify","document","createElement","setAttribute","body","appendChild","click","removeChild","_this8","hasActiveItem","items","wallsActive","floorActive","style","backgroundColor","hexToRgbA","border","react_default","key","className","onLevelReportClicked","Loader","Switch","onChange","_this9","titleOpts","spanClass","showDocking","setDocking","_this10","opts","WidgetContainer","showTitle","renderContent","MultiModelExtensionBase","theExtensionManager","registerExtension","__webpack_exports__","_Viewer_MultiModelExtensionBase__WEBPACK_IMPORTED_MODULE_0__","defaultOptions","_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default","_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default","_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default","Object","assign","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5___default","serviceContext","onModelCompletedLoad","onObjectTreeCreated","onModelRootLoaded","onExtensionLoaded","onModelActivated","onGeometryLoaded","onToolbarCreated","onModelBeginLoad","onModelUnloaded","onSelection","__onModelRootLoaded","__onModelActivated","__onModelUnloaded","__onModelLoaded","models","modelQueue","getModels","initializeEvents","viewerEvents","removeEventListener","handler","eventSink","viewerEvent","OBJECT_TREE_CREATED_EVENT","GEOMETRY_LOADED_EVENT","args","_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default","EXTENSION_LOADED_EVENT","MODEL_ROOT_LOADED_EVENT","TOOLBAR_CREATED_EVENT","AGGREGATE_SELECTION_CHANGED_EVENT","eventId","eventTasks","Array","isArray","Promise","resolve","__handler","all","EventsEmitter","Composer","Extension","props","dimensions","React","Children","children","child","newProps","cloneElement","classNames","toConsumableArray_default","renderChildren","Component","PropTypes","string","bool","disabled","toggle","ref","value","type","autobind","toolName","toolController","registerTool","getName","activateTool","emit","deactivateTool","button","keyCode"],"mappings":"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","file":"72.js","sourcesContent":["module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"ac8bc6df15a4e83e6356.worker.js\");\n};","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../../../node_modules/sass-loader/lib/loader.js!./Viewing.Extension.WallAnalyzer.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../../../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../../../node_modules/sass-loader/lib/loader.js!./Viewing.Extension.WallAnalyzer.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../../../node_modules/sass-loader/lib/loader.js!./Viewing.Extension.WallAnalyzer.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".wall-analyzer .title {\\n  display: -ms-inline-flexbox;\\n  display: inline-flex;\\n  float: left; }\\n\\n.wall-analyzer .title > label {\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  white-space: nowrap;\\n  font-weight: normal;\\n  user-select: none;\\n  margin-left: 27px;\\n  margin-top: 10px;\\n  select: none;\\n  width: 144px;\\n  float: left; }\\n\\n.wall-analyzer .content {\\n  background-color: #ffffff;\\n  text-align: left;\\n  overflow-y: scroll;\\n  overflow-x: hidden;\\n  height: 100%; }\\n\\n.wall-analyzer .row {\\n  width: calc(100% - 20px);\\n  margin: 5px 0 5px 10px; }\\n\\n.wall-analyzer .control-element {\\n  float: left; }\\n\\n.wall-analyzer .item-list-container {\\n  overflow: auto;\\n  padding: 8px; }\\n\\n.wall-analyzer .list-item {\\n  transition-property: background-color;\\n  transition-timing-function: ease;\\n  transition-duration: 1.0s;\\n  transition-delay: 0.0s;\\n  background-color: #f8f8f8;\\n  border: 1px solid #5f5f5f;\\n  border-radius: 4px;\\n  margin-bottom: 4px;\\n  overflow: hidden;\\n  height: 38px; }\\n\\n.wall-analyzer .list-item.active {\\n  background-color: #c1ddff;\\n  border: 1px solid #253add; }\\n\\n.wall-analyzer .list-item label {\\n  white-space: nowrap;\\n  position: relative;\\n  margin-left: 6px;\\n  float: left;\\n  top: 8px; }\\n\\n.wall-analyzer .item-color {\\n  position: relative;\\n  border-radius: 50%;\\n  height: 28px;\\n  margin: 4px;\\n  width: 28px;\\n  float: left; }\\n\\n.wall-analyzer .level-walls {\\n  transition-timing-function: ease;\\n  transition-property: background;\\n  transition-duration: 1.0s;\\n  transition-delay: 0.0s;\\n  border: 1px solid #c6c6c6;\\n  height: calc(100% - 7px);\\n  border-radius: 4px;\\n  position: relative;\\n  margin-right: 6px;\\n  cursor: pointer;\\n  float: right;\\n  padding: 3px;\\n  width: 50px;\\n  top: 4px; }\\n\\n.wall-analyzer .level-walls.active, .wall-analyzer .level-walls:hover {\\n  background: #ecf2ff;\\n  border: 2px solid rgba(37, 58, 221, 0.51); }\\n\\n.wall-analyzer .level-floor {\\n  transition-timing-function: ease;\\n  transition-property: background;\\n  transition-duration: 1.0s;\\n  transition-delay: 0.0s;\\n  border: 1px solid #c6c6c6;\\n  height: calc(100% - 7px);\\n  border-radius: 4px;\\n  position: relative;\\n  margin-right: 6px;\\n  cursor: pointer;\\n  float: right;\\n  padding: 3px;\\n  width: 50px;\\n  top: 4px; }\\n\\n.wall-analyzer .level-floor.active, .wall-analyzer .level-floor:hover {\\n  background: #ecf2ff;\\n  border: 2px solid rgba(37, 58, 221, 0.51); }\\n\\n.wall-analyzer .level-report {\\n  transition-timing-function: ease;\\n  transition-property: background;\\n  transition-duration: 1.0s;\\n  transition-delay: 0.0s;\\n  border: 1px solid #c6c6c6;\\n  height: calc(100% - 7px);\\n  border-radius: 4px;\\n  position: relative;\\n  margin-right: 6px;\\n  cursor: pointer;\\n  float: right;\\n  padding: 3px;\\n  top: 4px; }\\n\\n.wall-analyzer .level-report:hover {\\n  background: #ecf2ff;\\n  border: 1px solid rgba(37, 58, 221, 0.51); }\\n\\n.wall-analyzer .level-report span {\\n  margin-right: 4px;\\n  color: #498a42; }\\n\\n.wall-analyzer-controls {\\n  margin: auto 0 auto calc(100% - 152px);\\n  position: relative;\\n  float: left; }\\n\\n.wall-analyzer-controls > button {\\n  border: 1px solid #c6c6c6;\\n  background-color: #e1e1e1;\\n  border-radius: 6px;\\n  position: relative;\\n  overflow: hidden;\\n  outline: none;\\n  height: 24px;\\n  width: 26px; }\\n\\n.wall-analyzer-controls > button:hover {\\n  border: 1px solid #878787;\\n  background-color: #f5f5f5; }\\n\\n.wall-analyzer-controls > button > label {\\n  position: relative;\\n  font-size: 20px;\\n  color: #f0fcff;\\n  top: -8px; }\\n\\n.wall-analyzer-controls > button > span {\\n  pointer-events: none;\\n  color: #9b9b9b; }\\n\", \"\"]);\n","\nexport default class MeshPropertyPanel extends\n  Autodesk.Viewing.UI.PropertyPanel {\n  /// //////////////////////////////////////////////////////////////\n  // Class constructor\n  //\n  /// //////////////////////////////////////////////////////////////\n  constructor (viewer) {\n    super(viewer.container)\n\n    this.viewer = viewer\n  }\n\n  /// //////////////////////////////////////////////////////////////\n  // setNodeProperties override\n  //\n  /// //////////////////////////////////////////////////////////////\n  setNodeProperties (nodeId) {\n    this.viewer.model.getProperties(nodeId, (result) => {\n      this.setProperties(result.properties)\n\n      this.setTitle(result.name)\n\n      this.resizeToContent()\n\n      this.nodeId = nodeId\n    })\n  }\n}\n","/// //////////////////////////////////////////////////////\n// Viewing.Extension.WallAnalyzer\n// by Philippe Leefsma, May 2017\n//\n/// //////////////////////////////////////////////////////\nimport MultiModelExtensionBase from 'Viewer.MultiModelExtensionBase'\nimport MeshPropertyPanel from './MeshPropertyPanel'\nimport Worker from 'worker-loader!./worker.js'\nimport './Viewing.Extension.WallAnalyzer.scss'\nimport WidgetContainer from 'WidgetContainer'\nimport EventTool from 'Viewer.EventTool'\nimport Toolkit from 'Viewer.Toolkit'\nimport { ReactLoader } from 'Loader'\nimport Switch from 'Switch'\nimport React from 'react'\nimport d3 from 'd3'\n\nclass WallAnalyzerExtension extends MultiModelExtensionBase {\n  /// //////////////////////////////////////////////////////\n  // Class constructor\n  //\n  /// //////////////////////////////////////////////////////\n  constructor (viewer, options) {\n    super(viewer, options)\n\n    this.onLevelWallsClicked = this.onLevelWallsClicked.bind(this)\n    this.onLevelFloorClicked = this.onLevelFloorClicked.bind(this)\n    this.onEnableWireFrame = this.onEnableWireFrame.bind(this)\n    this.onWorkerMessage = this.onWorkerMessage.bind(this)\n    this.onMouseMove = this.onMouseMove.bind(this)\n    this.renderTitle = this.renderTitle.bind(this)\n    this.onClick = this.onClick.bind(this)\n\n    this.eventTool = new EventTool(this.viewer)\n\n    this.react = this.options.react\n\n    this.worker = new Worker()\n\n    this.intersectMeshes = []\n\n    this.nbMeshesLoaded = 0\n\n    this.wireframe = false\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  get className () {\n    return 'wall-analyzer'\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Extension Id\n  //\n  /// //////////////////////////////////////////////////////\n  static get ExtensionId () {\n    return 'Viewing.Extension.WallAnalyzer'\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Load callback\n  //\n  /// //////////////////////////////////////////////////////\n  load () {\n    this.react.setState({\n\n      loader: true,\n      levels: []\n\n    }).then(() => {\n      this.react.pushRenderExtension(this)\n    })\n\n    console.log('Viewing.Extension.WallAnalyzer loaded')\n\n    this.eventTool.on('mousemove', this.onMouseMove)\n\n    this.eventTool.on('singleclick', this.onClick)\n\n    this.linesMaterial = this.createLinesMaterial()\n\n    this.viewer.impl.createOverlayScene(\n      'wallAnalyzer', this.linesMaterial)\n\n    this.worker.addEventListener(\n      'message',\n      this.onWorkerMessage)\n\n    return true\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Unload callback\n  //\n  /// //////////////////////////////////////////////////////\n  unload () {\n    console.log('Viewing.Extension.WallAnalyzer unloaded')\n\n    this.viewer.impl.removeOverlayScene('wallAnalyzer')\n\n    if (this.notification) {\n      this.options.notify.remove(this.notification)\n    }\n\n    this.eventTool.off()\n\n    super.unload()\n\n    return true\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  reset () {\n    this.options.notify.remove(this.notification)\n\n    this.notification = null\n\n    this.react.setState({\n      loader: true,\n      levels: []\n    })\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  onWorkerMessage (msg) {\n    const state = this.react.getState()\n\n    const data = msg.data\n\n    const material = this.levelMaterials[data.level]\n\n    const mesh = this.buildMesh(data, material)\n\n    const levelIdx = data.levelCount - data.level - 1\n\n    const level = state.levels[levelIdx] || {\n      strokeColor: this.levelColors[data.level],\n      fillColor: this.levelColors[data.level],\n      name: `Level ${data.level + 1}`,\n      walls: {\n        name: `Walls [Level #${data.level + 1}]`,\n        active: false,\n        meshes: []\n      },\n      floor: {\n        meshes: data.floorDbIds.map((dbId) => {\n          return Toolkit.buildComponentMesh(\n            this.viewer, this.viewer.model,\n            dbId, null, material)\n        }),\n        name: `Floor [Level #${data.level + 1}]`,\n        dbIds: data.floorDbIds,\n        active: false,\n        paths: []\n      },\n      report: {\n        level: `Level ${data.level + 1}`,\n        boundingBox: msg.levelBox,\n        walls: []\n      }\n    }\n\n    state.levels[levelIdx] = level\n\n    level.walls.meshes.push(mesh)\n\n    const lines = data.pathEdges.map((edge) => {\n      const geometry = new THREE.Geometry()\n\n      edge.start.z += 0.05\n      edge.end.z += 0.05\n\n      geometry.vertices.push(\n        new THREE.Vector3(\n          edge.start.x,\n          edge.start.y,\n          edge.start.z))\n\n      geometry.vertices.push(\n        new THREE.Vector3(\n          edge.end.x,\n          edge.end.y,\n          edge.end.z))\n\n      geometry.computeLineDistances()\n\n      return new THREE.Line(geometry,\n        this.linesMaterial,\n        THREE.LinePieces)\n    })\n\n    level.floor.paths.push({\n      lines\n    })\n\n    const wall = {\n      path: data.pathEdges,\n      dbId: mesh.dbId\n    }\n\n    Toolkit.getProperties(\n      this.viewer.model,\n      mesh.dbId).then((properties) => {\n      wall.properties = properties\n    })\n\n    level.report.walls.push(wall)\n\n    const progress =\n      (++this.nbMeshesLoaded) * 100 /\n      (data.levelCount * data.wallCount)\n\n    if (progress === 100) {\n      this.notification.dismissAfter = 2000\n      this.notification.status = 'success'\n    }\n\n    this.notification.message =\n      'Processing Meshes ' +\n      `- Progress: ${progress.toFixed(2)}%`\n\n    // this.options.notify.update(this.notification)\n\n    this.react.setState({\n      levels: state.levels\n    })\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  getComponentBoundingBox (dbId) {\n    const model = this.viewer.model\n\n    const fragIds = Toolkit.getLeafFragIds(\n      model, dbId)\n\n    const fragList = model.getFragmentList()\n\n    return this.getModifiedWorldBoundingBox(\n      fragIds, fragList)\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  onToolbarCreated (event) {\n    this.panel = new MeshPropertyPanel(this.viewer)\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  onModelRootLoaded () {\n    super.onModelRootLoaded()\n\n    this.notification = this.options.notify.add({\n      message: 'Loading geometry, please wait ...',\n      title: 'Wall Analyzer',\n      dismissible: false,\n      status: 'loading',\n      dismissAfter: 0,\n      position: 'tl'\n    })\n\n    this.options.loader.show(false)\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  onModelCompletedLoad (event) {\n    const model = this.viewer.model\n\n    this.postModelInfo()\n\n    this.getComponentsByParentName(\n      'Floors', model).then((floorsIds) => {\n      const nbFloors = floorsIds.length\n\n      const colors = d3.scale.linear()\n        .domain([0, nbFloors * 0.33, nbFloors * 0.66, nbFloors])\n        .range(['#FCB843', '#C2149F', '#0CC4BD', '#0270E9'])\n\n      this.levelMaterials = []\n      this.levelColors = []\n\n      floorsIds.forEach((dbId, idx) => {\n        const levelMaterial = new THREE.MeshPhongMaterial({\n          side: THREE.DoubleSide,\n          color: colors(idx)\n        })\n\n        this.viewer.impl.matman().addMaterial(\n          this.guid(),\n          levelMaterial,\n          true)\n\n        this.levelMaterials.push(levelMaterial)\n\n        this.levelColors.push(colors(idx))\n\n        this.postComponent(\n          dbId, 'Floors', floorsIds.length)\n      })\n    })\n\n    this.getComponentsByParentName(\n      'Walls', model).then((wallIds) => {\n      wallIds.forEach((dbId) => {\n        return this.postComponent(\n          dbId, 'Walls', wallIds.length)\n      })\n    })\n\n    this.react.setState({\n      loader: false\n    })\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  async postModelInfo () {\n    const model = this.viewer.model\n\n    const instanceTree = model.getData().instanceTree\n\n    this.rootId = instanceTree.getRootId()\n\n    const fragIds = await Toolkit.getFragIds(\n      model, this.rootId)\n\n    const fragList = model.getFragmentList()\n\n    const boundingBox =\n      this.getModifiedWorldBoundingBox(\n        fragIds, fragList)\n\n    const msg = {\n      msgId: 'MSG_ID_MODEL_INFO',\n      boundingBox\n    }\n\n    this.worker.postMessage(msg)\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  postComponent (dbId, category, count) {\n    const geometry = this.getComponentGeometry(dbId)\n\n    const msg = {\n      boundingBox: this.getComponentBoundingBox(dbId),\n      matrixWorld: geometry.matrixWorld,\n      nbMeshes: geometry.meshes.length,\n      msgId: 'MSG_ID_COMPONENT',\n      category,\n      count,\n      dbId\n    }\n\n    geometry.meshes.forEach((mesh, idx) => {\n      msg['positions' + idx] = mesh.positions\n      msg['indices' + idx] = mesh.indices\n      msg['stride' + idx] = mesh.stride\n    })\n\n    this.worker.postMessage(msg)\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  buildMesh (data, material) {\n    const geometry = new THREE.Geometry()\n\n    data.vertices.forEach((vertex) => {\n      geometry.vertices.push(\n        new THREE.Vector3(\n          vertex.x,\n          vertex.y,\n          vertex.z))\n    })\n\n    data.faces.forEach((face) => {\n      geometry.faces.push(\n        new THREE.Face3(\n          face.a,\n          face.b,\n          face.c))\n    })\n\n    geometry.computeFaceNormals()\n\n    // geometry.computeVertexNormals()\n\n    const matrixWorld = new THREE.Matrix4()\n\n    matrixWorld.fromArray(data.matrixWorld)\n\n    const mesh = new THREE.Mesh(\n      geometry, material)\n\n    mesh.applyMatrix(matrixWorld)\n\n    mesh.dbId = data.dbId\n\n    return mesh\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  getComponentsByParentName (name, model) {\n    const instanceTree = model.getData().instanceTree\n\n    const rootId = instanceTree.getRootId()\n\n    let parentId = 0\n\n    instanceTree.enumNodeChildren(rootId,\n      (childId) => {\n        const nodeName = instanceTree.getNodeName(childId)\n\n        if (nodeName.indexOf(name) > -1) {\n          parentId = childId\n        }\n      })\n\n    return parentId > 0\n      ? Toolkit.getLeafNodes(model, parentId)\n      : []\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  getComponentGeometry (dbId) {\n    const fragIds = Toolkit.getLeafFragIds(\n      this.viewer.model, dbId)\n\n    let matrixWorld = null\n\n    const meshes = fragIds.map((fragId) => {\n      const renderProxy = this.viewer.impl.getRenderProxy(\n        this.viewer.model,\n        fragId)\n\n      const geometry = renderProxy.geometry\n\n      const attributes = geometry.attributes\n\n      const positions = geometry.vb\n        ? geometry.vb\n        : attributes.position.array\n\n      const indices = attributes.index.array || geometry.ib\n\n      const stride = geometry.vb ? geometry.vbstride : 3\n\n      matrixWorld = matrixWorld ||\n        renderProxy.matrixWorld.elements\n\n      return {\n        positions,\n        indices,\n        stride\n      }\n    })\n\n    return {\n      matrixWorld,\n      meshes\n    }\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  createLinesMaterial (color = 0xFF0000, opacity = 1.0) {\n    return new THREE.LineBasicMaterial({\n      color: new THREE.Color(color),\n      transparent: true,\n      depthWrite: false,\n      depthTest: true,\n      linewidth: 10,\n      opacity\n    })\n  }\n\n  /// //////////////////////////////////////////////////////\n  // returns bounding box as it appears in the viewer\n  // (transformations could be applied)\n  //\n  /// //////////////////////////////////////////////////////\n  getModifiedWorldBoundingBox (fragIds, fragList) {\n    const fragbBox = new THREE.Box3()\n    const nodebBox = new THREE.Box3()\n\n    fragIds.forEach(function (fragId) {\n      fragList.getWorldBounds(fragId, fragbBox)\n\n      nodebBox.union(fragbBox)\n    })\n\n    return nodebBox\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  hexToRgbA (hex, alpha) {\n    if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {\n      var c = hex.substring(1).split('')\n\n      if (c.length == 3) {\n        c = [c[0], c[0], c[1], c[1], c[2], c[2]]\n      }\n\n      c = '0x' + c.join('')\n\n      return `rgba(${(c >> 16) & 255},${(c >> 8) & 255},${c & 255},${alpha})`\n    }\n\n    throw new Error('Bad Hex Number: ' + hex)\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Creates Raycaster object from the pointer\n  //\n  /// //////////////////////////////////////////////////////\n  pointerToRaycaster (domElement, camera, pointer) {\n    const pointerVector = new THREE.Vector3()\n    const pointerDir = new THREE.Vector3()\n    const ray = new THREE.Raycaster()\n\n    const rect = domElement.getBoundingClientRect()\n\n    const x = ((pointer.clientX - rect.left) / rect.width) * 2 - 1\n    const y = -((pointer.clientY - rect.top) / rect.height) * 2 + 1\n\n    if (camera.isPerspective) {\n      pointerVector.set(x, y, 0.5)\n\n      pointerVector.unproject(camera)\n\n      ray.set(camera.position,\n        pointerVector.sub(\n          camera.position).normalize())\n    } else {\n      pointerVector.set(x, y, -1)\n\n      pointerVector.unproject(camera)\n\n      pointerDir.set(0, 0, -1)\n\n      ray.set(pointerVector,\n        pointerDir.transformDirection(\n          camera.matrixWorld))\n    }\n\n    return ray\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  onMouseMove (event) {\n    const pointer = event.pointers\n      ? event.pointers[0]\n      : event\n\n    const rayCaster = this.pointerToRaycaster(\n      this.viewer.impl.canvas,\n      this.viewer.impl.camera,\n      pointer)\n\n    const intersectResults = rayCaster.intersectObjects(\n      this.intersectMeshes, true)\n\n    // console.log(intersectResults)\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  async onSelection (event) {\n    if (event.selections.length) {\n      const dbId = event.selections[0].dbIdArray[0]\n    }\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  onClick (event) {\n    const pointer = event.pointers\n      ? event.pointers[0]\n      : event\n\n    const rayCaster = this.pointerToRaycaster(\n      this.viewer.impl.canvas,\n      this.viewer.impl.camera,\n      pointer)\n\n    const intersectResults = rayCaster.intersectObjects(\n      this.intersectMeshes, true)\n\n    if (intersectResults.length) {\n      const mesh = intersectResults[0].object\n\n      this.panel.setVisible(false)\n\n      this.panel.setNodeProperties(mesh.dbId)\n\n      this.panel.setVisible(true)\n    }\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  onLevelWallsClicked (level) {\n    const state = this.react.getState()\n\n    level.walls.active = !level.walls.active\n\n    this.react.setState({\n      levels: state.levels\n    })\n\n    const meshes = level.walls.meshes\n\n    meshes.forEach((mesh) => {\n      if (level.walls.active) {\n        this.viewer.impl.scene.add(mesh)\n        this.intersectMeshes.push(mesh)\n      } else {\n        this.viewer.impl.scene.remove(mesh)\n      }\n    })\n\n    if (!level.walls.active) {\n      const meshIds = meshes.map((mesh) => {\n        return mesh.id\n      })\n\n      this.intersectMeshes =\n        this.intersectMeshes.filter((mesh) => {\n          return !meshIds.includes(mesh.id)\n        })\n    }\n\n    const nbActiveWalls = state.levels.filter((level) => {\n      return level.walls.active\n    })\n\n    const nbActiveFloors = state.levels.filter((level) => {\n      return level.floor.active\n    })\n\n    if ((nbActiveWalls.length + nbActiveFloors.length)) {\n      Toolkit.hide(this.viewer, this.rootId)\n      this.eventTool.activate()\n    } else {\n      Toolkit.show(this.viewer, this.rootId)\n      this.eventTool.deactivate()\n    }\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  drawLine (line) {\n    this.viewer.impl.addOverlay(\n      'wallAnalyzer', line)\n  }\n\n  clearLine (line) {\n    this.viewer.impl.removeOverlay(\n      'wallAnalyzer', line)\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  onLevelFloorClicked (level) {\n    const state = this.react.getState()\n\n    level.floor.active = !level.floor.active\n\n    this.react.setState({\n      levels: state.levels\n    })\n\n    const meshes = level.floor.meshes\n\n    if (level.floor.active) {\n      level.floor.paths.forEach((path) => {\n        path.lines.forEach((line) => {\n          this.drawLine(line)\n        })\n      })\n\n      meshes.forEach((mesh) => {\n        this.viewer.impl.scene.add(mesh)\n        this.intersectMeshes.push(mesh)\n      })\n    } else {\n      level.floor.paths.forEach((path) => {\n        path.lines.forEach((line) => {\n          this.clearLine(line)\n        })\n      })\n\n      meshes.forEach((mesh) => {\n        this.viewer.impl.scene.remove(mesh)\n      })\n\n      const meshIds = meshes.map((mesh) => {\n        return mesh.id\n      })\n\n      this.intersectMeshes =\n        this.intersectMeshes.filter((mesh) => {\n          return !meshIds.includes(mesh.id)\n        })\n    }\n\n    const viewerState = this.viewer.getState({ viewport: true })\n\n    this.viewer.restoreState(viewerState)\n\n    const nbActiveWalls = state.levels.filter((level) => {\n      return level.walls.active\n    })\n\n    const nbActiveFloors = state.levels.filter((level) => {\n      return level.floor.active\n    })\n\n    if ((nbActiveWalls.length + nbActiveFloors.length)) {\n      Toolkit.hide(this.viewer, this.rootId)\n      this.eventTool.activate()\n    } else {\n      Toolkit.show(this.viewer, this.rootId)\n      this.eventTool.deactivate()\n    }\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  onEnableWireFrame (checked) {\n    this.wireframe = checked\n\n    this.levelMaterials.forEach((material) => {\n      material.wireframe = checked\n    })\n\n    this.viewer.impl.sceneUpdated(true)\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  async setDocking (docked) {\n    const id = WallAnalyzerExtension.ExtensionId\n\n    if (docked) {\n      await this.react.popRenderExtension(id)\n\n      this.react.pushViewerPanel(this, {\n        height: 250,\n        width: 350\n      })\n    } else {\n      await this.react.popViewerPanel(id)\n\n      this.react.pushRenderExtension(this)\n    }\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  onLevelReportClicked (e, report) {\n    e.stopPropagation()\n\n    const data = 'data:text/json;charset=utf-8,' +\n      encodeURIComponent(JSON.stringify(report, null, 2))\n\n    const a = document.createElement('a')\n    a.setAttribute('download', `${report.level}.json`)\n    a.setAttribute('href', data)\n\n    document.body.appendChild(a)\n    a.click()\n    document.body.removeChild(a)\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  renderContent () {\n    const state = this.react.getState()\n\n    let hasActiveItem = false\n\n    const levels = state.levels\n\n    const items = levels.map((level) => {\n      hasActiveItem =\n        hasActiveItem ||\n        level.walls.active ||\n        level.floor.active\n\n      const wallsActive = level.walls.active ? ' active' : ''\n\n      const floorActive = level.floor.active ? ' active' : ''\n\n      const style = {\n        backgroundColor: this.hexToRgbA(level.fillColor, 0.3),\n        border: `2px solid ${level.strokeColor}`\n      }\n\n      return (\n        <div key={level.walls.name} className='list-item'>\n\n          <div className='item-color' style={style} />\n\n          <label>\n            {level.name}\n          </label>\n\n          <div\n            onClick={(e) => {\n              this.onLevelReportClicked(e, level.report)\n            }}\n            className='level-report'\n          >\n            <span className='fa fa-cloud-download' />\n              report.json\n          </div>\n\n          <div\n            onClick={() => this.onLevelFloorClicked(level)}\n            className={'level-floor' + floorActive}\n          >\n            Floor\n          </div>\n\n          <div\n            onClick={() => this.onLevelWallsClicked(level)}\n            className={'level-walls' + wallsActive}\n          >\n            Walls\n          </div>\n\n        </div>\n      )\n    })\n\n    return (\n      <div className='content'>\n\n        <ReactLoader show={state.loader} />\n\n        <div className='row'>\n          Select an item to isolate walls or floor on this level:\n        </div>\n\n        <div className='item-list-container'>\n          {items}\n        </div>\n\n        {\n          hasActiveItem &&\n            <div className='row'>\n            Enable wireframe:\n            </div>\n        }\n\n        {\n          hasActiveItem &&\n            <div className='row'>\n              <Switch\n                className='control-element'\n                onChange={this.onEnableWireFrame}\n                checked={this.wireframe}\n              />\n            </div>\n        }\n      </div>\n    )\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  renderTitle (titleOpts = {}) {\n    const docked = titleOpts.docked\n\n    const spanClass = docked\n      ? 'fa fa-chain-broken'\n      : 'fa fa-chain'\n\n    return (\n      <div className='title'>\n        <label>\n          Wall Analyzer\n        </label>\n        {\n          titleOpts.showDocking &&\n            <div className='wall-analyzer-controls'>\n              <button\n                onClick={() => this.setDocking(docked)}\n                title='Toggle docking mode'\n              >\n                <span className={spanClass} />\n              </button>\n            </div>\n        }\n      </div>\n    )\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  render (opts = {}) {\n    return (\n      <WidgetContainer\n        renderTitle={() => this.renderTitle(opts.docked)}\n        showTitle={opts.showTitle}\n        className={this.className}\n      >\n\n        {this.renderContent()}\n\n      </WidgetContainer>\n    )\n  }\n}\n\nAutodesk.Viewing.theExtensionManager.registerExtension(\n  WallAnalyzerExtension.ExtensionId,\n  WallAnalyzerExtension)\n","import './Viewing.Extension.WallAnalyzer'\n\nexport default 'Viewing.Extension.WallAnalyzer'\n","import MultiModelExtensionBase from './Viewer.MultiModelExtensionBase'\n\nexport default MultiModelExtensionBase\n","import EventsEmitter from 'EventsEmitter'\n\nexport default class MultiModelExtensionBase extends\n  EventsEmitter.Composer(Autodesk.Viewing.Extension) {\n  /// //////////////////////////////////////////////////////\n  // Class constructor\n  //\n  /// //////////////////////////////////////////////////////\n  constructor (viewer, options = {}, defaultOptions = {}) {\n    super(viewer)\n    // bindings\n    Object.assign(this, options.serviceContext)\n\n    this.onModelCompletedLoad = this.onModelCompletedLoad.bind(this)\n    this.onObjectTreeCreated = this.onObjectTreeCreated.bind(this)\n    this.onModelRootLoaded = this.onModelRootLoaded.bind(this)\n    this.onExtensionLoaded = this.onExtensionLoaded.bind(this)\n    this.onModelActivated = this.onModelActivated.bind(this)\n    this.onGeometryLoaded = this.onGeometryLoaded.bind(this)\n    this.onToolbarCreated = this.onToolbarCreated.bind(this)\n    this.onModelBeginLoad = this.onModelBeginLoad.bind(this)\n    this.onModelUnloaded = this.onModelUnloaded.bind(this)\n    this.onSelection = this.onSelection.bind(this)\n\n    this.__onModelRootLoaded = this.__onModelRootLoaded.bind(this)\n    this.__onModelActivated = this.__onModelActivated.bind(this)\n    this.__onModelUnloaded = this.__onModelUnloaded.bind(this)\n    this.__onModelLoaded = this.__onModelLoaded.bind(this)\n\n    this.defaultOptions = defaultOptions\n\n    this.options = Object.assign({},\n      defaultOptions,\n      options)\n\n    this.viewer = viewer\n\n    // read the modelQueue to detect currently loaded models\n    // when the extension gets loaded\n    const models = viewer.impl.modelQueue().getModels()\n\n    this.models = models.map((model) => {\n      model.guid = model.guid || this.guid()\n\n      return model\n    })\n\n    this.initializeEvents()\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Extension Id\n  //\n  /// //////////////////////////////////////////////////////\n  static get ExtensionId () {\n    return 'Viewing.Extension.MultiModelExtensionBase'\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Load callback\n  //\n  /// //////////////////////////////////////////////////////\n  load () {\n    return true\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Unload callback\n  //\n  /// //////////////////////////////////////////////////////\n  unload () {\n    this.viewerEvents.forEach((event) => {\n      this.viewer.removeEventListener(\n        event.id, this[event.handler])\n    })\n\n    if (this.eventSink) {\n      this.eventSink.off('model.activated',\n        this.__onModelActivated)\n\n      this.eventSink.off('model.unloaded',\n        this.__onModelUnloaded)\n\n      this.eventSink.off('model.loaded',\n        this.__onModelLoaded)\n    }\n\n    this.off()\n\n    return true\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Reload callback, in case the extension is re-loaded\n  // more than once\n  //\n  /// //////////////////////////////////////////////////////\n  reload (options = {}) {\n    this.options = Object.assign({},\n      this.defaultOptions,\n      this.options,\n      options)\n\n    return true\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Invoked when extension gets loaded\n  //\n  /// //////////////////////////////////////////////////////\n  onExtensionLoaded (event) {\n\n    // console.log('MultiModelExtensionBase.onExtensionLoaded')\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Invoked when the model starts to load\n  // The geometry and instanceTree may not be available\n  // at this time\n  //\n  /// //////////////////////////////////////////////////////\n  onModelBeginLoad (event) {\n\n    // console.log('MultiModelExtensionBase.onModelBeginLoad')\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Triggered by ModelLoader extension when a model is\n  // selected in a multi-model environment\n  //\n  /// //////////////////////////////////////////////////////\n  onModelActivated (event) {\n\n    // console.log('MultiModelExtensionBase.onModelActivated')\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Invoked when model root node has been loaded\n  // Extensions that do require access to full\n  // model geometry or component tree may use that\n  // event to know a new model has been loaded\n  //\n  /// //////////////////////////////////////////////////////\n  __onModelRootLoaded (event) {\n    this.viewerEvent([\n\n      Autodesk.Viewing.OBJECT_TREE_CREATED_EVENT,\n      Autodesk.Viewing.GEOMETRY_LOADED_EVENT\n\n    ]).then((args) => {\n      this.onModelCompletedLoad(args[0])\n    })\n  }\n\n  onModelRootLoaded (event) {\n\n    // console.log('MultiModelExtensionBase.onModelRootLoaded')\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Invoked when object tree is fully loaded.\n  // Extensions that are interested in using the\n  // instanceTree need to use that event to make sure\n  // it is available\n  //\n  /// /////////////////////////////////////////////////////\n  onObjectTreeCreated (event) {\n\n    // console.log('MultiModelExtensionBase.onObjectTreeCreated')\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Invoked when geometry is fully loaded\n  //\n  /// //////////////////////////////////////////////////////\n  onGeometryLoaded (event) {\n\n    // console.log('MultiModelExtensionBase.onGeometryLoaded')\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Invoked after onObjectTreeCreated and onGeometryLoaded\n  // have both been fired\n  //\n  /// //////////////////////////////////////////////////////\n  onModelCompletedLoad (event) {\n\n    // console.log('MultiModelExtensionBase.onModelCompletedLoad')\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Invoked once the viewer toolbar has been created\n  //\n  /// //////////////////////////////////////////////////////\n  onToolbarCreated (event) {\n\n    // console.log('MultiModelExtensionBase.onToolbarCreated')\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Triggered by ModelLoader extension when a model has\n  // been unloaded as per user request\n  //\n  /// //////////////////////////////////////////////////////\n  onModelUnloaded (event) {\n\n    // console.log('MultiModelExtensionBase.onModelUnloaded')\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Invoked when a model is being selected\n  //\n  /// //////////////////////////////////////////////////////\n  onSelection (event) {\n\n    // console.log('MultiModelExtensionBase.onSelection')\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Sink Events\n  //\n  /// //////////////////////////////////////////////////////\n  __onModelLoaded (event) {\n    this.models = [...this.models, event.model]\n\n    this.onModelBeginLoad(event)\n  }\n\n  __onModelActivated (event) {\n    this.onModelActivated(event)\n  }\n\n  __onModelUnloaded (event) {\n    this.models = this.models.filter((model) => {\n      return model.guid !== event.model.guid\n    })\n\n    this.onModelUnloaded(event)\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Initialize all events for the extension\n  // Each event will invoke a predefined handler\n  // implemented or not by the derived extension\n  //\n  /// //////////////////////////////////////////////////////\n  initializeEvents () {\n    if (this.options.eventSink) {\n      // event object passed in options\n      this.eventSink = this.options.eventSink\n\n      this.eventSink.on('model.loaded',\n        this.__onModelLoaded)\n\n      this.eventSink.on('model.activated',\n        this.__onModelActivated)\n\n      this.eventSink.on('model.unloaded',\n        this.__onModelUnloaded)\n    }\n\n    this.viewerEvents = [\n      {\n        id: Autodesk.Viewing.EXTENSION_LOADED_EVENT,\n        handler: 'onExtensionLoaded'\n      },\n      {\n        id: Autodesk.Viewing.OBJECT_TREE_CREATED_EVENT,\n        handler: 'onObjectTreeCreated'\n      },\n      {\n        id: Autodesk.Viewing.MODEL_ROOT_LOADED_EVENT,\n        handler: '__onModelRootLoaded'\n      },\n      {\n        id: Autodesk.Viewing.MODEL_ROOT_LOADED_EVENT,\n        handler: 'onModelRootLoaded'\n      },\n      {\n        id: Autodesk.Viewing.GEOMETRY_LOADED_EVENT,\n        handler: 'onGeometryLoaded'\n      },\n      {\n        id: Autodesk.Viewing.TOOLBAR_CREATED_EVENT,\n        handler: 'onToolbarCreated'\n      },\n      {\n        id: Autodesk.Viewing.AGGREGATE_SELECTION_CHANGED_EVENT,\n        handler: 'onSelection'\n      }\n    ]\n\n    this.viewerEvents.forEach((event) => {\n      this.viewerEvent(event.id, this[event.handler])\n    })\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Async viewer event\n  //\n  /// //////////////////////////////////////////////////////\n  viewerEvent (eventId, handler) {\n    if (handler) {\n      this.viewer.addEventListener(eventId, handler)\n      return\n    }\n\n    const eventIdArray = Array.isArray(eventId)\n      ? eventId : [eventId]\n\n    const eventTasks = eventIdArray.map((id) => {\n      return new Promise((resolve) => {\n        const __handler = (args) => {\n          this.viewer.removeEventListener(id, __handler)\n          resolve(args)\n        }\n        this.viewer.addEventListener(id, __handler)\n      })\n    })\n\n    return Promise.all(eventTasks)\n  }\n}\n","import PropTypes from 'prop-types'\nimport ReactDOM from 'react-dom'\nimport './WidgetContainer.scss'\nimport React from 'react'\n\nclass WidgetContainer extends React.Component {\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  static propTypes = {\n    className: PropTypes.string,\n    showTitle: PropTypes.bool\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  static defaultProps = {\n    showTitle: true,\n    className: ''\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  renderTitle () {\n\n    if (!this.props.showTitle) {\n\n      return <div/>\n    }\n\n    if (this.props.renderTitle) {\n\n      return this.props.renderTitle()\n    }\n\n    return (\n      <div className=\"title\">\n        <label>\n          { this.props.title }\n        </label>\n      </div>\n    )\n  }\n\n  ///////////////////////////////////////////////////////////////////\n  //\n  //\n  ///////////////////////////////////////////////////////////////////\n  renderChildren() {\n\n    if (this.props.dimensions) {\n\n      return React.Children.map(this.props.children, (child) => {\n\n        const newProps = Object.assign({},\n          child.props, {\n            dimensions: this.props.dimensions\n          })\n\n        return React.cloneElement(child, newProps)\n      })\n    }\n\n    return this.props.children\n  }\n\n  ///////////////////////////////////////////////////////////////////\n  //\n  //\n  ///////////////////////////////////////////////////////////////////\n  render() {\n\n    const classNames = [\n      'widget-container',\n      ...this.props.className.split(' ')\n    ]\n\n    const height = this.props.showTitle\n      ? 'calc(100% - 40px)'\n      : '100%'\n\n    return (\n      <div className={classNames.join(' ')} style={this.props.style}>\n         { this.renderTitle() }\n        <div className=\"content\" style={{height}}>\n          {this.renderChildren()}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default WidgetContainer\n","import WidgetContainer from './WidgetContainer'\n\nexport default WidgetContainer\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../node_modules/sass-loader/lib/loader.js!./WidgetContainer.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../node_modules/sass-loader/lib/loader.js!./WidgetContainer.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../node_modules/sass-loader/lib/loader.js!./WidgetContainer.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".widget-container {\\n  position: relative;\\n  height: 100%;\\n  width: 100%; }\\n\\n.widget-container > .title {\\n  border-bottom: 1px solid #cdcdcd;\\n  background-color: #f5f5f5;\\n  padding-right: 10px;\\n  color: black;\\n  position: relative;\\n  overflow: hidden;\\n  text-align: left;\\n  height: 40px;\\n  width: 100%; }\\n\\n.widget-container > .title > label {\\n  white-space: nowrap;\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none;\\n  margin-left: 27px;\\n  margin-top: 10px; }\\n\\n.widget-container > .content {\\n  position: relative;\\n  overflow: hidden;\\n  height: 100%;\\n  width: 100%; }\\n\", \"\"]);\n","import autobind from 'autobind-decorator'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nexport default class Switch extends React.Component {\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  static propTypes = {\n    className: PropTypes.string,\n    checked: PropTypes.bool\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  static defaultProps = {\n    checked: true,\n    className: ''\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  constructor () {\n\n    super ()\n\n    this.state = {\n      checked: true\n    }\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  componentWillMount () {\n\n    this.setState({\n      checked: this.props.checked\n    })\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  @autobind\n  toggle () {\n\n    if (this.props.disabled) {\n      return\n    }\n\n    const checked = !this.state.checked\n\n    this.setState({\n      checked\n    })\n\n    if (this.props.onChange) {\n\n      this.props.onChange (checked)\n    }\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  render () {\n\n    const classNames = [\n      'switch-container',\n      this.props.disabled ? 'disabled' : '',\n      ...this.props.className.split(' ')\n    ]\n\n    return(\n      <div className={classNames.join(' ')}\n        onClick={this.toggle}>\n        <input ref=\"switch\" className=\"switch\"\n          checked={this.state.checked}\n          value={this.state.checked}\n          onChange={()=> {}}\n          type=\"checkbox\"\n        />\n        <div>\n          <span>\n            <g className=\"icon icon-toolbar grid-view\"/>\n          </span>\n          <span>\n            <g className=\"icon icon-toolbar ticket-view\"/>\n          </span>\n          <div/>\n        </div>\n      </div>\n    )\n  }\n}\n","import Switch from './Switch'\nimport './Switch.scss'\n\nexport default Switch\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../node_modules/sass-loader/lib/loader.js!./Switch.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../node_modules/sass-loader/lib/loader.js!./Switch.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../node_modules/sass-loader/lib/loader.js!./Switch.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".switch-container {\\n  position: relative; }\\n\\n.switch-container *:hover {\\n  cursor: pointer; }\\n\\n.switch-container.disabled *:hover {\\n  cursor: not-allowed; }\\n\\ninput[type=\\\"checkbox\\\"].switch {\\n  pointer-events: none;\\n  position: absolute;\\n  cursor: pointer;\\n  opacity: 0; }\\n\\ninput[type=\\\"checkbox\\\"].switch + div {\\n  vertical-align: middle;\\n  width: 40px;\\n  height: 20px;\\n  border-radius: 999px;\\n  background-color: #9d9d9d;\\n  transition-duration: .4s;\\n  transition-property: background-color, box-shadow;\\n  cursor: pointer; }\\n\\ninput[type=\\\"checkbox\\\"].switch + div span {\\n  position: absolute;\\n  font-size: 1.6rem;\\n  color: #f5f5f5;\\n  margin-top: 12px; }\\n\\ninput[type=\\\"checkbox\\\"].switch + div span:nth-child(1) {\\n  margin-left: 15px; }\\n\\ninput[type=\\\"checkbox\\\"].switch + div span:nth-child(2) {\\n  margin-left: 55px; }\\n\\ninput[type=\\\"checkbox\\\"].switch:checked + div {\\n  width: 60px;\\n  background-position: 0 0;\\n  background-color: #57BB00; }\\n\\n.switch-container.disabled input[type=\\\"checkbox\\\"].switch + div {\\n  background-color: rgba(157, 157, 157, 0.5); }\\n\\ninput[type=\\\"checkbox\\\"].switch + div {\\n  width: 60px;\\n  height: 26px; }\\n\\ninput[type=\\\"checkbox\\\"].switch + div > div {\\n  float: left;\\n  width: 24px;\\n  height: 24px;\\n  border-radius: inherit;\\n  background: #f5f5f5;\\n  transition-timing-function: cubic-bezier(1, 0, 0, 1);\\n  transition-duration: 0.4s;\\n  transition-property: transform, background-color;\\n  pointer-events: none;\\n  margin-top: 1px;\\n  margin-left: 1px; }\\n\\ninput[type=\\\"checkbox\\\"].switch:checked + div > div {\\n  transform: translate3d(20px, 0, 0);\\n  background-color: #f5f5f5; }\\n\\ninput[type=\\\"checkbox\\\"].bigswitch.switch + div > div {\\n  width: 44px;\\n  height: 44px;\\n  margin-top: 1px; }\\n\\ninput[type=\\\"checkbox\\\"].switch:checked + div > div {\\n  transform: translate3d(34px, 0, 0); }\\n\", \"\"]);\n","import EventsEmitter from 'EventsEmitter'\n\nexport default class EventTool extends EventsEmitter {\n  constructor (viewer) {\n    super()\n\n    this.viewer = viewer\n\n    this.toolName = this.guid()\n\n    viewer.toolController.registerTool(this)\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Tool names\n  //\n  /// //////////////////////////////////////////////////////\n  getNames () {\n    return [this.getName()]\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Tool name\n  //\n  /// //////////////////////////////////////////////////////\n  getName () {\n    return this.toolName\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Tool Priority\n  //\n  /// //////////////////////////////////////////////////////\n  getPriority () {\n    return 1000\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Activate Tool\n  //\n  /// //////////////////////////////////////////////////////\n  activate () {\n    if (!this.active) {\n      this.active = true\n\n      this.viewer.toolController.activateTool(\n        this.toolName)\n\n      this.emit('activate', this)\n    }\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Deactivate tool\n  //\n  /// //////////////////////////////////////////////////////\n  deactivate () {\n    if (this.active) {\n      this.active = false\n\n      this.viewer.toolController.deactivateTool(\n        this.toolName)\n\n      this.emit('deactivate', this)\n    }\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  handleSingleClick (event, button) {\n    return this.emit('singleclick', event, button)\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  handleDoubleClick (event, button) {\n    return this.emit('doubleclick', event, button)\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  handleMouseMove (event) {\n    return this.emit('mousemove', event)\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  handleWheelInput (event) {\n    return this.emit('mousewheel', event)\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  handleGesture (event) {\n    return this.emit('gesture', event)\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  handleKeyDown (event, keyCode) {\n    return this.emit('keydown', event, keyCode)\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  handleButtonDown (event, button) {\n    return this.emit('buttondown', event, button)\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  handleButtonUp (event, button) {\n    return this.emit('buttonup', event, button)\n  }\n}\n","import EventTool from './Viewer.EventTool'\n\nexport default EventTool\n"],"sourceRoot":""}