{"version":3,"sources":["webpack:///./src/client/components/JSONView/index.js","webpack:///./src/client/components/JSONView/JSONView.js","webpack:///./src/client/components/JSONView/JSONView.scss?2afa","webpack:///./src/client/components/JSONView/JSONView.scss","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.ARToolkitController/ScenesView/ScenesView.scss?4da3","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.ARToolkitController/ScenesView/ScenesView.scss","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.ARToolkitController/ScenesView/ScenesView.js","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.ARToolkitController/ScenesView/index.js"],"names":["_JSONView__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","JSONView","JSONViewWrapper","props","_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default","this","_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default","_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default","call","load","src","$","container","empty","collapsed","_this","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","className","ref","div","React","Component","content","module","i","locals","exports","push","TokenAPI","baseUrl","classCallCheck_default","possibleConstructorReturn_default","getPrototypeOf_default","auth","url","concat","ajax","rawBody","ClientAPI","ScenesView","showQrCodeDlg","bind","assertThisInitialized_default","onTabSelected","refreshToken","deleteScene","tokenAPI","toolkitAPI","arvrToolkitAPI","state","activeTabKey","instanceTree","sceneInfo","tabsWidth","scene","token","tabKey","assignState","_this2","_this$state","style","width","Math","floor","tabTitle","title","react_default","react_measure_default","bounds","onResize","rect","_ref","measureRef","Tabs_default","activeKey","onSelect","id","Tab_default","eventKey","key","renderSceneInfo","renderInstanceTree","renderResources","renderQRCode","format","arguments","length","undefined","d","Date","getTime","guid","replace","c","r","random","toString","model","urn","projectId","versionId","sceneId","name","notification","notifySvc","add","dismissible","status","dismissAfter","position","deleteScene3Legged","update","onSceneDeleted","setState","getToken","_this$state2","showLoader","Loader","show","_this$state3","qrCodeStr","size","window","innerHeight","context","dialogSvc","showCancel","search","lib_default","value","open","_this3","_this$state4","qrCode","model_id","access_token","prj","scene_id","JSON","stringify","onClick","_this4","_this$state5","_this$props","scenes","menuItems","map","sc","idx","MenuItem_default","getScene3Legged","then","getScene","getInstanceTree","DropdownButton_default","disabled","renderTabs","BaseComponent"],"mappings":"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","file":"85.js","sourcesContent":["import JSONView from './JSONView'\n\nexport default JSONView\n","import JSONView from 'jquery-jsonview/dist/jquery.jsonview'\nimport 'jquery-jsonview/dist/jquery.jsonview.css'\nimport React from 'react'\nimport './JSONView.scss'\n\nexport default class JSONViewWrapper extends React.Component {\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  constructor (props) {\n\n    super (props)\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  componentDidMount () {\n\n    this.load(this.props.src)\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  componentDidUpdate () {\n\n    $(this.container).empty()\n\n    this.load(this.props.src)\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  load (src) {\n\n    $(this.container).JSONView(src, {\n      collapsed: false\n    })\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  render () {\n\n    return (\n      <div className=\"json-view\"\n        ref={ (div) => this.container = div }>\n      </div>\n    )\n  }\n}\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../node_modules/sass-loader/lib/loader.js!./JSONView.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../node_modules/sass-loader/lib/loader.js!./JSONView.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../node_modules/sass-loader/lib/loader.js!./JSONView.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".json-view {\\n  overflow-x: hidden;\\n  overflow-y: scroll;\\n  height: 100%; }\\n  .json-view .jsonview .string {\\n    white-space: nowrap; }\\n\", \"\"]);\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../../../../node_modules/sass-loader/lib/loader.js!./ScenesView.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../../../../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../../../../node_modules/sass-loader/lib/loader.js!./ScenesView.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../../../../node_modules/sass-loader/lib/loader.js!./ScenesView.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".ar-vr-toolkit .scenes {\\n  position: relative;\\n  overflow-y: hidden;\\n  overflow-x: hidden;\\n  background: white;\\n  -webkit-user-select: text;\\n     -moz-user-select: text;\\n      -ms-user-select: text;\\n          user-select: text;\\n  text-align: left;\\n  padding: 10px;\\n  height: 100%;\\n  width: 100%; }\\n  .ar-vr-toolkit .scenes .controls {\\n    margin-bottom: 10px;\\n    height: 26px; }\\n    .ar-vr-toolkit .scenes .controls .dropdown {\\n      width: calc(100% - 162px);\\n      margin-right: 2px;\\n      float: left; }\\n      .ar-vr-toolkit .scenes .controls .dropdown button {\\n        border-radius: 0px;\\n        padding: 2px 12px;\\n        width: 100%; }\\n        .ar-vr-toolkit .scenes .controls .dropdown button .caret {\\n          margin-left: 4px; }\\n    .ar-vr-toolkit .scenes .controls .del-btn {\\n      background: whitesmoke;\\n      border-radius: 0px;\\n      color: dimgrey;\\n      outline: none;\\n      width: 160px;\\n      height: 26px;\\n      float: left; }\\n      .ar-vr-toolkit .scenes .controls .del-btn span {\\n        margin-right: 4px; }\\n  .ar-vr-toolkit .scenes .scene-tabs {\\n    height: calc(100% - 19px);\\n    width: calc(100% + 12px);\\n    position: relative;\\n    left: -3px; }\\n    .ar-vr-toolkit .scenes .scene-tabs.disabled {\\n      pointer-events: none; }\\n  .ar-vr-toolkit .scenes .qr-code {\\n    padding: 20px;\\n    height: 100%;\\n    width: 100%; }\\n    .ar-vr-toolkit .scenes .qr-code canvas {\\n      cursor: pointer; }\\n    .ar-vr-toolkit .scenes .qr-code .btn-refresh {\\n      position: absolute;\\n      background: none;\\n      outline: none;\\n      border: none;\\n      right: 8px;\\n      top: 8px; }\\n      .ar-vr-toolkit .scenes .qr-code .btn-refresh span {\\n        color: #888888;\\n        font-size: 24px; }\\n\\n.qr-code-dlg {\\n  width: 90% !important;\\n  left: 5% !important;\\n  top: 5px !important; }\\n  .qr-code-dlg .qr-code-dlg-content {\\n    height: calc(100vh - 110px); }\\n\", \"\"]);\n","import DropdownButton from 'react-bootstrap/lib/DropdownButton'\nimport MenuItem from 'react-bootstrap/lib/MenuItem'\nimport Tabs from 'react-bootstrap/lib/Tabs'\nimport Tab from 'react-bootstrap/lib/Tab'\nimport BaseComponent from 'BaseComponent'\nimport {ServiceContext} from 'ServiceContext'\nimport { ReactLoader } from 'Loader'\nimport Measure from 'react-measure'\nimport ClientAPI from 'ClientAPI'\nimport QRCode from 'qrcode.react'\nimport JSONView from 'JSONView'\nimport React from 'react'\n\nclass TokenAPI extends ClientAPI {\n\n  constructor (baseUrl) {\n\n    super (baseUrl)\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  getToken (auth) {\n\n    const url = `/${auth}`\n\n    return this.ajax({\n      rawBody: true,\n      url\n    })\n  }\n}\n\nexport default class ScenesView extends BaseComponent {\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  constructor (props) {\n\n    super (props)\n\n    this.showQrCodeDlg = this.showQrCodeDlg.bind(this)\n    this.onTabSelected = this.onTabSelected.bind(this)\n    this.refreshToken = this.refreshToken.bind(this)\n    this.deleteScene = this.deleteScene.bind(this)\n\n    this.tokenAPI = new TokenAPI('/api/forge/token')\n\n    this.toolkitAPI = this.props.arvrToolkitAPI\n\n\n    this.state = {\n      activeTabKey: 'scene-info',\n      instanceTree: null,\n      sceneInfo: null,\n      tabsWidth: 0,\n      scene: null,\n      token: null\n    }\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  componentDidMount () {\n\n    this.refreshToken()\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  onTabSelected (tabKey) {\n\n    this.assignState({\n      activeTabKey: tabKey\n    })\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  renderTabs () {\n\n    const {activeTabKey, sceneInfo, tabsWidth} = this.state\n\n    const nbTabs = 4\n\n    const style = {\n      width:\n        `${Math.floor((tabsWidth-8)/nbTabs-15)}px`\n    }\n\n    const tabTitle = (title) => {\n      return (\n        <label style={style}>\n          {title}\n        </label>\n      )\n    }\n\n    return (\n      <div className={`scene-tabs${sceneInfo ? '':' disabled'}`}>\n        <Measure bounds onResize={(rect) => {\n          this.assignState({\n            tabsWidth: rect.bounds.width\n          })\n        }}>\n        {\n          ({ measureRef }) =>\n            <div ref={measureRef} className=\"tabs-container\">\n              <Tabs activeKey={activeTabKey}\n                onSelect={this.onTabSelected}\n                id=\"scene-tabs\"\n                className=\"tabs\">\n                <Tab className=\"tab-container\"\n                  title={tabTitle('Scene Info')}\n                  eventKey=\"scene-info\"\n                  key=\"scene-info\">\n                  {\n                    (activeTabKey === 'scene-info') &&\n                    this.renderSceneInfo()\n                  }\n                </Tab>\n                <Tab className=\"tab-container\"\n                  title={tabTitle('Instance Tree')}\n                  eventKey=\"instanceTree\"\n                  key=\"instanceTree\">\n                  {\n                    (activeTabKey === 'instanceTree') &&\n                    this.renderInstanceTree()\n                  }\n                </Tab>\n                <Tab className=\"tab-container\"\n                  title={tabTitle('Resources')}\n                  eventKey=\"resources\"\n                  key=\"resources\">\n                  {\n                    (activeTabKey === 'resources') &&\n                    this.renderResources()\n                  }\n                </Tab>\n                <Tab className=\"tab-container\"\n                  title={tabTitle('QR Code')}\n                  eventKey=\"qr-code\"\n                  key=\"qr-code\">\n                  {\n                    (activeTabKey === 'qr-code') &&\n                    this.renderQRCode()\n                  }\n                </Tab>\n              </Tabs>\n            </div>\n          }\n        </Measure>\n      </div>\n    )\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  guid (format = 'xxxx-xxxx-xxxx') {\n\n    var d = new Date().getTime()\n\n    const guid = format.replace(\n      /[xy]/g,\n      function (c) {\n        var r = (d + Math.random() * 16) % 16 | 0\n        d = Math.floor(d / 16)\n        return (c == 'x' ? r : (r & 0x7 | 0x8)).toString(16)\n      })\n\n    return guid\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  async deleteScene () {\n\n    const {urn, projectId, versionId} = this.props.model\n\n    const {scene} = this.state\n\n    const sceneId = scene.name\n\n    const notification = this.props.notifySvc.add({\n      title: 'Deleting scene ' + sceneId + ' ...',\n      dismissible: false,\n      status: 'loading',\n      id: this.guid(),\n      dismissAfter: 0,\n      position: 'tl'\n    })\n\n    if (projectId) {\n\n      await this.toolkitAPI.deleteScene3Legged (\n        projectId, versionId, sceneId)\n\n    } else {\n\n      await this.toolkitAPI.deleteScene (\n        urn, sceneId)\n    }\n\n    this.assignState({\n      instanceTree: null,\n      sceneInfo: null,\n      scene: null\n    })\n\n    notification.title = `Scene ${sceneId} deleted!`\n    notification.dismissAfter = 1500\n    notification.status = 'success'\n\n    this.props.notifySvc.update(notification)\n\n    this.props.onSceneDeleted()\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  async refreshToken () {\n\n    await this.setState({\n      token: null\n    })\n\n    const token =\n      await this.tokenAPI.getToken(\n      this.props.auth)\n\n    this.setState({\n      token\n    })\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  renderSceneInfo () {\n\n    const {scene, sceneInfo} = this.state\n\n    const showLoader = !sceneInfo && scene\n\n    return (\n      <div>\n        <ReactLoader show={showLoader}/>\n        {\n          sceneInfo &&\n          <JSONView src={sceneInfo}/>\n        }\n      </div>\n    )\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  renderInstanceTree () {\n\n    const {scene, instanceTree} = this.state\n\n    const showLoader = !instanceTree && scene\n\n    return (\n      <div>\n        <ReactLoader show={showLoader}/>\n        {\n          instanceTree &&\n          <JSONView src={instanceTree}/>\n        }\n      </div>\n    )\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  renderResources () {\n\n    return (\n      <div>\n        NOT IMPLEMENTED\n      </div>\n    )\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  showQrCodeDlg (qrCodeStr) {\n\n    const size = window.innerHeight - 110\n\n    this.context.dialogSvc.setState({\n      className: 'qr-code-dlg',\n      title: 'QR Code ...',\n      showCancel: false,\n      search: '',\n      content:\n        <div className=\"qr-code-dlg-content\">\n          <QRCode value={qrCodeStr} size={size}/>\n        </div>,\n      open: true\n    })\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  renderQRCode () {\n\n    const { scene, sceneInfo, token } = this.state\n\n    const qrCode = {\n      model_id: this.props.model.id,\n      token: token.access_token,\n      urn: sceneInfo.prj.urn,\n      scene_id: scene.name\n    }\n\n    const qrCodeStr = JSON.stringify(qrCode)\n\n    return (\n      <div className=\"qr-code\">\n        <button\n          className=\"btn-refresh\"\n          onClick={this.refreshToken}>\n          <span className=\"fa fa-refresh\"/>\n        </button>\n        <ReactLoader show={!token}/>\n        <div onClick={() => this.showQrCodeDlg(qrCodeStr)}>\n          <QRCode value={qrCodeStr} size={256}/>\n        </div>\n      </div>\n    )\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  render () {\n\n    const { scene, sceneInfo } = this.state\n\n    const { model, scenes } = this.props\n\n    const menuItems = !scenes\n      ? null : scenes.map((sc, idx) => {\n      return (\n        <MenuItem eventKey={idx} key={idx}\n          onClick={() => {\n\n            this.assignState({\n              instanceTree: null,\n              sceneInfo: null,\n              scene: sc\n            })\n\n            const urn = model.urn\n\n            if (model.projectId) {\n\n              const { projectId, versionId } = model\n\n              this.toolkitAPI.getScene3Legged(\n                projectId, versionId, sc.name).then(\n                (sceneInfo) => {\n\n                  this.assignState({\n                    sceneInfo\n                  })\n                })\n\n            } else {\n\n              this.toolkitAPI.getScene(\n                urn, sc.name).then(\n                (sceneInfo) => {\n\n                  this.assignState({\n                    sceneInfo\n                  })\n                })\n            }\n\n            this.toolkitAPI.getInstanceTree(\n              urn, sc.name).then(\n              (instanceTree) => {\n\n                this.assignState({\n                  instanceTree\n                })\n              })\n          }}>\n          { sc.name }\n        </MenuItem>\n      )\n    })\n\n    return(\n      <div className=\"scenes\">\n        <ReactLoader show={!scenes}/>\n        <div className=\"controls\">\n          <DropdownButton\n            title={`Select scene: ${scene ? scene.name : ''}`}\n            disabled={!scenes || !scenes.length}\n            key={'dropdown-scenes'}\n            id={'dropdown-scenes'}>\n              { menuItems }\n          </DropdownButton>\n          <button\n            onClick={this.deleteScene}\n            disabled={!sceneInfo}\n            className=\"del-btn\">\n            <span className=\"fa fa-times\"/>\n            Delete scene ...\n          </button>\n        </div>\n          { this.renderTabs() }\n      </div>\n    )\n  }\n}\n","import ScenesView from './ScenesView'\nimport './ScenesView.scss'\n\nexport default ScenesView\n\n"],"sourceRoot":""}