{"version":3,"sources":["webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.Material/Viewing.Extension.Material.scss?b1c6","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.Material/Viewing.Extension.Material.scss","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.Material/textures/brick.jpg","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.Material/textures/steel.jpg","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.Material/textures/wood.jpg","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.Material/Viewing.Extension.Material.js","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.Material/index.js","webpack:///./src/client/components/Viewer/Extensions/Viewer.MultiModelExtensionBase/index.js","webpack:///./src/client/components/Viewer/Extensions/Viewer.MultiModelExtensionBase/Viewer.MultiModelExtensionBase.js","webpack:///./src/client/components/WidgetContainer/WidgetContainer.js","webpack:///./src/client/components/WidgetContainer/index.js","webpack:///./src/client/components/WidgetContainer/WidgetContainer.scss?a31d","webpack:///./src/client/components/WidgetContainer/WidgetContainer.scss","webpack:///./src/client/components/Label/Label.js","webpack:///./src/client/components/Label/index.js","webpack:///./src/client/components/Label/Label.scss?1352","webpack:///./src/client/components/Label/Label.scss","webpack:///./src/client/components/Viewer/Viewer.EventTool/Viewer.EventTool.js","webpack:///./src/client/components/Viewer/Viewer.EventTool/index.js"],"names":["content","__webpack_require__","module","i","locals","exports","push","p","MaterialExtension","viewer","options","_this","classCallCheck_default","this","possibleConstructorReturn_default","getPrototypeOf_default","call","onColorPicked","bind","assertThisInitialized_default","onTexturePick","onColorPick","renderTitle","onKeyDown","react","overrides","materials","_this2","setState","texture","name","img","wood","disabled","models","length","materialClrActive","themingClrActive","texActive","materialColor","themingColor","textures","brick","steel","then","pushRenderExtension","model","eventTool","EventTool","on","loadDynamicExtension","buildMenu","menu","dbId","title","target","clearOverrides","console","log","get_default","prototype","active","getState","activate","state","Object","assign","defineProperty_default","concat","deactivate","event","selections","selection","dbIds","dbIdArray","saveDefaultMaterial","Toolkit","getFragIds","fragIds","setColorMaterial","setThemingColor","setTextureMaterial","impl","sceneUpdated","clearSelection","_this3","forEach","guid","renderProxy","getRenderProxy","material","colorOrStr","createTexMaterial","createColorMaterial","color","THREE","MeshPhongMaterial","specular","Color","side","DoubleSide","reflectivity","getMaterials","addMaterial","tex","ImageUtils","loadTexture","wrapS","RepeatWrapping","wrapT","repeat","set","MeshBasicMaterial","map","colorHexStr","replace","colorInt","parseInt","getMaterial","fragId","getFragmentList","setMaterial","clr","Vector4","r","g","b","a","key","_this4","clearThemingColors","keyCode","stopSelection","field","hex","e","_this5","dialogSvc","className","showCancel","react_default","createElement","lib","onChangeComplete","c","open","stopPropagation","_this6","items","style","onClick","showOK","docked","id","ExtensionId","popRenderExtension","pushViewerPanel","height","width","popViewerPanel","_this7","spanClass","setDocking","_this8","_this$react$getState7","materialPicker","background","themingPicker","texPickerStytle","startSelection","opts","_this9","WidgetContainer","showTitle","renderContent","MultiModelExtensionBase","Autodesk","Viewing","theExtensionManager","registerExtension","__webpack_exports__","_Viewer_MultiModelExtensionBase__WEBPACK_IMPORTED_MODULE_0__","arguments","undefined","defaultOptions","_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default","_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default","_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5___default","serviceContext","onModelCompletedLoad","onObjectTreeCreated","onModelRootLoaded","onExtensionLoaded","onModelActivated","onGeometryLoaded","onToolbarCreated","onModelBeginLoad","onModelUnloaded","onSelection","__onModelRootLoaded","__onModelActivated","__onModelUnloaded","__onModelLoaded","modelQueue","getModels","initializeEvents","viewerEvents","removeEventListener","handler","eventSink","off","viewerEvent","OBJECT_TREE_CREATED_EVENT","GEOMETRY_LOADED_EVENT","args","_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default","filter","EXTENSION_LOADED_EVENT","MODEL_ROOT_LOADED_EVENT","TOOLBAR_CREATED_EVENT","AGGREGATE_SELECTION_CHANGED_EVENT","eventId","eventTasks","Array","isArray","Promise","resolve","addEventListener","__handler","all","EventsEmitter","Composer","Extension","props","dimensions","React","Children","children","child","newProps","cloneElement","classNames","toConsumableArray_default","split","join","renderChildren","Component","PropTypes","string","bool","Label","textAlign","DOMPurify","sanitize","text","toolName","toolController","registerTool","getName","activateTool","emit","deactivateTool","button"],"mappings":"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","file":"66.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../../../node_modules/sass-loader/lib/loader.js!./Viewing.Extension.Material.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../../../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../../../node_modules/sass-loader/lib/loader.js!./Viewing.Extension.Material.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../../../../node_modules/sass-loader/lib/loader.js!./Viewing.Extension.Material.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".material .title {\\n  display: -ms-inline-flexbox;\\n  display: inline-flex;\\n  float: left; }\\n\\n.material .title > label {\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  white-space: nowrap;\\n  font-weight: normal;\\n  user-select: none;\\n  margin-left: 27px;\\n  margin-top: 10px;\\n  select: none;\\n  width: 144px;\\n  float: left; }\\n\\n.material .content {\\n  overflow-y: scroll;\\n  overflow-x: hidden;\\n  height: 100%; }\\n  .material .content .row {\\n    padding: 10px;\\n    width: 100%;\\n    margin: 0; }\\n    .material .content .row .label-container {\\n      margin: 4px 0 0 20px; }\\n  .material .content button.active {\\n    border: 2px solid #FF9800; }\\n  .material .content button.active > span {\\n    color: #FF9800; }\\n  .material .content button > span {\\n    position: relative;\\n    font-size: 16px;\\n    color: #9b9b9b; }\\n  .material .content button:disabled > span {\\n    color: #d0d0d0; }\\n  .material .content button:hover:not(:disabled) > span {\\n    color: #FF9800; }\\n  .material .content button:disabled > span {\\n    color: #d0d0d0; }\\n  .material .content .start-selection {\\n    border: 1px solid #c6c6c6;\\n    width: calc(100% - 12px);\\n    background: whitesmoke;\\n    padding: 6px 0 0 5px;\\n    margin: 6px 0 0 6px;\\n    text-align: left;\\n    cursor: pointer;\\n    height: 36px; }\\n    .material .content .start-selection.active {\\n      border: 2px solid #FF9800;\\n      padding: 5px 0 0 4px; }\\n    .material .content .start-selection .picker {\\n      border: 1px solid #505050;\\n      margin: -1px 12px 0 0;\\n      height: 24px;\\n      width: 24px;\\n      float: left; }\\n\\n.material-controls {\\n  margin: auto 0 auto calc(100% - 152px);\\n  position: relative;\\n  float: left; }\\n\\n.material-controls > button {\\n  border: 1px solid #c6c6c6;\\n  background-color: #e1e1e1;\\n  border-radius: 6px;\\n  position: relative;\\n  overflow: hidden;\\n  outline: none;\\n  height: 24px;\\n  width: 26px; }\\n\\n.material-controls > button:hover {\\n  border: 1px solid #878787;\\n  background-color: #f5f5f5; }\\n\\n.material-controls > button > label {\\n  position: relative;\\n  font-size: 20px;\\n  color: #f0fcff;\\n  top: -8px; }\\n\\n.material-controls > button > span {\\n  pointer-events: none;\\n  color: #9b9b9b; }\\n\\n.color-picker-dlg {\\n  width: 227px !important; }\\n  .color-picker-dlg .content {\\n    padding: 0 !important; }\\n\\n.texture-picker-dlg .content {\\n  padding: 4px !important; }\\n  .texture-picker-dlg .content .tex-item {\\n    transition-property: border, background;\\n    transition-timing-function: ease;\\n    transition-duration: 1.0s;\\n    transition-delay: 0.0s;\\n    border: 1px solid #c6c6c6;\\n    width: calc(100% - 12px);\\n    background: whitesmoke;\\n    padding: 6px 0 0 5px;\\n    margin: 6px 0 0 6px;\\n    text-align: left;\\n    cursor: pointer;\\n    height: 36px; }\\n    .texture-picker-dlg .content .tex-item:hover {\\n      background: rgba(0, 105, 245, 0.25);\\n      border: 1px solid #1bb1f4; }\\n    .texture-picker-dlg .content .tex-item .img {\\n      border: 1px solid black;\\n      margin: -1px 12px 0 0;\\n      pointer-events: none;\\n      height: 24px;\\n      width: 24px;\\n      float: left; }\\n\\n.texture-picker-dlg .controls {\\n  border-top: none !important;\\n  height: 16px !important; }\\n\", \"\"]);\n","module.exports = __webpack_public_path__ + \"f3ae1da1e693bb3fee70c26928d8daec.jpg\";","module.exports = __webpack_public_path__ + \"2c8ee153f15f93c6ab2c38d7e71477c9.jpg\";","module.exports = __webpack_public_path__ + \"402da3d3716d7bf72322f2f2995ffae6.jpg\";","/// //////////////////////////////////////////////////////////////\n// Material Viewer Extension\n// By Philippe Leefsma, Autodesk Inc, October 2017\n//\n/// //////////////////////////////////////////////////////////////\nimport MultiModelExtensionBase from 'Viewer.MultiModelExtensionBase'\nimport WidgetContainer from 'WidgetContainer'\nimport { ChromePicker } from 'react-color'\nimport EventTool from 'Viewer.EventTool'\nimport { ServiceContext } from 'ServiceContext'\nimport Toolkit from 'Viewer.Toolkit'\nimport ReactDOM from 'react-dom'\nimport Label from 'Label'\nimport React from 'react'\n\nimport brick from './textures/brick.jpg'\nimport steel from './textures/steel.jpg'\nimport wood from './textures/wood.jpg'\n\nclass MaterialExtension extends MultiModelExtensionBase {\n  /// //////////////////////////////////////////////////////////////\n  // Class constructor\n  //\n  /// //////////////////////////////////////////////////////////////\n  constructor (viewer, options) {\n    super(viewer, options)\n\n    this.onColorPicked = this.onColorPicked.bind(this)\n    this.onTexturePick = this.onTexturePick.bind(this)\n    this.onColorPick = this.onColorPick.bind(this)\n    this.renderTitle = this.renderTitle.bind(this)\n    this.onKeyDown = this.onKeyDown.bind(this)\n\n    this.react = options.react\n\n    this.overrides = {}\n\n    this.materials = {}\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Load callback\n  //\n  /// //////////////////////////////////////////////////////\n  load () {\n    this.react.setState({\n\n      texture: { name: 'wood', img: wood },\n      disabled: !this.models.length,\n      materialClrActive: false,\n      themingClrActive: false,\n      texActive: false,\n      materialColor: '#D02D2D',\n      themingColor: '#41C638',\n      textures: [\n        { name: 'brick', img: brick },\n        { name: 'steel', img: steel },\n        { name: 'wood', img: wood }\n      ]\n\n    }).then(() => {\n      this.react.pushRenderExtension(this)\n    })\n\n    if (this.viewer.model) {\n      this.eventTool = new EventTool(this.viewer)\n\n      this.eventTool.on('keydown', this.onKeyDown)\n    }\n\n    this.viewer.loadDynamicExtension(\n      'Viewing.Extension.ContextMenu', {\n        buildMenu: (menu, dbId) => {\n          menu.push({\n            title: 'Clear All Material Overrides',\n            target: () => {\n              this.clearOverrides()\n            }\n          })\n\n          return menu\n        }\n      })\n\n    console.log('Viewing.Extension.Material loaded')\n\n    return true\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  get className () {\n    return 'material'\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Extension Id\n  //\n  /// //////////////////////////////////////////////////////\n  static get ExtensionId () {\n    return 'Viewing.Extension.Material'\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Unload callback\n  //\n  /// //////////////////////////////////////////////////////\n  unload () {\n    console.log('Viewing.Extension.Material unloaded')\n\n    super.unload()\n\n    return true\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  onModelRootLoaded () {\n    if (!this.eventTool) {\n      this.eventTool = new EventTool(this.viewer)\n\n      this.eventTool.on('keydown', this.onKeyDown)\n    }\n\n    this.react.setState({\n      disabled: false\n    })\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  startSelection (active) {\n    const { disabled } = this.react.getState()\n\n    if (!disabled) {\n      this.eventTool.activate()\n\n      const state = Object.assign({\n        materialClrActive: false,\n        themingClrActive: false,\n        texActive: false\n      }, {\n        [`${active}`]: true\n      })\n\n      this.react.setState(state)\n    }\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  stopSelection () {\n    this.eventTool.deactivate()\n\n    this.react.setState({\n      materialClrActive: false,\n      texActive: false\n    })\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  async onSelection (event) {\n    if (this.eventTool.active && event.selections.length) {\n      const {\n        materialClrActive,\n        themingClrActive,\n        texActive\n      } = this.react.getState()\n\n      const selection = event.selections[0]\n\n      const dbIds = selection.dbIdArray\n\n      const model = selection.model\n\n      this.saveDefaultMaterial(model, dbIds)\n\n      const fragIds =\n        await Toolkit.getFragIds(\n          model, dbIds)\n\n      if (materialClrActive) {\n        this.setColorMaterial(model, fragIds)\n      }\n\n      if (themingClrActive) {\n        this.setThemingColor(model, dbIds)\n      }\n\n      if (texActive) {\n        this.setTextureMaterial(model, fragIds)\n      }\n\n      this.viewer.impl.sceneUpdated(true)\n\n      this.viewer.clearSelection()\n    }\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  saveDefaultMaterial (model, dbIds) {\n    dbIds.forEach((dbId) => {\n      if (!this.overrides[model.guid + dbId]) {\n        Toolkit.getFragIds(model, dbId).then(\n          (fragIds) => {\n            const renderProxy =\n              this.viewer.impl.getRenderProxy(\n                model, fragIds[0])\n\n            this.overrides[model.guid + dbId] = {\n              material: renderProxy.material,\n              model,\n              dbId\n            }\n          })\n      }\n    })\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  getMaterial (colorOrStr) {\n    if (!this.materials[colorOrStr]) {\n      if (typeof colorOrStr === 'string') {\n        this.materials[colorOrStr] =\n          this.createTexMaterial(colorOrStr)\n      } else {\n        this.materials[colorOrStr] =\n          this.createColorMaterial(colorOrStr)\n      }\n    }\n\n    return this.materials[colorOrStr]\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  createColorMaterial (color) {\n    const material = new THREE.MeshPhongMaterial({\n      specular: new THREE.Color(color),\n      side: THREE.DoubleSide,\n      reflectivity: 0.0,\n      color\n    })\n\n    const materials = this.viewer.impl.getMaterials()\n\n    materials.addMaterial(\n      this.guid(),\n      material,\n      true)\n\n    return material\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  createTexMaterial (texture) {\n    const tex = THREE.ImageUtils.loadTexture(texture)\n\n    tex.wrapS = THREE.RepeatWrapping\n    tex.wrapT = THREE.RepeatWrapping\n\n    tex.repeat.set(0.1, 0.1)\n\n    const material = new THREE.MeshBasicMaterial({\n      specular: new THREE.Color(0x111111),\n      side: THREE.DoubleSide,\n      reflectivity: 0.0,\n      map: tex\n    })\n\n    const materials = this.viewer.impl.getMaterials()\n\n    materials.addMaterial(\n      this.guid(),\n      material,\n      true)\n\n    material.name = texture\n\n    return material\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  setColorMaterial (model, fragIds) {\n    const { materialColor } = this.react.getState()\n\n    const colorHexStr = materialColor.replace('#', '0x')\n\n    const colorInt = parseInt(colorHexStr, 16)\n\n    const material = this.getMaterial(colorInt)\n\n    fragIds.forEach((fragId) => {\n      model.getFragmentList().setMaterial(\n        fragId, material)\n    })\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  setThemingColor (model, dbIds) {\n    const { themingColor } = this.react.getState()\n\n    const colorHexStr = themingColor.replace('#', '0x')\n\n    const colorInt = parseInt(colorHexStr, 16)\n\n    const clr = new THREE.Color(colorInt)\n\n    dbIds.forEach((dbId) => {\n      model.setThemingColor(dbId,\n        new THREE.Vector4(\n          clr.r, clr.g, clr.b, clr.a))\n    })\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  setTextureMaterial (model, fragIds) {\n    const { texture } = this.react.getState()\n\n    const material = this.getMaterial(texture.img)\n\n    fragIds.forEach((fragId) => {\n      model.getFragmentList().setMaterial(\n        fragId, material)\n    })\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  async clearOverrides () {\n    for (const key in this.overrides) {\n      const { model, dbId, material } = this.overrides[key]\n\n      const fragIds = await Toolkit.getFragIds(\n        model, dbId)\n\n      fragIds.forEach((fragId) => {\n        model.getFragmentList().setMaterial(\n          fragId, material)\n      })\n    }\n\n    this.overrides = {}\n\n    this.viewer.impl.sceneUpdated(true)\n\n    this.models.forEach((model) => {\n      model.clearThemingColors()\n    })\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  onKeyDown (event, keyCode) {\n    if (keyCode === 27) {\n      this.stopSelection()\n    }\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  onColorPicked (field, color) {\n    this.react.setState({\n      [field]: color.hex\n    })\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  onColorPick (field, e) {\n    const state = this.react.getState()\n\n    const color = state[field]\n\n    this.dialogSvc.setState({\n      className: 'color-picker-dlg',\n      title: 'Select Color ...',\n      showCancel: false,\n      content:\n  <div>\n    <ChromePicker\n      onChangeComplete={(c) => this.onColorPicked(field, c)}\n      color={color}\n    />\n  </div>,\n      open: true\n    })\n\n    e.stopPropagation()\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  onTexturePick (e) {\n    const { textures } = this.react.getState()\n\n    const items = textures.map((texture) => {\n      const style = {\n        content: `url(${texture.img})`\n      }\n\n      return (\n        <div\n          key={texture.name} className='tex-item'\n          onClick={() => {\n            this.dialogSvc.setState({\n              open: false\n            })\n\n            this.react.setState({\n              texture\n            })\n          }}\n        >\n          <div className='img' style={style} />\n          {texture.name}\n        </div>\n      )\n    })\n\n    this.dialogSvc.setState({\n      className: 'texture-picker-dlg',\n      title: 'Select Texture ...',\n      showCancel: false,\n      showOK: false,\n      content:\n  <div>\n    {items}\n  </div>,\n      open: true\n    })\n\n    e.stopPropagation()\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  async setDocking (docked) {\n    const id = MaterialExtension.ExtensionId\n\n    if (docked) {\n      await this.react.popRenderExtension(id)\n\n      this.react.pushViewerPanel(this, {\n        height: 250,\n        width: 350\n      })\n    } else {\n      await this.react.popViewerPanel(id)\n\n      this.react.pushRenderExtension(this)\n    }\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  renderTitle (docked) {\n    const spanClass = docked\n      ? 'fa fa-chain-broken'\n      : 'fa fa-chain'\n\n    return (\n      <div className='title'>\n        <label>\n          Material\n        </label>\n        <div className='material-controls'>\n          <button\n            onClick={() => this.setDocking(docked)}\n            title='Toggle docking mode'\n          >\n            <span className={spanClass} />\n          </button>\n        </div>\n      </div>\n    )\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  renderContent () {\n    const {\n      materialClrActive,\n      themingClrActive,\n      texActive,\n      disabled,\n      texture,\n      materialColor,\n      themingColor\n    } = this.react.getState()\n\n    const materialPicker = {\n      background: materialColor\n    }\n\n    const themingPicker = {\n      background: themingColor\n    }\n\n    const texPickerStytle = {\n      content: `url(${texture.img})`\n    }\n\n    return (\n      <div className='content'>\n        <div\n          className={`start-selection ${themingClrActive ? 'active' : ''}`}\n          onClick={() => this.startSelection('themingClrActive')}\n          disabled={disabled}\n        >\n          <div\n            onClick={(e) => this.onColorPick('themingColor', e)}\n            style={themingPicker}\n            className='picker'\n          />\n          Theming Color\n        </div>\n        <div\n          className={`start-selection ${materialClrActive ? 'active' : ''}`}\n          onClick={() => this.startSelection('materialClrActive')}\n          disabled={disabled}\n        >\n          <div\n            onClick={(e) => this.onColorPick('materialColor', e)}\n            style={materialPicker}\n            className='picker'\n          />\n          Material Color\n        </div>\n        <div\n          className={`start-selection ${texActive ? 'active' : ''}`}\n          onClick={() => this.startSelection('texActive')}\n          disabled={disabled}\n        >\n          <div\n            onClick={this.onTexturePick}\n            style={texPickerStytle}\n            className='picker'\n          />\n          Texture\n        </div>\n      </div>\n    )\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  render (opts) {\n    return (\n      <WidgetContainer\n        renderTitle={() => this.renderTitle(opts.docked)}\n        showTitle={opts.showTitle}\n        className={this.className}\n      >\n\n        {this.renderContent()}\n\n      </WidgetContainer>\n    )\n  }\n}\n\nAutodesk.Viewing.theExtensionManager.registerExtension(\n  MaterialExtension.ExtensionId,\n  MaterialExtension)\n\nexport default 'Viewing.Extension.Material'\n","import './Viewing.Extension.Material.scss'\nimport './Viewing.Extension.Material'\n\nexport default 'Viewing.Extension.Material'\n","import MultiModelExtensionBase from './Viewer.MultiModelExtensionBase'\n\nexport default MultiModelExtensionBase\n","import EventsEmitter from 'EventsEmitter'\n\nexport default class MultiModelExtensionBase extends\n  EventsEmitter.Composer(Autodesk.Viewing.Extension) {\n  /// //////////////////////////////////////////////////////\n  // Class constructor\n  //\n  /// //////////////////////////////////////////////////////\n  constructor (viewer, options = {}, defaultOptions = {}) {\n    super(viewer)\n    // bindings\n    Object.assign(this, options.serviceContext)\n\n    this.onModelCompletedLoad = this.onModelCompletedLoad.bind(this)\n    this.onObjectTreeCreated = this.onObjectTreeCreated.bind(this)\n    this.onModelRootLoaded = this.onModelRootLoaded.bind(this)\n    this.onExtensionLoaded = this.onExtensionLoaded.bind(this)\n    this.onModelActivated = this.onModelActivated.bind(this)\n    this.onGeometryLoaded = this.onGeometryLoaded.bind(this)\n    this.onToolbarCreated = this.onToolbarCreated.bind(this)\n    this.onModelBeginLoad = this.onModelBeginLoad.bind(this)\n    this.onModelUnloaded = this.onModelUnloaded.bind(this)\n    this.onSelection = this.onSelection.bind(this)\n\n    this.__onModelRootLoaded = this.__onModelRootLoaded.bind(this)\n    this.__onModelActivated = this.__onModelActivated.bind(this)\n    this.__onModelUnloaded = this.__onModelUnloaded.bind(this)\n    this.__onModelLoaded = this.__onModelLoaded.bind(this)\n\n    this.defaultOptions = defaultOptions\n\n    this.options = Object.assign({},\n      defaultOptions,\n      options)\n\n    this.viewer = viewer\n\n    // read the modelQueue to detect currently loaded models\n    // when the extension gets loaded\n    const models = viewer.impl.modelQueue().getModels()\n\n    this.models = models.map((model) => {\n      model.guid = model.guid || this.guid()\n\n      return model\n    })\n\n    this.initializeEvents()\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Extension Id\n  //\n  /// //////////////////////////////////////////////////////\n  static get ExtensionId () {\n    return 'Viewing.Extension.MultiModelExtensionBase'\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Load callback\n  //\n  /// //////////////////////////////////////////////////////\n  load () {\n    return true\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Unload callback\n  //\n  /// //////////////////////////////////////////////////////\n  unload () {\n    this.viewerEvents.forEach((event) => {\n      this.viewer.removeEventListener(\n        event.id, this[event.handler])\n    })\n\n    if (this.eventSink) {\n      this.eventSink.off('model.activated',\n        this.__onModelActivated)\n\n      this.eventSink.off('model.unloaded',\n        this.__onModelUnloaded)\n\n      this.eventSink.off('model.loaded',\n        this.__onModelLoaded)\n    }\n\n    this.off()\n\n    return true\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Reload callback, in case the extension is re-loaded\n  // more than once\n  //\n  /// //////////////////////////////////////////////////////\n  reload (options = {}) {\n    this.options = Object.assign({},\n      this.defaultOptions,\n      this.options,\n      options)\n\n    return true\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Invoked when extension gets loaded\n  //\n  /// //////////////////////////////////////////////////////\n  onExtensionLoaded (event) {\n\n    // console.log('MultiModelExtensionBase.onExtensionLoaded')\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Invoked when the model starts to load\n  // The geometry and instanceTree may not be available\n  // at this time\n  //\n  /// //////////////////////////////////////////////////////\n  onModelBeginLoad (event) {\n\n    // console.log('MultiModelExtensionBase.onModelBeginLoad')\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Triggered by ModelLoader extension when a model is\n  // selected in a multi-model environment\n  //\n  /// //////////////////////////////////////////////////////\n  onModelActivated (event) {\n\n    // console.log('MultiModelExtensionBase.onModelActivated')\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Invoked when model root node has been loaded\n  // Extensions that do require access to full\n  // model geometry or component tree may use that\n  // event to know a new model has been loaded\n  //\n  /// //////////////////////////////////////////////////////\n  __onModelRootLoaded (event) {\n    this.viewerEvent([\n\n      Autodesk.Viewing.OBJECT_TREE_CREATED_EVENT,\n      Autodesk.Viewing.GEOMETRY_LOADED_EVENT\n\n    ]).then((args) => {\n      this.onModelCompletedLoad(args[0])\n    })\n  }\n\n  onModelRootLoaded (event) {\n\n    // console.log('MultiModelExtensionBase.onModelRootLoaded')\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Invoked when object tree is fully loaded.\n  // Extensions that are interested in using the\n  // instanceTree need to use that event to make sure\n  // it is available\n  //\n  /// /////////////////////////////////////////////////////\n  onObjectTreeCreated (event) {\n\n    // console.log('MultiModelExtensionBase.onObjectTreeCreated')\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Invoked when geometry is fully loaded\n  //\n  /// //////////////////////////////////////////////////////\n  onGeometryLoaded (event) {\n\n    // console.log('MultiModelExtensionBase.onGeometryLoaded')\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Invoked after onObjectTreeCreated and onGeometryLoaded\n  // have both been fired\n  //\n  /// //////////////////////////////////////////////////////\n  onModelCompletedLoad (event) {\n\n    // console.log('MultiModelExtensionBase.onModelCompletedLoad')\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Invoked once the viewer toolbar has been created\n  //\n  /// //////////////////////////////////////////////////////\n  onToolbarCreated (event) {\n\n    // console.log('MultiModelExtensionBase.onToolbarCreated')\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Triggered by ModelLoader extension when a model has\n  // been unloaded as per user request\n  //\n  /// //////////////////////////////////////////////////////\n  onModelUnloaded (event) {\n\n    // console.log('MultiModelExtensionBase.onModelUnloaded')\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Invoked when a model is being selected\n  //\n  /// //////////////////////////////////////////////////////\n  onSelection (event) {\n\n    // console.log('MultiModelExtensionBase.onSelection')\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Sink Events\n  //\n  /// //////////////////////////////////////////////////////\n  __onModelLoaded (event) {\n    this.models = [...this.models, event.model]\n\n    this.onModelBeginLoad(event)\n  }\n\n  __onModelActivated (event) {\n    this.onModelActivated(event)\n  }\n\n  __onModelUnloaded (event) {\n    this.models = this.models.filter((model) => {\n      return model.guid !== event.model.guid\n    })\n\n    this.onModelUnloaded(event)\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Initialize all events for the extension\n  // Each event will invoke a predefined handler\n  // implemented or not by the derived extension\n  //\n  /// //////////////////////////////////////////////////////\n  initializeEvents () {\n    if (this.options.eventSink) {\n      // event object passed in options\n      this.eventSink = this.options.eventSink\n\n      this.eventSink.on('model.loaded',\n        this.__onModelLoaded)\n\n      this.eventSink.on('model.activated',\n        this.__onModelActivated)\n\n      this.eventSink.on('model.unloaded',\n        this.__onModelUnloaded)\n    }\n\n    this.viewerEvents = [\n      {\n        id: Autodesk.Viewing.EXTENSION_LOADED_EVENT,\n        handler: 'onExtensionLoaded'\n      },\n      {\n        id: Autodesk.Viewing.OBJECT_TREE_CREATED_EVENT,\n        handler: 'onObjectTreeCreated'\n      },\n      {\n        id: Autodesk.Viewing.MODEL_ROOT_LOADED_EVENT,\n        handler: '__onModelRootLoaded'\n      },\n      {\n        id: Autodesk.Viewing.MODEL_ROOT_LOADED_EVENT,\n        handler: 'onModelRootLoaded'\n      },\n      {\n        id: Autodesk.Viewing.GEOMETRY_LOADED_EVENT,\n        handler: 'onGeometryLoaded'\n      },\n      {\n        id: Autodesk.Viewing.TOOLBAR_CREATED_EVENT,\n        handler: 'onToolbarCreated'\n      },\n      {\n        id: Autodesk.Viewing.AGGREGATE_SELECTION_CHANGED_EVENT,\n        handler: 'onSelection'\n      }\n    ]\n\n    this.viewerEvents.forEach((event) => {\n      this.viewerEvent(event.id, this[event.handler])\n    })\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Async viewer event\n  //\n  /// //////////////////////////////////////////////////////\n  viewerEvent (eventId, handler) {\n    if (handler) {\n      this.viewer.addEventListener(eventId, handler)\n      return\n    }\n\n    const eventIdArray = Array.isArray(eventId)\n      ? eventId : [eventId]\n\n    const eventTasks = eventIdArray.map((id) => {\n      return new Promise((resolve) => {\n        const __handler = (args) => {\n          this.viewer.removeEventListener(id, __handler)\n          resolve(args)\n        }\n        this.viewer.addEventListener(id, __handler)\n      })\n    })\n\n    return Promise.all(eventTasks)\n  }\n}\n","import PropTypes from 'prop-types'\nimport ReactDOM from 'react-dom'\nimport './WidgetContainer.scss'\nimport React from 'react'\n\nclass WidgetContainer extends React.Component {\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  static propTypes = {\n    className: PropTypes.string,\n    showTitle: PropTypes.bool\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  static defaultProps = {\n    showTitle: true,\n    className: ''\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  renderTitle () {\n\n    if (!this.props.showTitle) {\n\n      return <div/>\n    }\n\n    if (this.props.renderTitle) {\n\n      return this.props.renderTitle()\n    }\n\n    return (\n      <div className=\"title\">\n        <label>\n          { this.props.title }\n        </label>\n      </div>\n    )\n  }\n\n  ///////////////////////////////////////////////////////////////////\n  //\n  //\n  ///////////////////////////////////////////////////////////////////\n  renderChildren() {\n\n    if (this.props.dimensions) {\n\n      return React.Children.map(this.props.children, (child) => {\n\n        const newProps = Object.assign({},\n          child.props, {\n            dimensions: this.props.dimensions\n          })\n\n        return React.cloneElement(child, newProps)\n      })\n    }\n\n    return this.props.children\n  }\n\n  ///////////////////////////////////////////////////////////////////\n  //\n  //\n  ///////////////////////////////////////////////////////////////////\n  render() {\n\n    const classNames = [\n      'widget-container',\n      ...this.props.className.split(' ')\n    ]\n\n    const height = this.props.showTitle\n      ? 'calc(100% - 40px)'\n      : '100%'\n\n    return (\n      <div className={classNames.join(' ')} style={this.props.style}>\n         { this.renderTitle() }\n        <div className=\"content\" style={{height}}>\n          {this.renderChildren()}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default WidgetContainer\n","import WidgetContainer from './WidgetContainer'\n\nexport default WidgetContainer\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../node_modules/sass-loader/lib/loader.js!./WidgetContainer.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../node_modules/sass-loader/lib/loader.js!./WidgetContainer.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../node_modules/sass-loader/lib/loader.js!./WidgetContainer.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".widget-container {\\n  position: relative;\\n  height: 100%;\\n  width: 100%; }\\n\\n.widget-container > .title {\\n  border-bottom: 1px solid #cdcdcd;\\n  background-color: #f5f5f5;\\n  padding-right: 10px;\\n  color: black;\\n  position: relative;\\n  overflow: hidden;\\n  text-align: left;\\n  height: 40px;\\n  width: 100%; }\\n\\n.widget-container > .title > label {\\n  white-space: nowrap;\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none;\\n  margin-left: 27px;\\n  margin-top: 10px; }\\n\\n.widget-container > .content {\\n  position: relative;\\n  overflow: hidden;\\n  height: 100%;\\n  width: 100%; }\\n\", \"\"]);\n","import PropTypes from 'prop-types'\nimport DOMPurify from 'dompurify'\nimport ReactDOM from 'react-dom'\nimport React from 'react'\nimport './Label.scss'\n\nexport default class Label extends React.Component {\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  static propTypes = {\n    textAlign: PropTypes.string,\n    className: PropTypes.string,\n    text: PropTypes.string\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  static defaultProps = {\n    textAlign: 'left',\n    className: '',\n    text: ''\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  constructor (props) {\n\n    super (props)\n  }\n\n  /////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////\n  render () {\n\n    const classNames = [\n      'label-container',\n      ...this.props.className.split(' ')\n    ]\n\n    const style = {\n      width: this.props.textAlign === 'center'\n        ? '100%' : '',\n      textAlign: this.props.textAlign\n    }\n\n    return(\n      <div className={classNames.join(' ')}\n        style={style}>\n        <p>\n          { DOMPurify.sanitize(this.props.text) }\n        </p>\n      </div>\n    )\n  }\n}\n","import Label from './Label'\n\nexport default Label\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../node_modules/sass-loader/lib/loader.js!./Label.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../node_modules/sass-loader/lib/loader.js!./Label.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-2!../../../../node_modules/sass-loader/lib/loader.js!./Label.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".label-container {\\n  position: relative;\\n  overflow: hidden;\\n  font-size: 100%;\\n  color: #343434;\\n  height: 100%;\\n  float: left; }\\n\", \"\"]);\n","import EventsEmitter from 'EventsEmitter'\n\nexport default class EventTool extends EventsEmitter {\n  constructor (viewer) {\n    super()\n\n    this.viewer = viewer\n\n    this.toolName = this.guid()\n\n    viewer.toolController.registerTool(this)\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Tool names\n  //\n  /// //////////////////////////////////////////////////////\n  getNames () {\n    return [this.getName()]\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Tool name\n  //\n  /// //////////////////////////////////////////////////////\n  getName () {\n    return this.toolName\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Tool Priority\n  //\n  /// //////////////////////////////////////////////////////\n  getPriority () {\n    return 1000\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Activate Tool\n  //\n  /// //////////////////////////////////////////////////////\n  activate () {\n    if (!this.active) {\n      this.active = true\n\n      this.viewer.toolController.activateTool(\n        this.toolName)\n\n      this.emit('activate', this)\n    }\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Deactivate tool\n  //\n  /// //////////////////////////////////////////////////////\n  deactivate () {\n    if (this.active) {\n      this.active = false\n\n      this.viewer.toolController.deactivateTool(\n        this.toolName)\n\n      this.emit('deactivate', this)\n    }\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  handleSingleClick (event, button) {\n    return this.emit('singleclick', event, button)\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  handleDoubleClick (event, button) {\n    return this.emit('doubleclick', event, button)\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  handleMouseMove (event) {\n    return this.emit('mousemove', event)\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  handleWheelInput (event) {\n    return this.emit('mousewheel', event)\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  handleGesture (event) {\n    return this.emit('gesture', event)\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  handleKeyDown (event, keyCode) {\n    return this.emit('keydown', event, keyCode)\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  handleButtonDown (event, button) {\n    return this.emit('buttondown', event, button)\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  handleButtonUp (event, button) {\n    return this.emit('buttonup', event, button)\n  }\n}\n","import EventTool from './Viewer.EventTool'\n\nexport default EventTool\n"],"sourceRoot":""}