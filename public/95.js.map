{"version":3,"sources":["webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.ContextMenu/Viewing.Extension.ContextMenu.Handler.js","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.ContextMenu/Viewing.Extension.ContextMenu.js","webpack:///./src/client/components/Viewer/Extensions/Dynamic/Viewing.Extension.ContextMenu/index.js","webpack:///./node_modules/@babel/runtime/helpers/get.js","webpack:///./node_modules/@babel/runtime/helpers/superPropBase.js","webpack:///./src/client/components/Viewer/Extensions/Viewer.ExtensionBase/index.js","webpack:///./src/client/components/Viewer/Extensions/Viewer.ExtensionBase/Viewer.ExtensionBase.js"],"names":["ContextMenuHandler","viewer","options","arguments","length","undefined","classCallCheck_default","this","possibleConstructorReturn_default","getPrototypeOf_default","call","event","status","defaultMenu","get_default","prototype","emit","EventsEmitter","Composer","Autodesk","Viewing","Extensions","ViewerObjectContextMenu","ContextMenuExtension","_this","onSelection","bind","assertThisInitialized_default","selection","handlers","_this2","contextMenuHandler","on","menu","dbId","dbIdArray","model","menuArgs","newMenu","forEach","handler","buildMenu","setContextMenu","addEventListener","AGGREGATE_SELECTION_CHANGED_EVENT","console","log","push","selections","removeEventListener","ExtensionBase","theExtensionManager","registerExtension","ExtensionId","__webpack_exports__","superPropBase","__webpack_require__","_get","target","property","receiver","Reflect","get","module","exports","base","desc","Object","getOwnPropertyDescriptor","value","getPrototypeOf","object","hasOwnProperty","_Viewer_ExtensionBase__WEBPACK_IMPORTED_MODULE_0__","ViewerExtensionBase","_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default","_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default","_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default","_viewer","_options","assign","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default","serviceContext","eventId","eventTasks","Array","isArray","map","id","Promise","resolve","args","all","format","d","Date","getTime","guid","replace","c","r","Math","random","floor","toString","Extension"],"mappings":"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","file":"95.js","sourcesContent":["/// //////////////////////////////////////////////////////////////////\n// Viewing.Extension.ContextMenu\n// by Philippe Leefsma, September 2016\n//\n/// //////////////////////////////////////////////////////////////////\nimport EventsEmitter from 'EventsEmitter'\n\nexport default class ContextMenuHandler extends\n  EventsEmitter.Composer(\n    Autodesk.Viewing.Extensions.ViewerObjectContextMenu) {\n  /// //////////////////////////////////////////////////////////////\n  // Class constructor\n  //\n  /// //////////////////////////////////////////////////////////////\n  constructor (viewer, options = {}) {\n    super(viewer, options)\n  }\n\n  /// //////////////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////////////\n  buildMenu (event, status) {\n    const defaultMenu = super.buildMenu(event, status)\n\n    const newMenu = this.emit(\n      'buildMenu',\n      defaultMenu)\n\n    return newMenu || defaultMenu\n  }\n}\n","/// //////////////////////////////////////////////////////////////////\n// Viewing.Extension.ContextMenu\n// by Philippe Leefsma, September 2016\n//\n/// //////////////////////////////////////////////////////////////////\nimport ContextMenuHandler from './Viewing.Extension.ContextMenu.Handler'\nimport ExtensionBase from 'Viewer.ExtensionBase'\n\nclass ContextMenuExtension extends ExtensionBase {\n  /// //////////////////////////////////////////////////////////////\n  // Class constructor\n  //\n  /// //////////////////////////////////////////////////////////////\n  constructor (viewer, options = {}) {\n    super(viewer, options)\n\n    this.onSelection = this.onSelection.bind(this)\n\n    this.selection = null\n\n    this.handlers = []\n  }\n\n  /// //////////////////////////////////////////////////////////////\n  // Extension Id\n  //\n  /// //////////////////////////////////////////////////////////////\n  static get ExtensionId () {\n    return 'Viewing.Extension.ContextMenu'\n  }\n\n  /// //////////////////////////////////////////////////////////////\n  // Load callback\n  //\n  /// //////////////////////////////////////////////////////////////\n  load () {\n    this.contextMenuHandler = new ContextMenuHandler(this.viewer)\n\n    this.contextMenuHandler.on('buildMenu', (menu) => {\n      const dbId = this.selection\n        ? this.selection.dbIdArray[0]\n        : null\n\n      const model = this.selection\n        ? this.selection.model\n        : null\n\n      const selection = this.selection\n\n      const menuArgs = {\n        selection,\n        model,\n        dbId,\n        menu\n      }\n\n      const newMenu = this.emit('buildMenu', menuArgs)\n\n      if (newMenu) {\n        return newMenu\n      }\n\n      this.handlers.forEach((handler) => {\n        handler(menuArgs)\n      })\n\n      return this.options.buildMenu\n        ? this.options.buildMenu(menu, dbId)\n        : menu\n    })\n\n    this.viewer.setContextMenu(this.contextMenuHandler)\n\n    this.viewer.addEventListener(\n      Autodesk.Viewing.AGGREGATE_SELECTION_CHANGED_EVENT,\n      this.onSelection)\n\n    console.log('Viewing.Extension.ContextMenu loaded')\n\n    return true\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  addHandler (handler) {\n    this.handlers.push(handler)\n  }\n\n  /// //////////////////////////////////////////////////////\n  //\n  //\n  /// //////////////////////////////////////////////////////\n  onSelection (event) {\n    this.selection = event.selections.length\n      ? event.selections[0]\n      : null\n  }\n\n  /// //////////////////////////////////////////////////////////////\n  // Unload callback\n  //\n  /// //////////////////////////////////////////////////////////////\n  unload () {\n    this.viewer.removeEventListener(\n      Autodesk.Viewing.AGGREGATE_SELECTION_CHANGED_EVENT,\n      this.onSelection)\n\n    const menu =\n      new Autodesk.Viewing.Extensions.ViewerObjectContextMenu(\n        this.viewer)\n\n    this.viewer.setContextMenu(menu)\n\n    console.log('Viewing.Extension.ContextMenu unloaded')\n\n    return true\n  }\n}\n\nAutodesk.Viewing.theExtensionManager.registerExtension(\n  ContextMenuExtension.ExtensionId,\n  ContextMenuExtension)\n\n/// //////////////////////////////////////////////////////\n//\n//\n/// //////////////////////////////////////////////////////\n","import './Viewing.Extension.ContextMenu'\n\nexport default 'Viewing.Extension.ContextMenu'\n","var superPropBase = require(\"./superPropBase\");\n\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    module.exports = _get = Reflect.get;\n  } else {\n    module.exports = _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nmodule.exports = _get;","var getPrototypeOf = require(\"./getPrototypeOf\");\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nmodule.exports = _superPropBase;","import ViewerExtensionBase from './Viewer.ExtensionBase'\n\nexport default ViewerExtensionBase\n","import EventsEmitter from 'EventsEmitter'\n\nexport default class ExtensionBase extends\n  EventsEmitter.Composer(Autodesk.Viewing.Extension) {\n  /// //////////////////////////////////////////////////////\n  // Class constructor\n  //\n  /// //////////////////////////////////////////////////////\n  constructor (viewer, options = {}) {\n    super(viewer, options)\n\n    this._viewer = viewer\n    this.viewer = viewer\n\n    this._options = options\n    this.options = options\n    Object.assign(this, options.serviceContext)\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Extension Id\n  //\n  /// //////////////////////////////////////////////////////\n  static get ExtensionId () {\n    return 'Viewing.Extension.Base'\n  }\n\n  /// ////////////////////////////////////////////////////////\n  //\n  //\n  /// ////////////////////////////////////////////////////////\n  static guid (format = 'xxxxxxxxxx') {\n    var d = new Date().getTime()\n\n    var guid = format.replace(\n      /[xy]/g,\n      function (c) {\n        var r = (d + Math.random() * 16) % 16 | 0\n        d = Math.floor(d / 16)\n        return (c == 'x' ? r : (r & 0x7 | 0x8)).toString(16)\n      })\n\n    return guid\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Load callback\n  //\n  /// //////////////////////////////////////////////////////\n  load () {\n    return true\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Unload callback\n  //\n  /// //////////////////////////////////////////////////////\n  unload () {\n    return true\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Reload callback\n  //\n  /// //////////////////////////////////////////////////////\n  reload (options) {\n    return true\n  }\n\n  /// //////////////////////////////////////////////////////\n  // Async viewer event\n  //\n  /// //////////////////////////////////////////////////////\n  viewerEvent (eventId) {\n    const eventIdArray = Array.isArray(eventId)\n      ? eventId : [eventId]\n\n    const eventTasks = eventIdArray.map((id) => {\n      return new Promise((resolve) => {\n        const handler = (args) => {\n          this.viewer.removeEventListener(\n            id, handler)\n          resolve(args)\n        }\n        this.viewer.addEventListener(\n          id, handler)\n      })\n    })\n\n    return Promise.all(eventTasks)\n  }\n}\n"],"sourceRoot":""}